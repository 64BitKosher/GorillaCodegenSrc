// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSimpleInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRSimpleInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor.get_shouldActivate
bool UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::get_shouldActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::get_shouldActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor.get_shouldDeactivate
bool UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::get_shouldDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::get_shouldDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor.GetActivateTargets
void UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::GetActivateTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor::GetActivateTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember
#include "UnityEngine/XR/Interaction/Toolkit/IXRGroupMember.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.get_containingGroup
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::get_containingGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::get_containingGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember
void UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::OnRegisteringAsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::OnRegisteringAsGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember
void UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::OnRegisteringAsNonGroupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember::OnRegisteringAsNonGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGroupMemberExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRGroupMemberExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember
#include "UnityEngine/XR/Interaction/Toolkit/IXRGroupMember.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGroupMemberExtensions.GetTopLevelContainingGroup
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::XRGroupMemberExtensions::GetTopLevelContainingGroup(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGroupMemberExtensions::GetTopLevelContainingGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGroupMemberExtensions", "GetTopLevelContainingGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupMember)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupMember);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.get_hoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.get_hoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.get_interactablesHovered
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_interactablesHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_interactablesHovered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.get_hasHover
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hasHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_hasHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.IsHovering
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::IsHovering(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::IsHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRHoverInteractorExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRHoverInteractorExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRHoverInteractorExtensions.GetOldestInteractableHovered
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* UnityEngine::XR::Interaction::Toolkit::XRHoverInteractorExtensions::GetOldestInteractableHovered(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRHoverInteractorExtensions::GetOldestInteractableHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRHoverInteractorExtensions", "GetOldestInteractableHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRGroupMember
#include "UnityEngine/XR/Interaction/Toolkit/IXRGroupMember.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.add_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.remove_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.get_activeInteractor
::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::get_activeInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::get_activeInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnBeforeUnregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnBeforeUnregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnBeforeUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.AddGroupMember
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::AddGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::AddGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.MoveGroupMemberTo
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::MoveGroupMemberTo(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember, int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::MoveGroupMemberTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember, newIndex);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.RemoveGroupMember
bool UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::RemoveGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::RemoveGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.ClearGroupMembers
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ClearGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ClearGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.ContainsGroupMember
bool UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ContainsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ContainsGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.GetGroupMembers
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::GetGroupMembers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::GetGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.HasDependencyOnGroup
bool UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::HasDependencyOnGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::HasDependencyOnGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, group);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.PreprocessGroupMembers
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::PreprocessGroupMembers(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::PreprocessGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.ProcessGroupMembers
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ProcessGroupMembers(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::ProcessGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::UpdateGroupMemberInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::UpdateGroupMemberInteractions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::UpdateGroupMemberInteractions(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* prePrioritizedInteractor, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*> interactorThatPerformedInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup::UpdateGroupMemberInteractions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prePrioritizedInteractor, byref(interactorThatPerformedInteraction));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionStrengthInteractor.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/IReadOnlyBindableVariable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.get_largestInteractionStrength
::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::get_largestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::get_largestInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.GetInteractionStrength
float UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::GetInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor::ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerMask.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.add_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.remove_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_interactionLayers
::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask UnityEngine::XR::Interaction::Toolkit::IXRInteractor::get_interactionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::get_interactionLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::IXRInteractor::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.GetAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::IXRInteractor::GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::GetAttachTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::IXRInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorExtensions.IsBlockedByInteractionWithinGroup
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorExtensions::IsBlockedByInteractionWithinGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorExtensions::IsBlockedByInteractionWithinGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractorExtensions", "IsBlockedByInteractionWithinGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_selectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_selectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_selectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_selectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_selectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_selectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_interactablesSelected
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_interactablesSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_interactablesSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_firstInteractableSelected
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_firstInteractableSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_firstInteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_hasSelection
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_hasSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.get_keepSelectedTargetValid
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_keepSelectedTargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::get_keepSelectedTargetValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.IsSelecting
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::IsSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::IsSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.GetAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::GetAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.GetLocalAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::GetLocalAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSelectInteractorExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRSelectInteractorExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSelectInteractorExtensions.GetOldestInteractableSelected
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* UnityEngine::XR::Interaction::Toolkit::XRSelectInteractorExtensions::GetOldestInteractableSelected(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSelectInteractorExtensions::GetOldestInteractableSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSelectInteractorExtensions", "GetOldestInteractableSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode
#include "UnityEngine/XR/Interaction/Toolkit/TargetPriorityMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode None
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode>("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode None
void UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_None(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode HighestPriorityOnly
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_HighestPriorityOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_HighestPriorityOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode>("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "HighestPriorityOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode HighestPriorityOnly
void UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_HighestPriorityOnly(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_HighestPriorityOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "HighestPriorityOnly", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode All
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode>("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode All
void UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_All(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "TargetPriorityMode", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRTargetPriorityInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode
#include "UnityEngine/XR/Interaction/Toolkit/TargetPriorityMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor.get_targetPriorityMode
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor::get_targetPriorityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor::get_targetPriorityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor.get_targetsForSelection
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor::get_targetsForSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor::get_targetsForSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider
#include "UnityEngine/XR/Interaction/Toolkit/IXRCustomReticleProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider
#include "UnityEngine/XR/Interaction/Toolkit/IXRReticleDirectionProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider.GetReticleDirection
void UnityEngine::XR::Interaction::Toolkit::IXRReticleDirectionProvider::GetReticleDirection(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::Vector3 hitNormal, ByRef<::UnityEngine::Vector3> reticleUp, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> optionalReticleForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRReticleDirectionProvider::GetReticleDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRReticleDirectionProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, hitNormal, byref(reticleUp), byref(optionalReticleForward));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorLineVisual.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_MinLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MinLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_MaxLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MaxLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.XR.CoreUtils.XROrigin s_XROriginCache
::Unity::XR::CoreUtils::XROrigin* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_s_XROriginCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_s_XROriginCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::CoreUtils::XROrigin*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "s_XROriginCache"));
}
// Autogenerated static field setter
// Set static field: static private Unity.XR.CoreUtils.XROrigin s_XROriginCache
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_s_XROriginCache(::Unity::XR::CoreUtils::XROrigin* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_s_XROriginCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "s_XROriginCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideInteractorLineLength
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideInteractorLineLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineLength
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_WidthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WidthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_ValidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_InvalidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InvalidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_BlockedColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_BlockedColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_BlockedColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlockedColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TreatSelectionAsValidState
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TreatSelectionAsValidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TreatSelectionAsValidState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TreatSelectionAsValidState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FollowTightness
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FollowTightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SnapThresholdDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapThresholdDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Reticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Reticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_BlockedReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_BlockedReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_BlockedReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlockedReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StopLineAtFirstRaycastHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StopLineAtFirstRaycastHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StopLineAtSelection
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StopLineAtSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapEndpointIfAvailable
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapEndpointIfAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapEndpointIfAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapEndpointIfAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticlePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticleNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_EndPositionInLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapCurve
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapCurve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleToUse
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleToUse"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer m_LineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ILineRenderable m_LineRenderable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ILineRenderable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor m_LineRenderableAsSelectInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsSelectInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsSelectInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderableAsSelectInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_LineRenderableAsBaseInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsBaseInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsBaseInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderableAsBaseInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor m_LineRenderableAsRayInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsRayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderableAsRayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderableAsRayInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_TargetPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoTargetPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoTargetPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_PreviousRenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousRenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoPreviousRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoPreviousRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ClearArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomReticleAttached
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticleAttached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Snapping
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Snapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Snapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Snapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume m_XRInteractableSnapVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_XRInteractableSnapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_XRInteractableSnapVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRInteractableSnapVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NumberOfSegmentsForBendableLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NumberOfSegmentsForBendableLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NumberOfSegmentsForBendableLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NumberOfSegmentsForBendableLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_LineRenderablePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderablePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderablePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderablePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_CurrentHitPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentHitPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentHitPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasHitInfo
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_HasHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_HasHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasHitInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ValidHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_CurrentRenderEndpoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentRenderEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CurrentRenderEndpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentRenderEndpoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_PreviousCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.XR.CoreUtils.XROrigin m_XROrigin
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_XROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_XROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XROrigin"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_overrideInteractorLineLength
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_overrideInteractorLineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineLength
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_widthCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_widthCurve
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_validColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_validColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_invalidColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_invalidColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_blockedColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_blockedColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_blockedColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blockedColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_blockedColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_blockedColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_blockedColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blockedColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_treatSelectionAsValidState
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_treatSelectionAsValidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_treatSelectionAsValidState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treatSelectionAsValidState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_treatSelectionAsValidState
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_treatSelectionAsValidState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_treatSelectionAsValidState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_treatSelectionAsValidState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_smoothMovement
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_smoothMovement
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_followTightness
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_followTightness
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_snapThresholdDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_snapThresholdDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_reticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_reticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_blockedReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_blockedReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_blockedReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blockedReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_blockedReticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_blockedReticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_blockedReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blockedReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_stopLineAtFirstRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_stopLineAtFirstRaycastHit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_stopLineAtSelection
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopLineAtSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_stopLineAtSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stopLineAtSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_snapEndpointIfAvailable
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapEndpointIfAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapEndpointIfAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapEndpointIfAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_snapEndpointIfAvailable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapEndpointIfAvailable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapEndpointIfAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapEndpointIfAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.ClearLineRenderer
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnBeforeRenderLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnBeforeRenderLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnBeforeRenderLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRenderLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateCurrentHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateCurrentHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateCurrentHitInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurrentHitInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.CalculateSnapRenderPoints
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::CalculateSnapRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::CalculateSnapRenderPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSnapRenderPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateSettings
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.TryFindLineRenderer
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.FindXROrigin
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::FindXROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::FindXROrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindXROrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.SetupReticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::SetupReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::SetupReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.SetupBlockedReticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::SetupBlockedReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::SetupBlockedReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBlockedReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorReticleVisual.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.XR.CoreUtils.XROrigin s_XROriginCache
::Unity::XR::CoreUtils::XROrigin* UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_s_XROriginCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_s_XROriginCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::CoreUtils::XROrigin*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "s_XROriginCache"));
}
// Autogenerated static field setter
// Set static field: static private Unity.XR.CoreUtils.XROrigin s_XROriginCache
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_s_XROriginCache(::Unity::XR::CoreUtils::XROrigin* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_s_XROriginCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "s_XROriginCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticlePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrefabScalingFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrefabScalingFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UndoDistanceScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UndoDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AlignPrefabWithSurfaceNormal
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlignPrefabWithSurfaceNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndpointSmoothingTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndpointSmoothingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DrawWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DrawWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DrawOnNoHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawOnNoHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawOnNoHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DrawOnNoHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReticleActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.XR.CoreUtils.XROrigin m_XROrigin
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_XROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_XROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XROrigin"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_Interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_InteractorLinePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_InteractorLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_InteractorLinePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLinePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.PhysicsScene m_LocalPhysicsScene
[[deprecated("Use field access instead!")]] ::UnityEngine::PhysicsScene& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_LocalPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_LocalPhysicsScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalPhysicsScene"))->offset;
  return *reinterpret_cast<::UnityEngine::PhysicsScene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasRaycastHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasRaycastHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasRaycastHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticlePrefab
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_prefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_prefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_undoDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_undoDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_alignPrefabWithSurfaceNormal
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_alignPrefabWithSurfaceNormal
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_endpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_endpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_drawWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_drawWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_drawOnNoHit
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawOnNoHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawOnNoHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawOnNoHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_drawOnNoHit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawOnNoHit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawOnNoHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawOnNoHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticleActive
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticleActive
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.FindXROrigin
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindXROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindXROrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindXROrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.SetupReticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.FindClosestHit
::UnityEngine::RaycastHit UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit> hits, int hitCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(hitCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, hitCount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.TryGetRaycastPoint
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint(ByRef<::UnityEngine::Vector3> raycastPos, ByRef<::UnityEngine::Vector3> raycastNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetRaycastPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastPos), ::il2cpp_utils::ExtractType(raycastNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastPos), byref(raycastNormal));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.UpdateReticleTarget
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticleTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.ActivateReticleAtTarget
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateReticleAtTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor_--c.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Pooling/LinkedPool_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable> s_ActivateTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::_get_s_ActivateTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::_get_s_ActivateTargets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor", "s_ActivateTargets"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable> s_ActivateTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::_set_s_ActivateTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::_set_s_ActivateTargets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor", "s_ActivateTargets", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType m_SelectActionTrigger
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_SelectActionTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_SelectActionTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectActionTrigger"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerOnSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerOnSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHoveredActivate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoveredActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoveredActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHoveredActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode m_TargetPriorityMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_TargetPriorityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_TargetPriorityMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPriorityMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectCanceled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectCanceled
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectCanceled"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverCanceled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverCanceled
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverCanceled"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHoverAudioWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoverAudioWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoverAudioWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHoverAudioWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectCanceled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectCancelIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectCancelIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectCancelIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectCancelIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectCancelDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectCancelDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectCancelDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectCancelDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverCanceled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverCancelIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverCancelIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverCancelIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverCancelIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverCancelDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverCancelDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverCancelDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverCancelDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHoverHapticsWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoverHapticsWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowHoverHapticsWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHoverHapticsWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AllowActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController m_Controller
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs> m_ActivateEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ActivateEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ActivateEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs> m_DeactivateEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_DeactivateEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_DeactivateEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeactivateEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelectActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelectDeactivatedThisFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectDeactivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectDeactivatedThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelectDeactivatedThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WaitingForSelectDeactivate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_WaitingForSelectDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_WaitingForSelectDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitingForSelectDeactivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource m_EffectsAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectsAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <validTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_$validTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_$validTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<validTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_selectActionTrigger
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_selectActionTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_selectActionTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectActionTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_selectActionTrigger
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_selectActionTrigger(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_selectActionTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectActionTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hideControllerOnSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hideControllerOnSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_allowHoveredActivate
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoveredActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoveredActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHoveredActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_allowHoveredActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoveredActivate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoveredActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHoveredActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectEntered
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectEntered(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectExited
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectExited(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectCanceled
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectCanceled
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectCanceled(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverEntered
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverEntered(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverExited
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverExited(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverCanceled
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverCanceled
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnHoverCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverCanceled(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_allowHoverAudioWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoverAudioWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoverAudioWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHoverAudioWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_allowHoverAudioWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoverAudioWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoverAudioWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHoverAudioWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectCanceled
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectCancelIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectCancelIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectCancelIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectCancelIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectCancelIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectCancelIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectCancelIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectCancelIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectCancelDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectCancelDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectCancelDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectCancelDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectCancelDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectCancelDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectCancelDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectCancelDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverCanceled
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverCancelIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverCancelIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverCancelIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverCancelIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverCancelIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverCancelIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverCancelIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverCancelIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverCancelDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverCancelDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverCancelDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverCancelDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverCancelDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverCancelDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverCancelDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverCancelDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_allowHoverHapticsWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoverHapticsWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowHoverHapticsWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHoverHapticsWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_allowHoverHapticsWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoverHapticsWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowHoverHapticsWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHoverHapticsWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_allowActivate
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_allowActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_allowActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowActivate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_allowActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_xrController
::UnityEngine::XR::Interaction::Toolkit::XRBaseController* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_xrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_xrController
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_xrController(::UnityEngine::XR::Interaction::Toolkit::XRBaseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.FindControllerComponent
::UnityEngine::XR::Interaction::Toolkit::XRBaseController* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::FindControllerComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::FindControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendActivateEvent
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendActivateEvent(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendActivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendActivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendDeactivateEvent
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendDeactivateEvent(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendDeactivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendDeactivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isUISelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUISelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_shouldActivate
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_shouldActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_shouldActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 98));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_shouldDeactivate
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_shouldDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_shouldDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 99));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.GetActivateTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::GetActivateTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::GetActivateTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 100));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CanPlayHoverAudio
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CanPlayHoverAudio(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* hoveredInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CanPlayHoverAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayHoverAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoveredInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hoveredInteractable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CanPlayHoverHaptics
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CanPlayHoverHaptics(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* hoveredInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CanPlayHoverHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayHoverHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoveredInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hoveredInteractable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.PlayAudio
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::PlayAudio(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::PlayAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 101));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CreateEffectsAudioSource
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEffectsAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.HandleSelecting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::HandleSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::HandleSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.HandleDeselecting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::HandleDeselecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::HandleDeselecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeselecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_validTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_validTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_validTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 102));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_targetPriorityMode
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_targetPriorityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_targetPriorityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_targetPriorityMode
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_targetPriorityMode(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_targetPriorityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType State
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_State");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "State"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType State
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_State(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_State");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "State", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType StateChange
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "StateChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType StateChange
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_StateChange(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Toggle
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Toggle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Toggle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Toggle
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Toggle(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Toggle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Toggle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Sticky
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Sticky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Sticky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Sticky"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Sticky
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Sticky(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Sticky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Sticky", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs> <>9__223_0
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9__223_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9__223_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9__223_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs> <>9__223_0
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9__223_0(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9__223_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9__223_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs> <>9__223_1
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9__223_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_get_$$9__223_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9__223_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs> <>9__223_1
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9__223_1(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_set_$$9__223_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", "<>9__223_1", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c.<.ctor>b__223_0
::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::$_ctor$b__223_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::<.ctor>b__223_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__223_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/<>c.<.ctor>b__223_1
::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::$_ctor$b__223_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::$$c::<.ctor>b__223_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__223_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/XRBaseTargetFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRTargetFilter.hpp"
// Including type: Unity.XR.CoreUtils.Collections.HashSetList`1
#include "Unity/XR/CoreUtils/Collections/HashSetList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/ExposedRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRHoverFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRSelectFilter.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/BindableVariable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionStrengthInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1
#include "UnityEngine/XR/Interaction/Toolkit/IXRFilterList_1.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/IReadOnlyBindableVariable_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_InteractionStrengthHover
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_InteractionStrengthHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_InteractionStrengthHover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_InteractionStrengthHover"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_InteractionStrengthHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_InteractionStrengthHover(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_InteractionStrengthHover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_InteractionStrengthHover", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_InteractionStrengthSelect
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_InteractionStrengthSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_InteractionStrengthSelect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_InteractionStrengthSelect"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_InteractionStrengthSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_InteractionStrengthSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_InteractionStrengthSelect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_InteractionStrengthSelect", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_InteractionManagerCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_ProcessInteractionStrengthMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_ProcessInteractionStrengthMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_ProcessInteractionStrengthMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_ProcessInteractionStrengthMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_ProcessInteractionStrengthMarker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_VelocityUpdateInterval
int UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_VelocityUpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_k_VelocityUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_VelocityUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_VelocityUpdateInterval
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_VelocityUpdateInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_k_VelocityUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "k_VelocityUpdateInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> registered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_registered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_registered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> unregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroup>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$containingGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$containingGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<containingGroup>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_KeepSelectedTargetValid
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_KeepSelectedTargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_KeepSelectedTargetValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeepSelectedTargetValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DisableVisualsWhenBlockedInGroup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_DisableVisualsWhenBlockedInGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_DisableVisualsWhenBlockedInGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisableVisualsWhenBlockedInGroup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectedInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter m_StartingTargetFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingTargetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingTargetFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingTargetFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter m_TargetFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_TargetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_TargetFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPerformingManualInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_IsPerformingManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_IsPerformingManualInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPerformingManualInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_InteractablesHovered
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractablesHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractablesHovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractablesHovered"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_InteractablesSelected
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractablesSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractablesSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractablesSelected"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable <firstInteractableSelected>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$firstInteractableSelected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$firstInteractableSelected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<firstInteractableSelected>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInteractingWithUI>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$isInteractingWithUI$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$isInteractingWithUI$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInteractingWithUI>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingHoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingHoverFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_HoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_SelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_LargestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_LargestInteractionStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LargestInteractionStrength"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_AttachPoseOnSelect
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachPoseOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachPoseOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachPoseOnSelect"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,UnityEngine.Pose> m_LocalAttachPoseOnSelect
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_LocalAttachPoseOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_LocalAttachPoseOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalAttachPoseOnSelect"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable> m_InteractionStrengthInteractables
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionStrengthInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionStrengthInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionStrengthInteractables"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.Single> m_InteractionStrengths
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionStrengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionStrengths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionStrengths"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_ManualInteractionInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_ManualInteractionInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_ManualInteractionInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ManualInteractionInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <useAttachPointVelocity>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$useAttachPointVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$useAttachPointVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<useAttachPointVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <attachPointVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$attachPointVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$attachPointVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<attachPointVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <attachPointAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$attachPointAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$attachPointAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<attachPointAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode <targetPriorityMode>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$targetPriorityMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$targetPriorityMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetPriorityMode>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> <targetsForSelection>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$targetsForSelection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$targetsForSelection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetsForSelection>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeltaTimeStart
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_DeltaTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_DeltaTimeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeltaTimeStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FrameOn
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_FrameOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_FrameOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FrameOn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_VelocityPositionsCache
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityPositionsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityPositionsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityPositionsCache"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_VelocityNormalsCache
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityNormalsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityNormalsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityNormalsCache"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_VelocityPositionsSum
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityPositionsSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityPositionsSum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityPositionsSum"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_VelocityNormalsSum
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityNormalsSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_VelocityNormalsSum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityNormalsSum"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$hoverTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$hoverTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoverTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.add_registered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.remove_registered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_containingGroup
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_containingGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_containingGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_containingGroup
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_containingGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_containingGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_containingGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionLayers
::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionLayers
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayers(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_keepSelectedTargetValid
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_keepSelectedTargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_keepSelectedTargetValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_keepSelectedTargetValid
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_keepSelectedTargetValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_keepSelectedTargetValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keepSelectedTargetValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_disableVisualsWhenBlockedInGroup
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_disableVisualsWhenBlockedInGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_disableVisualsWhenBlockedInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableVisualsWhenBlockedInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_disableVisualsWhenBlockedInGroup
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_disableVisualsWhenBlockedInGroup(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_disableVisualsWhenBlockedInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableVisualsWhenBlockedInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingSelectedInteractable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_startingSelectedInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingTargetFilter
::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingTargetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingTargetFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingTargetFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_startingTargetFilter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingTargetFilter(::UnityEngine::XR::Interaction::Toolkit::Filtering::XRBaseTargetFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingTargetFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingTargetFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_hoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_hoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_hoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_selectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_selectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_targetFilter
::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_targetFilter
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetFilter(::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRTargetFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isPerformingManualInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPerformingManualInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactablesHovered
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesHovered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hasHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactablesSelected
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactablesSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_firstInteractableSelected
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_firstInteractableSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_firstInteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_firstInteractableSelected
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_firstInteractableSelected(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_firstInteractableSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstInteractableSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hasSelection
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hasSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isInteractingWithUI
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isInteractingWithUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isInteractingWithUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInteractingWithUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_isInteractingWithUI
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_isInteractingWithUI(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_isInteractingWithUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInteractingWithUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingHoverFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_startingHoverFilters
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hoverFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingSelectFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_startingSelectFilters
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_largestInteractionStrength
::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_largestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_largestInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_useAttachPointVelocity
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_useAttachPointVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_useAttachPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useAttachPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_useAttachPointVelocity
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_useAttachPointVelocity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_useAttachPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useAttachPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachPointVelocity
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_attachPointVelocity
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachPointAngularVelocity
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachPointAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachPointAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_attachPointAngularVelocity
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointAngularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachPointAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachPointAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetLocalAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetLocalAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnregisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnregisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnregisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 58));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_targetPriorityMode
::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetPriorityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetPriorityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_targetPriorityMode
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetPriorityMode(::UnityEngine::XR::Interaction::Toolkit::TargetPriorityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetPriorityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_targetsForSelection
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetsForSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_targetsForSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_targetsForSelection
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetsForSelection(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_targetsForSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CaptureAttachPose
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CaptureAttachPose(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CaptureAttachPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureAttachPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetInteractionStrength
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 48));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractor_ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractor_OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractor_OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 70));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 72));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 78));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 79));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 80));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EndManualInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 81));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessHoverFilters
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessSelectFilters
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsNonGroupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UpdateVelocityAndAngularVelocity
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UpdateVelocityAndAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UpdateVelocityAndAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVelocityAndAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_enableInteractions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_enableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 82));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 83));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 84));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 85));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 86));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 87));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 88));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 89));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectTarget
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_selectTarget
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hoverTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 91));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 92));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_requireSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 93));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 94));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine_XR_Interaction_Toolkit_IXRInteractor_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_-UpdateCollidersAfterOnTriggerStay-d__13.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/TriggerContactMonitor.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
::UnityEngine::WaitForFixedUpdate* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::_get_s_WaitForFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::_get_s_WaitForFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WaitForFixedUpdate*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor", "s_WaitForFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::_set_s_WaitForFixedUpdate(::UnityEngine::WaitForFixedUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::_set_s_WaitForFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor", "s_WaitForFixedUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> <unsortedValidTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_$unsortedValidTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_$unsortedValidTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<unsortedValidTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.Collider> m_StayedColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_StayedColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_StayedColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StayedColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor m_TriggerContactMonitor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_TriggerContactMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_TriggerContactMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TriggerContactMonitor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator m_UpdateCollidersAfterTriggerStay
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_UpdateCollidersAfterTriggerStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_UpdateCollidersAfterTriggerStay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateCollidersAfterTriggerStay"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.get_unsortedValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_unsortedValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_unsortedValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unsortedValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerStay
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerStay(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.UpdateCollidersAfterOnTriggerStay
::System::Collections::IEnumerator* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::UpdateCollidersAfterOnTriggerStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::UpdateCollidersAfterOnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCollidersAfterOnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.ValidateTriggerCollider
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ValidateTriggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ValidateTriggerCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTriggerCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnInteractableRegistered
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnInteractableRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnInteractableRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInteractableRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnInteractableUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnInteractableUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnInteractableUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInteractableUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnContactAdded
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnContactAdded(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnContactAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContactAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnContactRemoved
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnContactRemoved(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnContactRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContactRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.ResetCollidersAndValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ResetCollidersAndValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ResetCollidersAndValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCollidersAndValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 70));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 91));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 92));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_-UpdateCollidersAfterOnTriggerStay-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13.System.IDisposable.Dispose
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13.MoveNext
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13.System.Collections.IEnumerator.Reset
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<UpdateCollidersAfterOnTriggerStay>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$UpdateCollidersAfterOnTriggerStay$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRGazeInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation m_GazeAssistanceCalculation
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceCalculation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceCalculation"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GazeAssistanceColliderFixedSize
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceColliderFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceColliderFixedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceColliderFixedSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GazeAssistanceColliderScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceColliderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceColliderScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceColliderScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume m_GazeAssistanceSnapVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceSnapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceSnapVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceSnapVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GazeAssistanceDistanceScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ClampGazeAssistanceDistanceScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_ClampGazeAssistanceDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_ClampGazeAssistanceDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClampGazeAssistanceDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GazeAssistanceDistanceScalingClampValue
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceDistanceScalingClampValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::dyn_m_GazeAssistanceDistanceScalingClampValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeAssistanceDistanceScalingClampValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceCalculation
::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceCalculation
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceCalculation(::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceColliderFixedSize
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceColliderFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceColliderFixedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceColliderFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceColliderFixedSize
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceColliderFixedSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceColliderFixedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceColliderFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceColliderScale
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceColliderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceColliderScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceColliderScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceColliderScale
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceColliderScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceColliderScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceColliderScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceSnapVolume
::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceSnapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceSnapVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceSnapVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceSnapVolume
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceSnapVolume(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceSnapVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceSnapVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_clampGazeAssistanceDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_clampGazeAssistanceDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_clampGazeAssistanceDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clampGazeAssistanceDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_clampGazeAssistanceDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_clampGazeAssistanceDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_clampGazeAssistanceDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clampGazeAssistanceDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.get_gazeAssistanceDistanceScalingClampValue
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceDistanceScalingClampValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::get_gazeAssistanceDistanceScalingClampValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gazeAssistanceDistanceScalingClampValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.set_gazeAssistanceDistanceScalingClampValue
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceDistanceScalingClampValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::set_gazeAssistanceDistanceScalingClampValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeAssistanceDistanceScalingClampValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.CreateGazeAssistanceSnapVolume
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CreateGazeAssistanceSnapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CreateGazeAssistanceSnapVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGazeAssistanceSnapVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.UpdateSnapVolumeInteractable
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::UpdateSnapVolumeInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::UpdateSnapVolumeInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor*), 114));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.CalculateSnapColliderSize
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CalculateSnapColliderSize(::UnityEngine::Collider* interactableCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CalculateSnapColliderSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSnapColliderSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactableCollider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.CanInteract
bool UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CanInteract(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::CanInteract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanInteract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.GetHoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GetHoverTimeToSelect(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GetHoverTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 112));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor.GetTimeToAutoDeselect
float UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GetTimeToAutoDeselect(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GetTimeToAutoDeselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 113));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation
#include "UnityEngine/XR/Interaction/Toolkit/XRGazeInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation FixedSize
::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_get_FixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_get_FixedSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation>("UnityEngine.XR.Interaction.Toolkit", "XRGazeInteractor/GazeAssistanceCalculation", "FixedSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation FixedSize
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_set_FixedSize(::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_set_FixedSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGazeInteractor/GazeAssistanceCalculation", "FixedSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation ColliderSize
::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_get_ColliderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_get_ColliderSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation>("UnityEngine.XR.Interaction.Toolkit", "XRGazeInteractor/GazeAssistanceCalculation", "ColliderSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRGazeInteractor/GazeAssistanceCalculation ColliderSize
void UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_set_ColliderSize(::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::_set_ColliderSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGazeInteractor/GazeAssistanceCalculation", "ColliderSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGazeInteractor::GazeAssistanceCalculation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionGroup.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/RegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractionManagerCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> s_InteractablesSelected
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractablesSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractablesSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractablesSelected"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> s_InteractablesSelected
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractablesSelected(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractablesSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractablesSelected", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> s_InteractablesHovered
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractablesHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_get_s_InteractablesHovered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractablesHovered"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> s_InteractablesHovered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractablesHovered(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_set_s_InteractablesHovered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", "s_InteractablesHovered", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> registered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_registered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_registered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> unregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroup>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_$containingGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_$containingGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<containingGroup>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingGroupMembers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_StartingGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_StartingGroupMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingGroupMembers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractor <activeInteractor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_$activeInteractor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_$activeInteractor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activeInteractor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRGroupMember> m_GroupMembers
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_GroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_GroupMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GroupMembers"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRGroupMember> m_TempGroupMembers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_TempGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_TempGroupMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TempGroupMembers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsProcessingGroupMembers
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_IsProcessingGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_IsProcessingGroupMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsProcessingGroupMembers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_DeprecatedValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_DeprecatedValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::dyn_m_DeprecatedValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeprecatedValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.add_registered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.remove_registered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.get_containingGroup
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_containingGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_containingGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.set_containingGroup
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_containingGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_containingGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_containingGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.get_startingGroupMembers
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_startingGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_startingGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.set_startingGroupMembers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_startingGroupMembers(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_startingGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.get_activeInteractor
::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_activeInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::get_activeInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.set_activeInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_activeInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::set_activeInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activeInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnBeforeUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_OnBeforeUnregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnBeforeUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.AddGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::AddGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::AddGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.MoveGroupMemberTo
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::MoveGroupMemberTo(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember, int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::MoveGroupMemberTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember, newIndex);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ValidateAddGroupMember
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ValidateAddGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ValidateAddGroupMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAddGroupMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupMember)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.RemoveGroupMember
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RemoveGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RemoveGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ClearGroupMembers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearGroupMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ContainsGroupMember
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ContainsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ContainsGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.GetGroupMembers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::GetGroupMembers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::GetGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.HasDependencyOnGroup
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::HasDependencyOnGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::HasDependencyOnGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, group);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnregisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnregisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnregisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.RegisterAsGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterAsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterAsGroupMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterAsGroupMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupMember)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.RegisterAsNonGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterAsNonGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::RegisterAsNonGroupMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterAsNonGroupMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupMember)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ReRegisterGroupMemberWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ReRegisterGroupMemberWithInteractionManager(::UnityEngine::XR::Interaction::Toolkit::IXRGroupMember* groupMember) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ReRegisterGroupMemberWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReRegisterGroupMemberWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupMember)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupMember);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.PreprocessGroupMembers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_PreprocessGroupMembers(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.PreprocessGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.ProcessGroupMembers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_ProcessGroupMembers(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.ProcessGroupMembers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_UpdateGroupMemberInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.CanStartOrContinueAnySelect
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::CanStartOrContinueAnySelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* selectInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::CanStartOrContinueAnySelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanStartOrContinueAnySelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectInteractor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, selectInteractor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRInteractionGroup_UpdateGroupMemberInteractions(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* prePrioritizedInteractor, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*> interactorThatPerformedInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup.UpdateGroupMemberInteractions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prePrioritizedInteractor, byref(interactorThatPerformedInteraction));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UpdateInteractorInteractions
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UpdateInteractorInteractions(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, bool preventInteraction, ByRef<bool> performedInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UpdateInteractorInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractorInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(preventInteraction), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, preventInteraction, byref(performedInteraction));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ClearAllInteractorSelections
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearAllInteractorSelections(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* selectInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearAllInteractorSelections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllInteractorSelections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectInteractor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.ClearAllInteractorHovers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearAllInteractorHovers(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* hoverInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::ClearAllInteractorHovers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllInteractorHovers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverInteractor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsGroupMember(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine_XR_Interaction_Toolkit_IXRGroupMember_OnRegisteringAsNonGroupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionGroup..cctor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRPokeInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRSelectFilter.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache
#include "UnityEngine/XR/Interaction/Toolkit/UI/RegisteredUIInteractorCache.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRPokeFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/XRPokeFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_Results
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::_get_s_Results() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::_get_s_Results");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRPokeInteractor", "s_Results"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_Results
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::_set_s_Results(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::_set_s_Results");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRPokeInteractor", "s_Results", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PokeDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PokeWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PokeSelectWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeSelectWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeSelectWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeSelectWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PokeHoverRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeHoverRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeHoverRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeHoverRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PokeInteractionOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeInteractionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeInteractionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeInteractionOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_PhysicsLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PhysicsLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PhysicsLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PhysicsLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.QueryTriggerInteraction m_PhysicsTriggerInteraction
[[deprecated("Use field access instead!")]] ::UnityEngine::QueryTriggerInteraction& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PhysicsTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PhysicsTriggerInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PhysicsTriggerInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryTriggerInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequirePokeFilter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_RequirePokeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_RequirePokeFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequirePokeFilter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableUIInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_EnableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_EnableUIInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableUIInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DebugVisualizationsEnabled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_DebugVisualizationsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_DebugVisualizationsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DebugVisualizationsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_HoverDebugSphere
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_HoverDebugSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_HoverDebugSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverDebugSphere"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer m_HoverDebugRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_HoverDebugRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_HoverDebugRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverDebugRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPokeInteractionPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_LastPokeInteractionPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_LastPokeInteractionPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPokeInteractionPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PokeCanSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeCanSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeCanSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeCanSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_FirstFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_FirstFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_FirstFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_CurrentPokeTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_CurrentPokeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_CurrentPokeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentPokeTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.RaycastHit[] m_SphereCastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_SphereCastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_SphereCastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SphereCastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Collider[] m_OverlapSphereHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_OverlapSphereHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_OverlapSphereHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverlapSphereHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor/PokeCollision> m_PokeTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision>*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PokeTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PokeTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_InteractableSelectFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_InteractableSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_InteractableSelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSelectFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache m_RegisteredUIInteractorCache
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_RegisteredUIInteractorCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_RegisteredUIInteractorCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredUIInteractorCache"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.PhysicsScene m_LocalPhysicsScene
[[deprecated("Use field access instead!")]] ::UnityEngine::PhysicsScene& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_LocalPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_LocalPhysicsScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalPhysicsScene"))->offset;
  return *reinterpret_cast<::UnityEngine::PhysicsScene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<UnityEngine.Vector3> m_PositionGetter
[[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::Vector3>*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PositionGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::dyn_m_PositionGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionGetter"))->offset;
  return *reinterpret_cast<::System::Func_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_pokeDepth
float UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pokeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_pokeDepth
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pokeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_pokeWidth
float UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pokeWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_pokeWidth
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pokeWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_pokeSelectWidth
float UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeSelectWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeSelectWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pokeSelectWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_pokeSelectWidth
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeSelectWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeSelectWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pokeSelectWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_pokeHoverRadius
float UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeHoverRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeHoverRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pokeHoverRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_pokeHoverRadius
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeHoverRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeHoverRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pokeHoverRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_pokeInteractionOffset
float UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeInteractionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_pokeInteractionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pokeInteractionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_pokeInteractionOffset
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeInteractionOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_pokeInteractionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pokeInteractionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_physicsLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_physicsLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_physicsLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_physicsLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_physicsLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_physicsLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_physicsTriggerInteraction
::UnityEngine::QueryTriggerInteraction UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_physicsTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_physicsTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::QueryTriggerInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_physicsTriggerInteraction
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_physicsTriggerInteraction(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_physicsTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_requirePokeFilter
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_requirePokeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_requirePokeFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requirePokeFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_requirePokeFilter
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_requirePokeFilter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_requirePokeFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requirePokeFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_enableUIInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_enableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_enableUIInteraction
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_enableUIInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.get_debugVisualizationsEnabled
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_debugVisualizationsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::get_debugVisualizationsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debugVisualizationsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.set_debugVisualizationsEnabled
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_debugVisualizationsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::set_debugVisualizationsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debugVisualizationsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.EvaluatePokeInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::EvaluatePokeInteraction(ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*> newHoveredInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::EvaluatePokeInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluatePokeInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(newHoveredInteractable));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.EvaluateSphereOverlap
int UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::EvaluateSphereOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::EvaluateSphereOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateSphereOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.FindPokeTarget
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::FindPokeTarget(::UnityEngine::Collider* hitCollider, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision> newPokeCollision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::FindPokeTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPokeTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitCollider), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hitCollider, byref(newPokeCollision));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.SetDebugObjectVisibility
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::SetDebugObjectVisibility(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::SetDebugObjectVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDebugObjectVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isVisible);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.UpdateDebugVisuals
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::UpdateDebugVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::UpdateDebugVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDebugVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor*), 97));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.GetPokePosition
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::GetPokePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::GetPokePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPokePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor*), 96));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRPokeInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor/PokeCollision
#include "UnityEngine/XR/Interaction/Toolkit/XRPokeInteractor.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRPokeFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/XRPokeFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Collider collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_interactable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.XR.Interaction.Toolkit.Filtering.XRPokeFilter filter
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRPokeFilter*& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_filter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Filtering::XRPokeFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hasPokeFilter
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_hasPokeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::dyn_hasPokeFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPokeFilter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor/PokeCollision..ctor
UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::PokeCollision(::UnityEngine::Collider* collider, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::Filtering::XRPokeFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRPokeInteractor::PokeCollision::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider, interactable, filter);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache
#include "UnityEngine/XR/Interaction/Toolkit/UI/RegisteredUIInteractorCache.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_--c.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_Results
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_Results() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_Results");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_Results"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> s_Results
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_Results(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_Results");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_Results", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MinSampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinSampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinSampleFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinSampleFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MinSampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinSampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinSampleFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinSampleFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxSampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxSampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxSampleFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxSampleFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxSampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxSampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxSampleFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxSampleFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint> s_ScratchSamplePoints
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_ScratchSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_ScratchSamplePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>*>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_ScratchSamplePoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint> s_ScratchSamplePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_ScratchSamplePoints(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_ScratchSamplePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_ScratchSamplePoints", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_ScratchControlPoints
::ArrayW<::UnityEngine::Vector3> UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_ScratchControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_ScratchControlPoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_ScratchControlPoints"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_ScratchControlPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_ScratchControlPoints(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_ScratchControlPoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_ScratchControlPoints", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType m_LineType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BlendVisualLinePoints
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_BlendVisualLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_BlendVisualLinePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendVisualLinePoints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_RayOriginTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RayOriginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RayOriginTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RayOriginTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ReferenceFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Velocity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Acceleration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AdditionalGroundHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalGroundHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalGroundHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AdditionalGroundHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AdditionalFlightTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AdditionalFlightTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleFrequency
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType m_HitDetectionType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitDetectionType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SphereCastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.QueryTriggerInteraction m_RaycastTriggerInteraction
[[deprecated("Use field access instead!")]] ::UnityEngine::QueryTriggerInteraction& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastTriggerInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryTriggerInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction m_RaycastSnapVolumeInteraction
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastSnapVolumeInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastSnapVolumeInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastSnapVolumeInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HitClosestOnly
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitClosestOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitClosestOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitClosestOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HoverToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HoverTimeToSelect
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTimeToSelect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutoDeselect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AutoDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AutoDeselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutoDeselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeToAutoDeselect
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TimeToAutoDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TimeToAutoDeselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeToAutoDeselect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableUIInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableUIInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowAnchorControl
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AllowAnchorControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AllowAnchorControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowAnchorControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseForceGrab
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UseForceGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UseForceGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseForceGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotateSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RotateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RotateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TranslateSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TranslateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TranslateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TranslateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AnchorRotateReferenceFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AnchorRotateReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AnchorRotateReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnchorRotateReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode m_AnchorRotationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AnchorRotationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AnchorRotationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnchorRotationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable <currentNearestValidTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_$currentNearestValidTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_$currentNearestValidTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentNearestValidTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastTimeHoveredObjectChanged
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastTimeHoveredObjectChanged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PassedHoverTimeToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PassedHoverTimeToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastTimeAutoSelected
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeAutoSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeAutoSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastTimeAutoSelected"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PassedTimeToAutoDeselect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedTimeToAutoDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedTimeToAutoDeselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PassedTimeToAutoDeselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_RaycastHitsCount
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer m_RaycastHitComparer
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint> m_SamplePoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SamplePoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SamplePointsFrameUpdated
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePointsFrameUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePointsFrameUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SamplePointsFrameUpdated"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_RaycastHitEndpointIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitEndpointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitEndpointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitEndpointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_UIRaycastHitEndpointIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UIRaycastHitEndpointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UIRaycastHitEndpointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIRaycastHitEndpointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ControlPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_HitChordControlPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitChordControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitChordControlPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitChordControlPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.PhysicsScene m_LocalPhysicsScene
[[deprecated("Use field access instead!")]] ::UnityEngine::PhysicsScene& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LocalPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LocalPhysicsScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalPhysicsScene"))->offset;
  return *reinterpret_cast<::UnityEngine::PhysicsScene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache m_RegisteredUIInteractorCache
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RegisteredUIInteractorCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RegisteredUIInteractorCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredUIInteractorCache"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::RegisteredUIInteractorCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_lineType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_lineType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_blendVisualLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_blendVisualLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_blendVisualLinePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendVisualLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_blendVisualLinePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_blendVisualLinePoints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_blendVisualLinePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blendVisualLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_rayOriginTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rayOriginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rayOriginTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rayOriginTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_rayOriginTransform
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rayOriginTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rayOriginTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rayOriginTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_referenceFrame
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_referenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_additionalGroundHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalGroundHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalGroundHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalGroundHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_additionalGroundHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalGroundHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalGroundHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_additionalGroundHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_additionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_additionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_additionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hitDetectionType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hitDetectionType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sphereCastRadius
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sphereCastRadius
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastTriggerInteraction
::UnityEngine::QueryTriggerInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::QueryTriggerInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastTriggerInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastSnapVolumeInteraction
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastSnapVolumeInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastSnapVolumeInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastSnapVolumeInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastSnapVolumeInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastSnapVolumeInteraction(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastSnapVolumeInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastSnapVolumeInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hitClosestOnly
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitClosestOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitClosestOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hitClosestOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hitClosestOnly
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitClosestOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitClosestOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hitClosestOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverToSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_autoDeselect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_autoDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_autoDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_autoDeselect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_autoDeselect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_autoDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_timeToAutoDeselect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_timeToAutoDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_timeToAutoDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeToAutoDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_timeToAutoDeselect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_timeToAutoDeselect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_timeToAutoDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeToAutoDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_enableUIInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_enableUIInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_allowAnchorControl
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_allowAnchorControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_allowAnchorControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowAnchorControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_allowAnchorControl
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_allowAnchorControl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_allowAnchorControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowAnchorControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_useForceGrab
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_useForceGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_useForceGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useForceGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_useForceGrab
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_useForceGrab(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_useForceGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useForceGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_rotateSpeed
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rotateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rotateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_rotateSpeed
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rotateSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rotateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_translateSpeed
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_translateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_translateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_translateSpeed
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_translateSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_translateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_anchorRotateReferenceFrame
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_anchorRotateReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_anchorRotateReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorRotateReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_anchorRotateReferenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_anchorRotateReferenceFrame(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_anchorRotateReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorRotateReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_anchorRotationMode
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_anchorRotationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_anchorRotationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorRotationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_anchorRotationMode
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_anchorRotationMode(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_anchorRotationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorRotationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_currentNearestValidTarget
::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_currentNearestValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_currentNearestValidTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentNearestValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_currentNearestValidTarget
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_currentNearestValidTarget(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_currentNearestValidTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentNearestValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_effectiveRayOrigin
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_effectiveRayOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_effectiveRayOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectiveRayOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_closestAnyHitIndex
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_closestAnyHitIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_closestAnyHitIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_closestAnyHitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDrawGizmosSelected
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 107));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.DrawQuadraticBezierGizmo
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::DrawQuadraticBezierGizmo(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::DrawQuadraticBezierGizmo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "DrawQuadraticBezierGizmo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindReferenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CreateRayOrigin
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateRayOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateRayOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRayOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.IsOverUIGameObject
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::IsOverUIGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::IsOverUIGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOverUIGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 103));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.EnsureCapacity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::EnsureCapacity(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, int numPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linePoints), ::il2cpp_utils::ExtractType(numPoints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(linePoints), numPoints);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 104));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 108));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 106));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrent3DRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrent3DRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrent3DRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCurrent3DRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrent3DRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrent3DRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit, ByRef<int> raycastEndpointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrent3DRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCurrent3DRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit), byref(raycastEndpointIndex));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentUIRaycastResult
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentUIRaycastResult(ByRef<::UnityEngine::EventSystems::RaycastResult> raycastResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentUIRaycastResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCurrentUIRaycastResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::RaycastResult&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastResult));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentUIRaycastResult
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentUIRaycastResult(ByRef<::UnityEngine::EventSystems::RaycastResult> raycastResult, ByRef<int> raycastEndpointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentUIRaycastResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCurrentUIRaycastResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::RaycastResult&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastResult), byref(raycastEndpointIndex));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentRaycast
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentRaycast(ByRef<::System::Nullable_1<::UnityEngine::RaycastHit>> raycastHit, ByRef<int> raycastHitIndex, ByRef<::System::Nullable_1<::UnityEngine::EventSystems::RaycastResult>> uiRaycastHit, ByRef<int> uiRaycastHitIndex, ByRef<bool> isUIHitClosest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetCurrentRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCurrentRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Nullable_1<::UnityEngine::RaycastHit>&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::Nullable_1<::UnityEngine::EventSystems::RaycastResult>&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit), byref(raycastHitIndex), byref(uiRaycastHit), byref(uiRaycastHitIndex), byref(isUIHitClosest));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateBezierControlPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateBezierControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateBezierControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBezierControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.SampleQuadraticBezierPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleQuadraticBezierPoint(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleQuadraticBezierPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "SampleQuadraticBezierPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, t);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.SampleCubicBezierPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleCubicBezierPoint(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleCubicBezierPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "SampleCubicBezierPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ElevateQuadraticToCubicBezier
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ElevateQuadraticToCubicBezier(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ByRef<::UnityEngine::Vector3> c0, ByRef<::UnityEngine::Vector3> c1, ByRef<::UnityEngine::Vector3> c2, ByRef<::UnityEngine::Vector3> c3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ElevateQuadraticToCubicBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "ElevateQuadraticToCubicBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, byref(c0), byref(c1), byref(c2), byref(c3));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.SampleProjectilePoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleProjectilePoint(::UnityEngine::Vector3 initialPosition, ::UnityEngine::Vector3 initialVelocity, ::UnityEngine::Vector3 constantAcceleration, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SampleProjectilePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "SampleProjectilePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(initialVelocity), ::il2cpp_utils::ExtractType(constantAcceleration), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialPosition, initialVelocity, constantAcceleration, time);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateProjectileParameters
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectileParameters(ByRef<::UnityEngine::Vector3> initialPosition, ByRef<::UnityEngine::Vector3> initialVelocity, ByRef<::UnityEngine::Vector3> constantAcceleration, ByRef<float> flightTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectileParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateProjectileParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(initialPosition), byref(initialVelocity), byref(constantAcceleration), byref(flightTime));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryRead2DAxis
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryRead2DAxis(::UnityEngine::InputSystem::InputAction* action, ByRef<::UnityEngine::Vector2> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryRead2DAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "TryRead2DAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, byref(output));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RotateAnchor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor(::UnityEngine::Transform* anchor, float directionAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 109));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, directionAmount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RotateAnchor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor(::UnityEngine::Transform* anchor, ::UnityEngine::Vector2 direction, ::UnityEngine::Quaternion referenceRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 110));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, direction, referenceRotation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TranslateAnchor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TranslateAnchor(::UnityEngine::Transform* rayOrigin, ::UnityEngine::Transform* anchor, float directionAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TranslateAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 111));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayOrigin, anchor, directionAmount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CreateSamplePointsListsIfNecessary
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateSamplePointsListsIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateSamplePointsListsIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSamplePointsListsIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateSamplePointsIfNecessary
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateSamplePointsIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateSamplePointsIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSamplePointsIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateSamplePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateSamplePoints(int count, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>* samplePoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateSamplePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSamplePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(samplePoints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count, samplePoints);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CheckCollidersBetweenPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCollidersBetweenPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FilterTriggerColliders
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FilterTriggerColliders(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* interactionManager, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, int count, ::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>* removeRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FilterTriggerColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "FilterTriggerColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionManager), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(removeRule)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactionManager, raycastHits, count, removeRule);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIHitIndex
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIHitIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIHitIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUIHitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CreateBezierCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateBezierCurve(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint>* samplePoints, int endSamplePointIndex, ::ArrayW<::UnityEngine::Vector3> quadraticControlPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CreateBezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplePoints), ::il2cpp_utils::ExtractType(endSamplePointIndex), ::il2cpp_utils::ExtractType(quadraticControlPoints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samplePoints, endSamplePointIndex, quadraticControlPoints);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetHoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetHoverTimeToSelect(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetHoverTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 112));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetTimeToAutoDeselect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetTimeToAutoDeselect(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetTimeToAutoDeselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 113));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RestoreAttachTransform
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RestoreAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RestoreAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.SanitizeSampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SanitizeSampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SanitizeSampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "SanitizeSampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_AdditionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_AdditionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_originalAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_originalAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_originalAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_originalAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_originalAttachTransform
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_originalAttachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_originalAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_originalAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints, int _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linePoints), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints), _);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget, int _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetHitInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(positionInLine), ::il2cpp_utils::ExtractType(isValidTarget), ::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget), _);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.PreprocessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::PreprocessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::PreprocessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 91));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 92));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer.Compare
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType StraightLine
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_StraightLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType StraightLine
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_StraightLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "StraightLine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType ProjectileCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_ProjectileCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType ProjectileCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_ProjectileCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "ProjectileCurve", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType BezierCurve
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_get_BezierCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType BezierCurve
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::_set_BezierCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/LineType", "BezierCurve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction Ignore
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/QuerySnapVolumeInteraction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction Ignore
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_set_Ignore(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/QuerySnapVolumeInteraction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction Collide
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_get_Collide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_get_Collide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/QuerySnapVolumeInteraction", "Collide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/QuerySnapVolumeInteraction Collide
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_set_Collide(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::_set_Collide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/QuerySnapVolumeInteraction", "Collide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::QuerySnapVolumeInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType Raycast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_Raycast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType Raycast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_Raycast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "Raycast", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType SphereCast
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_get_SphereCast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType SphereCast
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::_set_SphereCast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/HitDetectionType", "SphereCast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode RotateOverTime
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_get_RotateOverTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_get_RotateOverTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/AnchorRotationMode", "RotateOverTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode RotateOverTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_set_RotateOverTime(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_set_RotateOverTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/AnchorRotationMode", "RotateOverTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode MatchDirection
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_get_MatchDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_get_MatchDirection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/AnchorRotationMode", "MatchDirection"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/AnchorRotationMode MatchDirection
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_set_MatchDirection(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::_set_MatchDirection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/AnchorRotationMode", "MatchDirection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::AnchorRotationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::dyn_$position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::dyn_$position$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <parameter>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::dyn_$parameter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::dyn_$parameter$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parameter>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint.get_position
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint.set_position
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint.get_parameter
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::get_parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::get_parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/SamplePoint.set_parameter
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::set_parameter(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::SamplePoint::set_parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume,System.Boolean> <>9__197_0
::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9__197_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9__197_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>*>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9__197_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume,System.Boolean> <>9__197_0
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9__197_0(::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9__197_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9__197_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume,System.Boolean> <>9__197_1
::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9__197_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_get_$$9__197_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>*>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9__197_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume,System.Boolean> <>9__197_1
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9__197_1(::System::Func_2<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_set_$$9__197_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", "<>9__197_1", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c.<CheckCollidersBetweenPoints>b__197_0
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::$CheckCollidersBetweenPoints$b__197_0(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::<CheckCollidersBetweenPoints>b__197_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckCollidersBetweenPoints>b__197_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, snapVolume);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/<>c.<CheckCollidersBetweenPoints>b__197_1
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::$CheckCollidersBetweenPoints$b__197_1(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::$$c::<CheckCollidersBetweenPoints>b__197_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckCollidersBetweenPoints>b__197_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, snapVolume);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor_ShaderPropertyLookup.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor_-UpdateCollidersAfterOnTriggerStay-d__40.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/TriggerContactMonitor.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> s_MeshFilters
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_get_s_MeshFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_get_s_MeshFilters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "s_MeshFilters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> s_MeshFilters
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_set_s_MeshFilters(::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_set_s_MeshFilters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "s_MeshFilters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
::UnityEngine::WaitForFixedUpdate* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_get_s_WaitForFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_get_s_WaitForFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WaitForFixedUpdate*>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "s_WaitForFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.WaitForFixedUpdate s_WaitForFixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_set_s_WaitForFixedUpdate(::UnityEngine::WaitForFixedUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_set_s_WaitForFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "s_WaitForFixedUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShowInteractableHoverMeshes
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_ShowInteractableHoverMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShowInteractableHoverMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_InteractableHoverMeshMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverMeshMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverMeshMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_InteractableCantHoverMeshMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableCantHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableCantHoverMeshMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableCantHoverMeshMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SocketActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_SocketActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SocketActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InteractableHoverScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_InteractableHoverScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableHoverScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RecycleDelayTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_RecycleDelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecycleDelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastRemoveTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_LastRemoveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRemoveTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> <unsortedValidTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_$unsortedValidTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_$unsortedValidTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<unsortedValidTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.Collider> m_StayedColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_StayedColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_StayedColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StayedColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor m_TriggerContactMonitor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_TriggerContactMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_TriggerContactMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TriggerContactMonitor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::TriggerContactMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,System.ValueTuple`2<UnityEngine.MeshFilter,UnityEngine.Renderer>[]> m_MeshFilterCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::ArrayW<::System::ValueTuple_2<::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*>>>*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_MeshFilterCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeshFilterCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::ArrayW<::System::ValueTuple_2<::UnityEngine::MeshFilter*, ::UnityEngine::Renderer*>>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator m_UpdateCollidersAfterTriggerStay
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_UpdateCollidersAfterTriggerStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::dyn_m_UpdateCollidersAfterTriggerStay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateCollidersAfterTriggerStay"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_showInteractableHoverMeshes
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_showInteractableHoverMeshes
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_showInteractableHoverMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showInteractableHoverMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverMeshMaterial
::UnityEngine::Material* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverMeshMaterial
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableCantHoverMeshMaterial
::UnityEngine::Material* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableCantHoverMeshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableCantHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableCantHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableCantHoverMeshMaterial
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableCantHoverMeshMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableCantHoverMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableCantHoverMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_socketActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_socketActive
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_socketActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_socketActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_interactableHoverScale
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_interactableHoverScale
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_interactableHoverScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableHoverScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_recycleDelayTime
float UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.set_recycleDelayTime
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::set_recycleDelayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recycleDelayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_unsortedValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_unsortedValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_unsortedValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unsortedValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerStay
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerStay(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.UpdateCollidersAfterOnTriggerStay
::System::Collections::IEnumerator* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::UpdateCollidersAfterOnTriggerStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::UpdateCollidersAfterOnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCollidersAfterOnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CreateDefaultHoverMaterials
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CreateDefaultHoverMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CreateDefaultHoverMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), 95));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.SetMaterialFade
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::SetMaterialFade(::UnityEngine::Material* material, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::SetMaterialFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "SetMaterialFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, color);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetHoverMeshMatrix
::UnityEngine::Matrix4x4 UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoverMeshMatrix(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable, ::UnityEngine::MeshFilter* meshFilter, float hoverScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoverMeshMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoverMeshMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(meshFilter), ::il2cpp_utils::ExtractType(hoverScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, interactable, meshFilter, hoverScale);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.InverseTransformDirection
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InverseTransformDirection(::UnityEngine::Pose pose, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pose, direction);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.DrawHoveredInteractables
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::DrawHoveredInteractables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), 96));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetHoveredInteractableMaterial
::UnityEngine::Material* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoveredInteractableMaterial(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetHoveredInteractableMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), 97));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isHoverRecycleAllowed
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverRecycleAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverRecycleAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHoverRecycleAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ShouldDrawHoverMesh
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShouldDrawHoverMesh(::UnityEngine::MeshFilter* meshFilter, ::UnityEngine::Renderer* meshRenderer, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShouldDrawHoverMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*), 98));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, meshFilter, meshRenderer, mainCamera);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnInteractableRegistered
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInteractableRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnInteractableUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnInteractableUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInteractableUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnContactAdded
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactAdded(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContactAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnContactRemoved
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactRemoved(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnContactRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContactRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ResetCollidersAndValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ResetCollidersAndValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ResetCollidersAndValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCollidersAndValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 58));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 70));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 91));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 92));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor..cctor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor_ShaderPropertyLookup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 mode
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "mode"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 mode
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_mode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "mode", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 srcBlend
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_srcBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_srcBlend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "srcBlend"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 srcBlend
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_srcBlend(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_srcBlend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "srcBlend", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 dstBlend
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_dstBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_dstBlend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "dstBlend"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 dstBlend
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_dstBlend(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_dstBlend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "dstBlend", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 zWrite
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_zWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_zWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "zWrite"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 zWrite
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_zWrite(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_zWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "zWrite", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 baseColor
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_baseColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "baseColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 baseColor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_baseColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_baseColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "baseColor", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 color
int UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_get_color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "color"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 color
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_color(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_set_color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", "color", value));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/ShaderPropertyLookup..cctor
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::ShaderPropertyLookup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSocketInteractor/ShaderPropertyLookup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40
#include "UnityEngine/XR/Interaction/Toolkit/XRSocketInteractor_-UpdateCollidersAfterOnTriggerStay-d__40.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor*& UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40.System.IDisposable.Dispose
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40.MoveNext
bool UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40.System.Collections.IEnumerator.Reset
void UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor/<UpdateCollidersAfterOnTriggerStay>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRSocketInteractor::$UpdateCollidersAfterOnTriggerStay$d__40*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_Bits
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::dyn_m_Bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::dyn_m_Bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bits"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Mask
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::dyn_m_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::dyn_m_Mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.get_value
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.set_value
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.LayerToName
::StringW UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::LayerToName(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::LayerToName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerMask", "LayerToName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.NameToLayer
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::NameToLayer(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::NameToLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerMask", "NameToLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.GetMask
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::GetMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::GetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerMask", "GetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNames);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.OnAfterDeserialize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask.OnBeforeSerialize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerSettings.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultLayerName
::StringW UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_k_DefaultLayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_k_DefaultLayerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "k_DefaultLayerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultLayerName
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_k_DefaultLayerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_k_DefaultLayerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "k_DefaultLayerName", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 layerSize
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_layerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_layerSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "layerSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 layerSize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_layerSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_layerSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "layerSize", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 builtInLayerSize
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_builtInLayerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_get_builtInLayerSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "builtInLayerSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 builtInLayerSize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_builtInLayerSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::_set_builtInLayerSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "InteractionLayerSettings", "builtInLayerSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_LayerNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::dyn_m_LayerNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::dyn_m_LayerNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayerNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.IsLayerEmpty
bool UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::IsLayerEmpty(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::IsLayerEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLayerEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.SetLayerNameAt
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::SetLayerNameAt(int index, ::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::SetLayerNameAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayerNameAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(layerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, layerName);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.GetLayerNameAt
::StringW UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayerNameAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayerNameAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerNameAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.GetLayer
int UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayer(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.GetLayerNamesAndValues
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayerNamesAndValues(::System::Collections::Generic::List_1<::StringW>* names, ::System::Collections::Generic::List_1<int>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::GetLayerNamesAndValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerNamesAndValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names, values);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.OnBeforeSerialize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings.OnAfterDeserialize
void UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerSettings*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect
#include "UnityEngine/XR/Interaction/Toolkit/IXROverridesGazeAutoSelect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect.get_overrideGazeTimeToSelect
bool UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_overrideGazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_overrideGazeTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect.get_gazeTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_gazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_gazeTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect.get_overrideTimeToAutoDeselectGaze
bool UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_overrideTimeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_overrideTimeToAutoDeselectGaze");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect.get_timeToAutoDeselectGaze
float UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_timeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect::get_timeToAutoDeselectGaze");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXROverridesGazeAutoSelect*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/BaseInteractionEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractor <interactorObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*& UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::dyn_$interactorObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::dyn_$interactorObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactorObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable <interactableObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::dyn_$interactableObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::dyn_$interactableObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactableObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.get_interactor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.set_interactor
void UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.get_interactable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseInteractionEventArgs.set_interactable
void UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseInteractionEventArgs::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEvent
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TeleportRequest <teleportRequest>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportRequest& UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::dyn_$teleportRequest$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::dyn_$teleportRequest$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleportRequest>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs.get_teleportRequest
::UnityEngine::XR::Interaction::Toolkit::TeleportRequest UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::get_teleportRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::get_teleportRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs.set_teleportRequest
void UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::set_teleportRequest(::UnityEngine::XR::Interaction::Toolkit::TeleportRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs::set_teleportRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager <manager>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::dyn_$manager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::dyn_$manager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<manager>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.get_manager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::get_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs.set_manager
void UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_manager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs::set_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager <manager>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::dyn_$manager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::dyn_$manager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<manager>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isCanceled>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::dyn_$isCanceled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::dyn_$isCanceled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isCanceled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.get_manager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.set_manager
void UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_manager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.get_isCanceled
bool UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_isCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::get_isCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs.set_isCanceled
void UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_isCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs::set_isCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager <manager>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::dyn_$manager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::dyn_$manager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<manager>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.get_manager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::get_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs.set_manager
void UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_manager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs::set_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager <manager>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::dyn_$manager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::dyn_$manager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<manager>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isCanceled>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::dyn_$isCanceled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::dyn_$isCanceled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isCanceled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.get_manager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.set_manager
void UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_manager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.get_isCanceled
bool UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_isCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::get_isCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs.set_isCanceled
void UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_isCanceled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs::set_isCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor* UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable* UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor* UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable* UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseRegistrationEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/BaseRegistrationEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager <manager>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::dyn_$manager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::dyn_$manager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<manager>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseRegistrationEventArgs.get_manager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::get_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::get_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseRegistrationEventArgs.set_manager
void UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::set_manager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseRegistrationEventArgs::set_manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <interactionGroupObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::dyn_$interactionGroupObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::dyn_$interactionGroupObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactionGroupObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroupObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::dyn_$containingGroupObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::dyn_$containingGroupObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<containingGroupObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs.get_interactionGroupObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::get_interactionGroupObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::get_interactionGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs.set_interactionGroupObject
void UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::set_interactionGroupObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::set_interactionGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs.get_containingGroupObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::get_containingGroupObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::get_containingGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containingGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs.set_containingGroupObject
void UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::set_containingGroupObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs::set_containingGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_containingGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractor <interactorObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*& UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::dyn_$interactorObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::dyn_$interactorObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactorObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <containingGroupObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::dyn_$containingGroupObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::dyn_$containingGroupObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<containingGroupObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.get_containingGroupObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_containingGroupObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_containingGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containingGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.set_containingGroupObject
void UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_containingGroupObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_containingGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_containingGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.get_interactor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::get_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs.set_interactor
void UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_interactor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs::set_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable <interactableObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::dyn_$interactableObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::dyn_$interactableObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactableObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs.get_interactable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs.set_interactable
void UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::set_interactable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup <interactionGroupObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*& UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::dyn_$interactionGroupObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::dyn_$interactionGroupObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactionGroupObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs.get_interactionGroupObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::get_interactionGroupObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::get_interactionGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs.set_interactionGroupObject
void UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::set_interactionGroupObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs::set_interactionGroupObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionGroupObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractor <interactorObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*& UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::dyn_$interactorObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::dyn_$interactorObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactorObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs.get_interactorObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::get_interactorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::get_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs.set_interactorObject
void UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::set_interactorObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::set_interactorObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactorObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs.get_interactor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::get_interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::get_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs.set_interactor
void UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::set_interactor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs::set_interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable <interactableObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::dyn_$interactableObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::dyn_$interactableObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactableObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs.get_interactableObject
::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::set_interactableObject(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs.get_interactable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs.set_interactable
void UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::set_interactable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/ExposedRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRHoverFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRSelectFilter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/RegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionGroup.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRTargetPriorityInteractor.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Pooling/LinkedPool_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1
#include "UnityEngine/XR/Interaction/Toolkit/IXRFilterList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> <activeInteractionManagers>k__BackingField
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_$activeInteractionManagers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_$activeInteractionManagers$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "<activeInteractionManagers>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> <activeInteractionManagers>k__BackingField
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_$activeInteractionManagers$k__BackingField(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_$activeInteractionManagers$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "<activeInteractionManagers>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> s_TargetPriorityInteractorListPool
::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_TargetPriorityInteractorListPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_TargetPriorityInteractorListPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_TargetPriorityInteractorListPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> s_TargetPriorityInteractorListPool
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_TargetPriorityInteractorListPool(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_TargetPriorityInteractorListPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_TargetPriorityInteractorListPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_PreprocessInteractorsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_PreprocessInteractorsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_PreprocessInteractorsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_PreprocessInteractorsMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_PreprocessInteractorsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_PreprocessInteractorsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_PreprocessInteractorsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_PreprocessInteractorsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractionStrengthMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractionStrengthMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractionStrengthMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractionStrengthMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractionStrengthMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractorsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractorsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractorsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractorsMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractorsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractorsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractorsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractorsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractablesMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractablesMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_ProcessInteractablesMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractablesMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractablesMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractablesMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_ProcessInteractablesMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_ProcessInteractablesMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_UpdateGroupMemberInteractionsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_UpdateGroupMemberInteractionsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_UpdateGroupMemberInteractionsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_UpdateGroupMemberInteractionsMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_UpdateGroupMemberInteractionsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_UpdateGroupMemberInteractionsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_UpdateGroupMemberInteractionsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_UpdateGroupMemberInteractionsMarker", value));
}
// Autogenerated static field getter
// Get static field: static readonly Unity.Profiling.ProfilerMarker s_GetValidTargetsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_GetValidTargetsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_GetValidTargetsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_GetValidTargetsMarker"));
}
// Autogenerated static field setter
// Set static field: static readonly Unity.Profiling.ProfilerMarker s_GetValidTargetsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_GetValidTargetsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_GetValidTargetsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_GetValidTargetsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_FilterRegisteredValidTargetsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_FilterRegisteredValidTargetsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_FilterRegisteredValidTargetsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_FilterRegisteredValidTargetsMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_FilterRegisteredValidTargetsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_FilterRegisteredValidTargetsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_FilterRegisteredValidTargetsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_FilterRegisteredValidTargetsMarker", value));
}
// Autogenerated static field getter
// Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidSelectionsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateInvalidSelectionsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateInvalidSelectionsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateInvalidSelectionsMarker"));
}
// Autogenerated static field setter
// Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidSelectionsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateInvalidSelectionsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateInvalidSelectionsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateInvalidSelectionsMarker", value));
}
// Autogenerated static field getter
// Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidHoversMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateInvalidHoversMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateInvalidHoversMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateInvalidHoversMarker"));
}
// Autogenerated static field setter
// Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateInvalidHoversMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateInvalidHoversMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateInvalidHoversMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateInvalidHoversMarker", value));
}
// Autogenerated static field getter
// Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidSelectionsMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateValidSelectionsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateValidSelectionsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateValidSelectionsMarker"));
}
// Autogenerated static field setter
// Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidSelectionsMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateValidSelectionsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateValidSelectionsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateValidSelectionsMarker", value));
}
// Autogenerated static field getter
// Get static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidHoversMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateValidHoversMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_EvaluateValidHoversMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateValidHoversMarker"));
}
// Autogenerated static field setter
// Set static field: static readonly Unity.Profiling.ProfilerMarker s_EvaluateValidHoversMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateValidHoversMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_EvaluateValidHoversMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_EvaluateValidHoversMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectEnterMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_SelectEnterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_SelectEnterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_SelectEnterMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectEnterMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_SelectEnterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_SelectEnterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_SelectEnterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectExitMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_SelectExitMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_SelectExitMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_SelectExitMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_SelectExitMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_SelectExitMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_SelectExitMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_SelectExitMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverEnterMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_HoverEnterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_HoverEnterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_HoverEnterMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverEnterMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_HoverEnterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_HoverEnterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_HoverEnterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverExitMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_HoverExitMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_get_s_HoverExitMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_HoverExitMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_HoverExitMarker
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_HoverExitMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_set_s_HoverExitMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "s_HoverExitMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> interactionGroupRegistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactionGroupRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactionGroupRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionGroupRegistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> interactionGroupUnregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactionGroupUnregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactionGroupUnregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionGroupUnregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> interactorRegistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactorRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactorRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactorRegistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> interactorUnregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactorUnregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactorUnregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactorUnregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> interactableRegistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactableRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactableRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactableRegistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> interactableUnregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactableUnregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_interactableUnregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactableUnregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_StartingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_StartingHoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingHoverFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_StartingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_StartingSelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ColliderToInteractableMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToInteractableMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderToInteractableMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.Collider,UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume> m_ColliderToSnapVolumes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToSnapVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ColliderToSnapVolumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderToSnapVolumes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_Interactors
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactors"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_InteractionGroups
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionGroups"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_Interactables
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_Interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactables"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::RegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> m_CurrentHovered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_CurrentHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_CurrentHovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentHovered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> m_CurrentSelected
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_CurrentSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_CurrentSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentSelected"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable,System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor>> m_HighestPriorityTargetMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HighestPriorityTargetMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HighestPriorityTargetMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HighestPriorityTargetMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_UnorderedValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_UnorderedValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_UnorderedValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnorderedValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_InteractorsInGroup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorsInGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorsInGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorsInGroup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_GroupsInGroup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_GroupsInGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_GroupsInGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GroupsInGroup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_DeprecatedValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_DeprecatedValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_DeprecatedValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeprecatedValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> m_ScratchInteractionGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractionGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScratchInteractionGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> m_ScratchInteractors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScratchInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> m_ScratchInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_ScratchInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScratchInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs> m_SelectEnterEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectEnterEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectEnterEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectEnterEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs> m_SelectExitEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectExitEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_SelectExitEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectExitEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs> m_HoverEnterEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverEnterEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverEnterEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverEnterEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs> m_HoverExitEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverExitEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_HoverExitEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverExitEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> m_InteractionGroupRegisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroupRegisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroupRegisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionGroupRegisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> m_InteractionGroupUnregisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroupUnregisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractionGroupUnregisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionGroupUnregisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> m_InteractorRegisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorRegisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorRegisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorRegisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> m_InteractorUnregisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorUnregisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractorUnregisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorUnregisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> m_InteractableRegisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractableRegisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractableRegisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableRegisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> m_InteractableUnregisteredEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractableUnregisteredEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::dyn_m_InteractableUnregisteredEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableUnregisteredEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactionGroupRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactionGroupRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactionGroupRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactionGroupRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactionGroupUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactionGroupUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactionGroupUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactionGroupUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactionGroupUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactionGroupUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactorRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactorRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactorRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactorRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactorUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactorUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactorUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactorUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactorUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactorUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactableRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactableRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactableRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableRegistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactableRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.add_interactableUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::add_interactableUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_interactableUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.remove_interactableUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableUnregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::remove_interactableUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_interactableUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_startingHoverFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.set_startingHoverFilters
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_hoverFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_hoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_hoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_startingSelectFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.set_startingSelectFilters
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::set_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_selectFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_selectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_selectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.get_activeInteractionManagers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_activeInteractionManagers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::get_activeInteractionManagers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "get_activeInteractionManagers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.LateUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.FixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.PreprocessInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::PreprocessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::PreprocessInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsHoverPossible
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHoverPossible(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHoverPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHoverPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsSelectPossible
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsSelectPossible(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsSelectPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelectPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractionGroup
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractionGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractionGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionGroup);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractionGroup
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractionGroup(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractionGroup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionGroup);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterSnapVolume
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterSnapVolume(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterSnapVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSnapVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapVolume);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterSnapVolume
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterSnapVolume(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume* snapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterSnapVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSnapVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapVolume);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetRegisteredInteractionGroups
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractionGroups(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractionGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredInteractionGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetRegisteredInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetRegisteredInteractables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsRegistered
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionGroup* interactionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactionGroup);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsRegistered
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsRegistered
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.TryGetInteractableForCollider
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*> interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCollider), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactableCollider, byref(interactable));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.TryGetInteractableForCollider
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider, ByRef<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*> interactable, ByRef<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*> snapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCollider), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactableCollider, byref(interactable), byref(snapVolume));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsHighestPriorityTarget
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHighestPriorityTarget(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* target, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsHighestPriorityTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHighestPriorityTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(interactors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, interactors);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RemoveAllUnregistered
int UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RemoveAllUnregistered(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* manager, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* interactables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RemoveAllUnregistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "RemoveAllUnregistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(interactables)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager, interactables);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorSelectionInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorSelectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorSelectionInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInteractorSelectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableSelectionInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelectionInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInteractableSelectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorHoverInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHoverInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorHoverInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets), ::il2cpp_utils::ExtractType(deprecatedValidTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets, deprecatedValidTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorHoverInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHoverInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInteractorHoverInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableHoverInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHoverInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHoverInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInteractableHoverInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnterInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEnterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExitInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectExitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectCancel
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectCancelInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancelInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancelInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCancelInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnterInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExitInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverExitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverCancel
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverCancelInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancelInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancelInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverCancelInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnterInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEnterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExitInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectExitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnterInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExitInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverExitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorSelectValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorSelectValidTargetsInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargetsInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargetsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorSelectValidTargetsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets), ::il2cpp_utils::ExtractType(deprecatedValidTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets, deprecatedValidTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorHoverValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorHoverValidTargetsInternal
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargetsInternal(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*>* validTargets, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* deprecatedValidTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargetsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorHoverValidTargetsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets), ::il2cpp_utils::ExtractType(deprecatedValidTargets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets, deprecatedValidTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ResolveExistingSelect
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ResolveExistingSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ResolveExistingSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 47));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HasInteractionLayerOverlap
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HasInteractionLayerOverlap(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HasInteractionLayerOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", "HasInteractionLayerOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessHoverFilters
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ProcessSelectFilters
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ProcessSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ExitInteractableSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ExitInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ExitInteractableSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitInteractableSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearPriorityForSelectionMap
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearPriorityForSelectionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearPriorityForSelectionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPriorityForSelectionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.FlushRegistration
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FlushRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::FlushRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.RegisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::RegisterInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.UnregisterInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::UnregisterInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetRegisteredInteractors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetRegisteredInteractables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetRegisteredInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsRegistered
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.IsRegistered
bool UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::IsRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.TryGetInteractableForCollider
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider(::UnityEngine::Collider* interactableCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::TryGetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method, interactableCollider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetInteractableForCollider
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetInteractableForCollider(::UnityEngine::Collider* interactableCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetInteractableForCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteractableForCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method, interactableCollider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetColliderToInteractableMap
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetColliderToInteractableMap(ByRef<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*> map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetColliderToInteractableMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColliderToInteractableMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(map));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.GetValidTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::GetValidTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(validTargets)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ForceSelect
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ForceSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableSelection
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.ClearInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::ClearInteractorHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractorHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractorHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.CancelInteractableHover
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::CancelInteractableHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectCancel
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 62));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverCancel
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 64));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.SelectExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::SelectExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 65));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.HoverExit
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable, ::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::HoverExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, interactable, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorSelectValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorSelectValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager.InteractorHoverValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::InteractorHoverValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager..cctor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractionGroupUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractorUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRTargetPriorityInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs> <>9__192_0
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs> <>9__192_0
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_0(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs> <>9__192_1
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs> <>9__192_1
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_1(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs> <>9__192_2
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs> <>9__192_2
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_2(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs> <>9__192_3
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs> <>9__192_3
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_3(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> <>9__192_4
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> <>9__192_4
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_4(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> <>9__192_5
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_5")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> <>9__192_5
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_5(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_5", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> <>9__192_6
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_6")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> <>9__192_6
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_6(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_6", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> <>9__192_7
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_7")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> <>9__192_7
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_7(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_7", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> <>9__192_8
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_8")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> <>9__192_8
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_8(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_8", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> <>9__192_9
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_get_$$9__192_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_9")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> <>9__192_9
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_9(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_set_$$9__192_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", "<>9__192_9", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_0
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_1
::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_2
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_3
::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_4
::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupRegisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_5
::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionGroupUnregisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_6
::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractorRegisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_7
::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractorUnregisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_8
::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.ctor>b__192_9
::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_ctor$b__192_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.ctor>b__192_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__192_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.cctor>b__193_0
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_cctor$b__193_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.cctor>b__193_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__193_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager/<>c.<.cctor>b__193_1
void UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::$_cctor$b__193_1(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRTargetPriorityInteractor*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager::$$c::<.cctor>b__193_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__193_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 k_ControllerRecorder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_ControllerRecorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_ControllerRecorder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_ControllerRecorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_ControllerRecorder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_DeviceSimulator
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_DeviceSimulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_DeviceSimulator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_DeviceSimulator"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_DeviceSimulator
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_DeviceSimulator(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_DeviceSimulator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_DeviceSimulator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Controllers
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Controllers
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Controllers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_LocomotionProviders
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LocomotionProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LocomotionProviders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LocomotionProviders"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_LocomotionProviders
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LocomotionProviders(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LocomotionProviders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LocomotionProviders", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_TwoHandedGrabMoveProviders
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_TwoHandedGrabMoveProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_TwoHandedGrabMoveProviders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_TwoHandedGrabMoveProviders"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_TwoHandedGrabMoveProviders
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_TwoHandedGrabMoveProviders(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_TwoHandedGrabMoveProviders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_TwoHandedGrabMoveProviders", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_UIInputModule
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_UIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_UIInputModule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_UIInputModule"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_UIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_UIInputModule(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_UIInputModule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_UIInputModule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_InteractionManager
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_InteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_InteractionGroups
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractionGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionGroups"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_InteractionGroups
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionGroups(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractionGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractionGroups", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactors
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactors
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactors", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_InteractableSnapVolume
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractableSnapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_InteractableSnapVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractableSnapVolume"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_InteractableSnapVolume
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractableSnapVolume(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_InteractableSnapVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_InteractableSnapVolume", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_Interactables
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_Interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_Interactables
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_Interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_Interactables", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_LineVisual
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_LineVisual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_LineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_LineVisual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_LineVisual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_BeforeRenderOrder
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_BeforeRenderOrder
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 k_BeforeRenderLineVisual
int UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_get_k_BeforeRenderLineVisual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderLineVisual"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 k_BeforeRenderLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderLineVisual(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::_set_k_BeforeRenderLineVisual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder", "k_BeforeRenderLineVisual", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Fixed
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Fixed
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Dynamic
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Dynamic
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Late
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_Late");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase Late
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_Late");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "Late", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase OnBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_get_OnBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase>("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::_set_OnBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase", "OnBeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver
#include "UnityEngine/XR/Interaction/Toolkit/CharacterControllerDriver.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_LocomotionProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*& UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_LocomotionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_LocomotionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocomotionProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_MinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_MinHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_MaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_MaxHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.XR.CoreUtils.XROrigin m_XROrigin
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_XROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_XROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XROrigin"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController m_CharacterController
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::dyn_m_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_locomotionProvider
::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_locomotionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_locomotionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locomotionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.set_locomotionProvider
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_locomotionProvider(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_locomotionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locomotionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_minHeight
float UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.set_minHeight
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_minHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_maxHeight
float UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.set_maxHeight
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_maxHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::set_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_xrOrigin
::Unity::XR::CoreUtils::XROrigin* UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::XROrigin*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_characterController
::UnityEngine::CharacterController* UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_characterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_characterController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CharacterController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.Awake
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.OnEnable
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.OnDisable
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.Start
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.UpdateCharacterController
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::UpdateCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::UpdateCharacterController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.Subscribe
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Subscribe(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.Unsubscribe
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Unsubscribe(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::Unsubscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unsubscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.SetupCharacterController
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::SetupCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::SetupCharacterController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCharacterController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.OnBeginLocomotion
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnBeginLocomotion(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnBeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(system)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, system);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.OnEndLocomotion
void UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEndLocomotion(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::OnEndLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(system)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, system);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CharacterControllerDriver.get_xrRig
::UnityEngine::XR::Interaction::Toolkit::XRRig* UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CharacterControllerDriver::get_xrRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRig*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/ConstrainedMoveProvider.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableFreeXMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeXMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeXMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableFreeXMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableFreeYMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeYMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeYMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableFreeYMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableFreeZMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeZMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_EnableFreeZMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableFreeZMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseGravity
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_UseGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_UseGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode m_GravityApplicationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_GravityApplicationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_GravityApplicationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityApplicationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController m_CharacterController
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AttemptedGetCharacterController
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_AttemptedGetCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_AttemptedGetCharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttemptedGetCharacterController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsMovingXROrigin
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_IsMovingXROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_IsMovingXROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsMovingXROrigin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_GravityDrivenVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_GravityDrivenVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::dyn_m_GravityDrivenVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityDrivenVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.get_enableFreeXMovement
bool UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeXMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeXMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFreeXMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.set_enableFreeXMovement
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeXMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeXMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFreeXMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.get_enableFreeYMovement
bool UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeYMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeYMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFreeYMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.set_enableFreeYMovement
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeYMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeYMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFreeYMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.get_enableFreeZMovement
bool UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeZMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_enableFreeZMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFreeZMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.set_enableFreeZMovement
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeZMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_enableFreeZMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFreeZMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.get_useGravity
bool UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.set_useGravity
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.get_gravityMode
::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_gravityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::get_gravityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.set_gravityMode
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_gravityMode(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::set_gravityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.Update
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.ComputeDesiredMove
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::ComputeDesiredMove(ByRef<bool> attemptingMove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::ComputeDesiredMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(attemptingMove));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.MoveRig
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::MoveRig(::UnityEngine::Vector3 translationInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::MoveRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translationInWorldSpace);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider.FindCharacterController
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::FindCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::FindCharacterController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCharacterController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode
#include "UnityEngine/XR/Interaction/Toolkit/ConstrainedMoveProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode AttemptingMove
::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_get_AttemptingMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_get_AttemptingMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode>("UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode", "AttemptingMove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode AttemptingMove
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_set_AttemptingMove(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_set_AttemptingMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode", "AttemptingMove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode Immediately
::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_get_Immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_get_Immediately");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode>("UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode", "Immediately"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.ConstrainedMoveProvider/GravityApplicationMode Immediately
void UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_set_Immediately(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::_set_Immediately");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "ConstrainedMoveProvider/GravityApplicationMode", "Immediately", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider::GravityApplicationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/ActionBasedContinuousMoveProvider.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_LeftHandMoveAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::dyn_m_LeftHandMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::dyn_m_LeftHandMoveAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LeftHandMoveAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RightHandMoveAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::dyn_m_RightHandMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::dyn_m_RightHandMoveAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RightHandMoveAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.get_leftHandMoveAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::get_leftHandMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::get_leftHandMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.set_leftHandMoveAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::set_leftHandMoveAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::set_leftHandMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.get_rightHandMoveAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::get_rightHandMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::get_rightHandMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.set_rightHandMoveAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::set_rightHandMoveAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::set_rightHandMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.OnEnable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.OnDisable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousMoveProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/ActionBasedContinuousTurnProvider.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_LeftHandTurnAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::dyn_m_LeftHandTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::dyn_m_LeftHandTurnAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LeftHandTurnAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RightHandTurnAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::dyn_m_RightHandTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::dyn_m_RightHandTurnAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RightHandTurnAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.get_leftHandTurnAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::get_leftHandTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::get_leftHandTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.set_leftHandTurnAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::set_leftHandTurnAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::set_leftHandTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.get_rightHandTurnAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::get_rightHandTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::get_rightHandTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.set_rightHandTurnAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::set_rightHandTurnAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::set_rightHandTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.OnEnable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.OnDisable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedContinuousTurnProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
#include "UnityEngine/XR/Interaction/Toolkit/ContinuousMoveProviderBase.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_MoveSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_MoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_MoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableStrafe
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_EnableStrafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_EnableStrafe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableStrafe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableFly
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_EnableFly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_EnableFly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableFly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseGravity
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_UseGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_UseGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode m_GravityApplicationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_GravityApplicationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_GravityApplicationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityApplicationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ForwardSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_ForwardSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_ForwardSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForwardSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController m_CharacterController
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AttemptedGetCharacterController
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_AttemptedGetCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_AttemptedGetCharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttemptedGetCharacterController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsMovingXROrigin
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_IsMovingXROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_IsMovingXROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsMovingXROrigin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_VerticalVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_VerticalVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::dyn_m_VerticalVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_moveSpeed
float UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_moveSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_moveSpeed
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_moveSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_moveSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_enableStrafe
bool UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_enableStrafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_enableStrafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableStrafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_enableStrafe
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_enableStrafe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_enableStrafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableStrafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_enableFly
bool UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_enableFly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_enableFly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_enableFly
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_enableFly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_enableFly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_useGravity
bool UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_useGravity
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_gravityApplicationMode
::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_gravityApplicationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_gravityApplicationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityApplicationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_gravityApplicationMode
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_gravityApplicationMode(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_gravityApplicationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityApplicationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.get_forwardSource
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_forwardSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::get_forwardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forwardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.set_forwardSource
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_forwardSource(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::set_forwardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forwardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.Update
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.ComputeDesiredMove
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::ComputeDesiredMove(::UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::ComputeDesiredMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.MoveRig
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::MoveRig(::UnityEngine::Vector3 translationInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::MoveRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translationInWorldSpace);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.FindCharacterController
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::FindCharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::FindCharacterController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCharacterController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode
#include "UnityEngine/XR/Interaction/Toolkit/ContinuousMoveProviderBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode AttemptingMove
::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_get_AttemptingMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_get_AttemptingMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode>("UnityEngine.XR.Interaction.Toolkit", "ContinuousMoveProviderBase/GravityApplicationMode", "AttemptingMove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode AttemptingMove
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_set_AttemptingMove(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_set_AttemptingMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "ContinuousMoveProviderBase/GravityApplicationMode", "AttemptingMove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode Immediately
::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_get_Immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_get_Immediately");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode>("UnityEngine.XR.Interaction.Toolkit", "ContinuousMoveProviderBase/GravityApplicationMode", "Immediately"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase/GravityApplicationMode Immediately
void UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_set_Immediately(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::_set_Immediately");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "ContinuousMoveProviderBase/GravityApplicationMode", "Immediately", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase::GravityApplicationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
#include "UnityEngine/XR/Interaction/Toolkit/ContinuousTurnProviderBase.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_TurnSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::dyn_m_TurnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::dyn_m_TurnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsTurningXROrigin
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::dyn_m_IsTurningXROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::dyn_m_IsTurningXROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsTurningXROrigin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.get_turnSpeed
float UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::get_turnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::get_turnSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.set_turnSpeed
void UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::set_turnSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::set_turnSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.Update
void UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.GetTurnAmount
float UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::GetTurnAmount(::UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::GetTurnAmount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase.TurnRig
void UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::TurnRig(float turnAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase::TurnRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TurnRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turnAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnAmount);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedContinuousMoveProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::_get_k_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::_get_k_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider", "k_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::_set_k_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::_set_k_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider", "k_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes m_InputBinding
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_InputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_InputBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputBinding"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadzoneMin
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_DeadzoneMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_DeadzoneMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadzoneMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadzoneMax
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_DeadzoneMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::dyn_m_DeadzoneMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadzoneMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.get_inputBinding
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_inputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_inputBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.set_inputBinding
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_inputBinding(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_inputBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.set_controllers
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.get_deadzoneMin
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_deadzoneMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_deadzoneMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadzoneMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.set_deadzoneMin
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_deadzoneMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_deadzoneMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadzoneMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.get_deadzoneMax
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_deadzoneMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::get_deadzoneMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadzoneMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.set_deadzoneMax
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_deadzoneMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::set_deadzoneMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadzoneMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.GetDeadzoneAdjustedValue
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::GetDeadzoneAdjustedValue(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::GetDeadzoneAdjustedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeadzoneAdjustedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.GetDeadzoneAdjustedValue
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::GetDeadzoneAdjustedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::GetDeadzoneAdjustedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeadzoneAdjustedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider..cctor
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousMoveProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedContinuousMoveProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousMoveProvider/InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousMoveProvider/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousMoveProvider::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedContinuousTurnProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::_get_k_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::_get_k_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider", "k_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::_set_k_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::_set_k_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider", "k_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes m_InputBinding
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_InputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_InputBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputBinding"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadzoneMin
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_DeadzoneMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_DeadzoneMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadzoneMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadzoneMax
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_DeadzoneMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::dyn_m_DeadzoneMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadzoneMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.get_inputBinding
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_inputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_inputBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.set_inputBinding
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_inputBinding(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_inputBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.set_controllers
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.get_deadzoneMin
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_deadzoneMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_deadzoneMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadzoneMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.set_deadzoneMin
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_deadzoneMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_deadzoneMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadzoneMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.get_deadzoneMax
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_deadzoneMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::get_deadzoneMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadzoneMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.set_deadzoneMax
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_deadzoneMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::set_deadzoneMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadzoneMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.GetDeadzoneAdjustedValue
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::GetDeadzoneAdjustedValue(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::GetDeadzoneAdjustedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeadzoneAdjustedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.GetDeadzoneAdjustedValue
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::GetDeadzoneAdjustedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::GetDeadzoneAdjustedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeadzoneAdjustedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider..cctor
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ContinuousTurnProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedContinuousTurnProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedContinuousTurnProvider/InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedContinuousTurnProvider/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedContinuousTurnProvider::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/GrabMoveProvider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ControllerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_ControllerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_ControllerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableMoveWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_EnableMoveWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_EnableMoveWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableMoveWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MoveFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_MoveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_MoveFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_GrabMoveAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_GrabMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_GrabMoveAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GrabMoveAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <canMove>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_$canMove$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_$canMove$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<canMove>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsMoving
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_IsMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_IsMoving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsMoving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_PreviousControllerLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_PreviousControllerLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_PreviousControllerLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousControllerLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_ControllerInteractors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*& UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_ControllerInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::dyn_m_ControllerInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.get_controllerTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_controllerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_controllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.set_controllerTransform
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_controllerTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_controllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.get_enableMoveWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_enableMoveWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_enableMoveWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableMoveWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.set_enableMoveWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_enableMoveWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_enableMoveWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableMoveWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.get_moveFactor
float UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_moveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_moveFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.set_moveFactor
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_moveFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_moveFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.get_grabMoveAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_grabMoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_grabMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grabMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.set_grabMoveAction
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_grabMoveAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_grabMoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grabMoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.get_canMove
bool UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::get_canMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.set_canMove
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_canMove(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::set_canMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.OnEnable
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.OnDisable
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.IsGrabbing
bool UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::IsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::IsGrabbing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGrabbing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.GatherControllerInteractors
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::GatherControllerInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::GatherControllerInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherControllerInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.ControllerHasSelection
bool UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ControllerHasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ControllerHasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControllerHasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.Awake
void UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider.ComputeDesiredMove
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ComputeDesiredMove(ByRef<bool> attemptingMove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider::ComputeDesiredMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(attemptingMove));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/TwoHandedGrabMoveProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider
#include "UnityEngine/XR/Interaction/Toolkit/GrabMoveProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider m_LeftGrabMoveProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_LeftGrabMoveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_LeftGrabMoveProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LeftGrabMoveProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider m_RightGrabMoveProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_RightGrabMoveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_RightGrabMoveProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RightGrabMoveProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideSharedSettingsOnInit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_OverrideSharedSettingsOnInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_OverrideSharedSettingsOnInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideSharedSettingsOnInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MoveFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MoveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MoveFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequireTwoHandsForTranslation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_RequireTwoHandsForTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_RequireTwoHandsForTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequireTwoHandsForTranslation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_EnableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_EnableScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_EnableScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinimumScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MinimumScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MinimumScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinimumScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaximumScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MaximumScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_MaximumScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaximumScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsMoving
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_IsMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_IsMoving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsMoving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_PreviousMidpointBetweenControllers
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_PreviousMidpointBetweenControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_PreviousMidpointBetweenControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousMidpointBetweenControllers"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InitialOriginYaw
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialOriginYaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialOriginYaw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialOriginYaw"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InitialLeftToRightDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialLeftToRightDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialLeftToRightDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialLeftToRightDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InitialLeftToRightOrthogonal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialLeftToRightOrthogonal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialLeftToRightOrthogonal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialLeftToRightOrthogonal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InitialOriginScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialOriginScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialOriginScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialOriginScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InitialDistanceBetweenHands
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialDistanceBetweenHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::dyn_m_InitialDistanceBetweenHands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialDistanceBetweenHands"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_leftGrabMoveProvider
::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider* UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_leftGrabMoveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_leftGrabMoveProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftGrabMoveProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_leftGrabMoveProvider
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_leftGrabMoveProvider(::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_leftGrabMoveProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftGrabMoveProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_rightGrabMoveProvider
::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider* UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_rightGrabMoveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_rightGrabMoveProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightGrabMoveProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_rightGrabMoveProvider
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_rightGrabMoveProvider(::UnityEngine::XR::Interaction::Toolkit::GrabMoveProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_rightGrabMoveProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightGrabMoveProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_overrideSharedSettingsOnInit
bool UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_overrideSharedSettingsOnInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_overrideSharedSettingsOnInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSharedSettingsOnInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_overrideSharedSettingsOnInit
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_overrideSharedSettingsOnInit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_overrideSharedSettingsOnInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideSharedSettingsOnInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_moveFactor
float UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_moveFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_moveFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_moveFactor
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_moveFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_moveFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_requireTwoHandsForTranslation
bool UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_requireTwoHandsForTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_requireTwoHandsForTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requireTwoHandsForTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_requireTwoHandsForTranslation
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_requireTwoHandsForTranslation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_requireTwoHandsForTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requireTwoHandsForTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_enableRotation
bool UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_enableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_enableRotation
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_enableRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_enableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_enableScaling
bool UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_enableScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_enableScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_enableScaling
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_enableScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_enableScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_minimumScale
float UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_minimumScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_minimumScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minimumScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_minimumScale
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_minimumScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_minimumScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minimumScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.get_maximumScale
float UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_maximumScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::get_maximumScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maximumScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.set_maximumScale
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_maximumScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::set_maximumScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maximumScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.OnEnable
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.OnDisable
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.OnBeginLocomotion
void UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnBeginLocomotion(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* otherSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::OnBeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherSystem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherSystem);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TwoHandedGrabMoveProvider.ComputeDesiredMove
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::ComputeDesiredMove(ByRef<bool> attemptingMove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TwoHandedGrabMoveProvider::ComputeDesiredMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ConstrainedMoveProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(attemptingMove));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionPhase
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionPhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Idle
::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase>("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Idle
void UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Idle(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Started
::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase>("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Started"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Started
void UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Started(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Moving
::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Moving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Moving");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase>("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Moving"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Moving
void UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Moving(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Moving");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Moving", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Done
::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase>("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Done"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.LocomotionPhase Done
void UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Done(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "LocomotionPhase", "Done", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> beginLocomotion
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_beginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_beginLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beginLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> endLocomotion
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_endLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionSystem m_System
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_m_System");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_System"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionPhase <locomotionPhase>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_$locomotionPhase$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_$locomotionPhase$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<locomotionPhase>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.LocomotionSystem> startLocomotion
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>*& UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::dyn_startLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocomotion"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_beginLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_beginLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_beginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_beginLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_beginLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_beginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_endLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_endLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_endLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.get_system
::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.set_system
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system(::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_system");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_system", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.get_locomotionPhase
::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_locomotionPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::get_locomotionPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locomotionPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.set_locomotionPhase
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_locomotionPhase(::UnityEngine::XR::Interaction::Toolkit::LocomotionPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::set_locomotionPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locomotionPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.Awake
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.CanBeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::CanBeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.BeginLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::BeginLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.EndLocomotion
bool UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::EndLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.add_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::add_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.remove_startLocomotion
void UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider::remove_startLocomotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startLocomotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.RequestResult
#include "UnityEngine/XR/Interaction/Toolkit/RequestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Success
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Success
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Success(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Busy
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Busy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Busy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Busy
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Busy(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Busy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Busy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Error
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::RequestResult>("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Error"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.RequestResult Error
void UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Error(::UnityEngine::XR::Interaction::Toolkit::RequestResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "RequestResult", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::RequestResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::RequestResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionSystem.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider
#include "UnityEngine/XR/Interaction/Toolkit/LocomotionProvider.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.RequestResult
#include "UnityEngine/XR/Interaction/Toolkit/RequestResult.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.LocomotionProvider m_CurrentExclusiveProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_CurrentExclusiveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_CurrentExclusiveProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentExclusiveProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeMadeExclusive
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_TimeMadeExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_TimeMadeExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeMadeExclusive"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Timeout
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_Timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Timeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.XR.CoreUtils.XROrigin m_XROrigin
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_XROrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::dyn_m_XROrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XROrigin"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_timeout
float UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.set_timeout
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_timeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_xrOrigin
::Unity::XR::CoreUtils::XROrigin* UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::XROrigin*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.set_xrOrigin
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrOrigin(::Unity::XR::CoreUtils::XROrigin* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_busy
bool UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_busy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_busy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.Awake
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.Update
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.RequestExclusiveOperation
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::RequestExclusiveOperation(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::RequestExclusiveOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestExclusiveOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::RequestResult, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.ResetExclusivity
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::ResetExclusivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::ResetExclusivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetExclusivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.FinishExclusiveOperation
::UnityEngine::XR::Interaction::Toolkit::RequestResult UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::FinishExclusiveOperation(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::FinishExclusiveOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishExclusiveOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::RequestResult, false>(this, ___internal__method, provider);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_xrRig
::UnityEngine::XR::Interaction::Toolkit::XRRig* UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_xrRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.set_xrRig
void UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrRig(::UnityEngine::XR::Interaction::Toolkit::XRRig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::set_xrRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.LocomotionSystem.get_Busy
bool UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::LocomotionSystem::get_Busy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Busy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/ActionBasedSnapTurnProvider.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_LeftHandSnapTurnAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::dyn_m_LeftHandSnapTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::dyn_m_LeftHandSnapTurnAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LeftHandSnapTurnAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RightHandSnapTurnAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::dyn_m_RightHandSnapTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::dyn_m_RightHandSnapTurnAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RightHandSnapTurnAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.get_leftHandSnapTurnAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::get_leftHandSnapTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::get_leftHandSnapTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandSnapTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.set_leftHandSnapTurnAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::set_leftHandSnapTurnAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::set_leftHandSnapTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandSnapTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.get_rightHandSnapTurnAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::get_rightHandSnapTurnAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::get_rightHandSnapTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandSnapTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.set_rightHandSnapTurnAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::set_rightHandSnapTurnAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::set_rightHandSnapTurnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandSnapTurnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.OnEnable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.OnDisable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedSnapTurnProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedSnapTurnProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::_get_k_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::_get_k_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider", "k_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] k_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::_set_k_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::_set_k_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider", "k_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes m_TurnUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes& UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_TurnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_TurnUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*& UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_DeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::dyn_m_DeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.get_turnUsage
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_turnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.set_turnUsage
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_turnUsage(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.set_controllers
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.get_deadZone
float UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::get_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.set_deadZone
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_deadZone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::set_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider..cctor
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/DeviceBasedSnapTurnProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.DeviceBasedSnapTurnProvider/InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "DeviceBasedSnapTurnProvider/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DeviceBasedSnapTurnProvider::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
#include "UnityEngine/XR/Interaction/Toolkit/SnapTurnProviderBase.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_TurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_TurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_TurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DebounceTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DebounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DebounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableTurnLeftRight
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_EnableTurnLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_EnableTurnLeftRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableTurnLeftRight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableTurnAround
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_EnableTurnAround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_EnableTurnAround");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableTurnAround"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DelayTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentTurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_CurrentTurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_CurrentTurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeStarted
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_TimeStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_TimeStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DelayStartTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DelayStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::dyn_m_DelayStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.get_turnAmount
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_turnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.set_turnAmount
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_turnAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.get_debounceTime
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.set_debounceTime
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_debounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.get_enableTurnLeftRight
bool UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_enableTurnLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_enableTurnLeftRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableTurnLeftRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.set_enableTurnLeftRight
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_enableTurnLeftRight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_enableTurnLeftRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableTurnLeftRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.get_enableTurnAround
bool UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_enableTurnAround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_enableTurnAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableTurnAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.set_enableTurnAround
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_enableTurnAround(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_enableTurnAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableTurnAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.get_delayTime
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_delayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::get_delayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.set_delayTime
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_delayTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::set_delayTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delayTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.Update
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.ReadInput
::UnityEngine::Vector2 UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::ReadInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::ReadInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.GetTurnAmount
float UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::GetTurnAmount(::UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::GetTurnAmount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.StartTurn
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::StartTurn(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::StartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.FakeStartTurn
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::FakeStartTurn(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::FakeStartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeStartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.FakeStartTurnAround
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::FakeStartTurnAround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::FakeStartTurnAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeStartTurnAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase.Awake
void UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::SnapTurnProviderBase::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::LocomotionProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.MatchOrientation
#include "UnityEngine/XR/Interaction/Toolkit/MatchOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation WorldSpaceUp
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_WorldSpaceUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_WorldSpaceUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "WorldSpaceUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation WorldSpaceUp
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_WorldSpaceUp(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_WorldSpaceUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "WorldSpaceUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation TargetUp
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_TargetUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_TargetUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "TargetUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation TargetUp
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_TargetUp(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_TargetUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "TargetUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation TargetUpAndForward
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_TargetUpAndForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_TargetUpAndForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "TargetUpAndForward"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation TargetUpAndForward
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_TargetUpAndForward(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_TargetUpAndForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "TargetUpAndForward", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation None
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation>("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.MatchOrientation None
void UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_None(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::MatchOrientation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::MatchOrientation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEvent
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable_--c.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Pooling/LinkedPool_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEventArgs.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultNormalToleranceDegrees
float UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::_get_k_DefaultNormalToleranceDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::_get_k_DefaultNormalToleranceDegrees");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable", "k_DefaultNormalToleranceDegrees"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultNormalToleranceDegrees
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::_set_k_DefaultNormalToleranceDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::_set_k_DefaultNormalToleranceDegrees");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable", "k_DefaultNormalToleranceDegrees", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TeleportationProvider m_TeleportationProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportationProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportationProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportationProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.MatchOrientation m_MatchOrientation
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::MatchOrientation& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchOrientation"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MatchDirectionalInput
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchDirectionalInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_MatchDirectionalInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchDirectionalInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger m_TeleportTrigger
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportTrigger"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_FilterSelectionByHitNormal
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_FilterSelectionByHitNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_FilterSelectionByHitNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FilterSelectionByHitNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_UpNormalToleranceDegrees
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_UpNormalToleranceDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_UpNormalToleranceDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpNormalToleranceDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.TeleportingEvent m_Teleporting
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportingEvent*& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_Teleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_Teleporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Teleporting"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportingEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs> m_TeleportingEventArgs
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportingEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportingEventArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportingEventArgs"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.Vector3> m_TeleportForwardPerInteractor
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::Vector3>*& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportForwardPerInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::dyn_m_TeleportForwardPerInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportForwardPerInteractor"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_teleportationProvider
::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_teleportationProvider
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_matchOrientation
::UnityEngine::XR::Interaction::Toolkit::MatchOrientation UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_matchOrientation
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_matchDirectionalInput
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchDirectionalInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchDirectionalInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchDirectionalInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_matchDirectionalInput
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchDirectionalInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchDirectionalInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchDirectionalInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_teleportTrigger
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_teleportTrigger
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_filterSelectionByHitNormal
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_filterSelectionByHitNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_filterSelectionByHitNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterSelectionByHitNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_filterSelectionByHitNormal
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_filterSelectionByHitNormal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_filterSelectionByHitNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterSelectionByHitNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_upNormalToleranceDegrees
float UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_upNormalToleranceDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_upNormalToleranceDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_upNormalToleranceDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_upNormalToleranceDegrees
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_upNormalToleranceDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_upNormalToleranceDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_upNormalToleranceDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.get_teleporting
::UnityEngine::XR::Interaction::Toolkit::TeleportingEvent* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TeleportingEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.set_teleporting
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleporting(::UnityEngine::XR::Interaction::Toolkit::TeleportingEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 98));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.SendTeleportRequest
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTeleportRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.UpdateTeleportRequestRotation
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::UpdateTeleportRequestRotation(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::UpdateTeleportRequestRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportRequestRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(teleportRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, byref(teleportRequest));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GetReticleDirection
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GetReticleDirection(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::Vector3 hitNormal, ByRef<::UnityEngine::Vector3> reticleUp, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> optionalReticleForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GetReticleDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 97));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, hitNormal, byref(reticleUp), byref(optionalReticleForward));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 99));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Reset
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnActivated
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnActivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnDeactivated
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnDeactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 78));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 62));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectExited
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExited"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExited", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectEntered
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEntered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEntered"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEntered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEntered", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnActivated
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnActivated"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnActivated
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnActivated(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnActivated", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnDeactivated
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnDeactivated
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectExit
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectExit
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectExit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectEnter
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnSelectEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEnter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnSelectEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnSelectEnter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnActivate
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnActivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnActivate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnActivate
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnActivate(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnActivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnActivate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnDeactivate
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_get_OnDeactivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnDeactivate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger OnDeactivate
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::_set_OnDeactivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger", "OnDeactivate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c
#include "UnityEngine/XR/Interaction/Toolkit/BaseTeleportationInteractable_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/TeleportingEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c*>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs> <>9__45_0
::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*>* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_get_$$9__45_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_get_$$9__45_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*>*>("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/<>c", "<>9__45_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs> <>9__45_0
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_set_$$9__45_0(::System::Func_1<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_set_$$9__45_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/<>c", "<>9__45_0", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/<>c.<.ctor>b__45_0
::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs* UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::$_ctor$b__45_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::$$c::<.ctor>b__45_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__45_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::TeleportingEventArgs*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor
#include "UnityEngine/XR/Interaction/Toolkit/TeleportationAnchor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.TeleportRequest
#include "UnityEngine/XR/Interaction/Toolkit/TeleportRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_TeleportAnchorTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::dyn_m_TeleportAnchorTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::dyn_m_TeleportAnchorTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportAnchorTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.get_teleportAnchorTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::get_teleportAnchorTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::get_teleportAnchorTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_teleportAnchorTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.set_teleportAnchorTransform
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::set_teleportAnchorTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::set_teleportAnchorTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_teleportAnchorTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnValidate
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnDrawGizmos
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.Reset
void UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.GenerateTeleportRequest
bool UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::TeleportationAnchor::GenerateTeleportRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), 98));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, raycastHit, byref(teleportRequest));
}
