// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultEventAttribute
#include "System/ComponentModel/DefaultEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
::System::ComponentModel::DefaultEventAttribute* System::ComponentModel::DefaultEventAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultEventAttribute*>("System.ComponentModel", "DefaultEventAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
void System::ComponentModel::DefaultEventAttribute::_set_Default(::System::ComponentModel::DefaultEventAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultEventAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultEventAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.get_Name
::StringW System::ComponentModel::DefaultEventAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute..cctor
void System::ComponentModel::DefaultEventAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultEventAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.Equals
bool System::ComponentModel::DefaultEventAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.GetHashCode
int System::ComponentModel::DefaultEventAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultPropertyAttribute
#include "System/ComponentModel/DefaultPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
::System::ComponentModel::DefaultPropertyAttribute* System::ComponentModel::DefaultPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultPropertyAttribute*>("System.ComponentModel", "DefaultPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
void System::ComponentModel::DefaultPropertyAttribute::_set_Default(::System::ComponentModel::DefaultPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultPropertyAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute..cctor
void System::ComponentModel::DefaultPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.Equals
bool System::ComponentModel::DefaultPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.DelegatingTypeDescriptionProvider
#include "System/ComponentModel/DelegatingTypeDescriptionProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.IServiceProvider
#include "System/IServiceProvider.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.get_Provider
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.CreateInstance
::Il2CppObject* System::ComponentModel::DelegatingTypeDescriptionProvider::CreateInstance(::System::IServiceProvider* provider, ::System::Type* objectType, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, provider, objectType, argTypes, args);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetFullComponentName
::StringW System::ComponentModel::DelegatingTypeDescriptionProvider::GetFullComponentName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetFullComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtenderProviders
::ArrayW<::System::ComponentModel::IExtenderProvider*> System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtenderProviders(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtenderProviders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::ComponentModel::IExtenderProvider*>, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetRuntimeType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetRuntimeType(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetRuntimeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.IsSupportedType
bool System::ComponentModel::DelegatingTypeDescriptionProvider::IsSupportedType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::IsSupportedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.InheritanceAttribute
#include "System/ComponentModel/InheritanceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.InheritanceAttribute Inherited
::System::ComponentModel::InheritanceAttribute* System::ComponentModel::InheritanceAttribute::_get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_get_Inherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceAttribute*>("System.ComponentModel", "InheritanceAttribute", "Inherited"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.InheritanceAttribute Inherited
void System::ComponentModel::InheritanceAttribute::_set_Inherited(::System::ComponentModel::InheritanceAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_set_Inherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceAttribute", "Inherited", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.InheritanceAttribute InheritedReadOnly
::System::ComponentModel::InheritanceAttribute* System::ComponentModel::InheritanceAttribute::_get_InheritedReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_get_InheritedReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceAttribute*>("System.ComponentModel", "InheritanceAttribute", "InheritedReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.InheritanceAttribute InheritedReadOnly
void System::ComponentModel::InheritanceAttribute::_set_InheritedReadOnly(::System::ComponentModel::InheritanceAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_set_InheritedReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceAttribute", "InheritedReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.InheritanceAttribute NotInherited
::System::ComponentModel::InheritanceAttribute* System::ComponentModel::InheritanceAttribute::_get_NotInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_get_NotInherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceAttribute*>("System.ComponentModel", "InheritanceAttribute", "NotInherited"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.InheritanceAttribute NotInherited
void System::ComponentModel::InheritanceAttribute::_set_NotInherited(::System::ComponentModel::InheritanceAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_set_NotInherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceAttribute", "NotInherited", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.InheritanceAttribute Default
::System::ComponentModel::InheritanceAttribute* System::ComponentModel::InheritanceAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceAttribute*>("System.ComponentModel", "InheritanceAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.InheritanceAttribute Default
void System::ComponentModel::InheritanceAttribute::_set_Default(::System::ComponentModel::InheritanceAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.InheritanceLevel <InheritanceLevel>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::InheritanceLevel& System::ComponentModel::InheritanceAttribute::dyn_$InheritanceLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::dyn_$InheritanceLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InheritanceLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::InheritanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute.get_InheritanceLevel
::System::ComponentModel::InheritanceLevel System::ComponentModel::InheritanceAttribute::get_InheritanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::get_InheritanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::InheritanceLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute..cctor
void System::ComponentModel::InheritanceAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "InheritanceAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute.Equals
bool System::ComponentModel::InheritanceAttribute::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute.GetHashCode
int System::ComponentModel::InheritanceAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute.IsDefaultAttribute
bool System::ComponentModel::InheritanceAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InheritanceAttribute.ToString
::StringW System::ComponentModel::InheritanceAttribute::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceAttribute::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InheritanceLevel
#include "System/ComponentModel/InheritanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.InheritanceLevel Inherited
::System::ComponentModel::InheritanceLevel System::ComponentModel::InheritanceLevel::_get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_get_Inherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceLevel>("System.ComponentModel", "InheritanceLevel", "Inherited"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.InheritanceLevel Inherited
void System::ComponentModel::InheritanceLevel::_set_Inherited(::System::ComponentModel::InheritanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_set_Inherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceLevel", "Inherited", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.InheritanceLevel InheritedReadOnly
::System::ComponentModel::InheritanceLevel System::ComponentModel::InheritanceLevel::_get_InheritedReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_get_InheritedReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceLevel>("System.ComponentModel", "InheritanceLevel", "InheritedReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.InheritanceLevel InheritedReadOnly
void System::ComponentModel::InheritanceLevel::_set_InheritedReadOnly(::System::ComponentModel::InheritanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_set_InheritedReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceLevel", "InheritedReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.InheritanceLevel NotInherited
::System::ComponentModel::InheritanceLevel System::ComponentModel::InheritanceLevel::_get_NotInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_get_NotInherited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::InheritanceLevel>("System.ComponentModel", "InheritanceLevel", "NotInherited"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.InheritanceLevel NotInherited
void System::ComponentModel::InheritanceLevel::_set_NotInherited(::System::ComponentModel::InheritanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::_set_NotInherited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "InheritanceLevel", "NotInherited", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::InheritanceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InheritanceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyTabAttribute
#include "System/ComponentModel/PropertyTabAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type[] _tabClasses
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::PropertyTabAttribute::dyn__tabClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::dyn__tabClasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabClasses"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _tabClassNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::PropertyTabAttribute::dyn__tabClassNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::dyn__tabClassNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabClassNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyTabScope[] <TabScopes>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::PropertyTabScope>& System::ComponentModel::PropertyTabAttribute::dyn_$TabScopes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::dyn_$TabScopes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TabScopes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::PropertyTabScope>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.get_TabClasses
::ArrayW<::System::Type*> System::ComponentModel::PropertyTabAttribute::get_TabClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::get_TabClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TabClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.get_TabClassNames
::ArrayW<::StringW> System::ComponentModel::PropertyTabAttribute::get_TabClassNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::get_TabClassNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TabClassNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.get_TabScopes
::ArrayW<::System::ComponentModel::PropertyTabScope> System::ComponentModel::PropertyTabAttribute::get_TabScopes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::get_TabScopes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TabScopes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::ComponentModel::PropertyTabScope>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.set_TabScopes
void System::ComponentModel::PropertyTabAttribute::set_TabScopes(::ArrayW<::System::ComponentModel::PropertyTabScope> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::set_TabScopes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TabScopes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.Equals
bool System::ComponentModel::PropertyTabAttribute::Equals(::System::ComponentModel::PropertyTabAttribute* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.InitializeArrays
void System::ComponentModel::PropertyTabAttribute::InitializeArrays(::ArrayW<::StringW> tabClassNames, ::ArrayW<::System::ComponentModel::PropertyTabScope> tabScopes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::InitializeArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tabClassNames), ::il2cpp_utils::ExtractType(tabScopes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tabClassNames, tabScopes);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.InitializeArrays
void System::ComponentModel::PropertyTabAttribute::InitializeArrays(::ArrayW<::System::Type*> tabClasses, ::ArrayW<::System::ComponentModel::PropertyTabScope> tabScopes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::InitializeArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tabClasses), ::il2cpp_utils::ExtractType(tabScopes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tabClasses, tabScopes);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.InitializeArrays
void System::ComponentModel::PropertyTabAttribute::InitializeArrays(::ArrayW<::StringW> tabClassNames, ::ArrayW<::System::Type*> tabClasses, ::ArrayW<::System::ComponentModel::PropertyTabScope> tabScopes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::InitializeArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tabClassNames), ::il2cpp_utils::ExtractType(tabClasses), ::il2cpp_utils::ExtractType(tabScopes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tabClassNames, tabClasses, tabScopes);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.Equals
bool System::ComponentModel::PropertyTabAttribute::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.ComponentModel.PropertyTabAttribute.GetHashCode
int System::ComponentModel::PropertyTabAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyTabScope
#include "System/ComponentModel/PropertyTabScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.PropertyTabScope Static
::System::ComponentModel::PropertyTabScope System::ComponentModel::PropertyTabScope::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyTabScope>("System.ComponentModel", "PropertyTabScope", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.PropertyTabScope Static
void System::ComponentModel::PropertyTabScope::_set_Static(::System::ComponentModel::PropertyTabScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyTabScope", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.PropertyTabScope Global
::System::ComponentModel::PropertyTabScope System::ComponentModel::PropertyTabScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyTabScope>("System.ComponentModel", "PropertyTabScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.PropertyTabScope Global
void System::ComponentModel::PropertyTabScope::_set_Global(::System::ComponentModel::PropertyTabScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyTabScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.PropertyTabScope Document
::System::ComponentModel::PropertyTabScope System::ComponentModel::PropertyTabScope::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyTabScope>("System.ComponentModel", "PropertyTabScope", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.PropertyTabScope Document
void System::ComponentModel::PropertyTabScope::_set_Document(::System::ComponentModel::PropertyTabScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyTabScope", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.PropertyTabScope Component
::System::ComponentModel::PropertyTabScope System::ComponentModel::PropertyTabScope::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyTabScope>("System.ComponentModel", "PropertyTabScope", "Component"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.PropertyTabScope Component
void System::ComponentModel::PropertyTabScope::_set_Component(::System::ComponentModel::PropertyTabScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyTabScope", "Component", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyTabScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyTabScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ToolboxItemAttribute
#include "System/ComponentModel/ToolboxItemAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ToolboxItemAttribute Default
::System::ComponentModel::ToolboxItemAttribute* System::ComponentModel::ToolboxItemAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemAttribute*>("System.ComponentModel", "ToolboxItemAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ToolboxItemAttribute Default
void System::ComponentModel::ToolboxItemAttribute::_set_Default(::System::ComponentModel::ToolboxItemAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ToolboxItemAttribute None
::System::ComponentModel::ToolboxItemAttribute* System::ComponentModel::ToolboxItemAttribute::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemAttribute*>("System.ComponentModel", "ToolboxItemAttribute", "None"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ToolboxItemAttribute None
void System::ComponentModel::ToolboxItemAttribute::_set_None(::System::ComponentModel::ToolboxItemAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemAttribute", "None", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type _toolboxItemType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ToolboxItemAttribute::dyn__toolboxItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::dyn__toolboxItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolboxItemType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _toolboxItemTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ToolboxItemAttribute::dyn__toolboxItemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::dyn__toolboxItemTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolboxItemTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute.get_ToolboxItemType
::System::Type* System::ComponentModel::ToolboxItemAttribute::get_ToolboxItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::get_ToolboxItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolboxItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute.get_ToolboxItemTypeName
::StringW System::ComponentModel::ToolboxItemAttribute::get_ToolboxItemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::get_ToolboxItemTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolboxItemTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute..cctor
void System::ComponentModel::ToolboxItemAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ToolboxItemAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute
bool System::ComponentModel::ToolboxItemAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute.Equals
bool System::ComponentModel::ToolboxItemAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ToolboxItemAttribute.GetHashCode
int System::ComponentModel::ToolboxItemAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignTimeVisibleAttribute
#include "System/ComponentModel/DesignTimeVisibleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Yes
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Yes
void System::ComponentModel::DesignTimeVisibleAttribute::_set_Yes(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute No
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute No
void System::ComponentModel::DesignTimeVisibleAttribute::_set_No(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Default
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Default
void System::ComponentModel::DesignTimeVisibleAttribute::_set_Default(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Visible>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DesignTimeVisibleAttribute::dyn_$Visible$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::dyn_$Visible$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Visible>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.get_Visible
bool System::ComponentModel::DesignTimeVisibleAttribute::get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::get_Visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute..cctor
void System::ComponentModel::DesignTimeVisibleAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignTimeVisibleAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.Equals
bool System::ComponentModel::DesignTimeVisibleAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode
int System::ComponentModel::DesignTimeVisibleAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignTimeVisibleAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DoubleConverter.get_AllowHex
bool System::ComponentModel::DoubleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.get_TargetType
::System::Type* System::ComponentModel::DoubleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.ToString
::StringW System::ComponentModel::DoubleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorAttribute
#include "System/ComponentModel/EditorAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn__typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn__typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <EditorBaseTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_$EditorBaseTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_$EditorBaseTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EditorBaseTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <EditorTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_$EditorTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_$EditorTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EditorTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_EditorBaseTypeName
::StringW System::ComponentModel::EditorAttribute::get_EditorBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_EditorBaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditorBaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_EditorTypeName
::StringW System::ComponentModel::EditorAttribute::get_EditorTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_EditorTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditorTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::EditorAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.Equals
bool System::ComponentModel::EditorAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.GetHashCode
int System::ComponentModel::EditorAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.EventDescriptor.get_ComponentType
::System::Type* System::ComponentModel::EventDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.get_EventType
::System::Type* System::ComponentModel::EventDescriptor::get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_EventType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.get_IsMulticast
bool System::ComponentModel::EventDescriptor::get_IsMulticast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_IsMulticast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.AddEventHandler
void System::ComponentModel::EventDescriptor::AddEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::AddEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.RemoveEventHandler
void System::ComponentModel::EventDescriptor::RemoveEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::RemoveEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection/ArraySubsetEnumerator
#include "System/ComponentModel/EventDescriptorCollection_ArraySubsetEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EventDescriptorCollection*>("System.ComponentModel", "EventDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
void System::ComponentModel::EventDescriptorCollection::_set_Empty(::System::ComponentModel::EventDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EventDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptor[] _events
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::EventDescriptor*>& System::ComponentModel::EventDescriptorCollection::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::EventDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::EventDescriptorCollection::dyn__namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IComparer _comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::EventDescriptorCollection::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn__eventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__eventsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn__needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Count
int System::ComponentModel::EventDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.set_Count
void System::ComponentModel::EventDescriptorCollection::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Add
int System::ComponentModel::EventDescriptorCollection::Add(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Clear
void System::ComponentModel::EventDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Contains
bool System::ComponentModel::EventDescriptorCollection::Contains(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureEventsOwned
void System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureEventsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureSize
void System::ComponentModel::EventDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Find
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::Find(::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.IndexOf
int System::ComponentModel::EventDescriptorCollection::IndexOf(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Insert
void System::ComponentModel::EventDescriptorCollection::Insert(int index, ::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Remove
void System::ComponentModel::EventDescriptorCollection::Remove(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.RemoveAt
void System::ComponentModel::EventDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::ArrayW<::StringW> names, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, names, comparer);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection..cctor
void System::ComponentModel::EventDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "EventDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptorCollection/ArraySubsetEnumerator
#include "System/ComponentModel/EventDescriptorCollection_ArraySubsetEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Array _array
[[deprecated("Use field access instead!")]] ::System::Array*& System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _total
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _current
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection/ArraySubsetEnumerator.MoveNext
bool System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection/ArraySubsetEnumerator.Reset
void System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection/ArraySubsetEnumerator.get_Current
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection::ArraySubsetEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ExpandableObjectConverter
#include "System/ComponentModel/ExpandableObjectConverter.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ExpandableObjectConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ExpandableObjectConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExpandableObjectConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported
bool System::ComponentModel::ExpandableObjectConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExpandableObjectConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ExtendedPropertyDescriptor
#include "System/ComponentModel/ExtendedPropertyDescriptor.hpp"
// Including type: System.ComponentModel.ReflectPropertyDescriptor
#include "System/ComponentModel/ReflectPropertyDescriptor.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.ReflectPropertyDescriptor _extenderInfo
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ReflectPropertyDescriptor*& System::ComponentModel::ExtendedPropertyDescriptor::dyn__extenderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::dyn__extenderInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extenderInfo"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ReflectPropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.IExtenderProvider _provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtendedPropertyDescriptor::dyn__provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::dyn__provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.CanResetValue
bool System::ComponentModel::ExtendedPropertyDescriptor::CanResetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::CanResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_ComponentType
::System::Type* System::ComponentModel::ExtendedPropertyDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_IsReadOnly
bool System::ComponentModel::ExtendedPropertyDescriptor::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::ExtendedPropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_DisplayName
::StringW System::ComponentModel::ExtendedPropertyDescriptor::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.GetValue
::Il2CppObject* System::ComponentModel::ExtendedPropertyDescriptor::GetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.ResetValue
void System::ComponentModel::ExtendedPropertyDescriptor::ResetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::ResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.SetValue
void System::ComponentModel::ExtendedPropertyDescriptor::SetValue(::Il2CppObject* component, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.ShouldSerializeValue
bool System::ComponentModel::ExtendedPropertyDescriptor::ShouldSerializeValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::ShouldSerializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ExtenderProvidedPropertyAttribute
#include "System/ComponentModel/ExtenderProvidedPropertyAttribute.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor <ExtenderProperty>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$ExtenderProperty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$ExtenderProperty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExtenderProperty>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.IExtenderProvider <Provider>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$Provider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$Provider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Provider>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ReceiverType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$ReceiverType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_$ReceiverType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceiverType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.Create
::System::ComponentModel::ExtenderProvidedPropertyAttribute* System::ComponentModel::ExtenderProvidedPropertyAttribute::Create(::System::ComponentModel::PropertyDescriptor* extenderProperty, ::System::Type* receiverType, ::System::ComponentModel::IExtenderProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ExtenderProvidedPropertyAttribute", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extenderProperty), ::il2cpp_utils::ExtractType(receiverType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ExtenderProvidedPropertyAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extenderProperty, receiverType, provider);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_ExtenderProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ExtenderProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ExtenderProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtenderProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.set_ExtenderProperty
void System::ComponentModel::ExtenderProvidedPropertyAttribute::set_ExtenderProperty(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::set_ExtenderProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtenderProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_Provider
::System::ComponentModel::IExtenderProvider* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IExtenderProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.set_Provider
void System::ComponentModel::ExtenderProvidedPropertyAttribute::set_Provider(::System::ComponentModel::IExtenderProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::set_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_ReceiverType
::System::Type* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ReceiverType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ReceiverType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiverType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.set_ReceiverType
void System::ComponentModel::ExtenderProvidedPropertyAttribute::set_ReceiverType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::set_ReceiverType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceiverType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals
bool System::ComponentModel::ExtenderProvidedPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode
int System::ComponentModel::ExtenderProvidedPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute
bool System::ComponentModel::ExtenderProvidedPropertyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.GuidConverter
#include "System/ComponentModel/GuidConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.GuidConverter.CanConvertFrom
bool System::ComponentModel::GuidConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.GuidConverter.CanConvertTo
bool System::ComponentModel::GuidConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.GuidConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::GuidConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.GuidConverter.ConvertTo
::Il2CppObject* System::ComponentModel::GuidConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.HandledEventArgs
#include "System/ComponentModel/HandledEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Handled>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::HandledEventArgs::dyn_$Handled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::dyn_$Handled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.HandledEventArgs.get_Handled
bool System::ComponentModel::HandledEventArgs::get_Handled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::get_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.HandledEventArgs.set_Handled
void System::ComponentModel::HandledEventArgs::set_Handled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::set_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.HandledEventHandler
#include "System/ComponentModel/HandledEventHandler.hpp"
// Including type: System.ComponentModel.HandledEventArgs
#include "System/ComponentModel/HandledEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.HandledEventHandler.Invoke
void System::ComponentModel::HandledEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::HandledEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.HandledEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::HandledEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::HandledEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.HandledEventHandler.EndInvoke
void System::ComponentModel::HandledEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
// Including type: System.ComponentModel.ListSortDirection
#include "System/ComponentModel/ListSortDirection.hpp"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowNew
bool System::ComponentModel::IBindingList::get_AllowNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.AddNew
::Il2CppObject* System::ComponentModel::IBindingList::AddNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::AddNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowEdit
bool System::ComponentModel::IBindingList::get_AllowEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowRemove
bool System::ComponentModel::IBindingList::get_AllowRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsChangeNotification
bool System::ComponentModel::IBindingList::get_SupportsChangeNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsChangeNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsSearching
bool System::ComponentModel::IBindingList::get_SupportsSearching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsSearching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsSorting
bool System::ComponentModel::IBindingList::get_SupportsSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsSorting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_IsSorted
bool System::ComponentModel::IBindingList::get_IsSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_IsSorted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SortProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::IBindingList::get_SortProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SortProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SortDirection
::System::ComponentModel::ListSortDirection System::ComponentModel::IBindingList::get_SortDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SortDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.add_ListChanged
void System::ComponentModel::IBindingList::add_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::add_ListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingList.remove_ListChanged
void System::ComponentModel::IBindingList::remove_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::remove_ListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingList.AddIndex
void System::ComponentModel::IBindingList::AddIndex(::System::ComponentModel::PropertyDescriptor* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::AddIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: System.ComponentModel.IBindingList.ApplySort
void System::ComponentModel::IBindingList::ApplySort(::System::ComponentModel::PropertyDescriptor* property, ::System::ComponentModel::ListSortDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::ApplySort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, direction);
}
// Autogenerated method: System.ComponentModel.IBindingList.Find
int System::ComponentModel::IBindingList::Find(::System::ComponentModel::PropertyDescriptor* property, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, property, key);
}
// Autogenerated method: System.ComponentModel.IBindingList.RemoveIndex
void System::ComponentModel::IBindingList::RemoveIndex(::System::ComponentModel::PropertyDescriptor* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::RemoveIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: System.ComponentModel.IBindingList.RemoveSort
void System::ComponentModel::IBindingList::RemoveSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::RemoveSort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IBindingListView
#include "System/ComponentModel/IBindingListView.hpp"
// Including type: System.ComponentModel.ListSortDescriptionCollection
#include "System/ComponentModel/ListSortDescriptionCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IBindingListView.ApplySort
void System::ComponentModel::IBindingListView::ApplySort(::System::ComponentModel::ListSortDescriptionCollection* sorts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::ApplySort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorts);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_Filter
::StringW System::ComponentModel::IBindingListView::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.set_Filter
void System::ComponentModel::IBindingListView::set_Filter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::set_Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SortDescriptions
::System::ComponentModel::ListSortDescriptionCollection* System::ComponentModel::IBindingListView::get_SortDescriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SortDescriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDescriptionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.RemoveFilter
void System::ComponentModel::IBindingListView::RemoveFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::RemoveFilter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting
bool System::ComponentModel::IBindingListView::get_SupportsAdvancedSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SupportsAdvancedSorting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SupportsFiltering
bool System::ComponentModel::IBindingListView::get_SupportsFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SupportsFiltering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ICancelAddNew
#include "System/ComponentModel/ICancelAddNew.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICancelAddNew.CancelNew
void System::ComponentModel::ICancelAddNew::CancelNew(int itemIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICancelAddNew::CancelNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICancelAddNew*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
}
// Autogenerated method: System.ComponentModel.ICancelAddNew.EndNew
void System::ComponentModel::ICancelAddNew::EndNew(int itemIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICancelAddNew::EndNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICancelAddNew*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.IComNativeDescriptorHandler
#include "System/ComponentModel/IComNativeDescriptorHandler.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::IComNativeDescriptorHandler::GetAttributes(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetClassName
::StringW System::ComponentModel::IComNativeDescriptorHandler::GetClassName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetClassName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::IComNativeDescriptorHandler::GetConverter(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent
::System::ComponentModel::EventDescriptor* System::ComponentModel::IComNativeDescriptorHandler::GetDefaultEvent(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetDefaultEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::IComNativeDescriptorHandler::GetDefaultProperty(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetDefaultProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEditor
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetEditor(::Il2CppObject* component, ::System::Type* baseEditorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, baseEditorType);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetName
::StringW System::ComponentModel::IComNativeDescriptorHandler::GetName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetEvents(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetEvents(::Il2CppObject* component, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, component, attributes);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetProperties(::Il2CppObject* component, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, component, attributes);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue(::Il2CppObject* component, ::StringW propertyName, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, propertyName, byref(success));
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue(::Il2CppObject* component, int dispid, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, dispid, byref(success));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ICustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetClassName
::StringW System::ComponentModel::ICustomTypeDescriptor::GetClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetClassName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
::StringW System::ComponentModel::ICustomTypeDescriptor::GetComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ICustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
::System::ComponentModel::EventDescriptor* System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEditor
::Il2CppObject* System::ComponentModel::ICustomTypeDescriptor::GetEditor(::System::Type* editorBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, editorBaseType);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetEvents(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetProperties(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
::Il2CppObject* System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pd);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IDataErrorInfo
#include "System/ComponentModel/IDataErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IDataErrorInfo.get_Item
::StringW System::ComponentModel::IDataErrorInfo::get_Item(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IDataErrorInfo::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, columnName);
}
// Autogenerated method: System.ComponentModel.IDataErrorInfo.get_Error
::StringW System::ComponentModel::IDataErrorInfo::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IDataErrorInfo::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IExtenderProvider.CanExtend
bool System::ComponentModel::IExtenderProvider::CanExtend(::Il2CppObject* extendee) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IExtenderProvider::CanExtend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IExtenderProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, extendee);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IIntellisenseBuilder
#include "System/ComponentModel/IIntellisenseBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IIntellisenseBuilder.get_Name
::StringW System::ComponentModel::IIntellisenseBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IIntellisenseBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IIntellisenseBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IIntellisenseBuilder.Show
bool System::ComponentModel::IIntellisenseBuilder::Show(::StringW language, ::StringW value, ByRef<::StringW> newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IIntellisenseBuilder::Show");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IIntellisenseBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, language, value, byref(newValue));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IListSource
#include "System/ComponentModel/IListSource.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IListSource.get_ContainsListCollection
bool System::ComponentModel::IListSource::get_ContainsListCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IListSource::get_ContainsListCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IListSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IListSource.GetList
::System::Collections::IList* System::ComponentModel::IListSource::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IListSource::GetList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IListSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INestedContainer
#include "System/ComponentModel/INestedContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INestedContainer.get_Owner
::System::ComponentModel::IComponent* System::ComponentModel::INestedContainer::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INestedContainer::get_Owner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INestedContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INestedSite
#include "System/ComponentModel/INestedSite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INestedSite.get_FullName
::StringW System::ComponentModel::INestedSite::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INestedSite::get_FullName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INestedSite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IRaiseItemChangedEvents
#include "System/ComponentModel/IRaiseItemChangedEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents
bool System::ComponentModel::IRaiseItemChangedEvents::get_RaisesItemChangedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IRaiseItemChangedEvents::get_RaisesItemChangedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IRaiseItemChangedEvents*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISupportInitializeNotification
#include "System/ComponentModel/ISupportInitializeNotification.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.get_IsInitialized
bool System::ComponentModel::ISupportInitializeNotification::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::get_IsInitialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.add_Initialized
void System::ComponentModel::ISupportInitializeNotification::add_Initialized(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::add_Initialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.remove_Initialized
void System::ComponentModel::ISupportInitializeNotification::remove_Initialized(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::remove_Initialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ITypeDescriptorContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_Instance
::Il2CppObject* System::ComponentModel::ITypeDescriptorContext::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_Instance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ITypeDescriptorContext::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_PropertyDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
bool System::ComponentModel::ITypeDescriptorContext::OnComponentChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::OnComponentChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
void System::ComponentModel::ITypeDescriptorContext::OnComponentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::OnComponentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ITypedList
#include "System/ComponentModel/ITypedList.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ITypedList.GetListName
::StringW System::ComponentModel::ITypedList::GetListName(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypedList::GetListName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypedList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, listAccessors);
}
// Autogenerated method: System.ComponentModel.ITypedList.GetItemProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ITypedList::GetItemProperties(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypedList::GetItemProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypedList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, listAccessors);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.InstallerTypeAttribute
#include "System/ComponentModel/InstallerTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::InstallerTypeAttribute::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.get_InstallerType
::System::Type* System::ComponentModel::InstallerTypeAttribute::get_InstallerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::get_InstallerType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstallerTypeAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.Equals
bool System::ComponentModel::InstallerTypeAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.GetHashCode
int System::ComponentModel::InstallerTypeAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.InstanceCreationEditor
#include "System/ComponentModel/InstanceCreationEditor.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.InstanceCreationEditor.get_Text
::StringW System::ComponentModel::InstanceCreationEditor::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstanceCreationEditor::get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstanceCreationEditor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InstanceCreationEditor.CreateInstance
::Il2CppObject* System::ComponentModel::InstanceCreationEditor::CreateInstance(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* instanceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstanceCreationEditor::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstanceCreationEditor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, instanceType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int16Converter
#include "System/ComponentModel/Int16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int16Converter.get_TargetType
::System::Type* System::ComponentModel::Int16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int16Converter.ToString
::StringW System::ComponentModel::Int16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int32Converter
#include "System/ComponentModel/Int32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int32Converter.get_TargetType
::System::Type* System::ComponentModel::Int32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int32Converter.ToString
::StringW System::ComponentModel::Int32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int64Converter
#include "System/ComponentModel/Int64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int64Converter.get_TargetType
::System::Type* System::ComponentModel::Int64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int64Converter.ToString
::StringW System::ComponentModel::Int64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InvalidAsynchronousStateException
#include "System/ComponentModel/InvalidAsynchronousStateException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicFileLicenseProvider
#include "System/ComponentModel/LicFileLicenseProvider.hpp"
// Including type: System.ComponentModel.LicFileLicenseProvider/LicFileLicense
#include "System/ComponentModel/LicFileLicenseProvider_LicFileLicense.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.IsKeyValid
bool System::ComponentModel::LicFileLicenseProvider::IsKeyValid(::StringW key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::IsKeyValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicFileLicenseProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, type);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.GetKey
::StringW System::ComponentModel::LicFileLicenseProvider::GetKey(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::GetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicFileLicenseProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.GetLicense
::System::ComponentModel::License* System::ComponentModel::LicFileLicenseProvider::GetLicense(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::GetLicense");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(this, ___internal__method, context, type, instance, allowExceptions);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.LicFileLicenseProvider/LicFileLicense
#include "System/ComponentModel/LicFileLicenseProvider_LicFileLicense.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.LicFileLicenseProvider _owner
[[deprecated("Use field access instead!")]] ::System::ComponentModel::LicFileLicenseProvider*& System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn__owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn__owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owner"))->offset;
  return *reinterpret_cast<::System::ComponentModel::LicFileLicenseProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <LicenseKey>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn_$LicenseKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn_$LicenseKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LicenseKey>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider/LicFileLicense.get_LicenseKey
::StringW System::ComponentModel::LicFileLicenseProvider::LicFileLicense::get_LicenseKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::get_LicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider/LicFileLicense.Dispose
void System::ComponentModel::LicFileLicenseProvider::LicFileLicense::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.License.get_LicenseKey
::StringW System::ComponentModel::License::get_LicenseKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::License::get_LicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.License.Dispose
void System::ComponentModel::License::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::License::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicenseContext.get_UsageMode
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseContext::get_UsageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::get_UsageMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseUsageMode, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseContext.GetSavedLicenseKey
::StringW System::ComponentModel::LicenseContext::GetSavedLicenseKey(::System::Type* type, ::System::Reflection::Assembly* resourceAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::GetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type, resourceAssembly);
}
// Autogenerated method: System.ComponentModel.LicenseContext.GetService
::Il2CppObject* System::ComponentModel::LicenseContext::GetService(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseContext.SetSavedLicenseKey
void System::ComponentModel::LicenseContext::SetSavedLicenseKey(::System::Type* type, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::SetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseManager
#include "System/ComponentModel/LicenseManager.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.LicenseProvider
#include "System/ComponentModel/LicenseProvider.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_selfLock
::Il2CppObject* System::ComponentModel::LicenseManager::_get_s_selfLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_selfLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "s_selfLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_selfLock
void System::ComponentModel::LicenseManager::_set_s_selfLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_selfLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_selfLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.LicenseContext s_context
::System::ComponentModel::LicenseContext* System::ComponentModel::LicenseManager::_get_s_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_context");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseContext*>("System.ComponentModel", "LicenseManager", "s_context"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.LicenseContext s_context
void System::ComponentModel::LicenseManager::_set_s_context(::System::ComponentModel::LicenseContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_context");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_context", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_contextLockHolder
::Il2CppObject* System::ComponentModel::LicenseManager::_get_s_contextLockHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_contextLockHolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "s_contextLockHolder"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_contextLockHolder
void System::ComponentModel::LicenseManager::_set_s_contextLockHolder(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_contextLockHolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_contextLockHolder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_providers
::System::Collections::Hashtable* System::ComponentModel::LicenseManager::_get_s_providers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_providers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "LicenseManager", "s_providers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_providers
void System::ComponentModel::LicenseManager::_set_s_providers(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_providers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_providers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_providerInstances
::System::Collections::Hashtable* System::ComponentModel::LicenseManager::_get_s_providerInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_providerInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "LicenseManager", "s_providerInstances"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_providerInstances
void System::ComponentModel::LicenseManager::_set_s_providerInstances(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_providerInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_providerInstances", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_internalSyncObject
::Il2CppObject* System::ComponentModel::LicenseManager::_get_s_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_s_internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "s_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_internalSyncObject
void System::ComponentModel::LicenseManager::_set_s_internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_s_internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "s_internalSyncObject", value));
}
// Autogenerated method: System.ComponentModel.LicenseManager.get_CurrentContext
::System::ComponentModel::LicenseContext* System::ComponentModel::LicenseManager::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager.set_CurrentContext
void System::ComponentModel::LicenseManager::set_CurrentContext(::System::ComponentModel::LicenseContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::set_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "set_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.LicenseManager.get_UsageMode
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseManager::get_UsageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::get_UsageMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "get_UsageMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseUsageMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CacheProvider
void System::ComponentModel::LicenseManager::CacheProvider(::System::Type* type, ::System::ComponentModel::LicenseProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CacheProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CacheProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, provider);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CreateWithContext
::Il2CppObject* System::ComponentModel::LicenseManager::CreateWithContext(::System::Type* type, ::System::ComponentModel::LicenseContext* creationContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CreateWithContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CreateWithContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(creationContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, creationContext);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CreateWithContext
::Il2CppObject* System::ComponentModel::LicenseManager::CreateWithContext(::System::Type* type, ::System::ComponentModel::LicenseContext* creationContext, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CreateWithContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CreateWithContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(creationContext), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, creationContext, args);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedNoLicenseProvider
bool System::ComponentModel::LicenseManager::GetCachedNoLicenseProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedNoLicenseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedNoLicenseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedProvider
::System::ComponentModel::LicenseProvider* System::ComponentModel::LicenseManager::GetCachedProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedProviderInstance
::System::ComponentModel::LicenseProvider* System::ComponentModel::LicenseManager::GetCachedProviderInstance(::System::Type* providerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedProviderInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedProviderInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, providerType);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsLicensed
bool System::ComponentModel::LicenseManager::IsLicensed(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsLicensed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsLicensed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsValid
bool System::ComponentModel::LicenseManager::IsValid(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsValid
bool System::ComponentModel::LicenseManager::IsValid(::System::Type* type, ::Il2CppObject* instance, ByRef<::System::ComponentModel::License*> license) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance, byref(license));
}
// Autogenerated method: System.ComponentModel.LicenseManager.LockContext
void System::ComponentModel::LicenseManager::LockContext(::Il2CppObject* contextUser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LockContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "LockContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextUser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contextUser);
}
// Autogenerated method: System.ComponentModel.LicenseManager.UnlockContext
void System::ComponentModel::LicenseManager::UnlockContext(::Il2CppObject* contextUser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::UnlockContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "UnlockContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextUser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contextUser);
}
// Autogenerated method: System.ComponentModel.LicenseManager.ValidateInternal
bool System::ComponentModel::LicenseManager::ValidateInternal(::System::Type* type, ::Il2CppObject* instance, bool allowExceptions, ByRef<::System::ComponentModel::License*> license) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::ValidateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "ValidateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(allowExceptions), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance, allowExceptions, byref(license));
}
// Autogenerated method: System.ComponentModel.LicenseManager.ValidateInternalRecursive
bool System::ComponentModel::LicenseManager::ValidateInternalRecursive(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions, ByRef<::System::ComponentModel::License*> license, ByRef<::StringW> licenseKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::ValidateInternalRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "ValidateInternalRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(allowExceptions), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, type, instance, allowExceptions, byref(license), byref(licenseKey));
}
// Autogenerated method: System.ComponentModel.LicenseManager.Validate
void System::ComponentModel::LicenseManager::Validate(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.Validate
::System::ComponentModel::License* System::ComponentModel::LicenseManager::Validate(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance);
}
// Autogenerated method: System.ComponentModel.LicenseManager..cctor
void System::ComponentModel::LicenseManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseProvider
#include "System/ComponentModel/LicenseProvider.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicenseProvider.GetLicense
::System::ComponentModel::License* System::ComponentModel::LicenseProvider::GetLicense(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProvider::GetLicense");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(this, ___internal__method, context, type, instance, allowExceptions);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseProviderAttribute
#include "System/ComponentModel/LicenseProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LicenseProviderAttribute Default
::System::ComponentModel::LicenseProviderAttribute* System::ComponentModel::LicenseProviderAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseProviderAttribute*>("System.ComponentModel", "LicenseProviderAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LicenseProviderAttribute Default
void System::ComponentModel::LicenseProviderAttribute::_set_Default(::System::ComponentModel::LicenseProviderAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseProviderAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type _licenseProviderType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::LicenseProviderAttribute::dyn__licenseProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::dyn__licenseProviderType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_licenseProviderType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _licenseProviderName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LicenseProviderAttribute::dyn__licenseProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::dyn__licenseProviderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_licenseProviderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.get_LicenseProvider
::System::Type* System::ComponentModel::LicenseProviderAttribute::get_LicenseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::get_LicenseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LicenseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute..cctor
void System::ComponentModel::LicenseProviderAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseProviderAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::LicenseProviderAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.Equals
bool System::ComponentModel::LicenseProviderAttribute::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.GetHashCode
int System::ComponentModel::LicenseProviderAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.LicenseUsageMode Runtime
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseUsageMode::_get_Runtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_get_Runtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseUsageMode>("System.ComponentModel", "LicenseUsageMode", "Runtime"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.LicenseUsageMode Runtime
void System::ComponentModel::LicenseUsageMode::_set_Runtime(::System::ComponentModel::LicenseUsageMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_set_Runtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseUsageMode", "Runtime", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.LicenseUsageMode Designtime
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseUsageMode::_get_Designtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_get_Designtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseUsageMode>("System.ComponentModel", "LicenseUsageMode", "Designtime"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.LicenseUsageMode Designtime
void System::ComponentModel::LicenseUsageMode::_set_Designtime(::System::ComponentModel::LicenseUsageMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_set_Designtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseUsageMode", "Designtime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::LicenseUsageMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListBindableAttribute
#include "System/ComponentModel/ListBindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute Yes
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute Yes
void System::ComponentModel::ListBindableAttribute::_set_Yes(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute No
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute No
void System::ComponentModel::ListBindableAttribute::_set_No(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute Default
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute Default
void System::ComponentModel::ListBindableAttribute::_set_Default(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDefault
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ListBindableAttribute::dyn__isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::dyn__isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <ListBindable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ListBindableAttribute::dyn_$ListBindable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::dyn_$ListBindable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ListBindable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.get_ListBindable
bool System::ComponentModel::ListBindableAttribute::get_ListBindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::get_ListBindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListBindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute..cctor
void System::ComponentModel::ListBindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ListBindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.Equals
bool System::ComponentModel::ListBindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.GetHashCode
int System::ComponentModel::ListBindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.IsDefaultAttribute
bool System::ComponentModel::ListBindableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.ListChangedType <ListChangedType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedType& System::ComponentModel::ListChangedEventArgs::dyn_$ListChangedType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_$ListChangedType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ListChangedType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <NewIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_$NewIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_$NewIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <OldIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_$OldIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_$OldIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OldIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.PropertyDescriptor <PropertyDescriptor>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ListChangedEventArgs::dyn_$PropertyDescriptor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_$PropertyDescriptor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyDescriptor>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_ListChangedType
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedEventArgs::get_ListChangedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_ListChangedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListChangedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListChangedType, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_NewIndex
int System::ComponentModel::ListChangedEventArgs::get_NewIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_NewIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_OldIndex
int System::ComponentModel::ListChangedEventArgs::get_OldIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_OldIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OldIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ListChangedEventArgs::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.Invoke
void System::ComponentModel::ListChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ListChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.EndInvoke
void System::ComponentModel::ListChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType Reset
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType Reset
void System::ComponentModel::ListChangedType::_set_Reset(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "Reset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemAdded
void System::ComponentModel::ListChangedType::_set_ItemAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemDeleted
void System::ComponentModel::ListChangedType::_set_ItemDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemMoved
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemMoved"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemMoved
void System::ComponentModel::ListChangedType::_set_ItemMoved(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemMoved", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemChanged
void System::ComponentModel::ListChangedType::_set_ItemChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ListSortDescription
#include "System/ComponentModel/ListSortDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor <PropertyDescriptor>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ListSortDescription::dyn_$PropertyDescriptor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::dyn_$PropertyDescriptor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyDescriptor>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListSortDirection <SortDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListSortDirection& System::ComponentModel::ListSortDescription::dyn_$SortDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::dyn_$SortDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SortDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListSortDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ListSortDescription::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::get_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.set_PropertyDescriptor
void System::ComponentModel::ListSortDescription::set_PropertyDescriptor(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::set_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.get_SortDirection
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDescription::get_SortDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::get_SortDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.set_SortDirection
void System::ComponentModel::ListSortDescription::set_SortDirection(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::set_SortDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SortDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListSortDescriptionCollection
#include "System/ComponentModel/ListSortDescriptionCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.ComponentModel.ListSortDescription
#include "System/ComponentModel/ListSortDescription.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _sorts
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::ComponentModel::ListSortDescriptionCollection::dyn__sorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::dyn__sorts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sorts"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.get_Item
::System::ComponentModel::ListSortDescription* System::ComponentModel::ListSortDescriptionCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDescription*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.set_Item
void System::ComponentModel::ListSortDescriptionCollection::set_Item(int index, ::System::ComponentModel::ListSortDescription* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.set_Item
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Add
int System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Clear
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.Contains
bool System::ComponentModel::ListSortDescriptionCollection::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.IndexOf
int System::ComponentModel::ListSortDescriptionCollection::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Insert
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Remove
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.get_Count
int System::ComponentModel::ListSortDescriptionCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::ListSortDescriptionCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.CopyTo
void System::ComponentModel::ListSortDescriptionCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::ListSortDescriptionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListSortDirection
#include "System/ComponentModel/ListSortDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListSortDirection Ascending
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDirection::_get_Ascending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_get_Ascending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListSortDirection>("System.ComponentModel", "ListSortDirection", "Ascending"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListSortDirection Ascending
void System::ComponentModel::ListSortDirection::_set_Ascending(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_set_Ascending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListSortDirection", "Ascending", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListSortDirection Descending
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDirection::_get_Descending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_get_Descending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListSortDirection>("System.ComponentModel", "ListSortDirection", "Descending"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListSortDirection Descending
void System::ComponentModel::ListSortDirection::_set_Descending(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_set_Descending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListSortDirection", "Descending", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListSortDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LookupBindingPropertiesAttribute
#include "System/ComponentModel/LookupBindingPropertiesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
::System::ComponentModel::LookupBindingPropertiesAttribute* System::ComponentModel::LookupBindingPropertiesAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LookupBindingPropertiesAttribute*>("System.ComponentModel", "LookupBindingPropertiesAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
void System::ComponentModel::LookupBindingPropertiesAttribute::_set_Default(::System::ComponentModel::LookupBindingPropertiesAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LookupBindingPropertiesAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <DataSource>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$DataSource$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$DataSource$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DataSource>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <DisplayMember>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$DisplayMember$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$DisplayMember$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisplayMember>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <ValueMember>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$ValueMember$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$ValueMember$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValueMember>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <LookupMember>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$LookupMember$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_$LookupMember$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LookupMember>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_DataSource
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_DisplayMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_ValueMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_LookupMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LookupMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute..cctor
void System::ComponentModel::LookupBindingPropertiesAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LookupBindingPropertiesAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.Equals
bool System::ComponentModel::LookupBindingPropertiesAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode
int System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_eventDisposed
::Il2CppObject* System::ComponentModel::MarshalByValueComponent::_get_s_eventDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::_get_s_eventDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "MarshalByValueComponent", "s_eventDisposed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_eventDisposed
void System::ComponentModel::MarshalByValueComponent::_set_s_eventDisposed(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::_set_s_eventDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MarshalByValueComponent", "s_eventDisposed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISite _site
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISite*& System::ComponentModel::MarshalByValueComponent::dyn__site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::dyn__site");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_site"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList _events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList*& System::ComponentModel::MarshalByValueComponent::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.add_Disposed
void System::ComponentModel::MarshalByValueComponent::add_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::add_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.remove_Disposed
void System::ComponentModel::MarshalByValueComponent::remove_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::remove_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Events
::System::ComponentModel::EventHandlerList* System::ComponentModel::MarshalByValueComponent::get_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Site
::System::ComponentModel::ISite* System::ComponentModel::MarshalByValueComponent::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.set_Site
void System::ComponentModel::MarshalByValueComponent::set_Site(::System::ComponentModel::ISite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::set_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Dispose
void System::ComponentModel::MarshalByValueComponent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Dispose
void System::ComponentModel::MarshalByValueComponent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::MarshalByValueComponent::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.GetService
::Il2CppObject* System::ComponentModel::MarshalByValueComponent::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_DesignMode
bool System::ComponentModel::MarshalByValueComponent::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent..cctor
void System::ComponentModel::MarshalByValueComponent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MarshalByValueComponent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Finalize
void System::ComponentModel::MarshalByValueComponent::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.ToString
::StringW System::ComponentModel::MarshalByValueComponent::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MaskedTextProvider/CharDescriptor
#include "System/ComponentModel/MaskedTextProvider_CharDescriptor.hpp"
// Including type: System.ComponentModel.MaskedTextProvider
#include "System/ComponentModel/MaskedTextProvider.hpp"
// Including type: System.ComponentModel.MaskedTextProvider/CaseConversion
#include "System/ComponentModel/MaskedTextProvider_CaseConversion.hpp"
// Including type: System.ComponentModel.MaskedTextProvider/CharType
#include "System/ComponentModel/MaskedTextProvider_CharType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.ComponentModel.MaskedTextResultHint
#include "System/ComponentModel/MaskedTextResultHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char SPACE_CHAR
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_SPACE_CHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_SPACE_CHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "SPACE_CHAR"));
}
// Autogenerated static field setter
// Set static field: static private System.Char SPACE_CHAR
void System::ComponentModel::MaskedTextProvider::_set_SPACE_CHAR(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_SPACE_CHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "SPACE_CHAR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char DEFAULT_PROMPT_CHAR
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_DEFAULT_PROMPT_CHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_DEFAULT_PROMPT_CHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "DEFAULT_PROMPT_CHAR"));
}
// Autogenerated static field setter
// Set static field: static private System.Char DEFAULT_PROMPT_CHAR
void System::ComponentModel::MaskedTextProvider::_set_DEFAULT_PROMPT_CHAR(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_DEFAULT_PROMPT_CHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "DEFAULT_PROMPT_CHAR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char NULL_PASSWORD_CHAR
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_NULL_PASSWORD_CHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_NULL_PASSWORD_CHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "NULL_PASSWORD_CHAR"));
}
// Autogenerated static field setter
// Set static field: static private System.Char NULL_PASSWORD_CHAR
void System::ComponentModel::MaskedTextProvider::_set_NULL_PASSWORD_CHAR(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_NULL_PASSWORD_CHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "NULL_PASSWORD_CHAR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean DEFAULT_ALLOW_PROMPT
bool System::ComponentModel::MaskedTextProvider::_get_DEFAULT_ALLOW_PROMPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_DEFAULT_ALLOW_PROMPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "DEFAULT_ALLOW_PROMPT"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean DEFAULT_ALLOW_PROMPT
void System::ComponentModel::MaskedTextProvider::_set_DEFAULT_ALLOW_PROMPT(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_DEFAULT_ALLOW_PROMPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "DEFAULT_ALLOW_PROMPT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INVALID_INDEX
int System::ComponentModel::MaskedTextProvider::_get_INVALID_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_INVALID_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "INVALID_INDEX"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INVALID_INDEX
void System::ComponentModel::MaskedTextProvider::_set_INVALID_INDEX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_INVALID_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "INVALID_INDEX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte EDIT_ANY
uint8_t System::ComponentModel::MaskedTextProvider::_get_EDIT_ANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_EDIT_ANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "EDIT_ANY"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte EDIT_ANY
void System::ComponentModel::MaskedTextProvider::_set_EDIT_ANY(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_EDIT_ANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "EDIT_ANY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte EDIT_UNASSIGNED
uint8_t System::ComponentModel::MaskedTextProvider::_get_EDIT_UNASSIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_EDIT_UNASSIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "EDIT_UNASSIGNED"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte EDIT_UNASSIGNED
void System::ComponentModel::MaskedTextProvider::_set_EDIT_UNASSIGNED(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_EDIT_UNASSIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "EDIT_UNASSIGNED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte EDIT_ASSIGNED
uint8_t System::ComponentModel::MaskedTextProvider::_get_EDIT_ASSIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_EDIT_ASSIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "EDIT_ASSIGNED"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte EDIT_ASSIGNED
void System::ComponentModel::MaskedTextProvider::_set_EDIT_ASSIGNED(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_EDIT_ASSIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "EDIT_ASSIGNED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean FORWARD
bool System::ComponentModel::MaskedTextProvider::_get_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "FORWARD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean FORWARD
void System::ComponentModel::MaskedTextProvider::_set_FORWARD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean BACKWARD
bool System::ComponentModel::MaskedTextProvider::_get_BACKWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_BACKWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "BACKWARD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean BACKWARD
void System::ComponentModel::MaskedTextProvider::_set_BACKWARD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_BACKWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "BACKWARD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_ASCII_ONLY
int System::ComponentModel::MaskedTextProvider::_get_s_ASCII_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_ASCII_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_ASCII_ONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_ASCII_ONLY
void System::ComponentModel::MaskedTextProvider::_set_s_ASCII_ONLY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_ASCII_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_ASCII_ONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_ALLOW_PROMPT_AS_INPUT
int System::ComponentModel::MaskedTextProvider::_get_s_ALLOW_PROMPT_AS_INPUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_ALLOW_PROMPT_AS_INPUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_ALLOW_PROMPT_AS_INPUT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_ALLOW_PROMPT_AS_INPUT
void System::ComponentModel::MaskedTextProvider::_set_s_ALLOW_PROMPT_AS_INPUT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_ALLOW_PROMPT_AS_INPUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_ALLOW_PROMPT_AS_INPUT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_INCLUDE_PROMPT
int System::ComponentModel::MaskedTextProvider::_get_s_INCLUDE_PROMPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_INCLUDE_PROMPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_INCLUDE_PROMPT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_INCLUDE_PROMPT
void System::ComponentModel::MaskedTextProvider::_set_s_INCLUDE_PROMPT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_INCLUDE_PROMPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_INCLUDE_PROMPT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_INCLUDE_LITERALS
int System::ComponentModel::MaskedTextProvider::_get_s_INCLUDE_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_INCLUDE_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_INCLUDE_LITERALS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_INCLUDE_LITERALS
void System::ComponentModel::MaskedTextProvider::_set_s_INCLUDE_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_INCLUDE_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_INCLUDE_LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_RESET_ON_PROMPT
int System::ComponentModel::MaskedTextProvider::_get_s_RESET_ON_PROMPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_RESET_ON_PROMPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_RESET_ON_PROMPT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_RESET_ON_PROMPT
void System::ComponentModel::MaskedTextProvider::_set_s_RESET_ON_PROMPT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_RESET_ON_PROMPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_RESET_ON_PROMPT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_RESET_ON_LITERALS
int System::ComponentModel::MaskedTextProvider::_get_s_RESET_ON_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_RESET_ON_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_RESET_ON_LITERALS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_RESET_ON_LITERALS
void System::ComponentModel::MaskedTextProvider::_set_s_RESET_ON_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_RESET_ON_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_RESET_ON_LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_SKIP_SPACE
int System::ComponentModel::MaskedTextProvider::_get_s_SKIP_SPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_SKIP_SPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "s_SKIP_SPACE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_SKIP_SPACE
void System::ComponentModel::MaskedTextProvider::_set_s_SKIP_SPACE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_SKIP_SPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_SKIP_SPACE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type s_maskTextProviderType
::System::Type* System::ComponentModel::MaskedTextProvider::_get_s_maskTextProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_s_maskTextProviderType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.ComponentModel", "MaskedTextProvider", "s_maskTextProviderType"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_maskTextProviderType
void System::ComponentModel::MaskedTextProvider::_set_s_maskTextProviderType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_s_maskTextProviderType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "s_maskTextProviderType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.BitVector32 _flagState
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::BitVector32& System::ComponentModel::MaskedTextProvider::dyn__flagState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__flagState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flagState"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::BitVector32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _testString
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::ComponentModel::MaskedTextProvider::dyn__testString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__testString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testString"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requiredCharCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn__requiredCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__requiredCharCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredCharCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requiredEditChars
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn__requiredEditChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__requiredEditChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredEditChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _optionalEditChars
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn__optionalEditChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__optionalEditChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionalEditChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _passwordChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::ComponentModel::MaskedTextProvider::dyn__passwordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__passwordChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passwordChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _promptChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::ComponentModel::MaskedTextProvider::dyn__promptChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__promptChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ComponentModel.MaskedTextProvider/CharDescriptor> _stringDescriptor
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ComponentModel::MaskedTextProvider::CharDescriptor*>*& System::ComponentModel::MaskedTextProvider::dyn__stringDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn__stringDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringDescriptor"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ComponentModel::MaskedTextProvider::CharDescriptor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <AssignedEditPositionCount>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn_$AssignedEditPositionCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_$AssignedEditPositionCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AssignedEditPositionCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CultureInfo <Culture>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::ComponentModel::MaskedTextProvider::dyn_$Culture$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_$Culture$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Culture>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Mask>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MaskedTextProvider::dyn_$Mask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_$Mask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Mask>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Initialize
void System::ComponentModel::MaskedTextProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AllowPromptAsInput
bool System::ComponentModel::MaskedTextProvider::get_AllowPromptAsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AllowPromptAsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPromptAsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AssignedEditPositionCount
int System::ComponentModel::MaskedTextProvider::get_AssignedEditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AssignedEditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssignedEditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_AssignedEditPositionCount
void System::ComponentModel::MaskedTextProvider::set_AssignedEditPositionCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_AssignedEditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AssignedEditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AvailableEditPositionCount
int System::ComponentModel::MaskedTextProvider::get_AvailableEditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AvailableEditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableEditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clone
::Il2CppObject* System::ComponentModel::MaskedTextProvider::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MaskedTextProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Culture
::System::Globalization::CultureInfo* System::ComponentModel::MaskedTextProvider::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_DefaultPasswordChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_DefaultPasswordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_DefaultPasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "get_DefaultPasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_EditPositionCount
int System::ComponentModel::MaskedTextProvider::get_EditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_EditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_EditPositions
::System::Collections::IEnumerator* System::ComponentModel::MaskedTextProvider::get_EditPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_EditPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IncludeLiterals
bool System::ComponentModel::MaskedTextProvider::get_IncludeLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IncludeLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludeLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IncludeLiterals
void System::ComponentModel::MaskedTextProvider::set_IncludeLiterals(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IncludeLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludeLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IncludePrompt
bool System::ComponentModel::MaskedTextProvider::get_IncludePrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IncludePrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludePrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IncludePrompt
void System::ComponentModel::MaskedTextProvider::set_IncludePrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IncludePrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludePrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AsciiOnly
bool System::ComponentModel::MaskedTextProvider::get_AsciiOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AsciiOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsciiOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IsPassword
bool System::ComponentModel::MaskedTextProvider::get_IsPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IsPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IsPassword
void System::ComponentModel::MaskedTextProvider::set_IsPassword(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IsPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_InvalidIndex
int System::ComponentModel::MaskedTextProvider::get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_InvalidIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "get_InvalidIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_LastAssignedPosition
int System::ComponentModel::MaskedTextProvider::get_LastAssignedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_LastAssignedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastAssignedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Length
int System::ComponentModel::MaskedTextProvider::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Mask
::StringW System::ComponentModel::MaskedTextProvider::get_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_MaskCompleted
bool System::ComponentModel::MaskedTextProvider::get_MaskCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_MaskCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_MaskFull
bool System::ComponentModel::MaskedTextProvider::get_MaskFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_MaskFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_PasswordChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_PasswordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_PasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_PasswordChar
void System::ComponentModel::MaskedTextProvider::set_PasswordChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_PasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_PromptChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_PromptChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_PromptChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PromptChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_PromptChar
void System::ComponentModel::MaskedTextProvider::set_PromptChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_PromptChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PromptChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_ResetOnPrompt
bool System::ComponentModel::MaskedTextProvider::get_ResetOnPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_ResetOnPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetOnPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_ResetOnPrompt
void System::ComponentModel::MaskedTextProvider::set_ResetOnPrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_ResetOnPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetOnPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_ResetOnSpace
bool System::ComponentModel::MaskedTextProvider::get_ResetOnSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_ResetOnSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetOnSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_ResetOnSpace
void System::ComponentModel::MaskedTextProvider::set_ResetOnSpace(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_ResetOnSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetOnSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_SkipLiterals
bool System::ComponentModel::MaskedTextProvider::get_SkipLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_SkipLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_SkipLiterals
void System::ComponentModel::MaskedTextProvider::set_SkipLiterals(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_SkipLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SkipLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Item
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::Il2CppChar input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clear
void System::ComponentModel::MaskedTextProvider::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clear
void System::ComponentModel::MaskedTextProvider::Clear(ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAssignedEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAssignedEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindEditPositionInRange(int startPosition, int endPosition, bool direction, uint8_t assignedStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(assignedStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction, assignedStatus);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindNonEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindNonEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNonEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindNonEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindNonEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNonEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindPositionInRange
int System::ComponentModel::MaskedTextProvider::FindPositionInRange(int startPosition, int endPosition, bool direction, ::System::ComponentModel::MaskedTextProvider::CharType charTypeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(charTypeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction, charTypeFlags);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindUnassignedEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindUnassignedEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint
bool System::ComponentModel::MaskedTextProvider::GetOperationResultFromHint(::System::ComponentModel::MaskedTextResultHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::GetOperationResultFromHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "GetOperationResultFromHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hint);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::Il2CppChar input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::StringW input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAtInt
bool System::ComponentModel::MaskedTextProvider::InsertAtInt(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint, bool testOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAtInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAtInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>(), ::il2cpp_utils::ExtractType(testOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint), testOnly);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAscii
bool System::ComponentModel::MaskedTextProvider::IsAscii(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAciiAlphanumeric
bool System::ComponentModel::MaskedTextProvider::IsAciiAlphanumeric(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAciiAlphanumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAciiAlphanumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAlphanumeric
bool System::ComponentModel::MaskedTextProvider::IsAlphanumeric(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAlphanumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAlphanumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAsciiLetter
bool System::ComponentModel::MaskedTextProvider::IsAsciiLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAvailablePosition
bool System::ComponentModel::MaskedTextProvider::IsAvailablePosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAvailablePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvailablePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsEditPosition
bool System::ComponentModel::MaskedTextProvider::IsEditPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsEditPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEditPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsEditPosition
bool System::ComponentModel::MaskedTextProvider::IsEditPosition(::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsEditPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsEditPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDescriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsLiteralPosition
bool System::ComponentModel::MaskedTextProvider::IsLiteralPosition(::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsLiteralPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsLiteralPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDescriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsPrintableChar
bool System::ComponentModel::MaskedTextProvider::IsPrintableChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsPrintableChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsPrintableChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidInputChar
bool System::ComponentModel::MaskedTextProvider::IsValidInputChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidInputChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidInputChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidMaskChar
bool System::ComponentModel::MaskedTextProvider::IsValidMaskChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidMaskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidMaskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar
bool System::ComponentModel::MaskedTextProvider::IsValidPasswordChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidPasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidPasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Remove
bool System::ComponentModel::MaskedTextProvider::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Remove
bool System::ComponentModel::MaskedTextProvider::Remove(ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int startPosition, int endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAtInt
bool System::ComponentModel::MaskedTextProvider::RemoveAtInt(int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint, bool testOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAtInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>(), ::il2cpp_utils::ExtractType(testOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition, byref(testPosition), byref(resultHint), testOnly);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ResetChar
void System::ComponentModel::MaskedTextProvider::ResetChar(int testPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ResetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, testPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ResetString
void System::ComponentModel::MaskedTextProvider::ResetString(int startPosition, int endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ResetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPosition, endPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Set
bool System::ComponentModel::MaskedTextProvider::Set(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Set
bool System::ComponentModel::MaskedTextProvider::Set(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetChar
void System::ComponentModel::MaskedTextProvider::SetChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetChar
void System::ComponentModel::MaskedTextProvider::SetChar(::Il2CppChar input, int position, ::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(charDescriptor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, position, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetString
void System::ComponentModel::MaskedTextProvider::SetString(::StringW input, int testPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(testPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, testPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestChar
bool System::ComponentModel::MaskedTextProvider::TestChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestEscapeChar
bool System::ComponentModel::MaskedTextProvider::TestEscapeChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestEscapeChar
bool System::ComponentModel::MaskedTextProvider::TestEscapeChar(::Il2CppChar input, int position, ::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(charDex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, charDex);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestSetChar
bool System::ComponentModel::MaskedTextProvider::TestSetChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestSetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestSetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestSetString
bool System::ComponentModel::MaskedTextProvider::TestSetString(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestSetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestSetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestString
bool System::ComponentModel::MaskedTextProvider::TestString(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToDisplayString
::StringW System::ComponentModel::MaskedTextProvider::ToDisplayString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToDisplayString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDisplayString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool includePrompt, bool includeLiterals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrompt, includeLiterals);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool includePrompt, bool includeLiterals, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrompt, includeLiterals, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar), ::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar, includePrompt, includeLiterals, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyChar
bool System::ComponentModel::MaskedTextProvider::VerifyChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(hint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar
bool System::ComponentModel::MaskedTextProvider::VerifyEscapeChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyString
bool System::ComponentModel::MaskedTextProvider::VerifyString(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyString
bool System::ComponentModel::MaskedTextProvider::VerifyString(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider..cctor
void System::ComponentModel::MaskedTextProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextProvider/CaseConversion
#include "System/ComponentModel/MaskedTextProvider_CaseConversion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion None
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion None
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_None(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToLower
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToLower"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToLower
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToLower(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToLower", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToUpper
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToUpper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToUpper"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToUpper
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToUpper(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToUpper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToUpper", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CaseConversion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextProvider/CharType
#include "System/ComponentModel/MaskedTextProvider_CharType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType EditOptional
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_EditOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_EditOptional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "EditOptional"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType EditOptional
void System::ComponentModel::MaskedTextProvider::CharType::_set_EditOptional(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_EditOptional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "EditOptional", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType EditRequired
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_EditRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_EditRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "EditRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType EditRequired
void System::ComponentModel::MaskedTextProvider::CharType::_set_EditRequired(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_EditRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "EditRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Separator
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Separator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Separator"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Separator
void System::ComponentModel::MaskedTextProvider::CharType::_set_Separator(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Separator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Separator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Literal
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Literal
void System::ComponentModel::MaskedTextProvider::CharType::_set_Literal(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Modifier
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Modifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Modifier"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Modifier
void System::ComponentModel::MaskedTextProvider::CharType::_set_Modifier(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Modifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Modifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CharType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MaskedTextProvider/CharDescriptor
#include "System/ComponentModel/MaskedTextProvider_CharDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaskPosition
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_MaskPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_MaskPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaskPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.ComponentModel.MaskedTextProvider/CaseConversion CaseConversion
[[deprecated("Use field access instead!")]] ::System::ComponentModel::MaskedTextProvider::CaseConversion& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CaseConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CaseConversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CaseConversion"))->offset;
  return *reinterpret_cast<::System::ComponentModel::MaskedTextProvider::CaseConversion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.ComponentModel.MaskedTextProvider/CharType CharType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::MaskedTextProvider::CharType& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::MaskedTextProvider::CharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsAssigned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_IsAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_IsAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsAssigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider/CharDescriptor.ToString
::StringW System::ComponentModel::MaskedTextProvider::CharDescriptor::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextResultHint
#include "System/ComponentModel/MaskedTextResultHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint Unknown
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint Unknown
void System::ComponentModel::MaskedTextResultHint::_set_Unknown(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint CharacterEscaped
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_CharacterEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_CharacterEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "CharacterEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint CharacterEscaped
void System::ComponentModel::MaskedTextResultHint::_set_CharacterEscaped(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_CharacterEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "CharacterEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint NoEffect
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_NoEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_NoEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "NoEffect"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint NoEffect
void System::ComponentModel::MaskedTextResultHint::_set_NoEffect(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_NoEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "NoEffect", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint SideEffect
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_SideEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_SideEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "SideEffect"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint SideEffect
void System::ComponentModel::MaskedTextResultHint::_set_SideEffect(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_SideEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "SideEffect", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint Success
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint Success
void System::ComponentModel::MaskedTextResultHint::_set_Success(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint AsciiCharacterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_AsciiCharacterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_AsciiCharacterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "AsciiCharacterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint AsciiCharacterExpected
void System::ComponentModel::MaskedTextResultHint::_set_AsciiCharacterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_AsciiCharacterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "AsciiCharacterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint AlphanumericCharacterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_AlphanumericCharacterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_AlphanumericCharacterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "AlphanumericCharacterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint AlphanumericCharacterExpected
void System::ComponentModel::MaskedTextResultHint::_set_AlphanumericCharacterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_AlphanumericCharacterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "AlphanumericCharacterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint DigitExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_DigitExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_DigitExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "DigitExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint DigitExpected
void System::ComponentModel::MaskedTextResultHint::_set_DigitExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_DigitExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "DigitExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint LetterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_LetterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_LetterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "LetterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint LetterExpected
void System::ComponentModel::MaskedTextResultHint::_set_LetterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_LetterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "LetterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint SignedDigitExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_SignedDigitExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_SignedDigitExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "SignedDigitExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint SignedDigitExpected
void System::ComponentModel::MaskedTextResultHint::_set_SignedDigitExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_SignedDigitExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "SignedDigitExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint InvalidInput
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_InvalidInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_InvalidInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "InvalidInput"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint InvalidInput
void System::ComponentModel::MaskedTextResultHint::_set_InvalidInput(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_InvalidInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "InvalidInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint PromptCharNotAllowed
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_PromptCharNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_PromptCharNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "PromptCharNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint PromptCharNotAllowed
void System::ComponentModel::MaskedTextResultHint::_set_PromptCharNotAllowed(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_PromptCharNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "PromptCharNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint UnavailableEditPosition
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_UnavailableEditPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_UnavailableEditPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "UnavailableEditPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint UnavailableEditPosition
void System::ComponentModel::MaskedTextResultHint::_set_UnavailableEditPosition(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_UnavailableEditPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "UnavailableEditPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint NonEditPosition
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_NonEditPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_NonEditPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "NonEditPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint NonEditPosition
void System::ComponentModel::MaskedTextResultHint::_set_NonEditPosition(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_NonEditPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "NonEditPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint PositionOutOfRange
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_PositionOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_PositionOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "PositionOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint PositionOutOfRange
void System::ComponentModel::MaskedTextResultHint::_set_PositionOutOfRange(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_PositionOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "PositionOutOfRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextResultHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MultilineStringConverter
#include "System/ComponentModel/MultilineStringConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.MultilineStringConverter.ConvertTo
::Il2CppObject* System::ComponentModel::MultilineStringConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.MultilineStringConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::MultilineStringConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.MultilineStringConverter.GetPropertiesSupported
bool System::ComponentModel::MultilineStringConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NestedContainer
#include "System/ComponentModel/NestedContainer.hpp"
// Including type: System.ComponentModel.NestedContainer/Site
#include "System/ComponentModel/NestedContainer_Site.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.IComponent <Owner>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IComponent*& System::ComponentModel::NestedContainer::dyn_$Owner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::dyn_$Owner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Owner>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IComponent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.NestedContainer.get_Owner
::System::ComponentModel::IComponent* System::ComponentModel::NestedContainer::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::get_Owner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer.get_OwnerName
::StringW System::ComponentModel::NestedContainer::get_OwnerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::get_OwnerName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer.OnOwnerDisposed
void System::ComponentModel::NestedContainer::OnOwnerDisposed(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::OnOwnerDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOwnerDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.NestedContainer.CreateSite
::System::ComponentModel::ISite* System::ComponentModel::NestedContainer::CreateSite(::System::ComponentModel::IComponent* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::CreateSite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Container*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method, component, name);
}
// Autogenerated method: System.ComponentModel.NestedContainer.Dispose
void System::ComponentModel::NestedContainer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Container*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.NestedContainer.GetService
::Il2CppObject* System::ComponentModel::NestedContainer::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Container*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NestedContainer/Site
#include "System/ComponentModel/NestedContainer_Site.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::NestedContainer::Site::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.IComponent <Component>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IComponent*& System::ComponentModel::NestedContainer::Site::dyn_$Component$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::dyn_$Component$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Component>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IComponent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.IContainer <Container>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IContainer*& System::ComponentModel::NestedContainer::Site::dyn_$Container$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::dyn_$Container$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Container>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.get_Component
::System::ComponentModel::IComponent* System::ComponentModel::NestedContainer::Site::get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::get_Component");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::NestedContainer::Site::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.GetService
::Il2CppObject* System::ComponentModel::NestedContainer::Site::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.get_DesignMode
bool System::ComponentModel::NestedContainer::Site::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.get_FullName
::StringW System::ComponentModel::NestedContainer::Site::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::get_FullName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.get_Name
::StringW System::ComponentModel::NestedContainer::Site::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NestedContainer/Site.set_Name
void System::ComponentModel::NestedContainer::Site::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NestedContainer::Site::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::NestedContainer::Site*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NullableConverter
#include "System/ComponentModel/NullableConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <NullableType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::NullableConverter::dyn_$NullableType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::dyn_$NullableType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NullableType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <UnderlyingType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::NullableConverter::dyn_$UnderlyingType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::dyn_$UnderlyingType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnderlyingType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.TypeConverter <UnderlyingTypeConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::NullableConverter::dyn_$UnderlyingTypeConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::dyn_$UnderlyingTypeConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnderlyingTypeConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.NullableConverter.get_NullableType
::System::Type* System::ComponentModel::NullableConverter::get_NullableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::get_NullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NullableConverter.get_UnderlyingType
::System::Type* System::ComponentModel::NullableConverter::get_UnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::get_UnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NullableConverter.get_UnderlyingTypeConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::NullableConverter::get_UnderlyingTypeConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::get_UnderlyingTypeConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingTypeConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NullableConverter.CanConvertFrom
bool System::ComponentModel::NullableConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.NullableConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::NullableConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.NullableConverter.CanConvertTo
bool System::ComponentModel::NullableConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.NullableConverter.ConvertTo
::Il2CppObject* System::ComponentModel::NullableConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.NullableConverter.CreateInstance
::Il2CppObject* System::ComponentModel::NullableConverter::CreateInstance(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Collections::IDictionary* propertyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, propertyValues);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetCreateInstanceSupported
bool System::ComponentModel::NullableConverter::GetCreateInstanceSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetCreateInstanceSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::NullableConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetPropertiesSupported
bool System::ComponentModel::NullableConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::NullableConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetStandardValuesExclusive
bool System::ComponentModel::NullableConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.NullableConverter.GetStandardValuesSupported
bool System::ComponentModel::NullableConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.NullableConverter.IsValid
bool System::ComponentModel::NullableConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NullableConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PasswordPropertyTextAttribute
#include "System/ComponentModel/PasswordPropertyTextAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute Yes
::System::ComponentModel::PasswordPropertyTextAttribute* System::ComponentModel::PasswordPropertyTextAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PasswordPropertyTextAttribute*>("System.ComponentModel", "PasswordPropertyTextAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute Yes
void System::ComponentModel::PasswordPropertyTextAttribute::_set_Yes(::System::ComponentModel::PasswordPropertyTextAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PasswordPropertyTextAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute No
::System::ComponentModel::PasswordPropertyTextAttribute* System::ComponentModel::PasswordPropertyTextAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PasswordPropertyTextAttribute*>("System.ComponentModel", "PasswordPropertyTextAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute No
void System::ComponentModel::PasswordPropertyTextAttribute::_set_No(::System::ComponentModel::PasswordPropertyTextAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PasswordPropertyTextAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute Default
::System::ComponentModel::PasswordPropertyTextAttribute* System::ComponentModel::PasswordPropertyTextAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PasswordPropertyTextAttribute*>("System.ComponentModel", "PasswordPropertyTextAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PasswordPropertyTextAttribute Default
void System::ComponentModel::PasswordPropertyTextAttribute::_set_Default(::System::ComponentModel::PasswordPropertyTextAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PasswordPropertyTextAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Password>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PasswordPropertyTextAttribute::dyn_$Password$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::dyn_$Password$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Password>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PasswordPropertyTextAttribute.get_Password
bool System::ComponentModel::PasswordPropertyTextAttribute::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PasswordPropertyTextAttribute..cctor
void System::ComponentModel::PasswordPropertyTextAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "PasswordPropertyTextAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.PasswordPropertyTextAttribute.Equals
bool System::ComponentModel::PasswordPropertyTextAttribute::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode
int System::ComponentModel::PasswordPropertyTextAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute
bool System::ComponentModel::PasswordPropertyTextAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PasswordPropertyTextAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter _converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::PropertyDescriptor::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _valueChangedHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::ComponentModel::PropertyDescriptor::dyn__valueChangedHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn__valueChangedHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueChangedHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _editors
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ComponentModel::PropertyDescriptor::dyn__editors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn__editors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editors"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] _editorTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::PropertyDescriptor::dyn__editorTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn__editorTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _editorCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptor::dyn__editorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn__editorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_ComponentType
::System::Type* System::ComponentModel::PropertyDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_Converter
::System::ComponentModel::TypeConverter* System::ComponentModel::PropertyDescriptor::get_Converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_Converter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_IsLocalizable
bool System::ComponentModel::PropertyDescriptor::get_IsLocalizable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_IsLocalizable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptor::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_SerializationVisibility
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::PropertyDescriptor::get_SerializationVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_SerializationVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializationVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::PropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.AddValueChanged
void System::ComponentModel::PropertyDescriptor::AddValueChanged(::Il2CppObject* component, ::System::EventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::AddValueChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, handler);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.CanResetValue
bool System::ComponentModel::PropertyDescriptor::CanResetValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::CanResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.CreateInstance
::Il2CppObject* System::ComponentModel::PropertyDescriptor::CreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetChildProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptor::GetChildProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetChildProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetChildProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptor::GetChildProperties(::ArrayW<::System::Attribute*> filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetChildProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, filter);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetChildProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptor::GetChildProperties(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetChildProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetChildProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptor::GetChildProperties(::Il2CppObject* instance, ::ArrayW<::System::Attribute*> filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetChildProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, instance, filter);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetEditor
::Il2CppObject* System::ComponentModel::PropertyDescriptor::GetEditor(::System::Type* editorBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, editorBaseType);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetTypeFromName
::System::Type* System::ComponentModel::PropertyDescriptor::GetTypeFromName(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetTypeFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeName);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetValue
::Il2CppObject* System::ComponentModel::PropertyDescriptor::GetValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.OnValueChanged
void System::ComponentModel::PropertyDescriptor::OnValueChanged(::Il2CppObject* component, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::OnValueChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, e);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.RemoveValueChanged
void System::ComponentModel::PropertyDescriptor::RemoveValueChanged(::Il2CppObject* component, ::System::EventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::RemoveValueChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, handler);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler
::System::EventHandler* System::ComponentModel::PropertyDescriptor::GetValueChangedHandler(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetValueChangedHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueChangedHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::EventHandler*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.ResetValue
void System::ComponentModel::PropertyDescriptor::ResetValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::ResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.SetValue
void System::ComponentModel::PropertyDescriptor::SetValue(::Il2CppObject* component, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue
bool System::ComponentModel::PropertyDescriptor::ShouldSerializeValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::ShouldSerializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_SupportsChangeEvents
bool System::ComponentModel::PropertyDescriptor::get_SupportsChangeEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_SupportsChangeEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.Equals
bool System::ComponentModel::PropertyDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.FillAttributes
void System::ComponentModel::PropertyDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetHashCode
int System::ComponentModel::PropertyDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetInvocationTarget
::Il2CppObject* System::ComponentModel::PropertyDescriptor::GetInvocationTarget(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetInvocationTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, instance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyDescriptorCollection*>("System.ComponentModel", "PropertyDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
void System::ComponentModel::PropertyDescriptorCollection::_set_Empty(::System::ComponentModel::PropertyDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IDictionary _cachedFoundProperties
[[deprecated("Use field access instead!")]] ::System::Collections::IDictionary*& System::ComponentModel::PropertyDescriptorCollection::dyn__cachedFoundProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__cachedFoundProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedFoundProperties"))->offset;
  return *reinterpret_cast<::System::Collections::IDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cachedIgnoreCase
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn__cachedIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__cachedIgnoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedIgnoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor[] _properties
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::PropertyDescriptor*>& System::ComponentModel::PropertyDescriptorCollection::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::PropertyDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::PropertyDescriptorCollection::dyn__namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IComparer _comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::PropertyDescriptorCollection::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _propsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn__propsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__propsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn__needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _internalSyncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::PropertyDescriptorCollection::dyn__internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn__internalSyncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalSyncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.set_Count
void System::ComponentModel::PropertyDescriptorCollection::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Add
int System::ComponentModel::PropertyDescriptorCollection::Add(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Clear
void System::ComponentModel::PropertyDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Contains
bool System::ComponentModel::PropertyDescriptorCollection::Contains(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.CopyTo
void System::ComponentModel::PropertyDescriptorCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsurePropsOwned
void System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsurePropsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsureSize
void System::ComponentModel::PropertyDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Find
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::Find(::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::IndexOf(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Insert
void System::ComponentModel::PropertyDescriptorCollection::Insert(int index, ::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Remove
void System::ComponentModel::PropertyDescriptorCollection::Remove(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort(::ArrayW<::StringW> names, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, names, comparer);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort(::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_IsFixedSize
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Values
::System::Collections::ICollection* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection..cctor
void System::ComponentModel::PropertyDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "PropertyDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection _owner
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn__owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn__owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owner"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.get_Current
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.get_Entry
::System::Collections::DictionaryEntry System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.get_Key
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.get_Value
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.MoveNext
bool System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/PropertyDescriptorEnumerator.Reset
void System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ProvidePropertyAttribute
#include "System/ComponentModel/ProvidePropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <PropertyName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ProvidePropertyAttribute::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <ReceiverTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ProvidePropertyAttribute::dyn_$ReceiverTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::dyn_$ReceiverTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceiverTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ProvidePropertyAttribute.get_PropertyName
::StringW System::ComponentModel::ProvidePropertyAttribute::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ProvidePropertyAttribute.get_ReceiverTypeName
::StringW System::ComponentModel::ProvidePropertyAttribute::get_ReceiverTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::get_ReceiverTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiverTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ProvidePropertyAttribute.Equals
bool System::ComponentModel::ProvidePropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ProvidePropertyAttribute.GetHashCode
int System::ComponentModel::ProvidePropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ProvidePropertyAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::ProvidePropertyAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ProvidePropertyAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RecommendedAsConfigurableAttribute
#include "System/ComponentModel/RecommendedAsConfigurableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute No
::System::ComponentModel::RecommendedAsConfigurableAttribute* System::ComponentModel::RecommendedAsConfigurableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RecommendedAsConfigurableAttribute*>("System.ComponentModel", "RecommendedAsConfigurableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute No
void System::ComponentModel::RecommendedAsConfigurableAttribute::_set_No(::System::ComponentModel::RecommendedAsConfigurableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RecommendedAsConfigurableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute Yes
::System::ComponentModel::RecommendedAsConfigurableAttribute* System::ComponentModel::RecommendedAsConfigurableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RecommendedAsConfigurableAttribute*>("System.ComponentModel", "RecommendedAsConfigurableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute Yes
void System::ComponentModel::RecommendedAsConfigurableAttribute::_set_Yes(::System::ComponentModel::RecommendedAsConfigurableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RecommendedAsConfigurableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute Default
::System::ComponentModel::RecommendedAsConfigurableAttribute* System::ComponentModel::RecommendedAsConfigurableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RecommendedAsConfigurableAttribute*>("System.ComponentModel", "RecommendedAsConfigurableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RecommendedAsConfigurableAttribute Default
void System::ComponentModel::RecommendedAsConfigurableAttribute::_set_Default(::System::ComponentModel::RecommendedAsConfigurableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RecommendedAsConfigurableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <RecommendedAsConfigurable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::RecommendedAsConfigurableAttribute::dyn_$RecommendedAsConfigurable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::dyn_$RecommendedAsConfigurable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RecommendedAsConfigurable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.RecommendedAsConfigurableAttribute.get_RecommendedAsConfigurable
bool System::ComponentModel::RecommendedAsConfigurableAttribute::get_RecommendedAsConfigurable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::get_RecommendedAsConfigurable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecommendedAsConfigurable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.RecommendedAsConfigurableAttribute..cctor
void System::ComponentModel::RecommendedAsConfigurableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "RecommendedAsConfigurableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.RecommendedAsConfigurableAttribute.Equals
bool System::ComponentModel::RecommendedAsConfigurableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode
int System::ComponentModel::RecommendedAsConfigurableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute
bool System::ComponentModel::RecommendedAsConfigurableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RecommendedAsConfigurableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReferenceConverter
#include "System/ComponentModel/ReferenceConverter.hpp"
// Including type: System.ComponentModel.ReferenceConverter/ReferenceComparer
#include "System/ComponentModel/ReferenceConverter_ReferenceComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String s_none
::StringW System::ComponentModel::ReferenceConverter::_get_s_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_get_s_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "ReferenceConverter", "s_none"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_none
void System::ComponentModel::ReferenceConverter::_set_s_none(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_set_s_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReferenceConverter", "s_none", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ReferenceConverter::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.IsValueAllowed
bool System::ComponentModel::ReferenceConverter::IsValueAllowed(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::IsValueAllowed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ReferenceConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter..cctor
void System::ComponentModel::ReferenceConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReferenceConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.CanConvertFrom
bool System::ComponentModel::ReferenceConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::ReferenceConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.ConvertTo
::Il2CppObject* System::ComponentModel::ReferenceConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::ReferenceConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive
bool System::ComponentModel::ReferenceConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported
bool System::ComponentModel::ReferenceConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReferenceConverter/ReferenceComparer
#include "System/ComponentModel/ReferenceConverter_ReferenceComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ReferenceConverter _converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ReferenceConverter*& System::ComponentModel::ReferenceConverter::ReferenceComparer::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::ReferenceComparer::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ReferenceConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReferenceConverter/ReferenceComparer.Compare
int System::ComponentModel::ReferenceConverter::ReferenceComparer::Compare(::Il2CppObject* item1, ::Il2CppObject* item2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::ReferenceComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ReferenceConverter::ReferenceComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item1, item2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReflectEventDescriptor
#include "System/ComponentModel/ReflectEventDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ReflectEventDescriptor::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _componentClass
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ReflectEventDescriptor::dyn__componentClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__componentClass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_componentClass"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _addMethod
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::ComponentModel::ReflectEventDescriptor::dyn__addMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__addMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _removeMethod
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::ComponentModel::ReflectEventDescriptor::dyn__removeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__removeMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removeMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.EventInfo _realEvent
[[deprecated("Use field access instead!")]] ::System::Reflection::EventInfo*& System::ComponentModel::ReflectEventDescriptor::dyn__realEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__realEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realEvent"))->offset;
  return *reinterpret_cast<::System::Reflection::EventInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _filledMethods
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ReflectEventDescriptor::dyn__filledMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::dyn__filledMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filledMethods"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.FillEventInfoAttribute
void System::ComponentModel::ReflectEventDescriptor::FillEventInfoAttribute(::System::Reflection::EventInfo* realEventInfo, ::System::Collections::IList* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::FillEventInfoAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillEventInfoAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realEventInfo), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realEventInfo, attributes);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.FillMethods
void System::ComponentModel::ReflectEventDescriptor::FillMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::FillMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.FillSingleMethodAttribute
void System::ComponentModel::ReflectEventDescriptor::FillSingleMethodAttribute(::System::Reflection::MethodInfo* realMethodInfo, ::System::Collections::IList* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::FillSingleMethodAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSingleMethodAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realMethodInfo), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realMethodInfo, attributes);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.get_ComponentType
::System::Type* System::ComponentModel::ReflectEventDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.get_EventType
::System::Type* System::ComponentModel::ReflectEventDescriptor::get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::get_EventType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.get_IsMulticast
bool System::ComponentModel::ReflectEventDescriptor::get_IsMulticast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::get_IsMulticast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.AddEventHandler
void System::ComponentModel::ReflectEventDescriptor::AddEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::AddEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.FillAttributes
void System::ComponentModel::ReflectEventDescriptor::FillAttributes(::System::Collections::IList* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.ReflectEventDescriptor.RemoveEventHandler
void System::ComponentModel::ReflectEventDescriptor::RemoveEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectEventDescriptor::RemoveEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <ComponentChanged>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::RefreshEventArgs::dyn_$ComponentChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::dyn_$ComponentChanged$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ComponentChanged>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <TypeChanged>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::RefreshEventArgs::dyn_$TypeChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::dyn_$TypeChanged$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeChanged>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.RefreshEventArgs.get_ComponentChanged
::Il2CppObject* System::ComponentModel::RefreshEventArgs::get_ComponentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::get_ComponentChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ComponentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.RefreshEventArgs.get_TypeChanged
::System::Type* System::ComponentModel::RefreshEventArgs::get_TypeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::get_TypeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RefreshEventHandler
#include "System/ComponentModel/RefreshEventHandler.hpp"
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.RefreshEventHandler.Invoke
void System::ComponentModel::RefreshEventHandler::Invoke(::System::ComponentModel::RefreshEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::RefreshEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::RefreshEventHandler::BeginInvoke(::System::ComponentModel::RefreshEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::RefreshEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, e, callback, object);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.EndInvoke
void System::ComponentModel::RefreshEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::RefreshEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RunInstallerAttribute
#include "System/ComponentModel/RunInstallerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RunInstallerAttribute Yes
::System::ComponentModel::RunInstallerAttribute* System::ComponentModel::RunInstallerAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RunInstallerAttribute*>("System.ComponentModel", "RunInstallerAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RunInstallerAttribute Yes
void System::ComponentModel::RunInstallerAttribute::_set_Yes(::System::ComponentModel::RunInstallerAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RunInstallerAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RunInstallerAttribute No
::System::ComponentModel::RunInstallerAttribute* System::ComponentModel::RunInstallerAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RunInstallerAttribute*>("System.ComponentModel", "RunInstallerAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RunInstallerAttribute No
void System::ComponentModel::RunInstallerAttribute::_set_No(::System::ComponentModel::RunInstallerAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RunInstallerAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.RunInstallerAttribute Default
::System::ComponentModel::RunInstallerAttribute* System::ComponentModel::RunInstallerAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RunInstallerAttribute*>("System.ComponentModel", "RunInstallerAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.RunInstallerAttribute Default
void System::ComponentModel::RunInstallerAttribute::_set_Default(::System::ComponentModel::RunInstallerAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "RunInstallerAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <RunInstaller>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::RunInstallerAttribute::dyn_$RunInstaller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::dyn_$RunInstaller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunInstaller>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.RunInstallerAttribute.get_RunInstaller
bool System::ComponentModel::RunInstallerAttribute::get_RunInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::get_RunInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.RunInstallerAttribute..cctor
void System::ComponentModel::RunInstallerAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "RunInstallerAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.RunInstallerAttribute.Equals
bool System::ComponentModel::RunInstallerAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.RunInstallerAttribute.GetHashCode
int System::ComponentModel::RunInstallerAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute
bool System::ComponentModel::RunInstallerAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RunInstallerAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SByteConverter
#include "System/ComponentModel/SByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SByteConverter.get_TargetType
::System::Type* System::ComponentModel::SByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SByteConverter.ToString
::StringW System::ComponentModel::SByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SettingsBindableAttribute
#include "System/ComponentModel/SettingsBindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
void System::ComponentModel::SettingsBindableAttribute::_set_Yes(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
void System::ComponentModel::SettingsBindableAttribute::_set_No(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "No", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Bindable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::SettingsBindableAttribute::dyn_$Bindable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::dyn_$Bindable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bindable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.get_Bindable
bool System::ComponentModel::SettingsBindableAttribute::get_Bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::get_Bindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute..cctor
void System::ComponentModel::SettingsBindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SettingsBindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.Equals
bool System::ComponentModel::SettingsBindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.GetHashCode
int System::ComponentModel::SettingsBindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SingleConverter
#include "System/ComponentModel/SingleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SingleConverter.get_AllowHex
bool System::ComponentModel::SingleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.get_TargetType
::System::Type* System::ComponentModel::SingleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SingleConverter.ToString
::StringW System::ComponentModel::SingleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.StringConverter
#include "System/ComponentModel/StringConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.StringConverter.CanConvertFrom
bool System::ComponentModel::StringConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.StringConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::StringConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.SyntaxCheck
#include "System/ComponentModel/SyntaxCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SyntaxCheck.CheckMachineName
bool System::ComponentModel::SyntaxCheck::CheckMachineName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SyntaxCheck::CheckMachineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SyntaxCheck", "CheckMachineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.SyntaxCheck.CheckPath
bool System::ComponentModel::SyntaxCheck::CheckPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SyntaxCheck::CheckPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SyntaxCheck", "CheckPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.SyntaxCheck.CheckRootedPath
bool System::ComponentModel::SyntaxCheck::CheckRootedPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SyntaxCheck::CheckRootedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SyntaxCheck", "CheckRootedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TimeSpanConverter
#include "System/ComponentModel/TimeSpanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertFrom
bool System::ComponentModel::TimeSpanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertTo
bool System::ComponentModel::TimeSpanConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ToolboxItemFilterAttribute
#include "System/ComponentModel/ToolboxItemFilterAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ToolboxItemFilterAttribute::dyn__typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::dyn__typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <FilterString>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ToolboxItemFilterAttribute::dyn_$FilterString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::dyn_$FilterString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FilterString>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.ToolboxItemFilterType <FilterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ToolboxItemFilterType& System::ComponentModel::ToolboxItemFilterAttribute::dyn_$FilterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::dyn_$FilterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FilterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ToolboxItemFilterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.get_FilterString
::StringW System::ComponentModel::ToolboxItemFilterAttribute::get_FilterString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::get_FilterString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.get_FilterType
::System::ComponentModel::ToolboxItemFilterType System::ComponentModel::ToolboxItemFilterAttribute::get_FilterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::get_FilterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ToolboxItemFilterType, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::ToolboxItemFilterAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.Equals
bool System::ComponentModel::ToolboxItemFilterAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode
int System::ComponentModel::ToolboxItemFilterAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.Match
bool System::ComponentModel::ToolboxItemFilterAttribute::Match(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::Match");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ToolboxItemFilterAttribute.ToString
::StringW System::ComponentModel::ToolboxItemFilterAttribute::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterAttribute::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ToolboxItemFilterType
#include "System/ComponentModel/ToolboxItemFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ToolboxItemFilterType Allow
::System::ComponentModel::ToolboxItemFilterType System::ComponentModel::ToolboxItemFilterType::_get_Allow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_get_Allow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemFilterType>("System.ComponentModel", "ToolboxItemFilterType", "Allow"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ToolboxItemFilterType Allow
void System::ComponentModel::ToolboxItemFilterType::_set_Allow(::System::ComponentModel::ToolboxItemFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_set_Allow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemFilterType", "Allow", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ToolboxItemFilterType Custom
::System::ComponentModel::ToolboxItemFilterType System::ComponentModel::ToolboxItemFilterType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemFilterType>("System.ComponentModel", "ToolboxItemFilterType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ToolboxItemFilterType Custom
void System::ComponentModel::ToolboxItemFilterType::_set_Custom(::System::ComponentModel::ToolboxItemFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemFilterType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ToolboxItemFilterType Prevent
::System::ComponentModel::ToolboxItemFilterType System::ComponentModel::ToolboxItemFilterType::_get_Prevent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_get_Prevent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemFilterType>("System.ComponentModel", "ToolboxItemFilterType", "Prevent"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ToolboxItemFilterType Prevent
void System::ComponentModel::ToolboxItemFilterType::_set_Prevent(::System::ComponentModel::ToolboxItemFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_set_Prevent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemFilterType", "Prevent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ToolboxItemFilterType Require
::System::ComponentModel::ToolboxItemFilterType System::ComponentModel::ToolboxItemFilterType::_get_Require() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_get_Require");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ToolboxItemFilterType>("System.ComponentModel", "ToolboxItemFilterType", "Require"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ToolboxItemFilterType Require
void System::ComponentModel::ToolboxItemFilterType::_set_Require(::System::ComponentModel::ToolboxItemFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::_set_Require");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ToolboxItemFilterType", "Require", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ToolboxItemFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ToolboxItemFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverterAttribute
#include "System/ComponentModel/TypeConverterAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
::System::ComponentModel::TypeConverterAttribute* System::ComponentModel::TypeConverterAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverterAttribute*>("System.ComponentModel", "TypeConverterAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
void System::ComponentModel::TypeConverterAttribute::_set_Default(::System::ComponentModel::TypeConverterAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverterAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <ConverterTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeConverterAttribute::dyn_$ConverterTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::dyn_$ConverterTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.get_ConverterTypeName
::StringW System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute..cctor
void System::ComponentModel::TypeConverterAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverterAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.Equals
bool System::ComponentModel::TypeConverterAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.GetHashCode
int System::ComponentModel::TypeConverterAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptionProvider/EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptionProvider
#include "System/ComponentModel/TypeDescriptionProvider.hpp"
// Including type: System.IServiceProvider
#include "System/IServiceProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.TypeDescriptionProvider _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider*& System::ComponentModel::TypeDescriptionProvider::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptionProvider/EmptyCustomTypeDescriptor _emptyDescriptor
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor*& System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyDescriptor"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.CreateInstance
::Il2CppObject* System::ComponentModel::TypeDescriptionProvider::CreateInstance(::System::IServiceProvider* provider, ::System::Type* objectType, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, provider, objectType, argTypes, args);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders
::ArrayW<::System::ComponentModel::IExtenderProvider*> System::ComponentModel::TypeDescriptionProvider::GetExtenderProviders(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetExtenderProviders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::ComponentModel::IExtenderProvider*>, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName
::StringW System::ComponentModel::TypeDescriptionProvider::GetFullComponentName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetFullComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetRuntimeType(::System::Type* reflectionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetRuntimeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, reflectionType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.IsSupportedType
bool System::ComponentModel::TypeDescriptionProvider::IsSupportedType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::IsSupportedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProvider/EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProviderAttribute
#include "System/ComponentModel/TypeDescriptionProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <TypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeDescriptionProviderAttribute::dyn_$TypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::dyn_$TypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProviderAttribute.get_TypeName
::StringW System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeListConverter
#include "System/ComponentModel/TypeListConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type[] _types
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::TypeListConverter::dyn__types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::dyn__types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_types"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/StandardValuesCollection _values
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::TypeListConverter::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.CanConvertFrom
bool System::ComponentModel::TypeListConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.CanConvertTo
bool System::ComponentModel::TypeListConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TypeListConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TypeListConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::TypeListConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive
bool System::ComponentModel::TypeListConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeListConverter.GetStandardValuesSupported
bool System::ComponentModel::TypeListConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeListConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt16Converter
#include "System/ComponentModel/UInt16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt16Converter.get_TargetType
::System::Type* System::ComponentModel::UInt16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.FromString
::Il2CppObject* System::ComponentModel::UInt16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.FromString
::Il2CppObject* System::ComponentModel::UInt16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.ToString
::StringW System::ComponentModel::UInt16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt32Converter
#include "System/ComponentModel/UInt32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt32Converter.get_TargetType
::System::Type* System::ComponentModel::UInt32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.FromString
::Il2CppObject* System::ComponentModel::UInt32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.FromString
::Il2CppObject* System::ComponentModel::UInt32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.ToString
::StringW System::ComponentModel::UInt32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt64Converter
#include "System/ComponentModel/UInt64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt64Converter.get_TargetType
::System::Type* System::ComponentModel::UInt64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.FromString
::Il2CppObject* System::ComponentModel::UInt64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.FromString
::Il2CppObject* System::ComponentModel::UInt64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.ToString
::StringW System::ComponentModel::UInt64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.WarningException
#include "System/ComponentModel/WarningException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <HelpUrl>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::WarningException::dyn_$HelpUrl$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WarningException::dyn_$HelpUrl$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HelpUrl>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <HelpTopic>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::WarningException::dyn_$HelpTopic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WarningException::dyn_$HelpTopic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HelpTopic>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.WarningException.get_HelpUrl
::StringW System::ComponentModel::WarningException::get_HelpUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WarningException::get_HelpUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HelpUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.WarningException.get_HelpTopic
::StringW System::ComponentModel::WarningException::get_HelpTopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WarningException::get_HelpTopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HelpTopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.WarningException.GetObjectData
void System::ComponentModel::WarningException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WarningException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CancelEventArgs
#include "System/ComponentModel/CancelEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Cancel>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::CancelEventArgs::dyn_$Cancel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventArgs::dyn_$Cancel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Cancel>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CancelEventArgs.get_Cancel
bool System::ComponentModel::CancelEventArgs::get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventArgs::get_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CancelEventArgs.set_Cancel
void System::ComponentModel::CancelEventArgs::set_Cancel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventArgs::set_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IChangeTracking
#include "System/ComponentModel/IChangeTracking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IChangeTracking.get_IsChanged
bool System::ComponentModel::IChangeTracking::get_IsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IChangeTracking::get_IsChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IChangeTracking*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IChangeTracking.AcceptChanges
void System::ComponentModel::IChangeTracking::AcceptChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IChangeTracking::AcceptChanges");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IChangeTracking*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IEditableObject
#include "System/ComponentModel/IEditableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IEditableObject.BeginEdit
void System::ComponentModel::IEditableObject::BeginEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::BeginEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IEditableObject.EndEdit
void System::ComponentModel::IEditableObject::EndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::EndEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IEditableObject.CancelEdit
void System::ComponentModel::IEditableObject::CancelEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::CancelEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IRevertibleChangeTracking
#include "System/ComponentModel/IRevertibleChangeTracking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IRevertibleChangeTracking.RejectChanges
void System::ComponentModel::IRevertibleChangeTracking::RejectChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IRevertibleChangeTracking::RejectChanges");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IRevertibleChangeTracking*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
