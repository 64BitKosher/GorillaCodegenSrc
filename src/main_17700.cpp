// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemVertexStream
#include "UnityEngine/ParticleSystemVertexStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Position
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Position
void UnityEngine::ParticleSystemVertexStream::_set_Position(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Normal
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Normal
void UnityEngine::ParticleSystemVertexStream::_set_Normal(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Tangent
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Tangent
void UnityEngine::ParticleSystemVertexStream::_set_Tangent(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Tangent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Color
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Color
void UnityEngine::ParticleSystemVertexStream::_set_Color(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream UV
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_UV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "UV"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream UV
void UnityEngine::ParticleSystemVertexStream::_set_UV(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_UV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "UV", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream UV2
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_UV2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_UV2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "UV2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream UV2
void UnityEngine::ParticleSystemVertexStream::_set_UV2(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_UV2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "UV2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream UV3
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_UV3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_UV3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "UV3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream UV3
void UnityEngine::ParticleSystemVertexStream::_set_UV3(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_UV3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "UV3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream UV4
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_UV4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_UV4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "UV4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream UV4
void UnityEngine::ParticleSystemVertexStream::_set_UV4(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_UV4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "UV4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream AnimBlend
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_AnimBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_AnimBlend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "AnimBlend"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream AnimBlend
void UnityEngine::ParticleSystemVertexStream::_set_AnimBlend(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_AnimBlend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "AnimBlend", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream AnimFrame
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_AnimFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_AnimFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "AnimFrame"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream AnimFrame
void UnityEngine::ParticleSystemVertexStream::_set_AnimFrame(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_AnimFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "AnimFrame", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Center
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Center"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Center
void UnityEngine::ParticleSystemVertexStream::_set_Center(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream VertexID
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_VertexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_VertexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "VertexID"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream VertexID
void UnityEngine::ParticleSystemVertexStream::_set_VertexID(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_VertexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "VertexID", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream SizeX
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_SizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_SizeX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "SizeX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream SizeX
void UnityEngine::ParticleSystemVertexStream::_set_SizeX(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_SizeX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "SizeX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream SizeXY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_SizeXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_SizeXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "SizeXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream SizeXY
void UnityEngine::ParticleSystemVertexStream::_set_SizeXY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_SizeXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "SizeXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream SizeXYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_SizeXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_SizeXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "SizeXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream SizeXYZ
void UnityEngine::ParticleSystemVertexStream::_set_SizeXYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_SizeXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "SizeXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Rotation
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Rotation
void UnityEngine::ParticleSystemVertexStream::_set_Rotation(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Rotation3D
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Rotation3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Rotation3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Rotation3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Rotation3D
void UnityEngine::ParticleSystemVertexStream::_set_Rotation3D(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Rotation3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Rotation3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream RotationSpeed
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_RotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_RotationSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "RotationSpeed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream RotationSpeed
void UnityEngine::ParticleSystemVertexStream::_set_RotationSpeed(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_RotationSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "RotationSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream RotationSpeed3D
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_RotationSpeed3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_RotationSpeed3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "RotationSpeed3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream RotationSpeed3D
void UnityEngine::ParticleSystemVertexStream::_set_RotationSpeed3D(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_RotationSpeed3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "RotationSpeed3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Velocity
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Velocity
void UnityEngine::ParticleSystemVertexStream::_set_Velocity(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Speed
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Speed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Speed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Speed
void UnityEngine::ParticleSystemVertexStream::_set_Speed(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Speed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Speed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream AgePercent
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_AgePercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_AgePercent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "AgePercent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream AgePercent
void UnityEngine::ParticleSystemVertexStream::_set_AgePercent(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_AgePercent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "AgePercent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream InvStartLifetime
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_InvStartLifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_InvStartLifetime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "InvStartLifetime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream InvStartLifetime
void UnityEngine::ParticleSystemVertexStream::_set_InvStartLifetime(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_InvStartLifetime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "InvStartLifetime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream StableRandomX
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_StableRandomX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_StableRandomX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "StableRandomX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream StableRandomX
void UnityEngine::ParticleSystemVertexStream::_set_StableRandomX(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_StableRandomX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "StableRandomX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_StableRandomXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_StableRandomXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "StableRandomXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXY
void UnityEngine::ParticleSystemVertexStream::_set_StableRandomXY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_StableRandomXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "StableRandomXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_StableRandomXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_StableRandomXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "StableRandomXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXYZ
void UnityEngine::ParticleSystemVertexStream::_set_StableRandomXYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_StableRandomXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "StableRandomXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXYZW
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_StableRandomXYZW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_StableRandomXYZW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "StableRandomXYZW"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream StableRandomXYZW
void UnityEngine::ParticleSystemVertexStream::_set_StableRandomXYZW(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_StableRandomXYZW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "StableRandomXYZW", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomX
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomX
void UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomX(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXY
void UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXYZ
void UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXYZW
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXYZW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_VaryingRandomXYZW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXYZW"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream VaryingRandomXYZW
void UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXYZW(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_VaryingRandomXYZW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "VaryingRandomXYZW", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom1X
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom1X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom1X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom1X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom1X
void UnityEngine::ParticleSystemVertexStream::_set_Custom1X(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom1X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom1X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom1XY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom1XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom1XY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom1XY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom1XY
void UnityEngine::ParticleSystemVertexStream::_set_Custom1XY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom1XY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom1XY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom1XYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom1XYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom1XYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom1XYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom1XYZ
void UnityEngine::ParticleSystemVertexStream::_set_Custom1XYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom1XYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom1XYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom1XYZW
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom1XYZW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom1XYZW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom1XYZW"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom1XYZW
void UnityEngine::ParticleSystemVertexStream::_set_Custom1XYZW(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom1XYZW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom1XYZW", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom2X
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom2X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom2X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom2X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom2X
void UnityEngine::ParticleSystemVertexStream::_set_Custom2X(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom2X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom2X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom2XY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom2XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom2XY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom2XY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom2XY
void UnityEngine::ParticleSystemVertexStream::_set_Custom2XY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom2XY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom2XY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom2XYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom2XYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom2XYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom2XYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom2XYZ
void UnityEngine::ParticleSystemVertexStream::_set_Custom2XYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom2XYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom2XYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream Custom2XYZW
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_Custom2XYZW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_Custom2XYZW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "Custom2XYZW"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream Custom2XYZW
void UnityEngine::ParticleSystemVertexStream::_set_Custom2XYZW(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_Custom2XYZW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "Custom2XYZW", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumX
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseSumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseSumX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseSumX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumX
void UnityEngine::ParticleSystemVertexStream::_set_NoiseSumX(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseSumX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseSumX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumXY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseSumXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseSumXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseSumXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumXY
void UnityEngine::ParticleSystemVertexStream::_set_NoiseSumXY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseSumXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseSumXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumXYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseSumXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseSumXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseSumXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseSumXYZ
void UnityEngine::ParticleSystemVertexStream::_set_NoiseSumXYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseSumXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseSumXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseX
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseX
void UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseX(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseXY
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseXY
void UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseXY(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseXYZ
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_NoiseImpulseXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream NoiseImpulseXYZ
void UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseXYZ(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_NoiseImpulseXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "NoiseImpulseXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStream MeshIndex
::UnityEngine::ParticleSystemVertexStream UnityEngine::ParticleSystemVertexStream::_get_MeshIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_get_MeshIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStream>("UnityEngine", "ParticleSystemVertexStream", "MeshIndex"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStream MeshIndex
void UnityEngine::ParticleSystemVertexStream::_set_MeshIndex(::UnityEngine::ParticleSystemVertexStream value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::_set_MeshIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStream", "MeshIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemVertexStream::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStream::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemCustomData
#include "UnityEngine/ParticleSystemCustomData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCustomData Custom1
::UnityEngine::ParticleSystemCustomData UnityEngine::ParticleSystemCustomData::_get_Custom1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCustomData::_get_Custom1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCustomData>("UnityEngine", "ParticleSystemCustomData", "Custom1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCustomData Custom1
void UnityEngine::ParticleSystemCustomData::_set_Custom1(::UnityEngine::ParticleSystemCustomData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCustomData::_set_Custom1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCustomData", "Custom1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCustomData Custom2
::UnityEngine::ParticleSystemCustomData UnityEngine::ParticleSystemCustomData::_get_Custom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCustomData::_get_Custom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCustomData>("UnityEngine", "ParticleSystemCustomData", "Custom2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCustomData Custom2
void UnityEngine::ParticleSystemCustomData::_set_Custom2(::UnityEngine::ParticleSystemCustomData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCustomData::_set_Custom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCustomData", "Custom2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemCustomData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCustomData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemForceFieldShape
#include "UnityEngine/ParticleSystemForceFieldShape.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemForceFieldShape Sphere
::UnityEngine::ParticleSystemForceFieldShape UnityEngine::ParticleSystemForceFieldShape::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemForceFieldShape>("UnityEngine", "ParticleSystemForceFieldShape", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemForceFieldShape Sphere
void UnityEngine::ParticleSystemForceFieldShape::_set_Sphere(::UnityEngine::ParticleSystemForceFieldShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemForceFieldShape", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemForceFieldShape Hemisphere
::UnityEngine::ParticleSystemForceFieldShape UnityEngine::ParticleSystemForceFieldShape::_get_Hemisphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_get_Hemisphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemForceFieldShape>("UnityEngine", "ParticleSystemForceFieldShape", "Hemisphere"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemForceFieldShape Hemisphere
void UnityEngine::ParticleSystemForceFieldShape::_set_Hemisphere(::UnityEngine::ParticleSystemForceFieldShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_set_Hemisphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemForceFieldShape", "Hemisphere", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemForceFieldShape Cylinder
::UnityEngine::ParticleSystemForceFieldShape UnityEngine::ParticleSystemForceFieldShape::_get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_get_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemForceFieldShape>("UnityEngine", "ParticleSystemForceFieldShape", "Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemForceFieldShape Cylinder
void UnityEngine::ParticleSystemForceFieldShape::_set_Cylinder(::UnityEngine::ParticleSystemForceFieldShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_set_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemForceFieldShape", "Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemForceFieldShape Box
::UnityEngine::ParticleSystemForceFieldShape UnityEngine::ParticleSystemForceFieldShape::_get_Box() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_get_Box");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemForceFieldShape>("UnityEngine", "ParticleSystemForceFieldShape", "Box"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemForceFieldShape Box
void UnityEngine::ParticleSystemForceFieldShape::_set_Box(::UnityEngine::ParticleSystemForceFieldShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::_set_Box");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemForceFieldShape", "Box", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemForceFieldShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceFieldShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemVertexStreams
#include "UnityEngine/ParticleSystemVertexStreams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Position
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Position
void UnityEngine::ParticleSystemVertexStreams::_set_Position(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Normal
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Normal
void UnityEngine::ParticleSystemVertexStreams::_set_Normal(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Tangent
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Tangent
void UnityEngine::ParticleSystemVertexStreams::_set_Tangent(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Tangent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Color
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Color
void UnityEngine::ParticleSystemVertexStreams::_set_Color(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams UV
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_UV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "UV"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams UV
void UnityEngine::ParticleSystemVertexStreams::_set_UV(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_UV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "UV", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams UV2BlendAndFrame
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_UV2BlendAndFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_UV2BlendAndFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "UV2BlendAndFrame"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams UV2BlendAndFrame
void UnityEngine::ParticleSystemVertexStreams::_set_UV2BlendAndFrame(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_UV2BlendAndFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "UV2BlendAndFrame", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams CenterAndVertexID
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_CenterAndVertexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_CenterAndVertexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "CenterAndVertexID"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams CenterAndVertexID
void UnityEngine::ParticleSystemVertexStreams::_set_CenterAndVertexID(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_CenterAndVertexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "CenterAndVertexID", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Size
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Size"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Size
void UnityEngine::ParticleSystemVertexStreams::_set_Size(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Size", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Rotation
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Rotation
void UnityEngine::ParticleSystemVertexStreams::_set_Rotation(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Velocity
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Velocity
void UnityEngine::ParticleSystemVertexStreams::_set_Velocity(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Lifetime
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Lifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Lifetime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Lifetime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Lifetime
void UnityEngine::ParticleSystemVertexStreams::_set_Lifetime(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Lifetime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Lifetime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Custom1
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Custom1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Custom1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Custom1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Custom1
void UnityEngine::ParticleSystemVertexStreams::_set_Custom1(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Custom1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Custom1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Custom2
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Custom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Custom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Custom2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Custom2
void UnityEngine::ParticleSystemVertexStreams::_set_Custom2(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Custom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Custom2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams Random
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "Random"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams Random
void UnityEngine::ParticleSystemVertexStreams::_set_Random(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams None
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams None
void UnityEngine::ParticleSystemVertexStreams::_set_None(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemVertexStreams All
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemVertexStreams::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemVertexStreams>("UnityEngine", "ParticleSystemVertexStreams", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemVertexStreams All
void UnityEngine::ParticleSystemVertexStreams::_set_All(::UnityEngine::ParticleSystemVertexStreams value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemVertexStreams", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemVertexStreams::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemVertexStreams::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemRenderer
#include "UnityEngine/ParticleSystemRenderer.hpp"
// Including type: UnityEngine.ParticleSystemVertexStreams
#include "UnityEngine/ParticleSystemVertexStreams.hpp"
// Including type: UnityEngine.ParticleSystemRenderSpace
#include "UnityEngine/ParticleSystemRenderSpace.hpp"
// Including type: UnityEngine.ParticleSystemRenderMode
#include "UnityEngine/ParticleSystemRenderMode.hpp"
// Including type: UnityEngine.ParticleSystemMeshDistribution
#include "UnityEngine/ParticleSystemMeshDistribution.hpp"
// Including type: UnityEngine.ParticleSystemSortMode
#include "UnityEngine/ParticleSystemSortMode.hpp"
// Including type: UnityEngine.SpriteMaskInteraction
#include "UnityEngine/SpriteMaskInteraction.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystemRenderer.EnableVertexStreams
void UnityEngine::ParticleSystemRenderer::EnableVertexStreams(::UnityEngine::ParticleSystemVertexStreams streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::EnableVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.DisableVertexStreams
void UnityEngine::ParticleSystemRenderer::DisableVertexStreams(::UnityEngine::ParticleSystemVertexStreams streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::DisableVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.AreVertexStreamsEnabled
bool UnityEngine::ParticleSystemRenderer::AreVertexStreamsEnabled(::UnityEngine::ParticleSystemVertexStreams streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::AreVertexStreamsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreVertexStreamsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.GetEnabledVertexStreams
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemRenderer::GetEnabledVertexStreams(::UnityEngine::ParticleSystemVertexStreams streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::GetEnabledVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnabledVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemVertexStreams, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.Internal_SetVertexStreams
void UnityEngine::ParticleSystemRenderer::Internal_SetVertexStreams(::UnityEngine::ParticleSystemVertexStreams streams, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::Internal_SetVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streams, enabled);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.Internal_GetEnabledVertexStreams
::UnityEngine::ParticleSystemVertexStreams UnityEngine::ParticleSystemRenderer::Internal_GetEnabledVertexStreams(::UnityEngine::ParticleSystemVertexStreams streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::Internal_GetEnabledVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetEnabledVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemVertexStreams, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_alignment
::UnityEngine::ParticleSystemRenderSpace UnityEngine::ParticleSystemRenderer::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemRenderSpace, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_alignment
void UnityEngine::ParticleSystemRenderer::set_alignment(::UnityEngine::ParticleSystemRenderSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_renderMode
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderer::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemRenderMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_renderMode
void UnityEngine::ParticleSystemRenderer::set_renderMode(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_meshDistribution
::UnityEngine::ParticleSystemMeshDistribution UnityEngine::ParticleSystemRenderer::get_meshDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_meshDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemMeshDistribution, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_meshDistribution
void UnityEngine::ParticleSystemRenderer::set_meshDistribution(::UnityEngine::ParticleSystemMeshDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_meshDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_meshDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_sortMode
::UnityEngine::ParticleSystemSortMode UnityEngine::ParticleSystemRenderer::get_sortMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_sortMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemSortMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_sortMode
void UnityEngine::ParticleSystemRenderer::set_sortMode(::UnityEngine::ParticleSystemSortMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_sortMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_lengthScale
float UnityEngine::ParticleSystemRenderer::get_lengthScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_lengthScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lengthScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_lengthScale
void UnityEngine::ParticleSystemRenderer::set_lengthScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_lengthScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lengthScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_velocityScale
float UnityEngine::ParticleSystemRenderer::get_velocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_velocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_velocityScale
void UnityEngine::ParticleSystemRenderer::set_velocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_velocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_cameraVelocityScale
float UnityEngine::ParticleSystemRenderer::get_cameraVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_cameraVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_cameraVelocityScale
void UnityEngine::ParticleSystemRenderer::set_cameraVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_cameraVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cameraVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_normalDirection
float UnityEngine::ParticleSystemRenderer::get_normalDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_normalDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_normalDirection
void UnityEngine::ParticleSystemRenderer::set_normalDirection(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_normalDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_shadowBias
float UnityEngine::ParticleSystemRenderer::get_shadowBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_shadowBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shadowBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_shadowBias
void UnityEngine::ParticleSystemRenderer::set_shadowBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_shadowBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shadowBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_sortingFudge
float UnityEngine::ParticleSystemRenderer::get_sortingFudge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_sortingFudge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingFudge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_sortingFudge
void UnityEngine::ParticleSystemRenderer::set_sortingFudge(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_sortingFudge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingFudge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_minParticleSize
float UnityEngine::ParticleSystemRenderer::get_minParticleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_minParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_minParticleSize
void UnityEngine::ParticleSystemRenderer::set_minParticleSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_minParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_maxParticleSize
float UnityEngine::ParticleSystemRenderer::get_maxParticleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_maxParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_maxParticleSize
void UnityEngine::ParticleSystemRenderer::set_maxParticleSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_maxParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_pivot
::UnityEngine::Vector3 UnityEngine::ParticleSystemRenderer::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_pivot
void UnityEngine::ParticleSystemRenderer::set_pivot(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_flip
::UnityEngine::Vector3 UnityEngine::ParticleSystemRenderer::get_flip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_flip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_flip
void UnityEngine::ParticleSystemRenderer::set_flip(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_flip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_maskInteraction
::UnityEngine::SpriteMaskInteraction UnityEngine::ParticleSystemRenderer::get_maskInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_maskInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpriteMaskInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_maskInteraction
void UnityEngine::ParticleSystemRenderer::set_maskInteraction(::UnityEngine::SpriteMaskInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_maskInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_trailMaterial
::UnityEngine::Material* UnityEngine::ParticleSystemRenderer::get_trailMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_trailMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trailMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_trailMaterial
void UnityEngine::ParticleSystemRenderer::set_trailMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_trailMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trailMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_oldTrailMaterial
void UnityEngine::ParticleSystemRenderer::set_oldTrailMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_oldTrailMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_oldTrailMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_enableGPUInstancing
bool UnityEngine::ParticleSystemRenderer::get_enableGPUInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_enableGPUInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableGPUInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_enableGPUInstancing
void UnityEngine::ParticleSystemRenderer::set_enableGPUInstancing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_enableGPUInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableGPUInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_allowRoll
bool UnityEngine::ParticleSystemRenderer::get_allowRoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_allowRoll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowRoll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_allowRoll
void UnityEngine::ParticleSystemRenderer::set_allowRoll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_allowRoll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowRoll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_freeformStretching
bool UnityEngine::ParticleSystemRenderer::get_freeformStretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_freeformStretching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_freeformStretching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_freeformStretching
void UnityEngine::ParticleSystemRenderer::set_freeformStretching(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_freeformStretching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_freeformStretching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_rotateWithStretchDirection
bool UnityEngine::ParticleSystemRenderer::get_rotateWithStretchDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_rotateWithStretchDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateWithStretchDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_rotateWithStretchDirection
void UnityEngine::ParticleSystemRenderer::set_rotateWithStretchDirection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_rotateWithStretchDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateWithStretchDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_mesh
::UnityEngine::Mesh* UnityEngine::ParticleSystemRenderer::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_mesh
void UnityEngine::ParticleSystemRenderer::set_mesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.GetMeshes
int UnityEngine::ParticleSystemRenderer::GetMeshes(ByRef<::ArrayW<::UnityEngine::Mesh*>> meshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::GetMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::Mesh*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(meshes));
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.SetMeshes
void UnityEngine::ParticleSystemRenderer::SetMeshes(::ArrayW<::UnityEngine::Mesh*> meshes, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::SetMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshes), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshes, size);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.SetMeshes
void UnityEngine::ParticleSystemRenderer::SetMeshes(::ArrayW<::UnityEngine::Mesh*> meshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::SetMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshes);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.GetMeshWeightings
int UnityEngine::ParticleSystemRenderer::GetMeshWeightings(ByRef<::ArrayW<float>> weightings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::GetMeshWeightings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshWeightings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(weightings));
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.SetMeshWeightings
void UnityEngine::ParticleSystemRenderer::SetMeshWeightings(::ArrayW<float> weightings, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::SetMeshWeightings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshWeightings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weightings), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weightings, size);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.SetMeshWeightings
void UnityEngine::ParticleSystemRenderer::SetMeshWeightings(::ArrayW<float> weightings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::SetMeshWeightings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshWeightings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weightings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weightings);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_meshCount
int UnityEngine::ParticleSystemRenderer::get_meshCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_meshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.BakeMesh
void UnityEngine::ParticleSystemRenderer::BakeMesh(::UnityEngine::Mesh* mesh, bool useTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::BakeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(useTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, useTransform);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.BakeMesh
void UnityEngine::ParticleSystemRenderer::BakeMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Camera* camera, bool useTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::BakeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(useTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, camera, useTransform);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.BakeTrailsMesh
void UnityEngine::ParticleSystemRenderer::BakeTrailsMesh(::UnityEngine::Mesh* mesh, bool useTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::BakeTrailsMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeTrailsMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(useTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, useTransform);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.BakeTrailsMesh
void UnityEngine::ParticleSystemRenderer::BakeTrailsMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Camera* camera, bool useTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::BakeTrailsMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeTrailsMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(useTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, camera, useTransform);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_activeVertexStreamsCount
int UnityEngine::ParticleSystemRenderer::get_activeVertexStreamsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_activeVertexStreamsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeVertexStreamsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.SetActiveVertexStreams
void UnityEngine::ParticleSystemRenderer::SetActiveVertexStreams(::System::Collections::Generic::List_1<::UnityEngine::ParticleSystemVertexStream>* streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::SetActiveVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.GetActiveVertexStreams
void UnityEngine::ParticleSystemRenderer::GetActiveVertexStreams(::System::Collections::Generic::List_1<::UnityEngine::ParticleSystemVertexStream>* streams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::GetActiveVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streams);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_pivot_Injected
void UnityEngine::ParticleSystemRenderer::get_pivot_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_pivot_Injected
void UnityEngine::ParticleSystemRenderer::set_pivot_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.get_flip_Injected
void UnityEngine::ParticleSystemRenderer::get_flip_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::get_flip_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flip_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_flip_Injected
void UnityEngine::ParticleSystemRenderer::set_flip_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_flip_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flip_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleCollisionEvent
#include "UnityEngine/ParticleCollisionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Intersection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleCollisionEvent::dyn_m_Intersection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::dyn_m_Intersection");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Intersection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleCollisionEvent::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleCollisionEvent::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleCollisionEvent::dyn_m_ColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::dyn_m_ColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleCollisionEvent.get_intersection
::UnityEngine::Vector3 UnityEngine::ParticleCollisionEvent::get_intersection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::get_intersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_intersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleCollisionEvent.get_normal
::UnityEngine::Vector3 UnityEngine::ParticleCollisionEvent::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleCollisionEvent::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemExtensionsImpl
#include "UnityEngine/ParticleSystemExtensionsImpl.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystemExtensionsImpl.GetCollisionEvents
int UnityEngine::ParticleSystemExtensionsImpl::GetCollisionEvents(::UnityEngine::ParticleSystem* ps, ::UnityEngine::GameObject* go, ::System::Collections::Generic::List_1<::UnityEngine::ParticleCollisionEvent>* collisionEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemExtensionsImpl::GetCollisionEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystemExtensionsImpl", "GetCollisionEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(collisionEvents)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ps, go, collisionEvents);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemForceField
#include "UnityEngine/ParticleSystemForceField.hpp"
// Including type: UnityEngine.ParticleSystemForceFieldShape
#include "UnityEngine/ParticleSystemForceFieldShape.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Texture3D
#include "UnityEngine/Texture3D.hpp"
// Including type: UnityEngine.ParticleSystem/MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_shape
::UnityEngine::ParticleSystemForceFieldShape UnityEngine::ParticleSystemForceField::get_shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_shape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemForceFieldShape, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_shape
void UnityEngine::ParticleSystemForceField::set_shape(::UnityEngine::ParticleSystemForceFieldShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_shape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_startRange
float UnityEngine::ParticleSystemForceField::get_startRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_startRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_startRange
void UnityEngine::ParticleSystemForceField::set_startRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_startRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_endRange
float UnityEngine::ParticleSystemForceField::get_endRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_endRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_endRange
void UnityEngine::ParticleSystemForceField::set_endRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_endRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_length
float UnityEngine::ParticleSystemForceField::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_length
void UnityEngine::ParticleSystemForceField::set_length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_gravityFocus
float UnityEngine::ParticleSystemForceField::get_gravityFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_gravityFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_gravityFocus
void UnityEngine::ParticleSystemForceField::set_gravityFocus(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_gravityFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationRandomness
::UnityEngine::Vector2 UnityEngine::ParticleSystemForceField::get_rotationRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationRandomness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationRandomness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationRandomness
void UnityEngine::ParticleSystemForceField::set_rotationRandomness(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationRandomness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationRandomness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_multiplyDragByParticleSize
bool UnityEngine::ParticleSystemForceField::get_multiplyDragByParticleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_multiplyDragByParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplyDragByParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_multiplyDragByParticleSize
void UnityEngine::ParticleSystemForceField::set_multiplyDragByParticleSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_multiplyDragByParticleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplyDragByParticleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_multiplyDragByParticleVelocity
bool UnityEngine::ParticleSystemForceField::get_multiplyDragByParticleVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_multiplyDragByParticleVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplyDragByParticleVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_multiplyDragByParticleVelocity
void UnityEngine::ParticleSystemForceField::set_multiplyDragByParticleVelocity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_multiplyDragByParticleVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplyDragByParticleVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_vectorField
::UnityEngine::Texture3D* UnityEngine::ParticleSystemForceField::get_vectorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_vectorField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vectorField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture3D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_vectorField
void UnityEngine::ParticleSystemForceField::set_vectorField(::UnityEngine::Texture3D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_vectorField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vectorField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionX
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_directionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionX
void UnityEngine::ParticleSystemForceField::set_directionX(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionY
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_directionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionY
void UnityEngine::ParticleSystemForceField::set_directionY(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionZ
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_directionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionZ
void UnityEngine::ParticleSystemForceField::set_directionZ(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_gravity
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_gravity
void UnityEngine::ParticleSystemForceField::set_gravity(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationSpeed
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationSpeed
void UnityEngine::ParticleSystemForceField::set_rotationSpeed(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationAttraction
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_rotationAttraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationAttraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAttraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationAttraction
void UnityEngine::ParticleSystemForceField::set_rotationAttraction(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationAttraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAttraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_drag
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_drag
void UnityEngine::ParticleSystemForceField::set_drag(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_vectorFieldSpeed
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_vectorFieldSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_vectorFieldSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vectorFieldSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_vectorFieldSpeed
void UnityEngine::ParticleSystemForceField::set_vectorFieldSpeed(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_vectorFieldSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vectorFieldSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_vectorFieldAttraction
::UnityEngine::ParticleSystem::MinMaxCurve UnityEngine::ParticleSystemForceField::get_vectorFieldAttraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_vectorFieldAttraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vectorFieldAttraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxCurve, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_vectorFieldAttraction
void UnityEngine::ParticleSystemForceField::set_vectorFieldAttraction(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_vectorFieldAttraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vectorFieldAttraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationRandomness_Injected
void UnityEngine::ParticleSystemForceField::get_rotationRandomness_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationRandomness_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationRandomness_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationRandomness_Injected
void UnityEngine::ParticleSystemForceField::set_rotationRandomness_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationRandomness_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationRandomness_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionX_Injected
void UnityEngine::ParticleSystemForceField::get_directionX_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionX_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionX_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionX_Injected
void UnityEngine::ParticleSystemForceField::set_directionX_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionX_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionX_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionY_Injected
void UnityEngine::ParticleSystemForceField::get_directionY_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionY_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionY_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionY_Injected
void UnityEngine::ParticleSystemForceField::set_directionY_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionY_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionY_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_directionZ_Injected
void UnityEngine::ParticleSystemForceField::get_directionZ_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_directionZ_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionZ_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_directionZ_Injected
void UnityEngine::ParticleSystemForceField::set_directionZ_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_directionZ_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionZ_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_gravity_Injected
void UnityEngine::ParticleSystemForceField::get_gravity_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_gravity_Injected
void UnityEngine::ParticleSystemForceField::set_gravity_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationSpeed_Injected
void UnityEngine::ParticleSystemForceField::get_rotationSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationSpeed_Injected
void UnityEngine::ParticleSystemForceField::set_rotationSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_rotationAttraction_Injected
void UnityEngine::ParticleSystemForceField::get_rotationAttraction_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_rotationAttraction_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAttraction_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_rotationAttraction_Injected
void UnityEngine::ParticleSystemForceField::set_rotationAttraction_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_rotationAttraction_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAttraction_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_drag_Injected
void UnityEngine::ParticleSystemForceField::get_drag_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_drag_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_drag_Injected
void UnityEngine::ParticleSystemForceField::set_drag_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_drag_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_vectorFieldSpeed_Injected
void UnityEngine::ParticleSystemForceField::get_vectorFieldSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_vectorFieldSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vectorFieldSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_vectorFieldSpeed_Injected
void UnityEngine::ParticleSystemForceField::set_vectorFieldSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_vectorFieldSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vectorFieldSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.get_vectorFieldAttraction_Injected
void UnityEngine::ParticleSystemForceField::get_vectorFieldAttraction_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::get_vectorFieldAttraction_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vectorFieldAttraction_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxCurve&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystemForceField.set_vectorFieldAttraction_Injected
void UnityEngine::ParticleSystemForceField::set_vectorFieldAttraction_Injected(ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemForceField::set_vectorFieldAttraction_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vectorFieldAttraction_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene2D::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::UnityEngine::PhysicsScene2D other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::PhysicsScene2D), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.IsValid
bool UnityEngine::PhysicsScene2D::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.IsValid_Internal
bool UnityEngine::PhysicsScene2D::IsValid_Internal(::UnityEngine::PhysicsScene2D physicsScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::IsValid_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "IsValid_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Simulate
bool UnityEngine::PhysicsScene2D::Simulate(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, step);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Linecast(::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, start, end, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Linecast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Linecast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
int UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastArray_Internal
int UnityEngine::PhysicsScene2D::RaycastArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
int UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastList_Internal
int UnityEngine::PhysicsScene2D::RaycastList_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastList_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastList_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::CircleCast(::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CircleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, radius, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::CircleCast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "CircleCast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::GetRayIntersection(::UnityEngine::Ray ray, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, ray, distance, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::GetRayIntersection_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersection_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection
int UnityEngine::PhysicsScene2D::GetRayIntersection(::UnityEngine::Ray ray, float distance, ::ArrayW<::UnityEngine::RaycastHit2D> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ray, distance, results, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionArray_Internal
int UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPoint
int UnityEngine::PhysicsScene2D::OverlapPoint(::UnityEngine::Vector2 point, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, point, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPointArray_Internal
int UnityEngine::PhysicsScene2D::OverlapPointArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 point, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPointArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapPointArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircle
int UnityEngine::PhysicsScene2D::OverlapCircle(::UnityEngine::Vector2 point, float radius, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, point, radius, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircleArray_Internal
int UnityEngine::PhysicsScene2D::OverlapCircleArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 point, float radius, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircleArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapCircleArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point, radius, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.IsValid_Internal_Injected
bool UnityEngine::PhysicsScene2D::IsValid_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::IsValid_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "IsValid_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast_Internal_Injected
void UnityEngine::PhysicsScene2D::Linecast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> start, ByRef<::UnityEngine::Vector2> end, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Linecast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal_Injected
void UnityEngine::PhysicsScene2D::Raycast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastArray_Internal_Injected
int UnityEngine::PhysicsScene2D::RaycastArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastList_Internal_Injected
int UnityEngine::PhysicsScene2D::RaycastList_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastList_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastList_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast_Internal_Injected
void UnityEngine::PhysicsScene2D::CircleCast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, float radius, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "CircleCast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), distance, byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection_Internal_Injected
void UnityEngine::PhysicsScene2D::GetRayIntersection_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersection_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask, byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionArray_Internal_Injected
int UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPointArray_Internal_Injected
int UnityEngine::PhysicsScene2D::OverlapPointArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> point, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPointArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapPointArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point), byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircleArray_Internal_Injected
int UnityEngine::PhysicsScene2D::OverlapCircleArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> point, float radius, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircleArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapCircleArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point), radius, byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.ToString
::StringW UnityEngine::PhysicsScene2D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetHashCode
int UnityEngine::PhysicsScene2D::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PhysicsSceneExtensions2D
#include "UnityEngine/PhysicsSceneExtensions2D.hpp"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PhysicsSceneExtensions2D.GetPhysicsScene2D
::UnityEngine::PhysicsScene2D UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene2D(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions2D", "GetPhysicsScene2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.PhysicsSceneExtensions2D.GetPhysicsScene_Internal
::UnityEngine::PhysicsScene2D UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene_Internal(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions2D", "GetPhysicsScene_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.PhysicsSceneExtensions2D.GetPhysicsScene_Internal_Injected
void UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene_Internal_Injected(ByRef<::UnityEngine::SceneManagement::Scene> scene, ByRef<::UnityEngine::PhysicsScene2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions2D::GetPhysicsScene_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions2D", "GetPhysicsScene_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(scene), byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics2D
#include "UnityEngine/Physics2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: UnityEngine.SimulationMode2D
#include "UnityEngine/SimulationMode2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>*>("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
void UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D", value));
}
// Autogenerated method: UnityEngine.Physics2D.get_defaultPhysicsScene
::UnityEngine::PhysicsScene2D UnityEngine::Physics2D::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_queriesHitTriggers
bool UnityEngine::Physics2D::get_queriesHitTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_queriesHitTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_queriesHitTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_autoSyncTransforms
bool UnityEngine::Physics2D::get_autoSyncTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_autoSyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_autoSyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_simulationMode
::UnityEngine::SimulationMode2D UnityEngine::Physics2D::get_simulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_simulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_simulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SimulationMode2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.set_simulationMode
void UnityEngine::Physics2D::set_simulationMode(::UnityEngine::SimulationMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::set_simulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "set_simulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics2D.get_linearSleepTolerance
float UnityEngine::Physics2D::get_linearSleepTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_linearSleepTolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_linearSleepTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_angularSleepTolerance
float UnityEngine::Physics2D::get_angularSleepTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_angularSleepTolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_angularSleepTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.Simulate
bool UnityEngine::Physics2D::Simulate(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, step);
}
// Autogenerated method: UnityEngine.Physics2D.Simulate_Internal
bool UnityEngine::Physics2D::Simulate_Internal(::UnityEngine::PhysicsScene2D physicsScene, float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Simulate_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Simulate_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, step);
}
// Autogenerated method: UnityEngine.Physics2D.SyncTransforms
void UnityEngine::Physics2D::SyncTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::SyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "SyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.Linecast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Linecast(::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.CircleCast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::CircleCast(::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::CircleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "CircleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersection
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::GetRayIntersection(::UnityEngine::Ray ray, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.OverlapPoint
int UnityEngine::Physics2D::OverlapPoint(::UnityEngine::Vector2 point, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::OverlapPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "OverlapPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, contactFilter, results);
}
// Autogenerated method: UnityEngine.Physics2D.OverlapCircle
int UnityEngine::Physics2D::OverlapCircle(::UnityEngine::Vector2 point, float radius, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::Collider2D*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::OverlapCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "OverlapCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, radius, contactFilter, results);
}
// Autogenerated method: UnityEngine.Physics2D..cctor
void UnityEngine::Physics2D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.Simulate_Internal_Injected
bool UnityEngine::Physics2D::Simulate_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Simulate_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Simulate_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), step);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal_Injected
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SimulationMode2D
#include "UnityEngine/SimulationMode2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode2D FixedUpdate
::UnityEngine::SimulationMode2D UnityEngine::SimulationMode2D::_get_FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_get_FixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode2D>("UnityEngine", "SimulationMode2D", "FixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode2D FixedUpdate
void UnityEngine::SimulationMode2D::_set_FixedUpdate(::UnityEngine::SimulationMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_set_FixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode2D", "FixedUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode2D Update
::UnityEngine::SimulationMode2D UnityEngine::SimulationMode2D::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode2D>("UnityEngine", "SimulationMode2D", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode2D Update
void UnityEngine::SimulationMode2D::_set_Update(::UnityEngine::SimulationMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode2D", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode2D Script
::UnityEngine::SimulationMode2D UnityEngine::SimulationMode2D::_get_Script() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_get_Script");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode2D>("UnityEngine", "SimulationMode2D", "Script"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode2D Script
void UnityEngine::SimulationMode2D::_set_Script(::UnityEngine::SimulationMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::_set_Script");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode2D", "Script", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SimulationMode2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyConstraints2D
#include "UnityEngine/RigidbodyConstraints2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D None
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D None
void UnityEngine::RigidbodyConstraints2D::_set_None(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D FreezePositionX
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_FreezePositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_FreezePositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "FreezePositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D FreezePositionX
void UnityEngine::RigidbodyConstraints2D::_set_FreezePositionX(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_FreezePositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "FreezePositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D FreezePositionY
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_FreezePositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_FreezePositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "FreezePositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D FreezePositionY
void UnityEngine::RigidbodyConstraints2D::_set_FreezePositionY(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_FreezePositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "FreezePositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D FreezeRotation
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_FreezeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_FreezeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "FreezeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D FreezeRotation
void UnityEngine::RigidbodyConstraints2D::_set_FreezeRotation(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_FreezeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "FreezeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D FreezePosition
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_FreezePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_FreezePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "FreezePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D FreezePosition
void UnityEngine::RigidbodyConstraints2D::_set_FreezePosition(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_FreezePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "FreezePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints2D FreezeAll
::UnityEngine::RigidbodyConstraints2D UnityEngine::RigidbodyConstraints2D::_get_FreezeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_get_FreezeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints2D>("UnityEngine", "RigidbodyConstraints2D", "FreezeAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints2D FreezeAll
void UnityEngine::RigidbodyConstraints2D::_set_FreezeAll(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::_set_FreezeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints2D", "FreezeAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyConstraints2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyInterpolation2D
#include "UnityEngine/RigidbodyInterpolation2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation2D None
::UnityEngine::RigidbodyInterpolation2D UnityEngine::RigidbodyInterpolation2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation2D>("UnityEngine", "RigidbodyInterpolation2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation2D None
void UnityEngine::RigidbodyInterpolation2D::_set_None(::UnityEngine::RigidbodyInterpolation2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation2D Interpolate
::UnityEngine::RigidbodyInterpolation2D UnityEngine::RigidbodyInterpolation2D::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation2D>("UnityEngine", "RigidbodyInterpolation2D", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation2D Interpolate
void UnityEngine::RigidbodyInterpolation2D::_set_Interpolate(::UnityEngine::RigidbodyInterpolation2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation2D", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation2D Extrapolate
::UnityEngine::RigidbodyInterpolation2D UnityEngine::RigidbodyInterpolation2D::_get_Extrapolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_get_Extrapolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation2D>("UnityEngine", "RigidbodyInterpolation2D", "Extrapolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation2D Extrapolate
void UnityEngine::RigidbodyInterpolation2D::_set_Extrapolate(::UnityEngine::RigidbodyInterpolation2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::_set_Extrapolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation2D", "Extrapolate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyInterpolation2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionDetectionMode2D
#include "UnityEngine/CollisionDetectionMode2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode2D None
::UnityEngine::CollisionDetectionMode2D UnityEngine::CollisionDetectionMode2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode2D>("UnityEngine", "CollisionDetectionMode2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode2D None
void UnityEngine::CollisionDetectionMode2D::_set_None(::UnityEngine::CollisionDetectionMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode2D Discrete
::UnityEngine::CollisionDetectionMode2D UnityEngine::CollisionDetectionMode2D::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode2D>("UnityEngine", "CollisionDetectionMode2D", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode2D Discrete
void UnityEngine::CollisionDetectionMode2D::_set_Discrete(::UnityEngine::CollisionDetectionMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode2D", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode2D Continuous
::UnityEngine::CollisionDetectionMode2D UnityEngine::CollisionDetectionMode2D::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode2D>("UnityEngine", "CollisionDetectionMode2D", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode2D Continuous
void UnityEngine::CollisionDetectionMode2D::_set_Continuous(::UnityEngine::CollisionDetectionMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode2D", "Continuous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionDetectionMode2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyType2D
#include "UnityEngine/RigidbodyType2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Dynamic
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Dynamic
void UnityEngine::RigidbodyType2D::_set_Dynamic(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Kinematic
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Kinematic
void UnityEngine::RigidbodyType2D::_set_Kinematic(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Static
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Static"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Static
void UnityEngine::RigidbodyType2D::_set_Static(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Static", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyType2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ForceMode2D
#include "UnityEngine/ForceMode2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode2D Force
::UnityEngine::ForceMode2D UnityEngine::ForceMode2D::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode2D::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode2D>("UnityEngine", "ForceMode2D", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode2D Force
void UnityEngine::ForceMode2D::_set_Force(::UnityEngine::ForceMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode2D::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode2D", "Force", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode2D Impulse
::UnityEngine::ForceMode2D UnityEngine::ForceMode2D::_get_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode2D::_get_Impulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode2D>("UnityEngine", "ForceMode2D", "Impulse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode2D Impulse
void UnityEngine::ForceMode2D::_set_Impulse(::UnityEngine::ForceMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode2D::_set_Impulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode2D", "Impulse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ForceMode2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single NormalAngleUpperLimit
float UnityEngine::ContactFilter2D::_get_NormalAngleUpperLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::_get_NormalAngleUpperLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "ContactFilter2D", "NormalAngleUpperLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NormalAngleUpperLimit
void UnityEngine::ContactFilter2D::_set_NormalAngleUpperLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::_set_NormalAngleUpperLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ContactFilter2D", "NormalAngleUpperLimit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useTriggers
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useTriggers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTriggers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useLayerMask
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useLayerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useLayerMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::ContactFilter2D::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_layerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CheckConsistency
void UnityEngine::ContactFilter2D::CheckConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CheckConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetLayerMask
void UnityEngine::ContactFilter2D::SetLayerMask(::UnityEngine::LayerMask layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerMask);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetDepth
void UnityEngine::ContactFilter2D::SetDepth(float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CreateLegacyFilter
::UnityEngine::ContactFilter2D UnityEngine::ContactFilter2D::CreateLegacyFilter(int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CreateLegacyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactFilter2D", "CreateLegacyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactFilter2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerMask, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CheckConsistency_Injected
void UnityEngine::ContactFilter2D::CheckConsistency_Injected(ByRef<::UnityEngine::ContactFilter2D> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CheckConsistency_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactFilter2D", "CheckConsistency_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collision2D
#include "UnityEngine/Collision2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_OtherCollider
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_OtherCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_OtherCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherCollider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Rigidbody
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_Rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rigidbody"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_OtherRigidbody
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_OtherRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_OtherRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherRigidbody"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 m_RelativeVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::Collision2D::dyn_m_RelativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_RelativeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RelativeVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Enabled
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enabled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ContactCount
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision2D::dyn_m_ContactCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_ContactCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContactCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint2D[] m_ReusedContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint2D>& UnityEngine::Collision2D::dyn_m_ReusedContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_ReusedContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReusedContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint2D>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint2D[] m_LegacyContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint2D>& UnityEngine::Collision2D::dyn_m_LegacyContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::dyn_m_LegacyContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LegacyContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint2D>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Collision2D.get_collider
::UnityEngine::Collider2D* UnityEngine::Collision2D::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision2D.get_rigidbody
::UnityEngine::Rigidbody2D* UnityEngine::Collision2D::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision2D.get_gameObject
::UnityEngine::GameObject* UnityEngine::Collision2D::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision2D.get_relativeVelocity
::UnityEngine::Vector2 UnityEngine::Collision2D::get_relativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision2D::get_relativeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Centroid
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Centroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Centroid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Centroid"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Fraction
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Fraction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit2D::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_point
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_normal
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_distance
float UnityEngine::RaycastHit2D::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_fraction
float UnityEngine::RaycastHit2D::get_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_collider
::UnityEngine::Collider2D* UnityEngine::RaycastHit2D::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.RigidbodyType2D
#include "UnityEngine/RigidbodyType2D.hpp"
// Including type: UnityEngine.RigidbodyConstraints2D
#include "UnityEngine/RigidbodyConstraints2D.hpp"
// Including type: UnityEngine.RigidbodyInterpolation2D
#include "UnityEngine/RigidbodyInterpolation2D.hpp"
// Including type: UnityEngine.CollisionDetectionMode2D
#include "UnityEngine/CollisionDetectionMode2D.hpp"
// Including type: UnityEngine.ForceMode2D
#include "UnityEngine/ForceMode2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody2D.get_position
::UnityEngine::Vector2 UnityEngine::Rigidbody2D::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_position
void UnityEngine::Rigidbody2D::set_position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_rotation
float UnityEngine::Rigidbody2D::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_rotation
void UnityEngine::Rigidbody2D::set_rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.MovePosition
void UnityEngine::Rigidbody2D::MovePosition(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody2D.MoveRotation
void UnityEngine::Rigidbody2D::MoveRotation(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle);
}
// Autogenerated method: UnityEngine.Rigidbody2D.MoveRotation_Angle
void UnityEngine::Rigidbody2D::MoveRotation_Angle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::MoveRotation_Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation_Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity
::UnityEngine::Vector2 UnityEngine::Rigidbody2D::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_velocity
void UnityEngine::Rigidbody2D::set_velocity(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_angularVelocity
float UnityEngine::Rigidbody2D::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_angularVelocity
void UnityEngine::Rigidbody2D::set_angularVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_mass
float UnityEngine::Rigidbody2D::get_mass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_mass
void UnityEngine::Rigidbody2D::set_mass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_drag
float UnityEngine::Rigidbody2D::get_drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_drag
void UnityEngine::Rigidbody2D::set_drag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_angularDrag
float UnityEngine::Rigidbody2D::get_angularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_angularDrag
void UnityEngine::Rigidbody2D::set_angularDrag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_gravityScale
float UnityEngine::Rigidbody2D::get_gravityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_gravityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_gravityScale
void UnityEngine::Rigidbody2D::set_gravityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_gravityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_bodyType
::UnityEngine::RigidbodyType2D UnityEngine::Rigidbody2D::get_bodyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_bodyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RigidbodyType2D, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_bodyType
void UnityEngine::Rigidbody2D::set_bodyType(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_bodyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_isKinematic
bool UnityEngine::Rigidbody2D::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_isKinematic
void UnityEngine::Rigidbody2D::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_constraints
::UnityEngine::RigidbodyConstraints2D UnityEngine::Rigidbody2D::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RigidbodyConstraints2D, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_constraints
void UnityEngine::Rigidbody2D::set_constraints(::UnityEngine::RigidbodyConstraints2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.IsSleeping
bool UnityEngine::Rigidbody2D::IsSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::IsSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.Sleep
void UnityEngine::Rigidbody2D::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.WakeUp
void UnityEngine::Rigidbody2D::WakeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::WakeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WakeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_simulated
bool UnityEngine::Rigidbody2D::get_simulated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_simulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_simulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_simulated
void UnityEngine::Rigidbody2D::set_simulated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_simulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_simulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_interpolation
void UnityEngine::Rigidbody2D::set_interpolation(::UnityEngine::RigidbodyInterpolation2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_interpolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interpolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_collisionDetectionMode
void UnityEngine::Rigidbody2D::set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.AddForce
void UnityEngine::Rigidbody2D::AddForce(::UnityEngine::Vector2 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: UnityEngine.Rigidbody2D.AddForce
void UnityEngine::Rigidbody2D::AddForce(::UnityEngine::Vector2 force, ::UnityEngine::ForceMode2D mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, mode);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_position_Injected
void UnityEngine::Rigidbody2D::get_position_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_position_Injected
void UnityEngine::Rigidbody2D::set_position_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody2D.MovePosition_Injected
void UnityEngine::Rigidbody2D::MovePosition_Injected(ByRef<::UnityEngine::Vector2> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::MovePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity_Injected
void UnityEngine::Rigidbody2D::get_velocity_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_velocity_Injected
void UnityEngine::Rigidbody2D::set_velocity_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody2D.AddForce_Injected
void UnityEngine::Rigidbody2D::AddForce_Injected(ByRef<::UnityEngine::Vector2> force, ::UnityEngine::ForceMode2D mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::AddForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider2D.get_offset
::UnityEngine::Vector2 UnityEngine::Collider2D::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider2D.get_attachedRigidbody
::UnityEngine::Rigidbody2D* UnityEngine::Collider2D::get_attachedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_attachedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider2D.get_bounds
::UnityEngine::Bounds UnityEngine::Collider2D::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider2D.OverlapPoint
bool UnityEngine::Collider2D::OverlapPoint(::UnityEngine::Vector2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::OverlapPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverlapPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Collider2D.get_offset_Injected
void UnityEngine::Collider2D::get_offset_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_offset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Collider2D.get_bounds_Injected
void UnityEngine::Collider2D::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Collider2D.OverlapPoint_Injected
bool UnityEngine::Collider2D::OverlapPoint_Injected(ByRef<::UnityEngine::Vector2> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::OverlapPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverlapPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PolygonCollider2D
#include "UnityEngine/PolygonCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PolygonCollider2D.GetTotalPointCount
int UnityEngine::PolygonCollider2D::GetTotalPointCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::GetTotalPointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalPointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.get_points
::ArrayW<::UnityEngine::Vector2> UnityEngine::PolygonCollider2D::get_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::get_points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.get_pathCount
int UnityEngine::PolygonCollider2D::get_pathCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::get_pathCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.GetPath
::ArrayW<::UnityEngine::Vector2> UnityEngine::PolygonCollider2D::GetPath(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.GetPath_Internal
::ArrayW<::UnityEngine::Vector2> UnityEngine::PolygonCollider2D::GetPath_Internal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::GetPath_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPath_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CompositeCollider2D
#include "UnityEngine/CompositeCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CompositeCollider2D.get_pathCount
int UnityEngine::CompositeCollider2D::get_pathCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CompositeCollider2D::get_pathCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CompositeCollider2D.get_pointCount
int UnityEngine::CompositeCollider2D::get_pointCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CompositeCollider2D::get_pointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CompositeCollider2D.GetPath
int UnityEngine::CompositeCollider2D::GetPath(int index, ::ArrayW<::UnityEngine::Vector2> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CompositeCollider2D::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index, points);
}
// Autogenerated method: UnityEngine.CompositeCollider2D.GetPathArray_Internal
int UnityEngine::CompositeCollider2D::GetPathArray_Internal(int index, ::ArrayW<::UnityEngine::Vector2> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CompositeCollider2D::GetPathArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPathArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index, points);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyConstraints
#include "UnityEngine/RigidbodyConstraints.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints None
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints None
void UnityEngine::RigidbodyConstraints::_set_None(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
void UnityEngine::RigidbodyConstraints::_set_FreezePositionX(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
void UnityEngine::RigidbodyConstraints::_set_FreezePositionY(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
void UnityEngine::RigidbodyConstraints::_set_FreezePositionZ(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationX(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationY(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationZ(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePosition
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePosition
void UnityEngine::RigidbodyConstraints::_set_FreezePosition(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
void UnityEngine::RigidbodyConstraints::_set_FreezeRotation(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeAll
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeAll
void UnityEngine::RigidbodyConstraints::_set_FreezeAll(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyConstraints::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Force
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Force
void UnityEngine::ForceMode::_set_Force(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Force", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Acceleration
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Acceleration
void UnityEngine::ForceMode::_set_Acceleration(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Impulse
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Impulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Impulse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Impulse
void UnityEngine::ForceMode::_set_Impulse(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Impulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Impulse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode VelocityChange
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_VelocityChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_VelocityChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "VelocityChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode VelocityChange
void UnityEngine::ForceMode::_set_VelocityChange(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_VelocityChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "VelocityChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ForceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.JointProjectionMode
#include "UnityEngine/JointProjectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.JointProjectionMode None
::UnityEngine::JointProjectionMode UnityEngine::JointProjectionMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::JointProjectionMode>("UnityEngine", "JointProjectionMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.JointProjectionMode None
void UnityEngine::JointProjectionMode::_set_None(::UnityEngine::JointProjectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "JointProjectionMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.JointProjectionMode PositionAndRotation
::UnityEngine::JointProjectionMode UnityEngine::JointProjectionMode::_get_PositionAndRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_get_PositionAndRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::JointProjectionMode>("UnityEngine", "JointProjectionMode", "PositionAndRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.JointProjectionMode PositionAndRotation
void UnityEngine::JointProjectionMode::_set_PositionAndRotation(::UnityEngine::JointProjectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_set_PositionAndRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "JointProjectionMode", "PositionAndRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.JointProjectionMode PositionOnly
::UnityEngine::JointProjectionMode UnityEngine::JointProjectionMode::_get_PositionOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_get_PositionOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::JointProjectionMode>("UnityEngine", "JointProjectionMode", "PositionOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.JointProjectionMode PositionOnly
void UnityEngine::JointProjectionMode::_set_PositionOnly(::UnityEngine::JointProjectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::_set_PositionOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "JointProjectionMode", "PositionOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::JointProjectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JointProjectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshColliderCookingOptions
#include "UnityEngine/MeshColliderCookingOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions None
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions None
void UnityEngine::MeshColliderCookingOptions::_set_None(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions InflateConvexMesh
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_InflateConvexMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_InflateConvexMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "InflateConvexMesh"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions InflateConvexMesh
void UnityEngine::MeshColliderCookingOptions::_set_InflateConvexMesh(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_InflateConvexMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "InflateConvexMesh", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions CookForFasterSimulation
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_CookForFasterSimulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_CookForFasterSimulation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "CookForFasterSimulation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions CookForFasterSimulation
void UnityEngine::MeshColliderCookingOptions::_set_CookForFasterSimulation(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_CookForFasterSimulation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "CookForFasterSimulation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions EnableMeshCleaning
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_EnableMeshCleaning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_EnableMeshCleaning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "EnableMeshCleaning"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions EnableMeshCleaning
void UnityEngine::MeshColliderCookingOptions::_set_EnableMeshCleaning(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_EnableMeshCleaning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "EnableMeshCleaning", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions WeldColocatedVertices
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_WeldColocatedVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_WeldColocatedVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "WeldColocatedVertices"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions WeldColocatedVertices
void UnityEngine::MeshColliderCookingOptions::_set_WeldColocatedVertices(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_WeldColocatedVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "WeldColocatedVertices", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshColliderCookingOptions UseFastMidphase
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshColliderCookingOptions::_get_UseFastMidphase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_get_UseFastMidphase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MeshColliderCookingOptions>("UnityEngine", "MeshColliderCookingOptions", "UseFastMidphase"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshColliderCookingOptions UseFastMidphase
void UnityEngine::MeshColliderCookingOptions::_set_UseFastMidphase(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::_set_UseFastMidphase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshColliderCookingOptions", "UseFastMidphase", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::MeshColliderCookingOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshColliderCookingOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyInterpolation
#include "UnityEngine/RigidbodyInterpolation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation None
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation None
void UnityEngine::RigidbodyInterpolation::_set_None(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation Interpolate
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation Interpolate
void UnityEngine::RigidbodyInterpolation::_set_Interpolate(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation Extrapolate
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_Extrapolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_Extrapolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "Extrapolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation Extrapolate
void UnityEngine::RigidbodyInterpolation::_set_Extrapolate(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_Extrapolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "Extrapolate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyInterpolation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PhysicMaterialCombine
#include "UnityEngine/PhysicMaterialCombine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PhysicMaterialCombine Average
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterialCombine::_get_Average() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_get_Average");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PhysicMaterialCombine>("UnityEngine", "PhysicMaterialCombine", "Average"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PhysicMaterialCombine Average
void UnityEngine::PhysicMaterialCombine::_set_Average(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_set_Average");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PhysicMaterialCombine", "Average", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PhysicMaterialCombine Minimum
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterialCombine::_get_Minimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_get_Minimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PhysicMaterialCombine>("UnityEngine", "PhysicMaterialCombine", "Minimum"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PhysicMaterialCombine Minimum
void UnityEngine::PhysicMaterialCombine::_set_Minimum(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_set_Minimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PhysicMaterialCombine", "Minimum", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PhysicMaterialCombine Multiply
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterialCombine::_get_Multiply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_get_Multiply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PhysicMaterialCombine>("UnityEngine", "PhysicMaterialCombine", "Multiply"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PhysicMaterialCombine Multiply
void UnityEngine::PhysicMaterialCombine::_set_Multiply(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_set_Multiply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PhysicMaterialCombine", "Multiply", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PhysicMaterialCombine Maximum
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterialCombine::_get_Maximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_get_Maximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PhysicMaterialCombine>("UnityEngine", "PhysicMaterialCombine", "Maximum"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PhysicMaterialCombine Maximum
void UnityEngine::PhysicMaterialCombine::_set_Maximum(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::_set_Maximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PhysicMaterialCombine", "Maximum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicMaterialCombine::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterialCombine::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ContactPairHeader m_Header
[[deprecated("Use field access instead!")]] ::UnityEngine::ContactPairHeader& UnityEngine::Collision::dyn_m_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Header"))->offset;
  return *reinterpret_cast<::UnityEngine::ContactPairHeader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ContactPair m_Pair
[[deprecated("Use field access instead!")]] ::UnityEngine::ContactPair& UnityEngine::Collision::dyn_m_Pair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Pair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Pair"))->offset;
  return *reinterpret_cast<::UnityEngine::ContactPair*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Flipped
[[deprecated("Use field access instead!")]] bool& UnityEngine::Collision::dyn_m_Flipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Flipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ContactPoint[] m_LegacyContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint>& UnityEngine::Collision::dyn_m_LegacyContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_LegacyContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LegacyContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Collision.get_impulse
::UnityEngine::Vector3 UnityEngine::Collision::get_impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_impulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_impulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_relativeVelocity
::UnityEngine::Vector3 UnityEngine::Collision::get_relativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_relativeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_rigidbody
::UnityEngine::Rigidbody* UnityEngine::Collision::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_body
::UnityEngine::Component* UnityEngine::Collision::get_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_collider
::UnityEngine::Collider* UnityEngine::Collision::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_gameObject
::UnityEngine::GameObject* UnityEngine::Collision::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.set_Flipped
void UnityEngine::Collision::set_Flipped(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::set_Flipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collision.get_contactCount
int UnityEngine::Collision::get_contactCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_contactCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contactCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.Reuse
void UnityEngine::Collision::Reuse(ByRef<::UnityEngine::ContactPairHeader> header, ByRef<::UnityEngine::ContactPair> pair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::Reuse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header), ::il2cpp_utils::ExtractType(pair)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(header), byref(pair));
}
// Autogenerated method: UnityEngine.Collision.GetContact
::UnityEngine::ContactPoint UnityEngine::Collision::GetContact(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::GetContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactPoint, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Collision.GetContacts
int UnityEngine::Collision::GetContacts(::ArrayW<::UnityEngine::ContactPoint> contacts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::GetContacts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContacts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contacts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, contacts);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags None
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags None
void UnityEngine::CollisionFlags::_set_None(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Sides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Sides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Sides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Sides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Sides
void UnityEngine::CollisionFlags::_set_Sides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Sides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Sides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Above
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Above() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Above");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Above"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Above
void UnityEngine::CollisionFlags::_set_Above(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Above");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Above", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Below
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Below() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Below");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Below"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Below
void UnityEngine::CollisionFlags::_set_Below(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Below");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Below", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedSides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedSides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedSides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedSides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedSides
void UnityEngine::CollisionFlags::_set_CollidedSides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedSides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedSides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedAbove
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedAbove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedAbove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedAbove
void UnityEngine::CollisionFlags::_set_CollidedAbove(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedAbove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedAbove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedBelow
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedBelow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedBelow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedBelow
void UnityEngine::CollisionFlags::_set_CollidedBelow(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedBelow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedBelow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_UseGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_UseGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "UseGlobal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
void UnityEngine::QueryTriggerInteraction::_set_UseGlobal(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_UseGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "UseGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Ignore
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Ignore
void UnityEngine::QueryTriggerInteraction::_set_Ignore(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Collide
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Collide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Collide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Collide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Collide
void UnityEngine::QueryTriggerInteraction::_set_Collide(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Collide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Collide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::QueryTriggerInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Discrete
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Discrete
void UnityEngine::CollisionDetectionMode::_set_Discrete(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Continuous
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Continuous
void UnityEngine::CollisionDetectionMode::_set_Continuous(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
void UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
void UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionDetectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ConfigurableJointMotion
#include "UnityEngine/ConfigurableJointMotion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ConfigurableJointMotion Locked
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJointMotion::_get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_get_Locked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ConfigurableJointMotion>("UnityEngine", "ConfigurableJointMotion", "Locked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ConfigurableJointMotion Locked
void UnityEngine::ConfigurableJointMotion::_set_Locked(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_set_Locked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ConfigurableJointMotion", "Locked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ConfigurableJointMotion Limited
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJointMotion::_get_Limited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_get_Limited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ConfigurableJointMotion>("UnityEngine", "ConfigurableJointMotion", "Limited"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ConfigurableJointMotion Limited
void UnityEngine::ConfigurableJointMotion::_set_Limited(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_set_Limited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ConfigurableJointMotion", "Limited", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ConfigurableJointMotion Free
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJointMotion::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ConfigurableJointMotion>("UnityEngine", "ConfigurableJointMotion", "Free"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ConfigurableJointMotion Free
void UnityEngine::ConfigurableJointMotion::_set_Free(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ConfigurableJointMotion", "Free", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ConfigurableJointMotion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJointMotion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RotationDriveMode
#include "UnityEngine/RotationDriveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationDriveMode XYAndZ
::UnityEngine::RotationDriveMode UnityEngine::RotationDriveMode::_get_XYAndZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationDriveMode::_get_XYAndZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationDriveMode>("UnityEngine", "RotationDriveMode", "XYAndZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationDriveMode XYAndZ
void UnityEngine::RotationDriveMode::_set_XYAndZ(::UnityEngine::RotationDriveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationDriveMode::_set_XYAndZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationDriveMode", "XYAndZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationDriveMode Slerp
::UnityEngine::RotationDriveMode UnityEngine::RotationDriveMode::_get_Slerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationDriveMode::_get_Slerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationDriveMode>("UnityEngine", "RotationDriveMode", "Slerp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationDriveMode Slerp
void UnityEngine::RotationDriveMode::_set_Slerp(::UnityEngine::RotationDriveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationDriveMode::_set_Slerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationDriveMode", "Slerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RotationDriveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationDriveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics
#include "UnityEngine/Physics.hpp"
// Including type: UnityEngine.Physics/ContactEventDelegate
#include "UnityEngine/Physics_ContactEventDelegate.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.SimulationMode
#include "UnityEngine/SimulationMode.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.MeshColliderCookingOptions
#include "UnityEngine/MeshColliderCookingOptions.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.ContactPair
#include "UnityEngine/ContactPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`2<UnityEngine.PhysicsScene,Unity.Collections.NativeArray`1<UnityEngine.ModifiableContactPair>> ContactModifyEvent
::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>* UnityEngine::Physics::_get_ContactModifyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_get_ContactModifyEvent");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>*>("UnityEngine", "Physics", "ContactModifyEvent")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<UnityEngine.PhysicsScene,Unity.Collections.NativeArray`1<UnityEngine.ModifiableContactPair>> ContactModifyEvent
void UnityEngine::Physics::_set_ContactModifyEvent(::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_set_ContactModifyEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics", "ContactModifyEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<UnityEngine.PhysicsScene,Unity.Collections.NativeArray`1<UnityEngine.ModifiableContactPair>> ContactModifyEventCCD
::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>* UnityEngine::Physics::_get_ContactModifyEventCCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_get_ContactModifyEventCCD");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>*>("UnityEngine", "Physics", "ContactModifyEventCCD")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<UnityEngine.PhysicsScene,Unity.Collections.NativeArray`1<UnityEngine.ModifiableContactPair>> ContactModifyEventCCD
void UnityEngine::Physics::_set_ContactModifyEventCCD(::System::Action_2<::UnityEngine::PhysicsScene, ::Unity::Collections::NativeArray_1<::UnityEngine::ModifiableContactPair>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_set_ContactModifyEventCCD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics", "ContactModifyEventCCD", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Physics/ContactEventDelegate ContactEvent
::UnityEngine::Physics::ContactEventDelegate* UnityEngine::Physics::_get_ContactEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_get_ContactEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Physics::ContactEventDelegate*>("UnityEngine", "Physics", "ContactEvent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Physics/ContactEventDelegate ContactEvent
void UnityEngine::Physics::_set_ContactEvent(::UnityEngine::Physics::ContactEventDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_set_ContactEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics", "ContactEvent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Collision s_ReusableCollision
::UnityEngine::Collision* UnityEngine::Physics::_get_s_ReusableCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_get_s_ReusableCollision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Collision*>("UnityEngine", "Physics", "s_ReusableCollision"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Collision s_ReusableCollision
void UnityEngine::Physics::_set_s_ReusableCollision(::UnityEngine::Collision* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::_set_s_ReusableCollision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics", "s_ReusableCollision", value));
}
// Autogenerated method: UnityEngine.Physics.OnSceneContactModify
void UnityEngine::Physics::OnSceneContactModify(::UnityEngine::PhysicsScene scene, ::System::IntPtr buffer, int count, bool isCCD) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OnSceneContactModify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OnSceneContactModify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(isCCD)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, buffer, count, isCCD);
}
// Autogenerated method: UnityEngine.Physics.get_gravity
::UnityEngine::Vector3 UnityEngine::Physics::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_gravity
void UnityEngine::Physics::set_gravity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.set_defaultContactOffset
void UnityEngine::Physics::set_defaultContactOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_defaultContactOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_defaultContactOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.get_sleepThreshold
float UnityEngine::Physics::get_sleepThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_sleepThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_sleepThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_queriesHitTriggers
bool UnityEngine::Physics::get_queriesHitTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_queriesHitTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_queriesHitTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_simulationMode
::UnityEngine::SimulationMode UnityEngine::Physics::get_simulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_simulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_simulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SimulationMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_simulationMode
void UnityEngine::Physics::set_simulationMode(::UnityEngine::SimulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_simulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_simulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.get_invokeCollisionCallbacks
bool UnityEngine::Physics::get_invokeCollisionCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_invokeCollisionCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_invokeCollisionCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene
::UnityEngine::PhysicsScene UnityEngine::Physics::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2);
}
// Autogenerated method: UnityEngine.Physics.IgnoreLayerCollision
void UnityEngine::Physics::IgnoreLayerCollision(int layer1, int layer2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreLayerCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreLayerCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer1), ::il2cpp_utils::ExtractType(layer2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer1, layer2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreLayerCollision
void UnityEngine::Physics::IgnoreLayerCollision(int layer1, int layer2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreLayerCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreLayerCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer1), ::il2cpp_utils::ExtractType(layer2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer1, layer2);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, byref(hitInfo), layerMask);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere_Internal
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere(::UnityEngine::Vector3 position, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius);
}
// Autogenerated method: UnityEngine.Physics.Simulate_Internal
void UnityEngine::Physics::Simulate_Internal(::UnityEngine::PhysicsScene physicsScene, float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Simulate_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Simulate_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, step);
}
// Autogenerated method: UnityEngine.Physics.Simulate
void UnityEngine::Physics::Simulate(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, step);
}
// Autogenerated method: UnityEngine.Physics.SyncTransforms
void UnityEngine::Physics::SyncTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_autoSyncTransforms
bool UnityEngine::Physics::get_autoSyncTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_autoSyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_autoSyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_reuseCollisionCallbacks
bool UnityEngine::Physics::get_reuseCollisionCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_reuseCollisionCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_reuseCollisionCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.Query_ComputePenetration
bool UnityEngine::Physics::Query_ComputePenetration(::UnityEngine::Collider* colliderA, ::UnityEngine::Vector3 positionA, ::UnityEngine::Quaternion rotationA, ::UnityEngine::Collider* colliderB, ::UnityEngine::Vector3 positionB, ::UnityEngine::Quaternion rotationB, ByRef<::UnityEngine::Vector3> direction, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_ComputePenetration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_ComputePenetration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliderA), ::il2cpp_utils::ExtractType(positionA), ::il2cpp_utils::ExtractType(rotationA), ::il2cpp_utils::ExtractType(colliderB), ::il2cpp_utils::ExtractType(positionB), ::il2cpp_utils::ExtractType(rotationB), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colliderA, positionA, rotationA, colliderB, positionB, rotationB, byref(direction), byref(distance));
}
// Autogenerated method: UnityEngine.Physics.ComputePenetration
bool UnityEngine::Physics::ComputePenetration(::UnityEngine::Collider* colliderA, ::UnityEngine::Vector3 positionA, ::UnityEngine::Quaternion rotationA, ::UnityEngine::Collider* colliderB, ::UnityEngine::Vector3 positionB, ::UnityEngine::Quaternion rotationB, ByRef<::UnityEngine::Vector3> direction, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::ComputePenetration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "ComputePenetration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliderA), ::il2cpp_utils::ExtractType(positionA), ::il2cpp_utils::ExtractType(rotationA), ::il2cpp_utils::ExtractType(colliderB), ::il2cpp_utils::ExtractType(positionB), ::il2cpp_utils::ExtractType(rotationB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colliderA, positionA, rotationA, colliderB, positionB, rotationB, byref(direction), byref(distance));
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal
bool UnityEngine::Physics::CheckSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCastNonAlloc
int UnityEngine::Physics::CapsuleCastNonAlloc(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastNonAlloc
int UnityEngine::Physics::SphereCastNonAlloc(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastNonAlloc
int UnityEngine::Physics::SphereCastNonAlloc(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal
bool UnityEngine::Physics::CheckCapsule_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation);
}
// Autogenerated method: UnityEngine.Physics.OverlapCapsuleNonAlloc
int UnityEngine::Physics::OverlapCapsuleNonAlloc(::UnityEngine::Vector3 point0, ::UnityEngine::Vector3 point1, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapCapsuleNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapCapsuleNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point0), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point0, point1, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapCapsuleNonAlloc
int UnityEngine::Physics::OverlapCapsuleNonAlloc(::UnityEngine::Vector3 point0, ::UnityEngine::Vector3 point1, float radius, ::ArrayW<::UnityEngine::Collider*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapCapsuleNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapCapsuleNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point0), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point0, point1, radius, results);
}
// Autogenerated method: UnityEngine.Physics.BakeMesh
void UnityEngine::Physics::BakeMesh(int meshID, bool convex, ::UnityEngine::MeshColliderCookingOptions cookingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::BakeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "BakeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshID), ::il2cpp_utils::ExtractType(convex), ::il2cpp_utils::ExtractType(cookingOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshID, convex, cookingOptions);
}
// Autogenerated method: UnityEngine.Physics.BakeMesh
void UnityEngine::Physics::BakeMesh(int meshID, bool convex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::BakeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "BakeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshID), ::il2cpp_utils::ExtractType(convex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshID, convex);
}
// Autogenerated method: UnityEngine.Physics.GetColliderByInstanceID
::UnityEngine::Collider* UnityEngine::Physics::GetColliderByInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::GetColliderByInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "GetColliderByInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Physics.GetBodyByInstanceID
::UnityEngine::Component* UnityEngine::Physics::GetBodyByInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::GetBodyByInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "GetBodyByInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Physics.SendOnCollisionEnter
void UnityEngine::Physics::SendOnCollisionEnter(::UnityEngine::Component* component, ::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SendOnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SendOnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, collision);
}
// Autogenerated method: UnityEngine.Physics.SendOnCollisionStay
void UnityEngine::Physics::SendOnCollisionStay(::UnityEngine::Component* component, ::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SendOnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SendOnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, collision);
}
// Autogenerated method: UnityEngine.Physics.SendOnCollisionExit
void UnityEngine::Physics::SendOnCollisionExit(::UnityEngine::Component* component, ::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SendOnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SendOnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, collision);
}
// Autogenerated method: UnityEngine.Physics.get_autoSimulation
bool UnityEngine::Physics::get_autoSimulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_autoSimulation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_autoSimulation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_autoSimulation
void UnityEngine::Physics::set_autoSimulation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_autoSimulation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_autoSimulation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.OnSceneContact
void UnityEngine::Physics::OnSceneContact(::UnityEngine::PhysicsScene scene, ::System::IntPtr buffer, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OnSceneContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OnSceneContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, buffer, count);
}
// Autogenerated method: UnityEngine.Physics.ReportContacts
void UnityEngine::Physics::ReportContacts(typename ::Unity::Collections::NativeArray_1<::UnityEngine::ContactPairHeader>::ReadOnly array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::ReportContacts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "ReportContacts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.Physics.GetCollisionToReport
::UnityEngine::Collision* UnityEngine::Physics::GetCollisionToReport(ByRef<::UnityEngine::ContactPairHeader> header, ByRef<::UnityEngine::ContactPair> pair, bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::GetCollisionToReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "GetCollisionToReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header), ::il2cpp_utils::ExtractType(pair), ::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collision*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(header), byref(pair), flipped);
}
// Autogenerated method: UnityEngine.Physics..cctor
void UnityEngine::Physics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_gravity_Injected
void UnityEngine::Physics::get_gravity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.set_gravity_Injected
void UnityEngine::Physics::set_gravity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene_Injected
void UnityEngine::Physics::get_defaultPhysicsScene_Injected(ByRef<::UnityEngine::PhysicsScene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere_Internal_Injected
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Simulate_Internal_Injected
void UnityEngine::Physics::Simulate_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Simulate_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Simulate_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), step);
}
// Autogenerated method: UnityEngine.Physics.Query_ComputePenetration_Injected
bool UnityEngine::Physics::Query_ComputePenetration_Injected(::UnityEngine::Collider* colliderA, ByRef<::UnityEngine::Vector3> positionA, ByRef<::UnityEngine::Quaternion> rotationA, ::UnityEngine::Collider* colliderB, ByRef<::UnityEngine::Vector3> positionB, ByRef<::UnityEngine::Quaternion> rotationB, ByRef<::UnityEngine::Vector3> direction, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_ComputePenetration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_ComputePenetration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliderA), ::il2cpp_utils::ExtractType(positionA), ::il2cpp_utils::ExtractType(rotationA), ::il2cpp_utils::ExtractType(colliderB), ::il2cpp_utils::ExtractType(positionB), ::il2cpp_utils::ExtractType(rotationB), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colliderA, byref(positionA), byref(rotationA), colliderB, byref(positionB), byref(rotationB), byref(direction), byref(distance));
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal_Injected
bool UnityEngine::Physics::CheckSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal_Injected
bool UnityEngine::Physics::CheckCapsule_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Physics/ContactEventDelegate
#include "UnityEngine/Physics_ContactEventDelegate.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Physics/ContactEventDelegate.Invoke
void UnityEngine::Physics::ContactEventDelegate::Invoke(::UnityEngine::PhysicsScene scene, typename ::Unity::Collections::NativeArray_1<::UnityEngine::ContactPairHeader>::ReadOnly headerArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::ContactEventDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Physics::ContactEventDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, headerArray);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PhysicMaterial
#include "UnityEngine/PhysicMaterial.hpp"
// Including type: UnityEngine.PhysicMaterialCombine
#include "UnityEngine/PhysicMaterialCombine.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PhysicMaterial.Internal_CreateDynamicsMaterial
void UnityEngine::PhysicMaterial::Internal_CreateDynamicsMaterial(::UnityEngine::PhysicMaterial* mat, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::Internal_CreateDynamicsMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicMaterial", "Internal_CreateDynamicsMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mat, name);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_bounciness
float UnityEngine::PhysicMaterial::get_bounciness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_bounciness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounciness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_bounciness
void UnityEngine::PhysicMaterial::set_bounciness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_bounciness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bounciness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_dynamicFriction
float UnityEngine::PhysicMaterial::get_dynamicFriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_dynamicFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_dynamicFriction
void UnityEngine::PhysicMaterial::set_dynamicFriction(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_dynamicFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_staticFriction
float UnityEngine::PhysicMaterial::get_staticFriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_staticFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_staticFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_staticFriction
void UnityEngine::PhysicMaterial::set_staticFriction(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_staticFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_staticFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_frictionCombine
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterial::get_frictionCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_frictionCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frictionCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicMaterialCombine, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_frictionCombine
void UnityEngine::PhysicMaterial::set_frictionCombine(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_frictionCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frictionCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_bounceCombine
::UnityEngine::PhysicMaterialCombine UnityEngine::PhysicMaterial::get_bounceCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_bounceCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounceCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicMaterialCombine, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_bounceCombine
void UnityEngine::PhysicMaterial::set_bounceCombine(::UnityEngine::PhysicMaterialCombine value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_bounceCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bounceCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_bouncyness
float UnityEngine::PhysicMaterial::get_bouncyness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_bouncyness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bouncyness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_bouncyness
void UnityEngine::PhysicMaterial::set_bouncyness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_bouncyness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bouncyness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_frictionDirection2
::UnityEngine::Vector3 UnityEngine::PhysicMaterial::get_frictionDirection2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_frictionDirection2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frictionDirection2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_frictionDirection2
void UnityEngine::PhysicMaterial::set_frictionDirection2(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_frictionDirection2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frictionDirection2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_dynamicFriction2
float UnityEngine::PhysicMaterial::get_dynamicFriction2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_dynamicFriction2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicFriction2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_dynamicFriction2
void UnityEngine::PhysicMaterial::set_dynamicFriction2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_dynamicFriction2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicFriction2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_staticFriction2
float UnityEngine::PhysicMaterial::get_staticFriction2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_staticFriction2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_staticFriction2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_staticFriction2
void UnityEngine::PhysicMaterial::set_staticFriction2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_staticFriction2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_staticFriction2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PhysicMaterial.get_frictionDirection
::UnityEngine::Vector3 UnityEngine::PhysicMaterial::get_frictionDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::get_frictionDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frictionDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicMaterial.set_frictionDirection
void UnityEngine::PhysicMaterial::set_frictionDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::set_frictionDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frictionDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_FaceID
[[deprecated("Use field access instead!")]] uint& UnityEngine::RaycastHit::dyn_m_FaceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_FaceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 m_UV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit::dyn_m_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_UV");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit.get_collider
::UnityEngine::Collider* UnityEngine::RaycastHit::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_point
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_point
void UnityEngine::RaycastHit::set_point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_normal
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_normal
void UnityEngine::RaycastHit::set_normal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_distance
float UnityEngine::RaycastHit::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_distance
void UnityEngine::RaycastHit::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_triangleIndex
int UnityEngine::RaycastHit::get_triangleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_triangleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triangleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_transform
::UnityEngine::Transform* UnityEngine::RaycastHit::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_rigidbody
::UnityEngine::Rigidbody* UnityEngine::RaycastHit::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.RigidbodyConstraints
#include "UnityEngine/RigidbodyConstraints.hpp"
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.RigidbodyInterpolation
#include "UnityEngine/RigidbodyInterpolation.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody.get_velocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity
void UnityEngine::Rigidbody::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity
void UnityEngine::Rigidbody::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_drag
float UnityEngine::Rigidbody::get_drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_drag
void UnityEngine::Rigidbody::set_drag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularDrag
float UnityEngine::Rigidbody::get_angularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularDrag
void UnityEngine::Rigidbody::set_angularDrag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_mass
float UnityEngine::Rigidbody::get_mass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_mass
void UnityEngine::Rigidbody::set_mass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.SetDensity
void UnityEngine::Rigidbody::SetDensity(float density) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SetDensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(density)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, density);
}
// Autogenerated method: UnityEngine.Rigidbody.get_useGravity
bool UnityEngine::Rigidbody::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_useGravity
void UnityEngine::Rigidbody::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxDepenetrationVelocity
float UnityEngine::Rigidbody::get_maxDepenetrationVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_maxDepenetrationVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxDepenetrationVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_maxDepenetrationVelocity
void UnityEngine::Rigidbody::set_maxDepenetrationVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_maxDepenetrationVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxDepenetrationVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_isKinematic
bool UnityEngine::Rigidbody::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_isKinematic
void UnityEngine::Rigidbody::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_freezeRotation
bool UnityEngine::Rigidbody::get_freezeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_freezeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_freezeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_freezeRotation
void UnityEngine::Rigidbody::set_freezeRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_freezeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_freezeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_constraints
::UnityEngine::RigidbodyConstraints UnityEngine::Rigidbody::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RigidbodyConstraints, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_constraints
void UnityEngine::Rigidbody::set_constraints(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_collisionDetectionMode
::UnityEngine::CollisionDetectionMode UnityEngine::Rigidbody::get_collisionDetectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionDetectionMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_collisionDetectionMode
void UnityEngine::Rigidbody::set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_automaticCenterOfMass
bool UnityEngine::Rigidbody::get_automaticCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_automaticCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_automaticCenterOfMass
void UnityEngine::Rigidbody::set_automaticCenterOfMass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_automaticCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_centerOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_centerOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_centerOfMass
void UnityEngine::Rigidbody::set_centerOfMass(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_worldCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.get_automaticInertiaTensor
bool UnityEngine::Rigidbody::get_automaticInertiaTensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_automaticInertiaTensor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticInertiaTensor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_automaticInertiaTensor
void UnityEngine::Rigidbody::set_automaticInertiaTensor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_automaticInertiaTensor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticInertiaTensor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_inertiaTensorRotation
::UnityEngine::Quaternion UnityEngine::Rigidbody::get_inertiaTensorRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_inertiaTensorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertiaTensorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_inertiaTensorRotation
void UnityEngine::Rigidbody::set_inertiaTensorRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_inertiaTensorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertiaTensorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_inertiaTensor
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_inertiaTensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_inertiaTensor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertiaTensor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_inertiaTensor
void UnityEngine::Rigidbody::set_inertiaTensor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_inertiaTensor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertiaTensor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_detectCollisions
bool UnityEngine::Rigidbody::get_detectCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_detectCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_detectCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_detectCollisions
void UnityEngine::Rigidbody::set_detectCollisions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_detectCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_detectCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_position
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_position
void UnityEngine::Rigidbody::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_rotation
::UnityEngine::Quaternion UnityEngine::Rigidbody::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation
void UnityEngine::Rigidbody::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_interpolation
::UnityEngine::RigidbodyInterpolation UnityEngine::Rigidbody::get_interpolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_interpolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interpolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RigidbodyInterpolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_interpolation
void UnityEngine::Rigidbody::set_interpolation(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_interpolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interpolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_solverIterations
int UnityEngine::Rigidbody::get_solverIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_solverIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_solverIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_solverIterations
void UnityEngine::Rigidbody::set_solverIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_solverIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_solverIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_sleepThreshold
float UnityEngine::Rigidbody::get_sleepThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_sleepThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sleepThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_sleepThreshold
void UnityEngine::Rigidbody::set_sleepThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_sleepThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sleepThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxAngularVelocity
float UnityEngine::Rigidbody::get_maxAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_maxAngularVelocity
void UnityEngine::Rigidbody::set_maxAngularVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxLinearVelocity
float UnityEngine::Rigidbody::get_maxLinearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_maxLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_maxLinearVelocity
void UnityEngine::Rigidbody::set_maxLinearVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_maxLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition
void UnityEngine::Rigidbody::MovePosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation
void UnityEngine::Rigidbody::MoveRotation(::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rot);
}
// Autogenerated method: UnityEngine.Rigidbody.Move
void UnityEngine::Rigidbody::Move(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.Rigidbody.Sleep
void UnityEngine::Rigidbody::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.IsSleeping
bool UnityEngine::Rigidbody::IsSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::IsSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.WakeUp
void UnityEngine::Rigidbody::WakeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::WakeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WakeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.ResetCenterOfMass
void UnityEngine::Rigidbody::ResetCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::ResetCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.ResetInertiaTensor
void UnityEngine::Rigidbody::ResetInertiaTensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::ResetInertiaTensor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInertiaTensor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.GetRelativePointVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetRelativePointVelocity(::UnityEngine::Vector3 relativePoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetRelativePointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativePointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, relativePoint);
}
// Autogenerated method: UnityEngine.Rigidbody.GetPointVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetPointVelocity(::UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldPoint);
}
// Autogenerated method: UnityEngine.Rigidbody.get_solverVelocityIterations
int UnityEngine::Rigidbody::get_solverVelocityIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_solverVelocityIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_solverVelocityIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_solverVelocityIterations
void UnityEngine::Rigidbody::set_solverVelocityIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_solverVelocityIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_solverVelocityIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_excludeLayers
::UnityEngine::LayerMask UnityEngine::Rigidbody::get_excludeLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_excludeLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_excludeLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_excludeLayers
void UnityEngine::Rigidbody::set_excludeLayers(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_excludeLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_excludeLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_includeLayers
::UnityEngine::LayerMask UnityEngine::Rigidbody::get_includeLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_includeLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_includeLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_includeLayers
void UnityEngine::Rigidbody::set_includeLayers(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_includeLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_includeLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedForce
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetAccumulatedForce(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, step);
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedForce
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetAccumulatedForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedTorque
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetAccumulatedTorque(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, step);
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedTorque
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetAccumulatedTorque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(::UnityEngine::Vector3 force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(::UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(float x, float y, float z, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeForce
void UnityEngine::Rigidbody::AddRelativeForce(::UnityEngine::Vector3 force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeForce
void UnityEngine::Rigidbody::AddRelativeForce(::UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeForce
void UnityEngine::Rigidbody::AddRelativeForce(float x, float y, float z, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeForce
void UnityEngine::Rigidbody::AddRelativeForce(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(::UnityEngine::Vector3 torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(::UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(float x, float y, float z, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeTorque
void UnityEngine::Rigidbody::AddRelativeTorque(::UnityEngine::Vector3 torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeTorque
void UnityEngine::Rigidbody::AddRelativeTorque(::UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeTorque
void UnityEngine::Rigidbody::AddRelativeTorque(float x, float y, float z, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeTorque
void UnityEngine::Rigidbody::AddRelativeTorque(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition
void UnityEngine::Rigidbody::AddForceAtPosition(::UnityEngine::Vector3 force, ::UnityEngine::Vector3 position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, position, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition
void UnityEngine::Rigidbody::AddForceAtPosition(::UnityEngine::Vector3 force, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, position);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius, upwardsModifier, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius, upwardsModifier);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius);
}
// Autogenerated method: UnityEngine.Rigidbody.Internal_ClosestPointOnBounds
void UnityEngine::Rigidbody::Internal_ClosestPointOnBounds(::UnityEngine::Vector3 point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Internal_ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Rigidbody.ClosestPointOnBounds
::UnityEngine::Vector3 UnityEngine::Rigidbody::ClosestPointOnBounds(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTest
::UnityEngine::RaycastHit UnityEngine::Rigidbody::SweepTest(::UnityEngine::Vector3 direction, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ByRef<bool> hasHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(hasHit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, direction, maxDistance, queryTriggerInteraction, byref(hasHit));
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTest
bool UnityEngine::Rigidbody::SweepTest(::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, direction, byref(hitInfo), maxDistance, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTest
bool UnityEngine::Rigidbody::SweepTest(::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, direction, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTest
bool UnityEngine::Rigidbody::SweepTest(::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, direction, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Rigidbody.Internal_SweepTestAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Rigidbody::Internal_SweepTestAll(::UnityEngine::Vector3 direction, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Internal_SweepTestAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SweepTestAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, direction, maxDistance, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTestAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Rigidbody::SweepTestAll(::UnityEngine::Vector3 direction, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTestAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTestAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, direction, maxDistance, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTestAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Rigidbody::SweepTestAll(::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTestAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTestAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTestAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Rigidbody::SweepTestAll(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTestAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTestAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Rigidbody.get_sleepVelocity
float UnityEngine::Rigidbody::get_sleepVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_sleepVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sleepVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_sleepVelocity
void UnityEngine::Rigidbody::set_sleepVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_sleepVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sleepVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_sleepAngularVelocity
float UnityEngine::Rigidbody::get_sleepAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_sleepAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sleepAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_sleepAngularVelocity
void UnityEngine::Rigidbody::set_sleepAngularVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_sleepAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sleepAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.SetMaxAngularVelocity
void UnityEngine::Rigidbody::SetMaxAngularVelocity(float a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SetMaxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: UnityEngine.Rigidbody.get_useConeFriction
bool UnityEngine::Rigidbody::get_useConeFriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_useConeFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useConeFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_useConeFriction
void UnityEngine::Rigidbody::set_useConeFriction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_useConeFriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useConeFriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_solverIterationCount
int UnityEngine::Rigidbody::get_solverIterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_solverIterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_solverIterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_solverIterationCount
void UnityEngine::Rigidbody::set_solverIterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_solverIterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_solverIterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_solverVelocityIterationCount
int UnityEngine::Rigidbody::get_solverVelocityIterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_solverVelocityIterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_solverVelocityIterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_solverVelocityIterationCount
void UnityEngine::Rigidbody::set_solverVelocityIterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_solverVelocityIterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_solverVelocityIterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_velocity_Injected
void UnityEngine::Rigidbody::get_velocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity_Injected
void UnityEngine::Rigidbody::set_velocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity_Injected
void UnityEngine::Rigidbody::get_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity_Injected
void UnityEngine::Rigidbody::set_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_centerOfMass_Injected
void UnityEngine::Rigidbody::get_centerOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_centerOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_centerOfMass_Injected
void UnityEngine::Rigidbody::set_centerOfMass_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_centerOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass_Injected
void UnityEngine::Rigidbody::get_worldCenterOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_inertiaTensorRotation_Injected
void UnityEngine::Rigidbody::get_inertiaTensorRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_inertiaTensorRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertiaTensorRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_inertiaTensorRotation_Injected
void UnityEngine::Rigidbody::set_inertiaTensorRotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_inertiaTensorRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertiaTensorRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_inertiaTensor_Injected
void UnityEngine::Rigidbody::get_inertiaTensor_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_inertiaTensor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertiaTensor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_inertiaTensor_Injected
void UnityEngine::Rigidbody::set_inertiaTensor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_inertiaTensor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertiaTensor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position_Injected
void UnityEngine::Rigidbody::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position_Injected
void UnityEngine::Rigidbody::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_rotation_Injected
void UnityEngine::Rigidbody::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation_Injected
void UnityEngine::Rigidbody::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition_Injected
void UnityEngine::Rigidbody::MovePosition_Injected(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation_Injected
void UnityEngine::Rigidbody::MoveRotation_Injected(ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rot));
}
// Autogenerated method: UnityEngine.Rigidbody.Move_Injected
void UnityEngine::Rigidbody::Move_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Move_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Rigidbody.GetRelativePointVelocity_Injected
void UnityEngine::Rigidbody::GetRelativePointVelocity_Injected(ByRef<::UnityEngine::Vector3> relativePoint, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetRelativePointVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativePointVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePoint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(relativePoint), byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.GetPointVelocity_Injected
void UnityEngine::Rigidbody::GetPointVelocity_Injected(ByRef<::UnityEngine::Vector3> worldPoint, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetPointVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(worldPoint), byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_excludeLayers_Injected
void UnityEngine::Rigidbody::get_excludeLayers_Injected(ByRef<::UnityEngine::LayerMask> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_excludeLayers_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_excludeLayers_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::LayerMask&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_excludeLayers_Injected
void UnityEngine::Rigidbody::set_excludeLayers_Injected(ByRef<::UnityEngine::LayerMask> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_excludeLayers_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_excludeLayers_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_includeLayers_Injected
void UnityEngine::Rigidbody::get_includeLayers_Injected(ByRef<::UnityEngine::LayerMask> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_includeLayers_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_includeLayers_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::LayerMask&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_includeLayers_Injected
void UnityEngine::Rigidbody::set_includeLayers_Injected(ByRef<::UnityEngine::LayerMask> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_includeLayers_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_includeLayers_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedForce_Injected
void UnityEngine::Rigidbody::GetAccumulatedForce_Injected(float step, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, step, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.GetAccumulatedTorque_Injected
void UnityEngine::Rigidbody::GetAccumulatedTorque_Injected(float step, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetAccumulatedTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccumulatedTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, step, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce_Injected
void UnityEngine::Rigidbody::AddForce_Injected(ByRef<::UnityEngine::Vector3> force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeForce_Injected
void UnityEngine::Rigidbody::AddRelativeForce_Injected(ByRef<::UnityEngine::Vector3> force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque_Injected
void UnityEngine::Rigidbody::AddTorque_Injected(ByRef<::UnityEngine::Vector3> torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(torque), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddRelativeTorque_Injected
void UnityEngine::Rigidbody::AddRelativeTorque_Injected(ByRef<::UnityEngine::Vector3> torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddRelativeTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRelativeTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(torque), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition_Injected
void UnityEngine::Rigidbody::AddForceAtPosition_Injected(ByRef<::UnityEngine::Vector3> force, ByRef<::UnityEngine::Vector3> position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), byref(position), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce_Injected
void UnityEngine::Rigidbody::AddExplosionForce_Injected(float explosionForce, ByRef<::UnityEngine::Vector3> explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, byref(explosionPosition), explosionRadius, upwardsModifier, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.Internal_ClosestPointOnBounds_Injected
void UnityEngine::Rigidbody::Internal_ClosestPointOnBounds_Injected(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Internal_ClosestPointOnBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Rigidbody.SweepTest_Injected
void UnityEngine::Rigidbody::SweepTest_Injected(ByRef<::UnityEngine::Vector3> direction, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ByRef<bool> hasHit, ByRef<::UnityEngine::RaycastHit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::SweepTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SweepTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(hasHit), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(direction), maxDistance, queryTriggerInteraction, byref(hasHit), byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.Internal_SweepTestAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Rigidbody::Internal_SweepTestAll_Injected(ByRef<::UnityEngine::Vector3> direction, float maxDistance, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Internal_SweepTestAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SweepTestAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, byref(direction), maxDistance, queryTriggerInteraction);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.PhysicMaterial
#include "UnityEngine/PhysicMaterial.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider.get_enabled
bool UnityEngine::Collider::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_enabled
void UnityEngine::Collider::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_attachedRigidbody
::UnityEngine::Rigidbody* UnityEngine::Collider::get_attachedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_attachedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.get_isTrigger
bool UnityEngine::Collider::get_isTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_isTrigger
void UnityEngine::Collider::set_isTrigger(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_contactOffset
float UnityEngine::Collider::get_contactOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_contactOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contactOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_contactOffset
void UnityEngine::Collider::set_contactOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_contactOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contactOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.ClosestPoint
::UnityEngine::Vector3 UnityEngine::Collider::ClosestPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Collider.get_bounds
::UnityEngine::Bounds UnityEngine::Collider::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_material
void UnityEngine::Collider::set_material(::UnityEngine::PhysicMaterial* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.Raycast
::UnityEngine::RaycastHit UnityEngine::Collider::Raycast(::UnityEngine::Ray ray, float maxDistance, ByRef<bool> hasHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hasHit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, ray, maxDistance, byref(hasHit));
}
// Autogenerated method: UnityEngine.Collider.Raycast
bool UnityEngine::Collider::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds
void UnityEngine::Collider::Internal_ClosestPointOnBounds(::UnityEngine::Vector3 point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Collider.ClosestPointOnBounds
::UnityEngine::Vector3 UnityEngine::Collider::ClosestPointOnBounds(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Collider.ClosestPoint_Injected
void UnityEngine::Collider::ClosestPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Collider.get_bounds_Injected
void UnityEngine::Collider::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Collider.Raycast_Injected
void UnityEngine::Collider::Raycast_Injected(ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<bool> hasHit, ByRef<::UnityEngine::RaycastHit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hasHit), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ray), maxDistance, byref(hasHit), byref(ret));
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds_Injected
void UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(outPos), byref(distance));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CharacterController.SimpleMove
bool UnityEngine::CharacterController::SimpleMove(::UnityEngine::Vector3 speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::SimpleMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.CharacterController.Move
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move(::UnityEngine::Vector3 motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, motion);
}
// Autogenerated method: UnityEngine.CharacterController.get_isGrounded
bool UnityEngine::CharacterController::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_radius
float UnityEngine::CharacterController::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_height
float UnityEngine::CharacterController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.set_height
void UnityEngine::CharacterController::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterController.get_center
::UnityEngine::Vector3 UnityEngine::CharacterController::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.set_center
void UnityEngine::CharacterController::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterController.get_stepOffset
float UnityEngine::CharacterController::get_stepOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_stepOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_skinWidth
float UnityEngine::CharacterController::get_skinWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_skinWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.SimpleMove_Injected
bool UnityEngine::CharacterController::SimpleMove_Injected(ByRef<::UnityEngine::Vector3> speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::SimpleMove_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleMove_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(speed));
}
// Autogenerated method: UnityEngine.CharacterController.Move_Injected
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move_Injected(ByRef<::UnityEngine::Vector3> motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, byref(motion));
}
// Autogenerated method: UnityEngine.CharacterController.get_center_Injected
void UnityEngine::CharacterController::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CharacterController.set_center_Injected
void UnityEngine::CharacterController::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshColliderCookingOptions
#include "UnityEngine/MeshColliderCookingOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshCollider.get_sharedMesh
::UnityEngine::Mesh* UnityEngine::MeshCollider::get_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_sharedMesh
void UnityEngine::MeshCollider::set_sharedMesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.get_convex
bool UnityEngine::MeshCollider::get_convex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_convex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_convex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_convex
void UnityEngine::MeshCollider::set_convex(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_convex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_convex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.get_cookingOptions
::UnityEngine::MeshColliderCookingOptions UnityEngine::MeshCollider::get_cookingOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_cookingOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cookingOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshColliderCookingOptions, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_cookingOptions
void UnityEngine::MeshCollider::set_cookingOptions(::UnityEngine::MeshColliderCookingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_cookingOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cookingOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.get_smoothSphereCollisions
bool UnityEngine::MeshCollider::get_smoothSphereCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_smoothSphereCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothSphereCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_smoothSphereCollisions
void UnityEngine::MeshCollider::set_smoothSphereCollisions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_smoothSphereCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothSphereCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.get_skinWidth
float UnityEngine::MeshCollider::get_skinWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_skinWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_skinWidth
void UnityEngine::MeshCollider::set_skinWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_skinWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skinWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.get_inflateMesh
bool UnityEngine::MeshCollider::get_inflateMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_inflateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inflateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_inflateMesh
void UnityEngine::MeshCollider::set_inflateMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_inflateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inflateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CapsuleCollider.get_center
::UnityEngine::Vector3 UnityEngine::CapsuleCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center
void UnityEngine::CapsuleCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_radius
float UnityEngine::CapsuleCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_radius
void UnityEngine::CapsuleCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_height
float UnityEngine::CapsuleCollider::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_height
void UnityEngine::CapsuleCollider::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_direction
int UnityEngine::CapsuleCollider::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_direction
void UnityEngine::CapsuleCollider::set_direction(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.GetGlobalExtents
::UnityEngine::Vector2 UnityEngine::CapsuleCollider::GetGlobalExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::GetGlobalExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGlobalExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.CalculateTransform
::UnityEngine::Matrix4x4 UnityEngine::CapsuleCollider::CalculateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::CalculateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_center_Injected
void UnityEngine::CapsuleCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center_Injected
void UnityEngine::CapsuleCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.CapsuleCollider.GetGlobalExtents_Injected
void UnityEngine::CapsuleCollider::GetGlobalExtents_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::GetGlobalExtents_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGlobalExtents_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CapsuleCollider.CalculateTransform_Injected
void UnityEngine::CapsuleCollider::CalculateTransform_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::CalculateTransform_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTransform_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoxCollider.get_center
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_center
void UnityEngine::BoxCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_size
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_size
void UnityEngine::BoxCollider::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_extents
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_extents
void UnityEngine::BoxCollider::set_extents(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_center_Injected
void UnityEngine::BoxCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_center_Injected
void UnityEngine::BoxCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.BoxCollider.get_size_Injected
void UnityEngine::BoxCollider::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_size_Injected
void UnityEngine::BoxCollider::set_size_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SphereCollider.get_center
::UnityEngine::Vector3 UnityEngine::SphereCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SphereCollider.set_center
void UnityEngine::SphereCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SphereCollider.get_radius
float UnityEngine::SphereCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SphereCollider.set_radius
void UnityEngine::SphereCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SphereCollider.get_center_Injected
void UnityEngine::SphereCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.SphereCollider.set_center_Injected
void UnityEngine::SphereCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ConstantForce
#include "UnityEngine/ConstantForce.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ConstantForce.get_force
::UnityEngine::Vector3 UnityEngine::ConstantForce::get_force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_force");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_force", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConstantForce.set_force
void UnityEngine::ConstantForce::set_force(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_force");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_force", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConstantForce.get_relativeForce
::UnityEngine::Vector3 UnityEngine::ConstantForce::get_relativeForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_relativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConstantForce.set_relativeForce
void UnityEngine::ConstantForce::set_relativeForce(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_relativeForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_relativeForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConstantForce.get_torque
::UnityEngine::Vector3 UnityEngine::ConstantForce::get_torque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_torque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConstantForce.set_torque
void UnityEngine::ConstantForce::set_torque(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_torque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_torque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConstantForce.get_relativeTorque
::UnityEngine::Vector3 UnityEngine::ConstantForce::get_relativeTorque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_relativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConstantForce.set_relativeTorque
void UnityEngine::ConstantForce::set_relativeTorque(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_relativeTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_relativeTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConstantForce.get_force_Injected
void UnityEngine::ConstantForce::get_force_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_force_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_force_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConstantForce.set_force_Injected
void UnityEngine::ConstantForce::set_force_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_force_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_force_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConstantForce.get_relativeForce_Injected
void UnityEngine::ConstantForce::get_relativeForce_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_relativeForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConstantForce.set_relativeForce_Injected
void UnityEngine::ConstantForce::set_relativeForce_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_relativeForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_relativeForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConstantForce.get_torque_Injected
void UnityEngine::ConstantForce::get_torque_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_torque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConstantForce.set_torque_Injected
void UnityEngine::ConstantForce::set_torque_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_torque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_torque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConstantForce.get_relativeTorque_Injected
void UnityEngine::ConstantForce::get_relativeTorque_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::get_relativeTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConstantForce.set_relativeTorque_Injected
void UnityEngine::ConstantForce::set_relativeTorque_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConstantForce::set_relativeTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_relativeTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Joint.get_connectedBody
::UnityEngine::Rigidbody* UnityEngine::Joint::get_connectedBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedBody
void UnityEngine::Joint::set_connectedBody(::UnityEngine::Rigidbody* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_axis
::UnityEngine::Vector3 UnityEngine::Joint::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_axis
void UnityEngine::Joint::set_axis(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_anchor
::UnityEngine::Vector3 UnityEngine::Joint::get_anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_anchor
void UnityEngine::Joint::set_anchor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_connectedAnchor
::UnityEngine::Vector3 UnityEngine::Joint::get_connectedAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor
void UnityEngine::Joint::set_connectedAnchor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_autoConfigureConnectedAnchor
bool UnityEngine::Joint::get_autoConfigureConnectedAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_autoConfigureConnectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoConfigureConnectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_autoConfigureConnectedAnchor
void UnityEngine::Joint::set_autoConfigureConnectedAnchor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_autoConfigureConnectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoConfigureConnectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_breakForce
float UnityEngine::Joint::get_breakForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_breakForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_breakForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_breakForce
void UnityEngine::Joint::set_breakForce(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_breakForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_breakForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_breakTorque
float UnityEngine::Joint::get_breakTorque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_breakTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_breakTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_breakTorque
void UnityEngine::Joint::set_breakTorque(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_breakTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_breakTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_enableCollision
bool UnityEngine::Joint::get_enableCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_enableCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_enableCollision
void UnityEngine::Joint::set_enableCollision(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_enableCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_enablePreprocessing
bool UnityEngine::Joint::get_enablePreprocessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_enablePreprocessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enablePreprocessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_enablePreprocessing
void UnityEngine::Joint::set_enablePreprocessing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_enablePreprocessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enablePreprocessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_massScale
float UnityEngine::Joint::get_massScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_massScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_massScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_massScale
void UnityEngine::Joint::set_massScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_massScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_massScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_connectedMassScale
float UnityEngine::Joint::get_connectedMassScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedMassScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedMassScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedMassScale
void UnityEngine::Joint::set_connectedMassScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedMassScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedMassScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.get_axis_Injected
void UnityEngine::Joint::get_axis_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_axis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Joint.set_axis_Injected
void UnityEngine::Joint::set_axis_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_axis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Joint.get_anchor_Injected
void UnityEngine::Joint::get_anchor_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_anchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Joint.set_anchor_Injected
void UnityEngine::Joint::set_anchor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_anchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Joint.get_connectedAnchor_Injected
void UnityEngine::Joint::get_connectedAnchor_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedAnchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedAnchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor_Injected
void UnityEngine::Joint::set_connectedAnchor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.HingeJoint
#include "UnityEngine/HingeJoint.hpp"
// Including type: UnityEngine.JointMotor
#include "UnityEngine/JointMotor.hpp"
// Including type: UnityEngine.JointLimits
#include "UnityEngine/JointLimits.hpp"
// Including type: UnityEngine.JointSpring
#include "UnityEngine/JointSpring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HingeJoint.get_motor
::UnityEngine::JointMotor UnityEngine::HingeJoint::get_motor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_motor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_motor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointMotor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_motor
void UnityEngine::HingeJoint::set_motor(::UnityEngine::JointMotor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_motor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_motor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_limits
::UnityEngine::JointLimits UnityEngine::HingeJoint::get_limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointLimits, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_limits
void UnityEngine::HingeJoint::set_limits(::UnityEngine::JointLimits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_spring
::UnityEngine::JointSpring UnityEngine::HingeJoint::get_spring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_spring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointSpring, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_spring
void UnityEngine::HingeJoint::set_spring(::UnityEngine::JointSpring value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_spring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_useMotor
bool UnityEngine::HingeJoint::get_useMotor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_useMotor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useMotor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_useMotor
void UnityEngine::HingeJoint::set_useMotor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_useMotor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useMotor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_useLimits
bool UnityEngine::HingeJoint::get_useLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_useLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_useLimits
void UnityEngine::HingeJoint::set_useLimits(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_useLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_extendedLimits
bool UnityEngine::HingeJoint::get_extendedLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_extendedLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extendedLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_extendedLimits
void UnityEngine::HingeJoint::set_extendedLimits(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_extendedLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extendedLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_useSpring
bool UnityEngine::HingeJoint::get_useSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_useSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_useSpring
void UnityEngine::HingeJoint::set_useSpring(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_useSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_velocity
float UnityEngine::HingeJoint::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.get_angle
float UnityEngine::HingeJoint::get_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.get_useAcceleration
bool UnityEngine::HingeJoint::get_useAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_useAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HingeJoint.set_useAcceleration
void UnityEngine::HingeJoint::set_useAcceleration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_useAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.HingeJoint.get_motor_Injected
void UnityEngine::HingeJoint::get_motor_Injected(ByRef<::UnityEngine::JointMotor> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_motor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_motor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointMotor&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.HingeJoint.set_motor_Injected
void UnityEngine::HingeJoint::set_motor_Injected(ByRef<::UnityEngine::JointMotor> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_motor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_motor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.HingeJoint.get_limits_Injected
void UnityEngine::HingeJoint::get_limits_Injected(ByRef<::UnityEngine::JointLimits> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_limits_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limits_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointLimits&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.HingeJoint.set_limits_Injected
void UnityEngine::HingeJoint::set_limits_Injected(ByRef<::UnityEngine::JointLimits> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_limits_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_limits_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.HingeJoint.get_spring_Injected
void UnityEngine::HingeJoint::get_spring_Injected(ByRef<::UnityEngine::JointSpring> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::get_spring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointSpring&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.HingeJoint.set_spring_Injected
void UnityEngine::HingeJoint::set_spring_Injected(ByRef<::UnityEngine::JointSpring> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HingeJoint::set_spring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ConfigurableJoint
#include "UnityEngine/ConfigurableJoint.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.ConfigurableJointMotion
#include "UnityEngine/ConfigurableJointMotion.hpp"
// Including type: UnityEngine.SoftJointLimitSpring
#include "UnityEngine/SoftJointLimitSpring.hpp"
// Including type: UnityEngine.SoftJointLimit
#include "UnityEngine/SoftJointLimit.hpp"
// Including type: UnityEngine.JointDrive
#include "UnityEngine/JointDrive.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.RotationDriveMode
#include "UnityEngine/RotationDriveMode.hpp"
// Including type: UnityEngine.JointProjectionMode
#include "UnityEngine/JointProjectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ConfigurableJoint.get_secondaryAxis
::UnityEngine::Vector3 UnityEngine::ConfigurableJoint::get_secondaryAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_secondaryAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_secondaryAxis
void UnityEngine::ConfigurableJoint::set_secondaryAxis(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_secondaryAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_xMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_xMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_xMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_xMotion
void UnityEngine::ConfigurableJoint::set_xMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_xMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_yMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_yMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_yMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_yMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_yMotion
void UnityEngine::ConfigurableJoint::set_yMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_yMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_yMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_zMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_zMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_zMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_zMotion
void UnityEngine::ConfigurableJoint::set_zMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_zMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularXMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_angularXMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularXMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularXMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularXMotion
void UnityEngine::ConfigurableJoint::set_angularXMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularXMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularXMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_angularYMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYMotion
void UnityEngine::ConfigurableJoint::set_angularYMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularZMotion
::UnityEngine::ConfigurableJointMotion UnityEngine::ConfigurableJoint::get_angularZMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularZMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularZMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJointMotion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularZMotion
void UnityEngine::ConfigurableJoint::set_angularZMotion(::UnityEngine::ConfigurableJointMotion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularZMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularZMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_linearLimitSpring
::UnityEngine::SoftJointLimitSpring UnityEngine::ConfigurableJoint::get_linearLimitSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_linearLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linearLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimitSpring, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_linearLimitSpring
void UnityEngine::ConfigurableJoint::set_linearLimitSpring(::UnityEngine::SoftJointLimitSpring value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_linearLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linearLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularXLimitSpring
::UnityEngine::SoftJointLimitSpring UnityEngine::ConfigurableJoint::get_angularXLimitSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularXLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularXLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimitSpring, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularXLimitSpring
void UnityEngine::ConfigurableJoint::set_angularXLimitSpring(::UnityEngine::SoftJointLimitSpring value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularXLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularXLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYZLimitSpring
::UnityEngine::SoftJointLimitSpring UnityEngine::ConfigurableJoint::get_angularYZLimitSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYZLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYZLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimitSpring, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYZLimitSpring
void UnityEngine::ConfigurableJoint::set_angularYZLimitSpring(::UnityEngine::SoftJointLimitSpring value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYZLimitSpring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYZLimitSpring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_linearLimit
::UnityEngine::SoftJointLimit UnityEngine::ConfigurableJoint::get_linearLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_linearLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linearLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_linearLimit
void UnityEngine::ConfigurableJoint::set_linearLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_linearLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linearLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_lowAngularXLimit
::UnityEngine::SoftJointLimit UnityEngine::ConfigurableJoint::get_lowAngularXLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_lowAngularXLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowAngularXLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_lowAngularXLimit
void UnityEngine::ConfigurableJoint::set_lowAngularXLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_lowAngularXLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowAngularXLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_highAngularXLimit
::UnityEngine::SoftJointLimit UnityEngine::ConfigurableJoint::get_highAngularXLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_highAngularXLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highAngularXLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_highAngularXLimit
void UnityEngine::ConfigurableJoint::set_highAngularXLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_highAngularXLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highAngularXLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYLimit
::UnityEngine::SoftJointLimit UnityEngine::ConfigurableJoint::get_angularYLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYLimit
void UnityEngine::ConfigurableJoint::set_angularYLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularZLimit
::UnityEngine::SoftJointLimit UnityEngine::ConfigurableJoint::get_angularZLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularZLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularZLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularZLimit
void UnityEngine::ConfigurableJoint::set_angularZLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularZLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularZLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetPosition
::UnityEngine::Vector3 UnityEngine::ConfigurableJoint::get_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetPosition
void UnityEngine::ConfigurableJoint::set_targetPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetVelocity
::UnityEngine::Vector3 UnityEngine::ConfigurableJoint::get_targetVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetVelocity
void UnityEngine::ConfigurableJoint::set_targetVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_xDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_xDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_xDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_xDrive
void UnityEngine::ConfigurableJoint::set_xDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_xDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_yDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_yDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_yDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_yDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_yDrive
void UnityEngine::ConfigurableJoint::set_yDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_yDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_yDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_zDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_zDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_zDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_zDrive
void UnityEngine::ConfigurableJoint::set_zDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_zDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetRotation
::UnityEngine::Quaternion UnityEngine::ConfigurableJoint::get_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetRotation
void UnityEngine::ConfigurableJoint::set_targetRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetAngularVelocity
::UnityEngine::Vector3 UnityEngine::ConfigurableJoint::get_targetAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetAngularVelocity
void UnityEngine::ConfigurableJoint::set_targetAngularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_rotationDriveMode
::UnityEngine::RotationDriveMode UnityEngine::ConfigurableJoint::get_rotationDriveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_rotationDriveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationDriveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RotationDriveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_rotationDriveMode
void UnityEngine::ConfigurableJoint::set_rotationDriveMode(::UnityEngine::RotationDriveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_rotationDriveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationDriveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularXDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_angularXDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularXDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularXDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularXDrive
void UnityEngine::ConfigurableJoint::set_angularXDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularXDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularXDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYZDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_angularYZDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYZDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYZDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYZDrive
void UnityEngine::ConfigurableJoint::set_angularYZDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYZDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYZDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_slerpDrive
::UnityEngine::JointDrive UnityEngine::ConfigurableJoint::get_slerpDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_slerpDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_slerpDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointDrive, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_slerpDrive
void UnityEngine::ConfigurableJoint::set_slerpDrive(::UnityEngine::JointDrive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_slerpDrive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_slerpDrive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_projectionMode
::UnityEngine::JointProjectionMode UnityEngine::ConfigurableJoint::get_projectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_projectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::JointProjectionMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_projectionMode
void UnityEngine::ConfigurableJoint::set_projectionMode(::UnityEngine::JointProjectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_projectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_projectionDistance
float UnityEngine::ConfigurableJoint::get_projectionDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_projectionDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_projectionDistance
void UnityEngine::ConfigurableJoint::set_projectionDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_projectionDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_projectionAngle
float UnityEngine::ConfigurableJoint::get_projectionAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_projectionAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_projectionAngle
void UnityEngine::ConfigurableJoint::set_projectionAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_projectionAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_configuredInWorldSpace
bool UnityEngine::ConfigurableJoint::get_configuredInWorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_configuredInWorldSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuredInWorldSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_configuredInWorldSpace
void UnityEngine::ConfigurableJoint::set_configuredInWorldSpace(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_configuredInWorldSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuredInWorldSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_swapBodies
bool UnityEngine::ConfigurableJoint::get_swapBodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_swapBodies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_swapBodies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_swapBodies
void UnityEngine::ConfigurableJoint::set_swapBodies(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_swapBodies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_swapBodies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_secondaryAxis_Injected
void UnityEngine::ConfigurableJoint::get_secondaryAxis_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_secondaryAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryAxis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_secondaryAxis_Injected
void UnityEngine::ConfigurableJoint::set_secondaryAxis_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_secondaryAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryAxis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_linearLimitSpring_Injected
void UnityEngine::ConfigurableJoint::get_linearLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_linearLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linearLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimitSpring&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_linearLimitSpring_Injected
void UnityEngine::ConfigurableJoint::set_linearLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_linearLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linearLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularXLimitSpring_Injected
void UnityEngine::ConfigurableJoint::get_angularXLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularXLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularXLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimitSpring&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularXLimitSpring_Injected
void UnityEngine::ConfigurableJoint::set_angularXLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularXLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularXLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYZLimitSpring_Injected
void UnityEngine::ConfigurableJoint::get_angularYZLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYZLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYZLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimitSpring&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYZLimitSpring_Injected
void UnityEngine::ConfigurableJoint::set_angularYZLimitSpring_Injected(ByRef<::UnityEngine::SoftJointLimitSpring> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYZLimitSpring_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYZLimitSpring_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_linearLimit_Injected
void UnityEngine::ConfigurableJoint::get_linearLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_linearLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linearLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_linearLimit_Injected
void UnityEngine::ConfigurableJoint::set_linearLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_linearLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linearLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_lowAngularXLimit_Injected
void UnityEngine::ConfigurableJoint::get_lowAngularXLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_lowAngularXLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowAngularXLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_lowAngularXLimit_Injected
void UnityEngine::ConfigurableJoint::set_lowAngularXLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_lowAngularXLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowAngularXLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_highAngularXLimit_Injected
void UnityEngine::ConfigurableJoint::get_highAngularXLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_highAngularXLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highAngularXLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_highAngularXLimit_Injected
void UnityEngine::ConfigurableJoint::set_highAngularXLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_highAngularXLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highAngularXLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYLimit_Injected
void UnityEngine::ConfigurableJoint::get_angularYLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYLimit_Injected
void UnityEngine::ConfigurableJoint::set_angularYLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularZLimit_Injected
void UnityEngine::ConfigurableJoint::get_angularZLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularZLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularZLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularZLimit_Injected
void UnityEngine::ConfigurableJoint::set_angularZLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularZLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularZLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetPosition_Injected
void UnityEngine::ConfigurableJoint::get_targetPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetPosition_Injected
void UnityEngine::ConfigurableJoint::set_targetPosition_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetVelocity_Injected
void UnityEngine::ConfigurableJoint::get_targetVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetVelocity_Injected
void UnityEngine::ConfigurableJoint::set_targetVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_xDrive_Injected
void UnityEngine::ConfigurableJoint::get_xDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_xDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_xDrive_Injected
void UnityEngine::ConfigurableJoint::set_xDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_xDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_yDrive_Injected
void UnityEngine::ConfigurableJoint::get_yDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_yDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_yDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_yDrive_Injected
void UnityEngine::ConfigurableJoint::set_yDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_yDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_yDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_zDrive_Injected
void UnityEngine::ConfigurableJoint::get_zDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_zDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_zDrive_Injected
void UnityEngine::ConfigurableJoint::set_zDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_zDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetRotation_Injected
void UnityEngine::ConfigurableJoint::get_targetRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetRotation_Injected
void UnityEngine::ConfigurableJoint::set_targetRotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_targetAngularVelocity_Injected
void UnityEngine::ConfigurableJoint::get_targetAngularVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_targetAngularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetAngularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_targetAngularVelocity_Injected
void UnityEngine::ConfigurableJoint::set_targetAngularVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_targetAngularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetAngularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularXDrive_Injected
void UnityEngine::ConfigurableJoint::get_angularXDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularXDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularXDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularXDrive_Injected
void UnityEngine::ConfigurableJoint::set_angularXDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularXDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularXDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_angularYZDrive_Injected
void UnityEngine::ConfigurableJoint::get_angularYZDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_angularYZDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularYZDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_angularYZDrive_Injected
void UnityEngine::ConfigurableJoint::set_angularYZDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_angularYZDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularYZDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.get_slerpDrive_Injected
void UnityEngine::ConfigurableJoint::get_slerpDrive_Injected(ByRef<::UnityEngine::JointDrive> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::get_slerpDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_slerpDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::JointDrive&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.ConfigurableJoint.set_slerpDrive_Injected
void UnityEngine::ConfigurableJoint::set_slerpDrive_Injected(ByRef<::UnityEngine::JointDrive> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ConfigurableJoint::set_slerpDrive_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_slerpDrive_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactPoint
#include "UnityEngine/ContactPoint.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPoint::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPoint::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Impulse
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPoint::dyn_m_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Impulse");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Impulse"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ThisColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPoint::dyn_m_ThisColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_ThisColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThisColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_OtherColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPoint::dyn_m_OtherColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_OtherColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Separation
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactPoint::dyn_m_Separation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Separation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Separation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactPoint.get_point
::UnityEngine::Vector3 UnityEngine::ContactPoint::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPoint.get_normal
::UnityEngine::Vector3 UnityEngine::ContactPoint::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPoint.get_thisCollider
::UnityEngine::Collider* UnityEngine::ContactPoint::get_thisCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::get_thisCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_thisCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPoint..ctor
UnityEngine::ContactPoint::ContactPoint(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 normal, ::UnityEngine::Vector3 impulse, float separation, int thisInstanceID, int otherInstenceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(impulse), ::il2cpp_utils::ExtractType(separation), ::il2cpp_utils::ExtractType(thisInstanceID), ::il2cpp_utils::ExtractType(otherInstenceID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, normal, impulse, separation, thisInstanceID, otherInstenceID);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::UnityEngine::PhysicsScene other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::PhysicsScene), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.IsValid
bool UnityEngine::PhysicsScene::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.IsValid_Internal
bool UnityEngine::PhysicsScene::IsValid_Internal(::UnityEngine::PhysicsScene physicsScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::IsValid_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "IsValid_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene);
}
// Autogenerated method: UnityEngine.PhysicsScene.Simulate
void UnityEngine::PhysicsScene::Simulate(float step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, step);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest
bool UnityEngine::PhysicsScene::Internal_RaycastTest(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast
bool UnityEngine::PhysicsScene::Internal_Raycast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
int UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, raycastHits, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast
bool UnityEngine::PhysicsScene::Query_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCast
bool UnityEngine::PhysicsScene::Internal_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.CapsuleCast
bool UnityEngine::PhysicsScene::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCastNonAlloc
int UnityEngine::PhysicsScene::Internal_CapsuleCastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_CapsuleCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, p0, p1, radius, direction, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.CapsuleCast
int UnityEngine::PhysicsScene::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, point1, point2, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapCapsuleNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapCapsuleNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point0, ::UnityEngine::Vector3 point1, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapCapsuleNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapCapsuleNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point0), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point0, point1, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapCapsule
int UnityEngine::PhysicsScene::OverlapCapsule(::UnityEngine::Vector3 point0, ::UnityEngine::Vector3 point1, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point0), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, point0, point1, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast
bool UnityEngine::PhysicsScene::Query_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCast
bool UnityEngine::PhysicsScene::Internal_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
bool UnityEngine::PhysicsScene::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCastNonAlloc
int UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
int UnityEngine::PhysicsScene::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphereNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapSphereNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphere
int UnityEngine::PhysicsScene::OverlapSphere(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBox
int UnityEngine::PhysicsScene::OverlapBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, center, halfExtents, results, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.IsValid_Internal_Injected
bool UnityEngine::PhysicsScene::IsValid_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::IsValid_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "IsValid_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene));
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest_Injected
bool UnityEngine::PhysicsScene::Internal_RaycastTest_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast_Injected
bool UnityEngine::PhysicsScene::Internal_Raycast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast_Injected
bool UnityEngine::PhysicsScene::Query_CapsuleCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> point1, ByRef<::UnityEngine::Vector3> point2, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point1), byref(point2), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_CapsuleCastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> p0, ByRef<::UnityEngine::Vector3> p1, float radius, ByRef<::UnityEngine::Vector3> direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_CapsuleCastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(p0), byref(p1), radius, byref(direction), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapCapsuleNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapCapsuleNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> point0, ByRef<::UnityEngine::Vector3> point1, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapCapsuleNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapCapsuleNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point0), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point0), byref(point1), radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast_Injected
bool UnityEngine::PhysicsScene::Query_SphereCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphereNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapSphereNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ByRef<::UnityEngine::Quaternion> orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), results, byref(orientation), mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.ToString
::StringW UnityEngine::PhysicsScene::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.GetHashCode
int UnityEngine::PhysicsScene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::PhysicsScene& lhs, const ::UnityEngine::PhysicsScene& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PhysicsSceneExtensions
#include "UnityEngine/PhysicsSceneExtensions.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PhysicsSceneExtensions.GetPhysicsScene
::UnityEngine::PhysicsScene UnityEngine::PhysicsSceneExtensions::GetPhysicsScene(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions::GetPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions", "GetPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.PhysicsSceneExtensions.GetPhysicsScene_Internal
::UnityEngine::PhysicsScene UnityEngine::PhysicsSceneExtensions::GetPhysicsScene_Internal(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions::GetPhysicsScene_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions", "GetPhysicsScene_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.PhysicsSceneExtensions.GetPhysicsScene_Internal_Injected
void UnityEngine::PhysicsSceneExtensions::GetPhysicsScene_Internal_Injected(ByRef<::UnityEngine::SceneManagement::Scene> scene, ByRef<::UnityEngine::PhysicsScene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsSceneExtensions::GetPhysicsScene_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsSceneExtensions", "GetPhysicsScene_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(scene), byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SimulationMode
#include "UnityEngine/SimulationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode FixedUpdate
::UnityEngine::SimulationMode UnityEngine::SimulationMode::_get_FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_get_FixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode>("UnityEngine", "SimulationMode", "FixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode FixedUpdate
void UnityEngine::SimulationMode::_set_FixedUpdate(::UnityEngine::SimulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_set_FixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode", "FixedUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode Update
::UnityEngine::SimulationMode UnityEngine::SimulationMode::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode>("UnityEngine", "SimulationMode", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode Update
void UnityEngine::SimulationMode::_set_Update(::UnityEngine::SimulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SimulationMode Script
::UnityEngine::SimulationMode UnityEngine::SimulationMode::_get_Script() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_get_Script");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SimulationMode>("UnityEngine", "SimulationMode", "Script"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SimulationMode Script
void UnityEngine::SimulationMode::_set_Script(::UnityEngine::SimulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::_set_Script");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SimulationMode", "Script", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SimulationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SimulationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactPairHeader
#include "UnityEngine/ContactPairHeader.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.ContactPair
#include "UnityEngine/ContactPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_BodyID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPairHeader::dyn_m_BodyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_BodyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BodyID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_OtherBodyID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPairHeader::dyn_m_OtherBodyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_OtherBodyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherBodyID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.IntPtr m_StartPtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::ContactPairHeader::dyn_m_StartPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_StartPtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32 m_NbPairs
[[deprecated("Use field access instead!")]] uint& UnityEngine::ContactPairHeader::dyn_m_NbPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_NbPairs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NbPairs"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly UnityEngine.CollisionPairHeaderFlags m_Flags
[[deprecated("Use field access instead!")]] ::UnityEngine::CollisionPairHeaderFlags& UnityEngine::ContactPairHeader::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::UnityEngine::CollisionPairHeaderFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly UnityEngine.Vector3 m_RelativeVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPairHeader::dyn_m_RelativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::dyn_m_RelativeVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RelativeVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactPairHeader.get_Body
::UnityEngine::Component* UnityEngine::ContactPairHeader::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPairHeader.get_OtherBody
::UnityEngine::Component* UnityEngine::ContactPairHeader::get_OtherBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::get_OtherBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OtherBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPairHeader.get_HasRemovedBody
bool UnityEngine::ContactPairHeader::get_HasRemovedBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::get_HasRemovedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasRemovedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPairHeader.GetContactPair
::UnityEngine::ContactPair UnityEngine::ContactPairHeader::GetContactPair(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::GetContactPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetContactPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactPair, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.ContactPairHeader.GetContactPair_Internal
::UnityEngine::ContactPair* UnityEngine::ContactPairHeader::GetContactPair_Internal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPairHeader::GetContactPair_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetContactPair_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactPair*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactPair
#include "UnityEngine/ContactPair.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.ContactPairPoint
#include "UnityEngine/ContactPairPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 c_InvalidFaceIndex
uint UnityEngine::ContactPair::_get_c_InvalidFaceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::_get_c_InvalidFaceIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("UnityEngine", "ContactPair", "c_InvalidFaceIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 c_InvalidFaceIndex
void UnityEngine::ContactPair::_set_c_InvalidFaceIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::_set_c_InvalidFaceIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ContactPair", "c_InvalidFaceIndex", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_ColliderID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPair::dyn_m_ColliderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_ColliderID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 m_OtherColliderID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPair::dyn_m_OtherColliderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_OtherColliderID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherColliderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.IntPtr m_StartPtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::ContactPair::dyn_m_StartPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_StartPtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32 m_NbPoints
[[deprecated("Use field access instead!")]] uint& UnityEngine::ContactPair::dyn_m_NbPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_NbPoints");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NbPoints"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly UnityEngine.CollisionPairFlags m_Flags
[[deprecated("Use field access instead!")]] ::UnityEngine::CollisionPairFlags& UnityEngine::ContactPair::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::UnityEngine::CollisionPairFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly UnityEngine.CollisionPairEventFlags m_Events
[[deprecated("Use field access instead!")]] ::UnityEngine::CollisionPairEventFlags& UnityEngine::ContactPair::dyn_m_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_Events");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Events"))->offset;
  return *reinterpret_cast<::UnityEngine::CollisionPairEventFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly UnityEngine.Vector3 m_ImpulseSum
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPair::dyn_m_ImpulseSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::dyn_m_ImpulseSum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImpulseSum"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactPair.get_ColliderInstanceID
int UnityEngine::ContactPair::get_ColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_ColliderInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ColliderInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_OtherColliderInstanceID
int UnityEngine::ContactPair::get_OtherColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_OtherColliderInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OtherColliderInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_Collider
::UnityEngine::Collider* UnityEngine::ContactPair::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_OtherCollider
::UnityEngine::Collider* UnityEngine::ContactPair::get_OtherCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_OtherCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OtherCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_ImpulseSum
::UnityEngine::Vector3 UnityEngine::ContactPair::get_ImpulseSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_ImpulseSum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ImpulseSum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_IsCollisionEnter
bool UnityEngine::ContactPair::get_IsCollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_IsCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_IsCollisionExit
bool UnityEngine::ContactPair::get_IsCollisionExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_IsCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_IsCollisionStay
bool UnityEngine::ContactPair::get_IsCollisionStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_IsCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.get_HasRemovedCollider
bool UnityEngine::ContactPair::get_HasRemovedCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::get_HasRemovedCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasRemovedCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPair.ExtractContactsArray
int UnityEngine::ContactPair::ExtractContactsArray(::ArrayW<::UnityEngine::ContactPoint> managedContainer, bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::ExtractContactsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ExtractContactsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(managedContainer), ::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, managedContainer, flipped);
}
// Autogenerated method: UnityEngine.ContactPair.GetContactPoint_Internal
::UnityEngine::ContactPairPoint* UnityEngine::ContactPair::GetContactPoint_Internal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::GetContactPoint_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetContactPoint_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactPairPoint*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.ContactPair.ExtractContactsArray_Injected
int UnityEngine::ContactPair::ExtractContactsArray_Injected(ByRef<::UnityEngine::ContactPair> _unity_self, ::ArrayW<::UnityEngine::ContactPoint> managedContainer, bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPair::ExtractContactsArray_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactPair", "ExtractContactsArray_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(managedContainer), ::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), managedContainer, flipped);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionPairHeaderFlags
#include "UnityEngine/CollisionPairHeaderFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairHeaderFlags RemovedActor
::UnityEngine::CollisionPairHeaderFlags UnityEngine::CollisionPairHeaderFlags::_get_RemovedActor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairHeaderFlags::_get_RemovedActor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairHeaderFlags>("UnityEngine", "CollisionPairHeaderFlags", "RemovedActor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairHeaderFlags RemovedActor
void UnityEngine::CollisionPairHeaderFlags::_set_RemovedActor(::UnityEngine::CollisionPairHeaderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairHeaderFlags::_set_RemovedActor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairHeaderFlags", "RemovedActor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairHeaderFlags RemovedOtherActor
::UnityEngine::CollisionPairHeaderFlags UnityEngine::CollisionPairHeaderFlags::_get_RemovedOtherActor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairHeaderFlags::_get_RemovedOtherActor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairHeaderFlags>("UnityEngine", "CollisionPairHeaderFlags", "RemovedOtherActor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairHeaderFlags RemovedOtherActor
void UnityEngine::CollisionPairHeaderFlags::_set_RemovedOtherActor(::UnityEngine::CollisionPairHeaderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairHeaderFlags::_set_RemovedOtherActor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairHeaderFlags", "RemovedOtherActor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::CollisionPairHeaderFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairHeaderFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionPairFlags
#include "UnityEngine/CollisionPairFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags RemovedShape
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_RemovedShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_RemovedShape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "RemovedShape"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags RemovedShape
void UnityEngine::CollisionPairFlags::_set_RemovedShape(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_RemovedShape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "RemovedShape", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags RemovedOtherShape
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_RemovedOtherShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_RemovedOtherShape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "RemovedOtherShape"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags RemovedOtherShape
void UnityEngine::CollisionPairFlags::_set_RemovedOtherShape(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_RemovedOtherShape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "RemovedOtherShape", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags ActorPairHasFirstTouch
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_ActorPairHasFirstTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_ActorPairHasFirstTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "ActorPairHasFirstTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags ActorPairHasFirstTouch
void UnityEngine::CollisionPairFlags::_set_ActorPairHasFirstTouch(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_ActorPairHasFirstTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "ActorPairHasFirstTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags ActorPairLostTouch
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_ActorPairLostTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_ActorPairLostTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "ActorPairLostTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags ActorPairLostTouch
void UnityEngine::CollisionPairFlags::_set_ActorPairLostTouch(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_ActorPairLostTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "ActorPairLostTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags InternalHasImpulses
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_InternalHasImpulses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_InternalHasImpulses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "InternalHasImpulses"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags InternalHasImpulses
void UnityEngine::CollisionPairFlags::_set_InternalHasImpulses(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_InternalHasImpulses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "InternalHasImpulses", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairFlags InternalContactsAreFlipped
::UnityEngine::CollisionPairFlags UnityEngine::CollisionPairFlags::_get_InternalContactsAreFlipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_get_InternalContactsAreFlipped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairFlags>("UnityEngine", "CollisionPairFlags", "InternalContactsAreFlipped"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairFlags InternalContactsAreFlipped
void UnityEngine::CollisionPairFlags::_set_InternalContactsAreFlipped(::UnityEngine::CollisionPairFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::_set_InternalContactsAreFlipped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairFlags", "InternalContactsAreFlipped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::CollisionPairFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionPairEventFlags
#include "UnityEngine/CollisionPairEventFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags SolveContacts
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_SolveContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_SolveContacts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "SolveContacts"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags SolveContacts
void UnityEngine::CollisionPairEventFlags::_set_SolveContacts(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_SolveContacts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "SolveContacts", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags ModifyContacts
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_ModifyContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_ModifyContacts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "ModifyContacts"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags ModifyContacts
void UnityEngine::CollisionPairEventFlags::_set_ModifyContacts(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_ModifyContacts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "ModifyContacts", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchFound
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyTouchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyTouchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyTouchFound"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchFound
void UnityEngine::CollisionPairEventFlags::_set_NotifyTouchFound(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyTouchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyTouchFound", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchPersists
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyTouchPersists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyTouchPersists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyTouchPersists"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchPersists
void UnityEngine::CollisionPairEventFlags::_set_NotifyTouchPersists(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyTouchPersists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyTouchPersists", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchLost
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyTouchLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyTouchLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyTouchLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchLost
void UnityEngine::CollisionPairEventFlags::_set_NotifyTouchLost(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyTouchLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyTouchLost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchCCD
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyTouchCCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyTouchCCD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyTouchCCD"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyTouchCCD
void UnityEngine::CollisionPairEventFlags::_set_NotifyTouchCCD(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyTouchCCD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyTouchCCD", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForceFound
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForceFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForceFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForceFound"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForceFound
void UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForceFound(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForceFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForceFound", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForcePersists
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForcePersists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForcePersists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForcePersists"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForcePersists
void UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForcePersists(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForcePersists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForcePersists", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForceLost
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForceLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyThresholdForceLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForceLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyThresholdForceLost
void UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForceLost(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyThresholdForceLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyThresholdForceLost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NotifyContactPoint
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NotifyContactPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NotifyContactPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NotifyContactPoint"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NotifyContactPoint
void UnityEngine::CollisionPairEventFlags::_set_NotifyContactPoint(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NotifyContactPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NotifyContactPoint", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags DetectDiscreteContact
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_DetectDiscreteContact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_DetectDiscreteContact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "DetectDiscreteContact"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags DetectDiscreteContact
void UnityEngine::CollisionPairEventFlags::_set_DetectDiscreteContact(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_DetectDiscreteContact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "DetectDiscreteContact", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags DetectCCDContact
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_DetectCCDContact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_DetectCCDContact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "DetectCCDContact"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags DetectCCDContact
void UnityEngine::CollisionPairEventFlags::_set_DetectCCDContact(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_DetectCCDContact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "DetectCCDContact", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags PreSolverVelocity
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_PreSolverVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_PreSolverVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "PreSolverVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags PreSolverVelocity
void UnityEngine::CollisionPairEventFlags::_set_PreSolverVelocity(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_PreSolverVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "PreSolverVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags PostSolverVelocity
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_PostSolverVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_PostSolverVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "PostSolverVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags PostSolverVelocity
void UnityEngine::CollisionPairEventFlags::_set_PostSolverVelocity(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_PostSolverVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "PostSolverVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags ContactEventPose
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_ContactEventPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_ContactEventPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "ContactEventPose"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags ContactEventPose
void UnityEngine::CollisionPairEventFlags::_set_ContactEventPose(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_ContactEventPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "ContactEventPose", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags NextFree
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_NextFree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_NextFree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "NextFree"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags NextFree
void UnityEngine::CollisionPairEventFlags::_set_NextFree(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_NextFree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "NextFree", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags ContactDefault
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_ContactDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_ContactDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "ContactDefault"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags ContactDefault
void UnityEngine::CollisionPairEventFlags::_set_ContactDefault(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_ContactDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "ContactDefault", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionPairEventFlags TriggerDefault
::UnityEngine::CollisionPairEventFlags UnityEngine::CollisionPairEventFlags::_get_TriggerDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_get_TriggerDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionPairEventFlags>("UnityEngine", "CollisionPairEventFlags", "TriggerDefault"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionPairEventFlags TriggerDefault
void UnityEngine::CollisionPairEventFlags::_set_TriggerDefault(::UnityEngine::CollisionPairEventFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::_set_TriggerDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionPairEventFlags", "TriggerDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::CollisionPairEventFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionPairEventFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ColliderHit
#include "UnityEngine/ColliderHit.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ColliderHit::dyn_m_ColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColliderHit::dyn_m_ColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ColliderHit.get_instanceID
int UnityEngine::ColliderHit::get_instanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColliderHit::get_instanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_instanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ColliderHit.get_collider
::UnityEngine::Collider* UnityEngine::ColliderHit::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColliderHit::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.OverlapSphereCommand
#include "UnityEngine/OverlapSphereCommand.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters
#include "Unity/Jobs/LowLevel/Unsafe/JobsUtility_JobScheduleParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <point>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::OverlapSphereCommand::dyn_$point$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::dyn_$point$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<point>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <radius>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::OverlapSphereCommand::dyn_$radius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::dyn_$radius$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<radius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.PhysicsScene <physicsScene>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::PhysicsScene& UnityEngine::OverlapSphereCommand::dyn_$physicsScene$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::dyn_$physicsScene$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<physicsScene>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::PhysicsScene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.QueryParameters queryParameters
[[deprecated("Use field access instead!")]] ::UnityEngine::QueryParameters& UnityEngine::OverlapSphereCommand::dyn_queryParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::dyn_queryParameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queryParameters"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand..ctor
UnityEngine::OverlapSphereCommand::OverlapSphereCommand(::UnityEngine::Vector3 point, float radius, ::UnityEngine::QueryParameters queryParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(queryParameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, radius, queryParameters);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.set_point
void UnityEngine::OverlapSphereCommand::set_point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.set_radius
void UnityEngine::OverlapSphereCommand::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.set_physicsScene
void UnityEngine::OverlapSphereCommand::set_physicsScene(::UnityEngine::PhysicsScene value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::set_physicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_physicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.ScheduleBatch
::Unity::Jobs::JobHandle UnityEngine::OverlapSphereCommand::ScheduleBatch(::Unity::Collections::NativeArray_1<::UnityEngine::OverlapSphereCommand> commands, ::Unity::Collections::NativeArray_1<::UnityEngine::ColliderHit> results, int minCommandsPerJob, int maxHits, ::Unity::Jobs::JobHandle dependsOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::ScheduleBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "OverlapSphereCommand", "ScheduleBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commands), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(minCommandsPerJob), ::il2cpp_utils::ExtractType(maxHits), ::il2cpp_utils::ExtractType(dependsOn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Jobs::JobHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, commands, results, minCommandsPerJob, maxHits, dependsOn);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.ScheduleOverlapSphereBatch
::Unity::Jobs::JobHandle UnityEngine::OverlapSphereCommand::ScheduleOverlapSphereBatch(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, void* commands, int commandLen, void* result, int resultLen, int minCommandsPerJob, int maxHits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::ScheduleOverlapSphereBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "OverlapSphereCommand", "ScheduleOverlapSphereBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(commands), ::il2cpp_utils::ExtractType(commandLen), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(resultLen), ::il2cpp_utils::ExtractType(minCommandsPerJob), ::il2cpp_utils::ExtractType(maxHits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Jobs::JobHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(parameters), commands, commandLen, result, resultLen, minCommandsPerJob, maxHits);
}
// Autogenerated method: UnityEngine.OverlapSphereCommand.ScheduleOverlapSphereBatch_Injected
void UnityEngine::OverlapSphereCommand::ScheduleOverlapSphereBatch_Injected(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, void* commands, int commandLen, void* result, int resultLen, int minCommandsPerJob, int maxHits, ByRef<::Unity::Jobs::JobHandle> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OverlapSphereCommand::ScheduleOverlapSphereBatch_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "OverlapSphereCommand", "ScheduleOverlapSphereBatch_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(commands), ::il2cpp_utils::ExtractType(commandLen), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(resultLen), ::il2cpp_utils::ExtractType(minCommandsPerJob), ::il2cpp_utils::ExtractType(maxHits), ::il2cpp_utils::ExtractIndependentType<::Unity::Jobs::JobHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(parameters), commands, commandLen, result, resultLen, minCommandsPerJob, maxHits, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.Properties.CreatePropertyAttribute
#include "Unity/Properties/CreatePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.Properties.IProperty
#include "Unity/Properties/IProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.Properties.IProperty.DeclaredValueType
::System::Type* Unity::Properties::IProperty::DeclaredValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::IProperty::DeclaredValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::IProperty*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.Properties.IMemberInfo
#include "Unity/Properties/IMemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.Properties.IMemberInfo.get_Name
::StringW Unity::Properties::IMemberInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::IMemberInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::IMemberInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.IMemberInfo.get_IsReadOnly
bool Unity::Properties::IMemberInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::IMemberInfo::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::IMemberInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.IMemberInfo.get_ValueType
::System::Type* Unity::Properties::IMemberInfo::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::IMemberInfo::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::IMemberInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.IMemberInfo.GetCustomAttributes
::System::Collections::Generic::IEnumerable_1<::System::Attribute*>* Unity::Properties::IMemberInfo::GetCustomAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::IMemberInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::IMemberInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Attribute*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.Properties.FieldMember
#include "Unity/Properties/FieldMember.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Reflection.FieldInfo m_FieldInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::FieldInfo*& Unity::Properties::FieldMember::dyn_m_FieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::FieldMember::dyn_m_FieldInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FieldInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.Properties.FieldMember..ctor
// ABORTED elsewhere.  Unity::Properties::FieldMember::FieldMember(::System::Reflection::FieldInfo* fieldInfo)
// Autogenerated method: Unity.Properties.FieldMember.get_Name
::StringW Unity::Properties::FieldMember::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::FieldMember::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::FieldMember), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.FieldMember.get_IsReadOnly
bool Unity::Properties::FieldMember::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::FieldMember::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::FieldMember), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.FieldMember.get_ValueType
::System::Type* Unity::Properties::FieldMember::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::FieldMember::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::FieldMember), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.FieldMember.GetCustomAttributes
::System::Collections::Generic::IEnumerable_1<::System::Attribute*>* Unity::Properties::FieldMember::GetCustomAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::FieldMember::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::FieldMember), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Attribute*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.Properties.PropertyMember
#include "Unity/Properties/PropertyMember.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Reflection.PropertyInfo m_PropertyInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::PropertyInfo*& Unity::Properties::PropertyMember::dyn_m_PropertyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::PropertyMember::dyn_m_PropertyInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PropertyInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.Properties.PropertyMember.get_Name
::StringW Unity::Properties::PropertyMember::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::PropertyMember::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::PropertyMember), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.PropertyMember.get_IsReadOnly
bool Unity::Properties::PropertyMember::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::PropertyMember::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::PropertyMember), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.PropertyMember.get_ValueType
::System::Type* Unity::Properties::PropertyMember::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::PropertyMember::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::PropertyMember), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Properties.PropertyMember..ctor
// ABORTED elsewhere.  Unity::Properties::PropertyMember::PropertyMember(::System::Reflection::PropertyInfo* propertyInfo)
// Autogenerated method: Unity.Properties.PropertyMember.GetCustomAttributes
::System::Collections::Generic::IEnumerable_1<::System::Attribute*>* Unity::Properties::PropertyMember::GetCustomAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::PropertyMember::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::Properties::PropertyMember), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Attribute*>*, false>(this, ___internal__method);
}
