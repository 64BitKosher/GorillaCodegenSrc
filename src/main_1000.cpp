// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicIngredient
#include "GlobalNamespace/MagicIngredient.hpp"
// Including type: MagicIngredientType
#include "GlobalNamespace/MagicIngredientType.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: WorldShareableItem
#include "GlobalNamespace/WorldShareableItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MagicIngredientType IngredientTypeSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicIngredientType*& GlobalNamespace::MagicIngredient::dyn_IngredientTypeSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::dyn_IngredientTypeSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IngredientTypeSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicIngredientType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rootParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MagicIngredient::dyn_rootParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::dyn_rootParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WorldShareableItem item
[[deprecated("Use field access instead!")]] ::GlobalNamespace::WorldShareableItem*& GlobalNamespace::MagicIngredient::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WorldShareableItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform grabPtInitParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MagicIngredient::dyn_grabPtInitParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::dyn_grabPtInitParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabPtInitParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MagicIngredient.ReParent
void GlobalNamespace::MagicIngredient::ReParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::ReParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicIngredient.Disable
void GlobalNamespace::MagicIngredient::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicIngredient.OnSpawn
void GlobalNamespace::MagicIngredient::OnSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredient::OnSpawn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicIngredientType
#include "GlobalNamespace/MagicIngredientType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicIngredientType::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicIngredientType::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasePlatform
#include "GlobalNamespace/BasePlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaGrabber
#include "GlobalNamespace/GorillaGrabber.hpp"
// Including type: GorillaLocomotion.Player
#include "GorillaLocomotion/Player.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaLocomotion.Gameplay.IGorillaGrabable
#include "GorillaLocomotion/Gameplay/IGorillaGrabable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player player
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player*& GlobalNamespace::GorillaGrabber::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode xrNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::GorillaGrabber::dyn_xrNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_xrNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaGrabber::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform currentGrabbedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaGrabber::dyn_currentGrabbedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_currentGrabbedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGrabbedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Gameplay.IGorillaGrabable currentGrabbable
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::IGorillaGrabable*& GlobalNamespace::GorillaGrabber::dyn_currentGrabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_currentGrabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGrabbable"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::IGorillaGrabable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single grabRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGrabber::dyn_grabRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_grabRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single breakDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGrabber::dyn_breakDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_breakDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "breakDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem gripEffects
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::GorillaGrabber::dyn_gripEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_gripEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gripEffects"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] grabCastResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::GorillaGrabber::dyn_grabCastResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::dyn_grabCastResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabCastResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGrabber.get_XrNode
::UnityEngine::XR::XRNode GlobalNamespace::GorillaGrabber::get_XrNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::get_XrNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XrNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.get_Player
::GorillaLocomotion::Player* GlobalNamespace::GorillaGrabber::get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::get_Player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Player*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.Awake
void GlobalNamespace::GorillaGrabber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.Update
void GlobalNamespace::GorillaGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.GrabDistanceOverCheck
bool GlobalNamespace::GorillaGrabber::GrabDistanceOverCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::GrabDistanceOverCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabDistanceOverCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.Ungrab
void GlobalNamespace::GorillaGrabber::Ungrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::Ungrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ungrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGrabber.GetGrabable
::GorillaLocomotion::Gameplay::IGorillaGrabable* GlobalNamespace::GorillaGrabber::GetGrabable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGrabber::GetGrabable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGrabable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Gameplay::IGorillaGrabable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MovingPlatform
#include "GlobalNamespace/MovingPlatform.hpp"
// Including type: GTMathUtil.CriticalSpringDamper
#include "GTMathUtil/CriticalSpringDamper.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MovingPlatform/PlatformType platformType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MovingPlatform::PlatformType& GlobalNamespace::MovingPlatform::dyn_platformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_platformType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MovingPlatform::PlatformType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cycleLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_cycleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_cycleLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cycleLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothingHalflife
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_smoothingHalflife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_smoothingHalflife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothingHalflife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotateStartAmt
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_rotateStartAmt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_rotateStartAmt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateStartAmt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotateAmt
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_rotateAmt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_rotateAmt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateAmt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reverseDirOnCycle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MovingPlatform::dyn_reverseDirOnCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_reverseDirOnCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseDirOnCycle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reverseDir
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MovingPlatform::dyn_reverseDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_reverseDir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseDir"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GTMathUtil.CriticalSpringDamper springCD
[[deprecated("Use field access instead!")]] ::GTMathUtil::CriticalSpringDamper*& GlobalNamespace::MovingPlatform::dyn_springCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_springCD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "springCD"))->offset;
  return *reinterpret_cast<::GTMathUtil::CriticalSpringDamper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rb
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::MovingPlatform::dyn_rb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_rb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rb"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform startXf
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MovingPlatform::dyn_startXf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startXf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startXf"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform endXf
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MovingPlatform::dyn_endXf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_endXf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXf"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 platformInitLocalPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_platformInitLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_platformInitLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformInitLocalPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 startPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 endPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_endPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion startRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MovingPlatform::dyn_startRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion endRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MovingPlatform::dyn_endRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_endRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startPercentage
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_startPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_startDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startNextCycle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MovingPlatform::dyn_startNextCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_startNextCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNextCycle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pivot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MovingPlatform::dyn_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion initLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MovingPlatform::dyn_initLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_initLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 initOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_initOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_initOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currT
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_currT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_currT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single percent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_percent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single smoothedPercent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_smoothedPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_smoothedPercent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothedPercent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean currForward
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MovingPlatform::dyn_currForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_currForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currForward"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single dtSinceServerUpdate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_dtSinceServerUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_dtSinceServerUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtSinceServerUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double lastServerTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::MovingPlatform::dyn_lastServerTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_lastServerTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastServerTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotationalAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_rotationalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_rotationalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationalAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotationPivot
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_rotationPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_rotationPivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationPivot"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_lastPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_lastPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion lastRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MovingPlatform::dyn_lastRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_lastRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 deltaPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MovingPlatform::dyn_deltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_deltaPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MovingPlatform::dyn_debugMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_debugMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double lastNT
[[deprecated("Use field access instead!")]] double& GlobalNamespace::MovingPlatform::dyn_lastNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_lastNT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastNT"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastT
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MovingPlatform::dyn_lastT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::dyn_lastT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MovingPlatform.InitTimeOffset
float GlobalNamespace::MovingPlatform::InitTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::InitTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.InitTimeOffsetMs
int64_t GlobalNamespace::MovingPlatform::InitTimeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::InitTimeOffsetMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTimeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.NetworkTimeMs
int64_t GlobalNamespace::MovingPlatform::NetworkTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::NetworkTimeMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.CycleLengthMs
int64_t GlobalNamespace::MovingPlatform::CycleLengthMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::CycleLengthMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleLengthMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.PlatformTime
double GlobalNamespace::MovingPlatform::PlatformTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlatformTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.CycleCount
int GlobalNamespace::MovingPlatform::CycleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::CycleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.CycleCompletionPercent
float GlobalNamespace::MovingPlatform::CycleCompletionPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::CycleCompletionPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleCompletionPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.CycleForward
bool GlobalNamespace::MovingPlatform::CycleForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::CycleForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.Awake
void GlobalNamespace::MovingPlatform::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.OnEnable
void GlobalNamespace::MovingPlatform::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.UpdatePointToPoint
::UnityEngine::Vector3 GlobalNamespace::MovingPlatform::UpdatePointToPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::UpdatePointToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePointToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.UpdateArc
::UnityEngine::Vector3 GlobalNamespace::MovingPlatform::UpdateArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::UpdateArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.UpdateRotation
::UnityEngine::Quaternion GlobalNamespace::MovingPlatform::UpdateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::UpdateRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.UpdateContinuousRotation
::UnityEngine::Quaternion GlobalNamespace::MovingPlatform::UpdateContinuousRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::UpdateContinuousRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateContinuousRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.SetupContext
void GlobalNamespace::MovingPlatform::SetupContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::SetupContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.Update
void GlobalNamespace::MovingPlatform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovingPlatform.ThisFrameMovement
::UnityEngine::Vector3 GlobalNamespace::MovingPlatform::ThisFrameMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::ThisFrameMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThisFrameMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MovingPlatform/PlatformType
#include "GlobalNamespace/MovingPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MovingPlatform/PlatformType PointToPoint
::GlobalNamespace::MovingPlatform::PlatformType GlobalNamespace::MovingPlatform::PlatformType::_get_PointToPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_get_PointToPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MovingPlatform::PlatformType>("", "MovingPlatform/PlatformType", "PointToPoint"));
}
// Autogenerated static field setter
// Set static field: static public MovingPlatform/PlatformType PointToPoint
void GlobalNamespace::MovingPlatform::PlatformType::_set_PointToPoint(::GlobalNamespace::MovingPlatform::PlatformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_set_PointToPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MovingPlatform/PlatformType", "PointToPoint", value));
}
// Autogenerated static field getter
// Get static field: static public MovingPlatform/PlatformType Arc
::GlobalNamespace::MovingPlatform::PlatformType GlobalNamespace::MovingPlatform::PlatformType::_get_Arc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_get_Arc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MovingPlatform::PlatformType>("", "MovingPlatform/PlatformType", "Arc"));
}
// Autogenerated static field setter
// Set static field: static public MovingPlatform/PlatformType Arc
void GlobalNamespace::MovingPlatform::PlatformType::_set_Arc(::GlobalNamespace::MovingPlatform::PlatformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_set_Arc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MovingPlatform/PlatformType", "Arc", value));
}
// Autogenerated static field getter
// Get static field: static public MovingPlatform/PlatformType Rotation
::GlobalNamespace::MovingPlatform::PlatformType GlobalNamespace::MovingPlatform::PlatformType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MovingPlatform::PlatformType>("", "MovingPlatform/PlatformType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public MovingPlatform/PlatformType Rotation
void GlobalNamespace::MovingPlatform::PlatformType::_set_Rotation(::GlobalNamespace::MovingPlatform::PlatformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MovingPlatform/PlatformType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public MovingPlatform/PlatformType Child
::GlobalNamespace::MovingPlatform::PlatformType GlobalNamespace::MovingPlatform::PlatformType::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MovingPlatform::PlatformType>("", "MovingPlatform/PlatformType", "Child"));
}
// Autogenerated static field setter
// Set static field: static public MovingPlatform/PlatformType Child
void GlobalNamespace::MovingPlatform::PlatformType::_set_Child(::GlobalNamespace::MovingPlatform::PlatformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MovingPlatform/PlatformType", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public MovingPlatform/PlatformType ContinuousRotation
::GlobalNamespace::MovingPlatform::PlatformType GlobalNamespace::MovingPlatform::PlatformType::_get_ContinuousRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_get_ContinuousRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MovingPlatform::PlatformType>("", "MovingPlatform/PlatformType", "ContinuousRotation"));
}
// Autogenerated static field setter
// Set static field: static public MovingPlatform/PlatformType ContinuousRotation
void GlobalNamespace::MovingPlatform::PlatformType::_set_ContinuousRotation(::GlobalNamespace::MovingPlatform::PlatformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::_set_ContinuousRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MovingPlatform/PlatformType", "ContinuousRotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MovingPlatform::PlatformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovingPlatform::PlatformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeChanger
#include "GlobalNamespace/SizeChanger.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: SizeChangerTrigger
#include "GlobalNamespace/SizeChangerTrigger.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SizeChanger/ChangerType myType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChanger::ChangerType& GlobalNamespace::SizeChanger::dyn_myType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_myType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChanger::ChangerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single staticEasing
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeChanger::dyn_staticEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_staticEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticEasing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeChanger::dyn_maxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_maxScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeChanger::dyn_minScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_minScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider myCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::SizeChanger::dyn_myCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_myCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform startPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SizeChanger::dyn_startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform endPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SizeChanger::dyn_endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_endPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger enterTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& GlobalNamespace::SizeChanger::dyn_enterTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_enterTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger exitTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& GlobalNamespace::SizeChanger::dyn_exitTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_exitTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger exitOnEnterTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& GlobalNamespace::SizeChanger::dyn_exitOnEnterTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_exitOnEnterTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitOnEnterTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean alwaysControlWhenEntered
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_alwaysControlWhenEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_alwaysControlWhenEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alwaysControlWhenEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 priority
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SizeChanger::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean aprilFoolsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_aprilFoolsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_aprilFoolsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aprilFoolsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeChanger::dyn_startRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_startRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeChanger::dyn_endRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_endRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerA
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_affectLayerA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_affectLayerA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerB
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_affectLayerB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_affectLayerB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerB"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerC
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_affectLayerC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_affectLayerC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerC"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerD
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChanger::dyn_affectLayerD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_affectLayerD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerD"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction OnExit
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& GlobalNamespace::SizeChanger::dyn_OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_OnExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnExit"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction OnEnter
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& GlobalNamespace::SizeChanger::dyn_OnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_OnEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnEnter"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<VRRig> unregisteredPresentRigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::SizeChanger::dyn_unregisteredPresentRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::dyn_unregisteredPresentRigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregisteredPresentRigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeChanger.get_SizeLayerMask
int GlobalNamespace::SizeChanger::get_SizeLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_SizeLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SizeLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_MyType
::GlobalNamespace::SizeChanger::ChangerType GlobalNamespace::SizeChanger::get_MyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_MyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SizeChanger::ChangerType, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_MaxScale
float GlobalNamespace::SizeChanger::get_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_MaxScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_MinScale
float GlobalNamespace::SizeChanger::get_MinScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_MinScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_StartPos
::UnityEngine::Transform* GlobalNamespace::SizeChanger::get_StartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_StartPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_EndPos
::UnityEngine::Transform* GlobalNamespace::SizeChanger::get_EndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_EndPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.get_StaticEasing
float GlobalNamespace::SizeChanger::get_StaticEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::get_StaticEasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StaticEasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.Awake
void GlobalNamespace::SizeChanger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.OnEnable
void GlobalNamespace::SizeChanger::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.OnDisable
void GlobalNamespace::SizeChanger::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChanger.AddEnterTrigger
void GlobalNamespace::SizeChanger::AddEnterTrigger(::GlobalNamespace::SizeChangerTrigger* trigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::AddEnterTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEnterTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trigger);
}
// Autogenerated method: SizeChanger.RemoveEnterTrigger
void GlobalNamespace::SizeChanger::RemoveEnterTrigger(::GlobalNamespace::SizeChangerTrigger* trigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::RemoveEnterTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEnterTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trigger);
}
// Autogenerated method: SizeChanger.AddExitOnEnterTrigger
void GlobalNamespace::SizeChanger::AddExitOnEnterTrigger(::GlobalNamespace::SizeChangerTrigger* trigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::AddExitOnEnterTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExitOnEnterTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trigger);
}
// Autogenerated method: SizeChanger.RemoveExitOnEnterTrigger
void GlobalNamespace::SizeChanger::RemoveExitOnEnterTrigger(::GlobalNamespace::SizeChangerTrigger* trigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::RemoveExitOnEnterTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveExitOnEnterTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trigger);
}
// Autogenerated method: SizeChanger.OnTriggerEnter
void GlobalNamespace::SizeChanger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeChanger.acceptRig
void GlobalNamespace::SizeChanger::acceptRig(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::acceptRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "acceptRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: SizeChanger.OnTriggerExit
void GlobalNamespace::SizeChanger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeChanger.ClosestPoint
::UnityEngine::Vector3 GlobalNamespace::SizeChanger::ClosestPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeChanger/ChangerType
#include "GlobalNamespace/SizeChanger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SizeChanger/ChangerType Static
::GlobalNamespace::SizeChanger::ChangerType GlobalNamespace::SizeChanger::ChangerType::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeChanger::ChangerType>("", "SizeChanger/ChangerType", "Static"));
}
// Autogenerated static field setter
// Set static field: static public SizeChanger/ChangerType Static
void GlobalNamespace::SizeChanger::ChangerType::_set_Static(::GlobalNamespace::SizeChanger::ChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeChanger/ChangerType", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public SizeChanger/ChangerType Continuous
::GlobalNamespace::SizeChanger::ChangerType GlobalNamespace::SizeChanger::ChangerType::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeChanger::ChangerType>("", "SizeChanger/ChangerType", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public SizeChanger/ChangerType Continuous
void GlobalNamespace::SizeChanger::ChangerType::_set_Continuous(::GlobalNamespace::SizeChanger::ChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeChanger/ChangerType", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public SizeChanger/ChangerType Radius
::GlobalNamespace::SizeChanger::ChangerType GlobalNamespace::SizeChanger::ChangerType::_get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_get_Radius");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeChanger::ChangerType>("", "SizeChanger/ChangerType", "Radius"));
}
// Autogenerated static field setter
// Set static field: static public SizeChanger/ChangerType Radius
void GlobalNamespace::SizeChanger::ChangerType::_set_Radius(::GlobalNamespace::SizeChanger::ChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::_set_Radius");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeChanger/ChangerType", "Radius", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SizeChanger::ChangerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChanger::ChangerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeChangerTrigger
#include "GlobalNamespace/SizeChangerTrigger.hpp"
// Including type: SizeChangerTrigger/SizeChangerTriggerEvent
#include "GlobalNamespace/SizeChangerTrigger_SizeChangerTriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider myCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::SizeChangerTrigger::dyn_myCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::dyn_myCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger/SizeChangerTriggerEvent OnEnter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent*& GlobalNamespace::SizeChangerTrigger::dyn_OnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::dyn_OnEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnEnter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger/SizeChangerTriggerEvent OnExit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent*& GlobalNamespace::SizeChangerTrigger::dyn_OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::dyn_OnExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnExit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean builderEnterTrigger
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChangerTrigger::dyn_builderEnterTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::dyn_builderEnterTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderEnterTrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean builderExitOnEnterTrigger
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeChangerTrigger::dyn_builderExitOnEnterTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::dyn_builderExitOnEnterTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderExitOnEnterTrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeChangerTrigger.add_OnEnter
void GlobalNamespace::SizeChangerTrigger::add_OnEnter(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::add_OnEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SizeChangerTrigger.remove_OnEnter
void GlobalNamespace::SizeChangerTrigger::remove_OnEnter(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::remove_OnEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SizeChangerTrigger.add_OnExit
void GlobalNamespace::SizeChangerTrigger::add_OnExit(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::add_OnExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SizeChangerTrigger.remove_OnExit
void GlobalNamespace::SizeChangerTrigger::remove_OnExit(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::remove_OnExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SizeChangerTrigger.Awake
void GlobalNamespace::SizeChangerTrigger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChangerTrigger.OnTriggerEnter
void GlobalNamespace::SizeChangerTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeChangerTrigger.OnTriggerExit
void GlobalNamespace::SizeChangerTrigger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeChangerTrigger.ClosestPoint
::UnityEngine::Vector3 GlobalNamespace::SizeChangerTrigger::ClosestPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::ClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: SizeChangerTrigger.OnPieceCreate
void GlobalNamespace::SizeChangerTrigger::OnPieceCreate(int pieceType, int pieceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnPieceCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceType, pieceId);
}
// Autogenerated method: SizeChangerTrigger.OnPieceDestroy
void GlobalNamespace::SizeChangerTrigger::OnPieceDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnPieceDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChangerTrigger.OnPieceActivate
void GlobalNamespace::SizeChangerTrigger::OnPieceActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnPieceActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeChangerTrigger.OnPieceDeactivate
void GlobalNamespace::SizeChangerTrigger::OnPieceDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::OnPieceDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SizeChangerTrigger/SizeChangerTriggerEvent
#include "GlobalNamespace/SizeChangerTrigger_SizeChangerTriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SizeChangerTrigger/SizeChangerTriggerEvent.Invoke
void GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::Invoke(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeChangerTrigger/SizeChangerTriggerEvent.BeginInvoke
::System::IAsyncResult* GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::BeginInvoke(::UnityEngine::Collider* other, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, other, callback, object);
}
// Autogenerated method: SizeChangerTrigger/SizeChangerTriggerEvent.EndInvoke
void GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeChangerTrigger::SizeChangerTriggerEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeLayerChanger
#include "GlobalNamespace/SizeLayerChanger.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single maxScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeLayerChanger::dyn_maxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_maxScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeLayerChanger::dyn_minScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_minScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isAssurance
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_isAssurance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_isAssurance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAssurance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerA
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_affectLayerA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_affectLayerA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerB
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_affectLayerB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_affectLayerB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerB"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerC
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_affectLayerC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_affectLayerC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerC"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerD
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_affectLayerD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_affectLayerD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerD"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean applyOnTriggerEnter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_applyOnTriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_applyOnTriggerEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyOnTriggerEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean applyOnTriggerExit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChanger::dyn_applyOnTriggerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::dyn_applyOnTriggerExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyOnTriggerExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeLayerChanger.get_SizeLayerMask
int GlobalNamespace::SizeLayerChanger::get_SizeLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::get_SizeLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SizeLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SizeLayerChanger.Awake
void GlobalNamespace::SizeLayerChanger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeLayerChanger.OnTriggerEnter
void GlobalNamespace::SizeLayerChanger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: SizeLayerChanger.OnTriggerExit
void GlobalNamespace::SizeLayerChanger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChanger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeLayerChangerGrabable
#include "GlobalNamespace/SizeLayerChangerGrabable.hpp"
// Including type: SizeLayerMask
#include "GlobalNamespace/SizeLayerMask.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaGrabber
#include "GlobalNamespace/GorillaGrabber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean grabChangesSizeLayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChangerGrabable::dyn_grabChangesSizeLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::dyn_grabChangesSizeLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabChangesSizeLayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean releaseChangesSizeLayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerChangerGrabable::dyn_releaseChangesSizeLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::dyn_releaseChangesSizeLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releaseChangesSizeLayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeLayerMask grabbedSizeLayerMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeLayerMask*& GlobalNamespace::SizeLayerChangerGrabable::dyn_grabbedSizeLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::dyn_grabbedSizeLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbedSizeLayerMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeLayerMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeLayerMask releasedSizeLayerMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeLayerMask*& GlobalNamespace::SizeLayerChangerGrabable::dyn_releasedSizeLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::dyn_releasedSizeLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releasedSizeLayerMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeLayerMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeLayerChangerGrabable.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed
::UnityEngine::Transform* GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeLayerChangerGrabable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated method: SizeLayerChangerGrabable.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased
::UnityEngine::Transform* GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerChangerGrabable::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SizeLayerChangerGrabable*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeLayerMask
#include "GlobalNamespace/SizeLayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean affectLayerA
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerMask::dyn_affectLayerA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerMask::dyn_affectLayerA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean affectLayerB
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerMask::dyn_affectLayerB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerMask::dyn_affectLayerB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerB"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean affectLayerC
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerMask::dyn_affectLayerC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerMask::dyn_affectLayerC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerC"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean affectLayerD
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeLayerMask::dyn_affectLayerD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerMask::dyn_affectLayerD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerD"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeLayerMask.get_Mask
int GlobalNamespace::SizeLayerMask::get_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeLayerMask::get_Mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeManager
#include "GlobalNamespace/SizeManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SizeChanger
#include "GlobalNamespace/SizeChanger.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: GorillaLocomotion.Player
#include "GorillaLocomotion/Player.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single returnToNormalEasing
float GlobalNamespace::SizeManager::_get_returnToNormalEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::_get_returnToNormalEasing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SizeManager", "returnToNormalEasing"));
}
// Autogenerated static field setter
// Set static field: static private System.Single returnToNormalEasing
void GlobalNamespace::SizeManager::_set_returnToNormalEasing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::_set_returnToNormalEasing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManager", "returnToNormalEasing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<SizeChanger> touchingChangers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SizeChanger*>*& GlobalNamespace::SizeManager::dyn_touchingChangers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_touchingChangers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchingChangers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SizeChanger*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer[] lineRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LineRenderer*>& GlobalNamespace::SizeManager::dyn_lineRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_lineRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LineRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> initLineScalar
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::SizeManager::dyn_initLineScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_initLineScalar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initLineScalar"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig targetRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::SizeManager::dyn_targetRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_targetRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Player targetPlayer
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player*& GlobalNamespace::SizeManager::dyn_targetPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_targetPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPlayer"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single magnitudeThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeManager::dyn_magnitudeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_magnitudeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magnitudeThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeManager::dyn_rate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_rate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform mainCameraTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SizeManager::dyn_mainCameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_mainCameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SizeManager/SizeChangerType myType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeManager::SizeChangerType& GlobalNamespace::SizeManager::dyn_myType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_myType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeManager::SizeChangerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SizeManager::dyn_lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buildInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SizeManager::dyn_buildInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::dyn_buildInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SizeManager.get_currentScale
float GlobalNamespace::SizeManager::get_currentScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::get_currentScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.get_currentSizeLayerMaskValue
int GlobalNamespace::SizeManager::get_currentSizeLayerMaskValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::get_currentSizeLayerMaskValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSizeLayerMaskValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.set_currentSizeLayerMaskValue
void GlobalNamespace::SizeManager::set_currentSizeLayerMaskValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::set_currentSizeLayerMaskValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentSizeLayerMaskValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SizeManager.OnDisable
void GlobalNamespace::SizeManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.OnEnable
void GlobalNamespace::SizeManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.CollectLineRenderers
void GlobalNamespace::SizeManager::CollectLineRenderers(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::CollectLineRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectLineRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: SizeManager.BuildInitialize
void GlobalNamespace::SizeManager::BuildInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::BuildInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.Awake
void GlobalNamespace::SizeManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.InvokeFixedUpdate
void GlobalNamespace::SizeManager::InvokeFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::InvokeFixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeFixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManager.ControllingChanger
::GlobalNamespace::SizeChanger* GlobalNamespace::SizeManager::ControllingChanger(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::ControllingChanger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControllingChanger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SizeChanger*, false>(this, ___internal__method, t);
}
// Autogenerated method: SizeManager.ScaleFromChanger
float GlobalNamespace::SizeManager::ScaleFromChanger(::GlobalNamespace::SizeChanger* sC, ::UnityEngine::Transform* t, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::ScaleFromChanger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScaleFromChanger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sC), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, sC, t, deltaTime);
}
// Autogenerated method: SizeManager.SizeOverTime
float GlobalNamespace::SizeManager::SizeOverTime(float targetSize, float easing, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeOverTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SizeOverTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetSize), ::il2cpp_utils::ExtractType(easing), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, targetSize, easing, deltaTime);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeManager/SizeChangerType
#include "GlobalNamespace/SizeManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SizeManager/SizeChangerType LocalOffline
::GlobalNamespace::SizeManager::SizeChangerType GlobalNamespace::SizeManager::SizeChangerType::_get_LocalOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_get_LocalOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeManager::SizeChangerType>("", "SizeManager/SizeChangerType", "LocalOffline"));
}
// Autogenerated static field setter
// Set static field: static public SizeManager/SizeChangerType LocalOffline
void GlobalNamespace::SizeManager::SizeChangerType::_set_LocalOffline(::GlobalNamespace::SizeManager::SizeChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_set_LocalOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManager/SizeChangerType", "LocalOffline", value));
}
// Autogenerated static field getter
// Get static field: static public SizeManager/SizeChangerType LocalOnline
::GlobalNamespace::SizeManager::SizeChangerType GlobalNamespace::SizeManager::SizeChangerType::_get_LocalOnline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_get_LocalOnline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeManager::SizeChangerType>("", "SizeManager/SizeChangerType", "LocalOnline"));
}
// Autogenerated static field setter
// Set static field: static public SizeManager/SizeChangerType LocalOnline
void GlobalNamespace::SizeManager::SizeChangerType::_set_LocalOnline(::GlobalNamespace::SizeManager::SizeChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_set_LocalOnline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManager/SizeChangerType", "LocalOnline", value));
}
// Autogenerated static field getter
// Get static field: static public SizeManager/SizeChangerType OtherOnline
::GlobalNamespace::SizeManager::SizeChangerType GlobalNamespace::SizeManager::SizeChangerType::_get_OtherOnline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_get_OtherOnline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeManager::SizeChangerType>("", "SizeManager/SizeChangerType", "OtherOnline"));
}
// Autogenerated static field setter
// Set static field: static public SizeManager/SizeChangerType OtherOnline
void GlobalNamespace::SizeManager::SizeChangerType::_set_OtherOnline(::GlobalNamespace::SizeManager::SizeChangerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::_set_OtherOnline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManager/SizeChangerType", "OtherOnline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SizeManager::SizeChangerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManager::SizeChangerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SizeManagerManager
#include "GlobalNamespace/SizeManagerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SizeManager
#include "GlobalNamespace/SizeManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SizeManagerManager instance
::GlobalNamespace::SizeManagerManager* GlobalNamespace::SizeManagerManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SizeManagerManager*>("", "SizeManagerManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public SizeManagerManager instance
void GlobalNamespace::SizeManagerManager::_set_instance(::GlobalNamespace::SizeManagerManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManagerManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::SizeManagerManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "SizeManagerManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::SizeManagerManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManagerManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<SizeManager> allSM
::System::Collections::Generic::List_1<::GlobalNamespace::SizeManager*>* GlobalNamespace::SizeManagerManager::_get_allSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_get_allSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::SizeManager*>*>("", "SizeManagerManager", "allSM"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<SizeManager> allSM
void GlobalNamespace::SizeManagerManager::_set_allSM(::System::Collections::Generic::List_1<::GlobalNamespace::SizeManager*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::_set_allSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SizeManagerManager", "allSM", value));
}
// Autogenerated method: SizeManagerManager.Awake
void GlobalNamespace::SizeManagerManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManagerManager.CreateManager
void GlobalNamespace::SizeManagerManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SizeManagerManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SizeManagerManager.SetInstance
void GlobalNamespace::SizeManagerManager::SetInstance(::GlobalNamespace::SizeManagerManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SizeManagerManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: SizeManagerManager.RegisterSM
void GlobalNamespace::SizeManagerManager::RegisterSM(::GlobalNamespace::SizeManager* sM) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::RegisterSM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SizeManagerManager", "RegisterSM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sM)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sM);
}
// Autogenerated method: SizeManagerManager.UnregisterSM
void GlobalNamespace::SizeManagerManager::UnregisterSM(::GlobalNamespace::SizeManager* sM) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::UnregisterSM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SizeManagerManager", "UnregisterSM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sM)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sM);
}
// Autogenerated method: SizeManagerManager.FixedUpdate
void GlobalNamespace::SizeManagerManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SizeManagerManager..cctor
void GlobalNamespace::SizeManagerManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SizeManagerManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SizeManagerManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Tappable
#include "GlobalNamespace/Tappable.hpp"
// Including type: TappableManager
#include "GlobalNamespace/TappableManager.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tappableId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Tappable::dyn_tappableId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::dyn_tappableId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tappableId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String staticId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Tappable::dyn_staticId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::dyn_staticId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useStaticId
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Tappable::dyn_useStaticId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::dyn_useStaticId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useStaticId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TappableManager manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TappableManager*& GlobalNamespace::Tappable::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TappableManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.RpcTarget rpcTarget
[[deprecated("Use field access instead!")]] ::Photon::Pun::RpcTarget& GlobalNamespace::Tappable::dyn_rpcTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::dyn_rpcTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcTarget"))->offset;
  return *reinterpret_cast<::Photon::Pun::RpcTarget*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tappable.Validate
void GlobalNamespace::Tappable::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tappable.OnEnable
void GlobalNamespace::Tappable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tappable.OnDisable
void GlobalNamespace::Tappable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tappable.OnTap
void GlobalNamespace::Tappable::OnTap(float tapStrength, float tapTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::OnTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tapStrength), ::il2cpp_utils::ExtractType(tapTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tapStrength, tapTime);
}
// Autogenerated method: Tappable.OnTapLocal
void GlobalNamespace::Tappable::OnTapLocal(float tapStrength, float tapTime, ::Photon::Pun::PhotonMessageInfo sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::OnTapLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tapStrength, tapTime, sender);
}
// Autogenerated method: Tappable.EdRecalculateId
void GlobalNamespace::Tappable::EdRecalculateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::EdRecalculateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EdRecalculateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tappable.CalculateId
void GlobalNamespace::Tappable::CalculateId(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::CalculateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: Tappable.OnValidate
void GlobalNamespace::Tappable::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Tappable::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TappableManager
#include "GlobalNamespace/TappableManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Tappable
#include "GlobalNamespace/Tappable.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TappableManager gManager
::GlobalNamespace::TappableManager* GlobalNamespace::TappableManager::_get_gManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::_get_gManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TappableManager*>("", "TappableManager", "gManager"));
}
// Autogenerated static field setter
// Set static field: static private TappableManager gManager
void GlobalNamespace::TappableManager::_set_gManager(::GlobalNamespace::TappableManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::_set_gManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TappableManager", "gManager", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<Tappable> gRegistry
::System::Collections::Generic::HashSet_1<::GlobalNamespace::Tappable*>* GlobalNamespace::TappableManager::_get_gRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::_get_gRegistry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::GlobalNamespace::Tappable*>*>("", "TappableManager", "gRegistry"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<Tappable> gRegistry
void GlobalNamespace::TappableManager::_set_gRegistry(::System::Collections::Generic::HashSet_1<::GlobalNamespace::Tappable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::_set_gRegistry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TappableManager", "gRegistry", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Tappable> tappables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::Tappable*>*& GlobalNamespace::TappableManager::dyn_tappables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::dyn_tappables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tappables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::Tappable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> idSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::TappableManager::dyn_idSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::dyn_idSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TappableManager.Awake
void GlobalNamespace::TappableManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TappableManager.RegisterInstance
void GlobalNamespace::TappableManager::RegisterInstance(::GlobalNamespace::Tappable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::RegisterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: TappableManager.UnregisterInstance
void GlobalNamespace::TappableManager::UnregisterInstance(::GlobalNamespace::Tappable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::UnregisterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: TappableManager.Register
void GlobalNamespace::TappableManager::Register(::GlobalNamespace::Tappable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TappableManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: TappableManager.Unregister
void GlobalNamespace::TappableManager::Unregister(::GlobalNamespace::Tappable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TappableManager", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: TappableManager.DebugTestTap
void GlobalNamespace::TappableManager::DebugTestTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::DebugTestTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugTestTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TappableManager.SendOnTapRPC
void GlobalNamespace::TappableManager::SendOnTapRPC(int key, float tapStrength, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::SendOnTapRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnTapRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(tapStrength), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, tapStrength, info);
}
// Autogenerated method: TappableManager.OnValidate
void GlobalNamespace::TappableManager::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TappableManager..cctor
void GlobalNamespace::TappableManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TappableManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TappableSystem
#include "GlobalNamespace/TappableSystem.hpp"
// Including type: Tappable
#include "GlobalNamespace/Tappable.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TappableSystem.SendOnTapRPC
void GlobalNamespace::TappableSystem::SendOnTapRPC(int key, float tapStrength, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableSystem::SendOnTapRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnTapRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(tapStrength), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, tapStrength, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: XfToXfLine
#include "GlobalNamespace/XfToXfLine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pt0
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::XfToXfLine::dyn_pt0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XfToXfLine::dyn_pt0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pt0"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pt1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::XfToXfLine::dyn_pt1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XfToXfLine::dyn_pt1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pt1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::XfToXfLine::dyn_lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XfToXfLine::dyn_lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: XfToXfLine.Awake
void GlobalNamespace::XfToXfLine::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XfToXfLine::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: XfToXfLine.Update
void GlobalNamespace::XfToXfLine::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::XfToXfLine::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ModeSelectButton
#include "GlobalNamespace/ModeSelectButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ModeSelectButton::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModeSelectButton.OnDestroy
void GlobalNamespace::ModeSelectButton::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModeSelectButton.OnGameModeChanged
void GlobalNamespace::ModeSelectButton::OnGameModeChanged(::StringW newGameMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::OnGameModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGameModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameMode);
}
// Autogenerated method: ModeSelectButton.Start
void GlobalNamespace::ModeSelectButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ModeSelectButton.ButtonActivationWithHand
void GlobalNamespace::ModeSelectButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NMesh
#include "GlobalNamespace/NMesh.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> __Meshes
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* GlobalNamespace::NMesh::_get___Meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_get___Meshes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*>("", "NMesh", "__Meshes")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> __Meshes
void GlobalNamespace::NMesh::_set___Meshes(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_set___Meshes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NMesh", "__Meshes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean __initialized
bool GlobalNamespace::NMesh::_get___initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_get___initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "NMesh", "__initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean __initialized
void GlobalNamespace::NMesh::_set___initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_set___initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NMesh", "__initialized", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject __root
::UnityEngine::GameObject* GlobalNamespace::NMesh::_get___root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_get___root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("", "NMesh", "__root"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject __root
void GlobalNamespace::NMesh::_set___root(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::_set___root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NMesh", "__root", value));
}
// Autogenerated method: NMesh.Add
void GlobalNamespace::NMesh::Add(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NMesh", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: NMesh.init
void GlobalNamespace::NMesh::init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMesh::init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NMesh", "init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NMeshTarget
#include "GlobalNamespace/NMeshTarget.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NMeshTarget.get_callbackOrder
int GlobalNamespace::NMeshTarget::get_callbackOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMeshTarget::get_callbackOrder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NMeshTarget.set_callbackOrder
void GlobalNamespace::NMeshTarget::set_callbackOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMeshTarget::set_callbackOrder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NMeshTarget.OnSceneBake
void GlobalNamespace::NMeshTarget::OnSceneBake(::UnityEngine::SceneManagement::Scene scene, ::BuildSafe::SceneBakeMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NMeshTarget::OnSceneBake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerAudioManager
#include "GlobalNamespace/PlayerAudioManager.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot defaultSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::PlayerAudioManager::dyn_defaultSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAudioManager::dyn_defaultSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot underwaterSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::PlayerAudioManager::dyn_underwaterSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAudioManager::dyn_underwaterSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underwaterSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerAudioManager.SetMixerSnapshot
void GlobalNamespace::PlayerAudioManager::SetMixerSnapshot(::UnityEngine::Audio::AudioMixerSnapshot* snapshot, float transitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAudioManager::SetMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapshot), ::il2cpp_utils::ExtractType(transitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapshot, transitionTime);
}
// Autogenerated method: PlayerAudioManager.UnsetMixerSnapshot
void GlobalNamespace::PlayerAudioManager::UnsetMixerSnapshot(float transitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAudioManager::UnsetMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionTime);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RandomizeTest
#include "GlobalNamespace/RandomizeTest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> testList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::RandomizeTest::dyn_testList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_testList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] testListArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::RandomizeTest::dyn_testListArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_testListArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testListArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomIterator
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_randomIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_randomIterator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomIterator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempRandIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_tempRandIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_tempRandIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempRandValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_tempRandValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_tempRandValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomizeTest.Start
void GlobalNamespace::RandomizeTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizeTest.RandomizeList
void GlobalNamespace::RandomizeTest::RandomizeList(ByRef<::System::Collections::Generic::List_1<int>*> listToRandomize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::RandomizeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToRandomize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(listToRandomize));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ReplacementVoice
#include "GlobalNamespace/ReplacementVoice.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource replacementVoiceSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ReplacementVoice::dyn_replacementVoiceSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_replacementVoiceSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replacementVoiceSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] replacementVoiceClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::ReplacementVoice::dyn_replacementVoiceClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_replacementVoiceClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replacementVoiceClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] replacementVoiceClipsLoud
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::ReplacementVoice::dyn_replacementVoiceClipsLoud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_replacementVoiceClipsLoud");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replacementVoiceClipsLoud"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single loudReplacementVoiceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ReplacementVoice::dyn_loudReplacementVoiceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_loudReplacementVoiceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudReplacementVoiceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::ReplacementVoice::dyn_myVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_myVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ReplacementVoice::dyn_normalVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_normalVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single loudVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ReplacementVoice::dyn_loudVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::dyn_loudVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReplacementVoice.InvokeUpdate
void GlobalNamespace::ReplacementVoice::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReplacementVoice::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ScienceExperimentElementID
#include "GlobalNamespace/ScienceExperimentElementID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID Platform1
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_Platform1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_Platform1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "Platform1"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID Platform1
void GlobalNamespace::ScienceExperimentElementID::_set_Platform1(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_Platform1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "Platform1", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID Platform2
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_Platform2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_Platform2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "Platform2"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID Platform2
void GlobalNamespace::ScienceExperimentElementID::_set_Platform2(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_Platform2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "Platform2", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID Platform3
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_Platform3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_Platform3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "Platform3"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID Platform3
void GlobalNamespace::ScienceExperimentElementID::_set_Platform3(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_Platform3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "Platform3", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID Platform4
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_Platform4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_Platform4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "Platform4"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID Platform4
void GlobalNamespace::ScienceExperimentElementID::_set_Platform4(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_Platform4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "Platform4", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID Platform5
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_Platform5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_Platform5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "Platform5"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID Platform5
void GlobalNamespace::ScienceExperimentElementID::_set_Platform5(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_Platform5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "Platform5", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID LiquidMesh
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_LiquidMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_LiquidMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "LiquidMesh"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID LiquidMesh
void GlobalNamespace::ScienceExperimentElementID::_set_LiquidMesh(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_LiquidMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "LiquidMesh", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID EntryChamberLiquidMesh
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_EntryChamberLiquidMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_EntryChamberLiquidMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "EntryChamberLiquidMesh"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID EntryChamberLiquidMesh
void GlobalNamespace::ScienceExperimentElementID::_set_EntryChamberLiquidMesh(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_EntryChamberLiquidMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "EntryChamberLiquidMesh", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID EntryChamberBridgeQuad
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_EntryChamberBridgeQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_EntryChamberBridgeQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "EntryChamberBridgeQuad"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID EntryChamberBridgeQuad
void GlobalNamespace::ScienceExperimentElementID::_set_EntryChamberBridgeQuad(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_EntryChamberBridgeQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "EntryChamberBridgeQuad", value));
}
// Autogenerated static field getter
// Get static field: static public ScienceExperimentElementID DrainBlocker
::GlobalNamespace::ScienceExperimentElementID GlobalNamespace::ScienceExperimentElementID::_get_DrainBlocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_get_DrainBlocker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScienceExperimentElementID>("", "ScienceExperimentElementID", "DrainBlocker"));
}
// Autogenerated static field setter
// Set static field: static public ScienceExperimentElementID DrainBlocker
void GlobalNamespace::ScienceExperimentElementID::_set_DrainBlocker(::GlobalNamespace::ScienceExperimentElementID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::_set_DrainBlocker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScienceExperimentElementID", "DrainBlocker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScienceExperimentElementID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentElementID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ScienceExperimentSceneElement
#include "GlobalNamespace/ScienceExperimentSceneElement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ScienceExperimentElementID elementID
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScienceExperimentElementID& GlobalNamespace::ScienceExperimentSceneElement::dyn_elementID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::dyn_elementID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementID"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScienceExperimentElementID*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform followElement
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ScienceExperimentSceneElement::dyn_followElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::dyn_followElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followElement"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ITickSystemPost.PostTickRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ScienceExperimentSceneElement::dyn_$ITickSystemPost_PostTickRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::dyn_$ITickSystemPost_PostTickRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ITickSystemPost.PostTickRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScienceExperimentSceneElement.ITickSystemPost.get_PostTickRunning
bool GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost_get_PostTickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost.get_PostTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScienceExperimentSceneElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScienceExperimentSceneElement.ITickSystemPost.set_PostTickRunning
void GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost_set_PostTickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost.set_PostTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScienceExperimentSceneElement*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScienceExperimentSceneElement.ITickSystemPost.PostTick
void GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost_PostTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::ITickSystemPost.PostTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ScienceExperimentSceneElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScienceExperimentSceneElement.Start
void GlobalNamespace::ScienceExperimentSceneElement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScienceExperimentSceneElement.OnDestroy
void GlobalNamespace::ScienceExperimentSceneElement::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElement::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ScienceExperimentSceneElements
#include "GlobalNamespace/ScienceExperimentSceneElements.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ScienceExperimentSceneElements/DisableByLiquidData> disableByLiquidList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ScienceExperimentSceneElements::DisableByLiquidData>*& GlobalNamespace::ScienceExperimentSceneElements::dyn_disableByLiquidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElements::dyn_disableByLiquidList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableByLiquidList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ScienceExperimentSceneElements::DisableByLiquidData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem sodaFizzParticles
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::ScienceExperimentSceneElements::dyn_sodaFizzParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElements::dyn_sodaFizzParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sodaFizzParticles"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem sodaEruptionParticles
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::ScienceExperimentSceneElements::dyn_sodaEruptionParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElements::dyn_sodaEruptionParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sodaEruptionParticles"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScienceExperimentSceneElements.Awake
void GlobalNamespace::ScienceExperimentSceneElements::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElements::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScienceExperimentSceneElements.OnDestroy
void GlobalNamespace::ScienceExperimentSceneElements::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScienceExperimentSceneElements::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SodaBubble
#include "GlobalNamespace/SodaBubble.hpp"
// Including type: SodaBubble/<PopCoroutine>d__5
#include "GlobalNamespace/SodaBubble_-PopCoroutine-d__5.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer bubbleMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SodaBubble::dyn_bubbleMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::dyn_bubbleMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubbleMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::SodaBubble::dyn_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::dyn_body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshCollider bubbleCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& GlobalNamespace::SodaBubble::dyn_bubbleCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::dyn_bubbleCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubbleCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SodaBubble::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SodaBubble.Pop
void GlobalNamespace::SodaBubble::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SodaBubble.PopCoroutine
::System::Collections::IEnumerator* GlobalNamespace::SodaBubble::PopCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::PopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SodaBubble/<PopCoroutine>d__5
#include "GlobalNamespace/SodaBubble_-PopCoroutine-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SodaBubble <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SodaBubble*& GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SodaBubble**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SodaBubble/<PopCoroutine>d__5.System.IDisposable.Dispose
void GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SodaBubble::$PopCoroutine$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SodaBubble/<PopCoroutine>d__5.MoveNext
bool GlobalNamespace::SodaBubble::$PopCoroutine$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SodaBubble::$PopCoroutine$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SodaBubble/<PopCoroutine>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SodaBubble::$PopCoroutine$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SodaBubble/<PopCoroutine>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SodaBubble::$PopCoroutine$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SodaBubble/<PopCoroutine>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SodaBubble::$PopCoroutine$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SodaBubble::$PopCoroutine$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SlowCameraUpdate
#include "GlobalNamespace/SlowCameraUpdate.hpp"
// Including type: SlowCameraUpdate/<UpdateMirror>d__6
#include "GlobalNamespace/SlowCameraUpdate_-UpdateMirror-d__6.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera myCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::SlowCameraUpdate::dyn_myCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_myCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single frameRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SlowCameraUpdate::dyn_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_frameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeToNextFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SlowCameraUpdate::dyn_timeToNextFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_timeToNextFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToNextFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SlowCameraUpdate.Awake
void GlobalNamespace::SlowCameraUpdate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.OnEnable
void GlobalNamespace::SlowCameraUpdate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.OnDisable
void GlobalNamespace::SlowCameraUpdate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.UpdateMirror
::System::Collections::IEnumerator* GlobalNamespace::SlowCameraUpdate::UpdateMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::UpdateMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SlowCameraUpdate/<UpdateMirror>d__6
#include "GlobalNamespace/SlowCameraUpdate_-UpdateMirror-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SlowCameraUpdate <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SlowCameraUpdate*& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SlowCameraUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__6.System.IDisposable.Dispose
void GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__6.MoveNext
bool GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SportScoreboardVisuals
#include "GlobalNamespace/SportScoreboardVisuals.hpp"
// Including type: MaterialUVOffsetListSetter
#include "GlobalNamespace/MaterialUVOffsetListSetter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MaterialUVOffsetListSetter score1s
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MaterialUVOffsetListSetter*& GlobalNamespace::SportScoreboardVisuals::dyn_score1s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SportScoreboardVisuals::dyn_score1s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score1s"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialUVOffsetListSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MaterialUVOffsetListSetter score10s
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MaterialUVOffsetListSetter*& GlobalNamespace::SportScoreboardVisuals::dyn_score10s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SportScoreboardVisuals::dyn_score10s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score10s"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialUVOffsetListSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 TeamIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SportScoreboardVisuals::dyn_TeamIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SportScoreboardVisuals::dyn_TeamIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SportScoreboardVisuals.Awake
void GlobalNamespace::SportScoreboardVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SportScoreboardVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StageMicrophone
#include "GlobalNamespace/StageMicrophone.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public StageMicrophone Instance
::GlobalNamespace::StageMicrophone* GlobalNamespace::StageMicrophone::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::StageMicrophone*>("", "StageMicrophone", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public StageMicrophone Instance
void GlobalNamespace::StageMicrophone::_set_Instance(::GlobalNamespace::StageMicrophone* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StageMicrophone", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single PickupRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::StageMicrophone::dyn_PickupRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::dyn_PickupRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PickupRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single AmplifiedSpatialBlend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::StageMicrophone::dyn_AmplifiedSpatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::dyn_AmplifiedSpatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AmplifiedSpatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StageMicrophone.Awake
void GlobalNamespace::StageMicrophone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StageMicrophone.IsPlayerAmplified
bool GlobalNamespace::StageMicrophone::IsPlayerAmplified(::GlobalNamespace::VRRig* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::IsPlayerAmplified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlayerAmplified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: StageMicrophone.GetPlayerSpatialBlend
float GlobalNamespace::StageMicrophone::GetPlayerSpatialBlend(::GlobalNamespace::VRRig* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StageMicrophone::GetPlayerSpatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSpatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StopwatchFace
#include "GlobalNamespace/StopwatchFace.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: StopwatchCosmetic
#include "GlobalNamespace/StopwatchCosmetic.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: LerpTask`1
#include "GlobalNamespace/LerpTask_1.hpp"
// Including type: UnityEngine.Vector3Int
#include "UnityEngine/Vector3Int.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::StopwatchFace::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::StopwatchFace::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StopwatchCosmetic _cosmetic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StopwatchCosmetic*& GlobalNamespace::StopwatchFace::dyn__cosmetic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__cosmetic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cosmetic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StopwatchCosmetic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClick
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::StopwatchFace::dyn__audioClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__audioClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClick"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioReset
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::StopwatchFace::dyn__audioReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__audioReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioReset"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioTick
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::StopwatchFace::dyn__audioTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__audioTick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTick"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _millisElapsed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StopwatchFace::dyn__millisElapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__millisElapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_millisElapsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _watchActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::StopwatchFace::dyn__watchActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__watchActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_watchActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LerpTask`1<System.Int32> _lerpToZero
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LerpTask_1<int>*& GlobalNamespace::StopwatchFace::dyn__lerpToZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::dyn__lerpToZero");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpToZero"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LerpTask_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StopwatchFace.get_watchActive
bool GlobalNamespace::StopwatchFace::get_watchActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::get_watchActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_watchActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.get_millisElapsed
int GlobalNamespace::StopwatchFace::get_millisElapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::get_millisElapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_millisElapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.get_digitsMmSsMs
::UnityEngine::Vector3Int GlobalNamespace::StopwatchFace::get_digitsMmSsMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::get_digitsMmSsMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_digitsMmSsMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.SetMillisElapsed
void GlobalNamespace::StopwatchFace::SetMillisElapsed(int millis, bool updateFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::SetMillisElapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMillisElapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(updateFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millis, updateFace);
}
// Autogenerated method: StopwatchFace.Awake
void GlobalNamespace::StopwatchFace::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.OnLerpToZero
void GlobalNamespace::StopwatchFace::OnLerpToZero(int a, int b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::OnLerpToZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLerpToZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, t);
}
// Autogenerated method: StopwatchFace.OnLerpEnd
void GlobalNamespace::StopwatchFace::OnLerpEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::OnLerpEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLerpEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.OnEnable
void GlobalNamespace::StopwatchFace::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.OnDisable
void GlobalNamespace::StopwatchFace::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.Update
void GlobalNamespace::StopwatchFace::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.ParseDigits
::UnityEngine::Vector3Int GlobalNamespace::StopwatchFace::ParseDigits(::System::TimeSpan time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::ParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StopwatchFace", "ParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: StopwatchFace.UpdateText
void GlobalNamespace::StopwatchFace::UpdateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.UpdateHand
void GlobalNamespace::StopwatchFace::UpdateHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::UpdateHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.WatchToggle
void GlobalNamespace::StopwatchFace::WatchToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::WatchToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.WatchStart
void GlobalNamespace::StopwatchFace::WatchStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::WatchStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.WatchStop
void GlobalNamespace::StopwatchFace::WatchStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::WatchStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.WatchReset
void GlobalNamespace::StopwatchFace::WatchReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::WatchReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StopwatchFace.WatchReset
void GlobalNamespace::StopwatchFace::WatchReset(bool doLerp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StopwatchFace::WatchReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doLerp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doLerp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SynchedMusicController
#include "GlobalNamespace/SynchedMusicController.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kPlaylistLength
int GlobalNamespace::SynchedMusicController::_get_kPlaylistLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::_get_kPlaylistLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SynchedMusicController", "kPlaylistLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPlaylistLength
void GlobalNamespace::SynchedMusicController::_set_kPlaylistLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::_set_kPlaylistLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SynchedMusicController", "kPlaylistLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usingNewSyncedSongsCode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_usingNewSyncedSongsCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_usingNewSyncedSongsCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingNewSyncedSongsCode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shufflePlaylist
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_shufflePlaylist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_shufflePlaylist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shufflePlaylist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SynchedMusicController/SyncedSongInfo[] syncedSongs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SynchedMusicController::SyncedSongInfo>& GlobalNamespace::SynchedMusicController::dyn_syncedSongs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_syncedSongs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncedSongs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SynchedMusicController::SyncedSongInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mySeed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_mySeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_mySeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random randomNumberGenerator
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::SynchedMusicController::dyn_randomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_randomNumberGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomNumberGenerator"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 minimumWait
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_minimumWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_minimumWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumWait"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomInterval
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_randomInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_randomInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64[] songStartTimes
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& GlobalNamespace::SynchedMusicController::dyn_songStartTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_songStartTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songStartTimes"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] audioSourcesForPlaying
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::SynchedMusicController::dyn_audioSourcesForPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSourcesForPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourcesForPlaying"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] audioClipsForPlaying
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::SynchedMusicController::dyn_audioClipsForPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioClipsForPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClipsForPlaying"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SynchedMusicController::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource[] audioSourceArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::SynchedMusicController::dyn_audioSourceArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSourceArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourceArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] songsArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::SynchedMusicController::dyn_songsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_songsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songsArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastPlayIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_lastPlayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_lastPlayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPlayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 currentTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalLoopTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_totalLoopTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_totalLoopTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalLoopTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPressableButton muteButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPressableButton*& GlobalNamespace::SynchedMusicController::dyn_muteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_muteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muteButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPressableButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingMultipleSongs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_usingMultipleSongs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_usingMultipleSongs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingMultipleSongs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingMultipleSources
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_usingMultipleSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_usingMultipleSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingMultipleSources"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPlayingCurrently
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_isPlayingCurrently() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_isPlayingCurrently");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPlayingCurrently"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_testPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_testPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean twoLayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_twoLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_twoLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twoLayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String locationName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SynchedMusicController::dyn_locationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_locationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SynchedMusicController.Start
void GlobalNamespace::SynchedMusicController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.Update
void GlobalNamespace::SynchedMusicController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.StartPlayingSong
void GlobalNamespace::SynchedMusicController::StartPlayingSong(int64_t timeStarted, int64_t currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime);
}
// Autogenerated method: SynchedMusicController.StartPlayingSongs
void GlobalNamespace::SynchedMusicController::StartPlayingSongs(int64_t timeStarted, int64_t currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSongs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSongs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime);
}
// Autogenerated method: SynchedMusicController.StartPlayingSong
void GlobalNamespace::SynchedMusicController::StartPlayingSong(int64_t timeStarted, int64_t currentTime, ::UnityEngine::AudioClip* clipToPlay, ::UnityEngine::AudioSource* sourceToPlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(clipToPlay), ::il2cpp_utils::ExtractType(sourceToPlay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime, clipToPlay, sourceToPlay);
}
// Autogenerated method: SynchedMusicController.GenerateSongStartRandomTimes
void GlobalNamespace::SynchedMusicController::GenerateSongStartRandomTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::GenerateSongStartRandomTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSongStartRandomTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.MuteAudio
void GlobalNamespace::SynchedMusicController::MuteAudio(::GlobalNamespace::GorillaPressableButton* pressedButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::MuteAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedButton);
}
// Autogenerated method: SynchedMusicController.New_Start
void GlobalNamespace::SynchedMusicController::New_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::New_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.OnEnable
void GlobalNamespace::SynchedMusicController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.New_Update
void GlobalNamespace::SynchedMusicController::New_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::New_Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New_Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.New_Validate
::StringW GlobalNamespace::SynchedMusicController::New_Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::New_Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New_Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.New_GeneratePlaylistArrays
void GlobalNamespace::SynchedMusicController::New_GeneratePlaylistArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::New_GeneratePlaylistArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New_GeneratePlaylistArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SynchedMusicController/AudioSourcePickMode
#include "GlobalNamespace/SynchedMusicController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SynchedMusicController/AudioSourcePickMode All
::GlobalNamespace::SynchedMusicController::AudioSourcePickMode GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SynchedMusicController::AudioSourcePickMode>("", "SynchedMusicController/AudioSourcePickMode", "All"));
}
// Autogenerated static field setter
// Set static field: static public SynchedMusicController/AudioSourcePickMode All
void GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_All(::GlobalNamespace::SynchedMusicController::AudioSourcePickMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SynchedMusicController/AudioSourcePickMode", "All", value));
}
// Autogenerated static field getter
// Get static field: static public SynchedMusicController/AudioSourcePickMode Shuffle
::GlobalNamespace::SynchedMusicController::AudioSourcePickMode GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_Shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_Shuffle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SynchedMusicController::AudioSourcePickMode>("", "SynchedMusicController/AudioSourcePickMode", "Shuffle"));
}
// Autogenerated static field setter
// Set static field: static public SynchedMusicController/AudioSourcePickMode Shuffle
void GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_Shuffle(::GlobalNamespace::SynchedMusicController::AudioSourcePickMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_Shuffle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SynchedMusicController/AudioSourcePickMode", "Shuffle", value));
}
// Autogenerated static field getter
// Get static field: static public SynchedMusicController/AudioSourcePickMode Specific
::GlobalNamespace::SynchedMusicController::AudioSourcePickMode GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_Specific() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_get_Specific");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SynchedMusicController::AudioSourcePickMode>("", "SynchedMusicController/AudioSourcePickMode", "Specific"));
}
// Autogenerated static field setter
// Set static field: static public SynchedMusicController/AudioSourcePickMode Specific
void GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_Specific(::GlobalNamespace::SynchedMusicController::AudioSourcePickMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::_set_Specific");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SynchedMusicController/AudioSourcePickMode", "Specific", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::AudioSourcePickMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::AudioSourcePickMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TappableBeeHive
#include "GlobalNamespace/TappableBeeHive.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: SlingshotProjectile
#include "GlobalNamespace/SlingshotProjectile.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject swarmEmergeFromPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TappableBeeHive::dyn_swarmEmergeFromPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_swarmEmergeFromPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swarmEmergeFromPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject swarmEmergeToPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TappableBeeHive::dyn_swarmEmergeToPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_swarmEmergeToPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swarmEmergeToPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject honeycombSurface
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TappableBeeHive::dyn_honeycombSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_honeycombSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "honeycombSurface"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single honeycombDisableDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TappableBeeHive::dyn_honeycombDisableDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_honeycombDisableDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "honeycombDisableDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TimeSince _timeSinceLastTap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeSince& GlobalNamespace::TappableBeeHive::dyn__timeSinceLastTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn__timeSinceLastTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeSinceLastTap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeSince*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reenableHoneycombAtTimestamp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TappableBeeHive::dyn_reenableHoneycombAtTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_reenableHoneycombAtTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reenableHoneycombAtTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine reenableHoneycombCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::TappableBeeHive::dyn_reenableHoneycombCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::dyn_reenableHoneycombCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reenableHoneycombCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TappableBeeHive.Awake
void GlobalNamespace::TappableBeeHive::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TappableBeeHive.OnSlingshotHit
void GlobalNamespace::TappableBeeHive::OnSlingshotHit(::GlobalNamespace::SlingshotProjectile* projectile, ::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::OnSlingshotHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSlingshotHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectile), ::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, projectile, collision);
}
// Autogenerated method: TappableBeeHive.OnTapLocal
void GlobalNamespace::TappableBeeHive::OnTapLocal(float tapStrength, float tapTime, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TappableBeeHive::OnTapLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tapStrength, tapTime, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TextWatcher
#include "GlobalNamespace/TextWatcher.hpp"
// Including type: WatchableStringSO
#include "GlobalNamespace/WatchableStringSO.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public WatchableStringSO textToCopy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::WatchableStringSO*& GlobalNamespace::TextWatcher::dyn_textToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextWatcher::dyn_textToCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textToCopy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WatchableStringSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::TextWatcher::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextWatcher::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextWatcher.Start
void GlobalNamespace::TextWatcher::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextWatcher::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextWatcher.OnDestroy
void GlobalNamespace::TextWatcher::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextWatcher::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextWatcher.OnTextChanged
void GlobalNamespace::TextWatcher::OnTextChanged(::StringW newText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextWatcher::OnTextChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTextChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newText);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TransformFollow
#include "GlobalNamespace/TransformFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TransformFollow::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformFollow::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformFollow::dyn_prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::dyn_prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransformFollow.Awake
void GlobalNamespace::TransformFollow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TransformFollow.LateUpdate
void GlobalNamespace::TransformFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TransformFollowXScene
#include "GlobalNamespace/TransformFollowXScene.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public XSceneRef refToFollow
[[deprecated("Use field access instead!")]] ::GlobalNamespace::XSceneRef& GlobalNamespace::TransformFollowXScene::dyn_refToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::dyn_refToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refToFollow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::XSceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TransformFollowXScene::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformFollowXScene::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformFollowXScene::dyn_prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::dyn_prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransformFollowXScene.Awake
void GlobalNamespace::TransformFollowXScene::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TransformFollowXScene.Start
void GlobalNamespace::TransformFollowXScene::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TransformFollowXScene.LateUpdate
void GlobalNamespace::TransformFollowXScene::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollowXScene::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UberShader
#include "GlobalNamespace/UberShader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UberShaderProperty
#include "GlobalNamespace/UberShaderProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Material kReferenceMaterial
::UnityEngine::Material* GlobalNamespace::UberShader::_get_kReferenceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_get_kReferenceMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "UberShader", "kReferenceMaterial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Material kReferenceMaterial
void GlobalNamespace::UberShader::_set_kReferenceMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_set_kReferenceMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UberShader", "kReferenceMaterial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Shader kReferenceShader
::UnityEngine::Shader* GlobalNamespace::UberShader::_get_kReferenceShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_get_kReferenceShader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Shader*>("", "UberShader", "kReferenceShader"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Shader kReferenceShader
void GlobalNamespace::UberShader::_set_kReferenceShader(::UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_set_kReferenceShader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UberShader", "kReferenceShader", value));
}
// Autogenerated static field getter
// Get static field: static private UberShaderProperty[] kProperties
::ArrayW<::GlobalNamespace::UberShaderProperty*> GlobalNamespace::UberShader::_get_kProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_get_kProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::UberShaderProperty*>>("", "UberShader", "kProperties"));
}
// Autogenerated static field setter
// Set static field: static private UberShaderProperty[] kProperties
void GlobalNamespace::UberShader::_set_kProperties(::ArrayW<::GlobalNamespace::UberShaderProperty*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::_set_kProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UberShader", "kProperties", value));
}
// Autogenerated method: UberShader.InitializeOnLoad
void GlobalNamespace::UberShader::InitializeOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::InitializeOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "InitializeOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_TransparencyMode
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_TransparencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_TransparencyMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_TransparencyMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_Cutoff
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_Cutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_Cutoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_Cutoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ColorSource
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ColorSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ColorSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ColorSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BaseColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BaseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BaseColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BaseColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_GChannelColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_GChannelColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_GChannelColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_GChannelColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BChannelColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BChannelColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BChannelColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BChannelColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_AChannelColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_AChannelColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_AChannelColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_AChannelColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BaseMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BaseMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BaseMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BaseMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BaseMap_WH
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BaseMap_WH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BaseMap_WH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BaseMap_WH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UVSource
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UVSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UVSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UVSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MaskMapToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MaskMapToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MaskMapToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MaskMapToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MaskMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MaskMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MaskMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MaskMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MaskMap_WH
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MaskMap_WH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MaskMap_WH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MaskMap_WH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LavaLampToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LavaLampToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LavaLampToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LavaLampToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_GradientMapToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_GradientMapToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_GradientMapToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_GradientMapToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_GradientMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_GradientMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_GradientMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_GradientMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DoTextureRotation
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DoTextureRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DoTextureRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DoTextureRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_RotateAngle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_RotateAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_RotateAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_RotateAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_RotateAnim
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_RotateAnim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_RotateAnim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_RotateAnim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseWaveWarp
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseWaveWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseWaveWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseWaveWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WaveAmplitude
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WaveAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WaveAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WaveAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WaveFrequency
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WaveFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WaveFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WaveFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WaveScale
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WaveScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WaveScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WaveScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WaveTimeScale
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WaveTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WaveTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WaveTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseWeatherMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseWeatherMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseWeatherMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseWeatherMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WeatherMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WeatherMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WeatherMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WeatherMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WeatherMapDissolveEdgeSize
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WeatherMapDissolveEdgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WeatherMapDissolveEdgeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WeatherMapDissolveEdgeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectBoxProjectToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectBoxProjectToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectBoxProjectToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectBoxProjectToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectBoxCubePos
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectBoxCubePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectBoxCubePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectBoxCubePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectBoxSize
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectBoxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectBoxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectBoxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectBoxRotation
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectBoxRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectBoxRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectBoxRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectMatcapToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectMatcapToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectMatcapToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectMatcapToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectMatcapPerspToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectMatcapPerspToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectMatcapPerspToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectMatcapPerspToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectNormalToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectNormalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectNormalToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectNormalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectTex
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectTex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectTex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectNormalTex
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectNormalTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectNormalTex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectNormalTex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectAlbedoTint
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectAlbedoTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectAlbedoTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectAlbedoTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectTint
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectOpacity
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectOpacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectOpacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectOpacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectExposure
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectExposure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectOffset
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectScale
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ReflectRotate
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ReflectRotate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ReflectRotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ReflectRotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ParallaxToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ParallaxToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ParallaxToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ParallaxToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ParallaxAAToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ParallaxAAToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ParallaxAAToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ParallaxAAToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ParallaxAABias
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ParallaxAABias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ParallaxAABias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ParallaxAABias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DepthMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DepthMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DepthMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DepthMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ParallaxAmplitude
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ParallaxAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ParallaxAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ParallaxAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ParallaxSamplesMinMax
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ParallaxSamplesMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ParallaxSamplesMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ParallaxSamplesMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UvShiftToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UvShiftToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UvShiftToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UvShiftToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UvShiftSteps
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UvShiftSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UvShiftSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UvShiftSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UvShiftRate
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UvShiftRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UvShiftRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UvShiftRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UvShiftOffset
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UvShiftOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UvShiftOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UvShiftOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseCrystalEffect
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseCrystalEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseCrystalEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseCrystalEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_CrystalPower
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_CrystalPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_CrystalPower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_CrystalPower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_CrystalRimColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_CrystalRimColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_CrystalRimColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_CrystalRimColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidVolume
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidFill
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidFillNormal
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidFillNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidFillNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidFillNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidSurfaceColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidSurfaceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidSurfaceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidSurfaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidSwayX
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidSwayX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidSwayX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidSwayX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidSwayY
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidSwayY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidSwayY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidSwayY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidContainer
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidPlanePosition
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidPlanePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidPlanePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidPlanePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_LiquidPlaneNormal
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_LiquidPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_LiquidPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_LiquidPlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexFlapToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexFlapToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexFlapToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexFlapToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexFlapAxis
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexFlapAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexFlapAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexFlapAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexFlapDegreesMinMax
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexFlapDegreesMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexFlapDegreesMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexFlapDegreesMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexFlapSpeed
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexFlapSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexFlapSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexFlapSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexFlapPhaseOffset
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexFlapPhaseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexFlapPhaseOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexFlapPhaseOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexWaveToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexWaveToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexWaveToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexWaveToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexWaveParams
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexWaveParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexWaveParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexWaveParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexWaveStartOffset
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexWaveStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexWaveStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexWaveStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexWavePhaseOffset
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexWavePhaseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexWavePhaseOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexWavePhaseOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexRotateToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexRotateToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexRotateToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexRotateToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_VertexRotateAngles
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_VertexRotateAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_VertexRotateAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_VertexRotateAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseEyeTracking
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EyeTileOffsetUV
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EyeTileOffsetUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EyeTileOffsetUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EyeTileOffsetUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EyeOverrideUV
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EyeOverrideUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EyeOverrideUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EyeOverrideUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EyeOverrideUVTransform
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EyeOverrideUVTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EyeOverrideUVTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EyeOverrideUVTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseMouthFlap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseMouthFlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseMouthFlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseMouthFlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MouthMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MouthMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MouthMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MouthMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MouthMap_Atlas
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MouthMap_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MouthMap_Atlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MouthMap_Atlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_MouthMap_AtlasSlice
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_MouthMap_AtlasSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_MouthMap_AtlasSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_MouthMap_AtlasSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseVertexColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseVertexColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseVertexColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseVertexColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_WaterEffect
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_WaterEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_WaterEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_WaterEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_HeightBasedWaterEffect
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_HeightBasedWaterEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_HeightBasedWaterEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_HeightBasedWaterEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseDayNightLightmap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseDayNightLightmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseDayNightLightmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseDayNightLightmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseSpecular
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseSpecular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseSpecular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseSpecular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_UseSpecularAlphaChannel
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_UseSpecularAlphaChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_UseSpecularAlphaChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_UseSpecularAlphaChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_Smoothness
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_Smoothness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_Smoothness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_Smoothness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionToggle
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionMaskByBaseMapAlpha
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionMaskByBaseMapAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionMaskByBaseMapAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionMaskByBaseMapAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionUVScrollSpeed
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionUVScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionUVScrollSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionUVScrollSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionDissolveProgress
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionDissolveProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionDissolveProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionDissolveProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionDissolveEdgeSize
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionDissolveEdgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionDissolveEdgeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionDissolveEdgeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionUseUVWaveWarp
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionUseUVWaveWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionUseUVWaveWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionUseUVWaveWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_Cull
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_Cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_Cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_StencilReference
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_StencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_StencilReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_StencilReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_StencilComparison
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_StencilComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_StencilComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_StencilComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_StencilPassFront
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_StencilPassFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_StencilPassFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_StencilPassFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_USE_DEFORM_MAP
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_USE_DEFORM_MAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_USE_DEFORM_MAP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_USE_DEFORM_MAP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapIntensity
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapMaskByVertColorRAmount
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapMaskByVertColorRAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapMaskByVertColorRAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapMaskByVertColorRAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapScrollSpeed
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapScrollSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapScrollSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapUV0Influence
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapUV0Influence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapUV0Influence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapUV0Influence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapObjectSpaceOffsetsU
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapObjectSpaceOffsetsU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapObjectSpaceOffsetsV
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapObjectSpaceOffsetsV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapObjectSpaceOffsetsV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapWorldSpaceOffsetsU
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapWorldSpaceOffsetsU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMapWorldSpaceOffsetsV
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMapWorldSpaceOffsetsV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMapWorldSpaceOffsetsV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_RotateOnYAxisBySinTime
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_RotateOnYAxisBySinTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_RotateOnYAxisBySinTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_RotateOnYAxisBySinTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_USE_TEX_ARRAY_ATLAS
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_USE_TEX_ARRAY_ATLAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_USE_TEX_ARRAY_ATLAS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_USE_TEX_ARRAY_ATLAS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BaseMap_Atlas
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BaseMap_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BaseMap_Atlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BaseMap_Atlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_BaseMap_AtlasSlice
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_BaseMap_AtlasSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_BaseMap_AtlasSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_BaseMap_AtlasSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionMap_Atlas
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionMap_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionMap_Atlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionMap_Atlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_EmissionMap_AtlasSlice
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_EmissionMap_AtlasSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_EmissionMap_AtlasSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_EmissionMap_AtlasSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMap_Atlas
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMap_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMap_Atlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMap_Atlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DeformMap_AtlasSlice
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DeformMap_AtlasSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DeformMap_AtlasSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DeformMap_AtlasSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_SrcBlend
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_SrcBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_SrcBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_SrcBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DstBlend
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DstBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DstBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DstBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_SrcBlendAlpha
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_SrcBlendAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_SrcBlendAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_SrcBlendAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DstBlendAlpha
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DstBlendAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DstBlendAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DstBlendAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_ZWrite
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_ZWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_ZWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_ZWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_AlphaToMask
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_AlphaToMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_AlphaToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_AlphaToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_Surface
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_Surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_Surface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_Surface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_Metallic
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_Metallic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_Metallic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_Metallic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_SpecColor
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_SpecColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_SpecColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_SpecColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DayNightLightmapArray
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DayNightLightmapArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DayNightLightmapArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DayNightLightmapArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_DayNightLightmapArray_AtlasSlice
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_DayNightLightmapArray_AtlasSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_DayNightLightmapArray_AtlasSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_DayNightLightmapArray_AtlasSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UberShader.get_SingleLightmap
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShader::get_SingleLightmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShader::get_SingleLightmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShader", "get_SingleLightmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UberShaderProperty
#include "GlobalNamespace/UberShaderProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::UberShaderProperty::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nameID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::UberShaderProperty::dyn__nameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__nameID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UberShaderProperty::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.ShaderPropertyType _type
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ShaderPropertyType& GlobalNamespace::UberShaderProperty::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::ShaderPropertyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.ShaderPropertyFlags _flags
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ShaderPropertyFlags& GlobalNamespace::UberShaderProperty::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::ShaderPropertyFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _rangeLimits
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::UberShaderProperty::dyn__rangeLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::dyn__rangeLimits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rangeLimits"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UberShaderProperty.get_name
::StringW GlobalNamespace::UberShaderProperty::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.get_nameID
int GlobalNamespace::UberShaderProperty::get_nameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_nameID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nameID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.get_index
int GlobalNamespace::UberShaderProperty::get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.get_type
::UnityEngine::Rendering::ShaderPropertyType GlobalNamespace::UberShaderProperty::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::ShaderPropertyType, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.get_rangeLimits
::UnityEngine::Vector2 GlobalNamespace::UberShaderProperty::get_rangeLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_rangeLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rangeLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.get_flags
::UnityEngine::Rendering::ShaderPropertyFlags GlobalNamespace::UberShaderProperty::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::get_flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::ShaderPropertyFlags, false>(this, ___internal__method);
}
// Autogenerated method: UberShaderProperty.FromName
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShaderProperty::FromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::FromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShaderProperty", "FromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UberShaderProperty.FromIndex
::GlobalNamespace::UberShaderProperty* GlobalNamespace::UberShaderProperty::FromIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::FromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShaderProperty", "FromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UberShaderProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: UberShaderProperty.GetAllProperties
::ArrayW<::GlobalNamespace::UberShaderProperty*> GlobalNamespace::UberShaderProperty::GetAllProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UberShaderProperty::GetAllProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UberShaderProperty", "GetAllProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::UberShaderProperty*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
// Including type: AddCollidersToParticleSystemTriggers
#include "GlobalNamespace/AddCollidersToParticleSystemTriggers.hpp"
// Including type: BetterDayNightManager/ScheduledEvent
#include "GlobalNamespace/BetterDayNightManager_ScheduledEvent.hpp"
// Including type: BetterDayNightManager/<AnimateLightFlashCo>d__104
#include "GlobalNamespace/BetterDayNightManager_-AnimateLightFlashCo-d__104.hpp"
// Including type: BetterDayNightManager/<UpdateTimeOfDay>d__79
#include "GlobalNamespace/BetterDayNightManager_-UpdateTimeOfDay-d__79.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: PerSceneRenderData
#include "GlobalNamespace/PerSceneRenderData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager instance
::GlobalNamespace::BetterDayNightManager* GlobalNamespace::BetterDayNightManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager*>("", "BetterDayNightManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager instance
void GlobalNamespace::BetterDayNightManager::_set_instance(::GlobalNamespace::BetterDayNightManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<PerSceneRenderData> allScenesRenderData
::System::Collections::Generic::List_1<::GlobalNamespace::PerSceneRenderData*>* GlobalNamespace::BetterDayNightManager::_get_allScenesRenderData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_get_allScenesRenderData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::PerSceneRenderData*>*>("", "BetterDayNightManager", "allScenesRenderData"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<PerSceneRenderData> allScenesRenderData
void GlobalNamespace::BetterDayNightManager::_set_allScenesRenderData(::System::Collections::Generic::List_1<::GlobalNamespace::PerSceneRenderData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_set_allScenesRenderData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager", "allScenesRenderData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,BetterDayNightManager/ScheduledEvent> scheduledEvents
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BetterDayNightManager::ScheduledEvent*>* GlobalNamespace::BetterDayNightManager::_get_scheduledEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_get_scheduledEvents");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BetterDayNightManager::ScheduledEvent*>*>("", "BetterDayNightManager", "scheduledEvents")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,BetterDayNightManager/ScheduledEvent> scheduledEvents
void GlobalNamespace::BetterDayNightManager::_set_scheduledEvents(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BetterDayNightManager::ScheduledEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_set_scheduledEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager", "scheduledEvents", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader standard
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standard"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader standardCutout
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_standardCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardCutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardCutout"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader gorillaUnlit
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaUnlit"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader gorillaUnlitCutout
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlitCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlitCutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaUnlitCutout"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] standardMaterialsUnlit
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardMaterialsUnlit"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] standardMaterialsUnlitDarker
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlitDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlitDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardMaterialsUnlitDarker"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] dayNightSupportedMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSupportedMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] dayNightSupportedMaterialsCutout
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterialsCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterialsCutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSupportedMaterialsCutout"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] dayNightLightmapNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::BetterDayNightManager::dyn_dayNightLightmapNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightLightmapNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightLightmapNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] dayNightWeatherLightmapNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherLightmapNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherLightmapNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightWeatherLightmapNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] cloudsDayNightSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_cloudsDayNightSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_cloudsDayNightSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudsDayNightSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] beachDayNightSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_beachDayNightSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_beachDayNightSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beachDayNightSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightWeatherSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightWeatherSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] standardUnlitColor
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardUnlitColor"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] standardUnlitColorWithPremadeColorDarker
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColorWithPremadeColorDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColorWithPremadeColorDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardUnlitColorWithPremadeColorDarker"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_currentLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentTimestep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_currentTimestep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTimestep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimestep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double[] timeOfDayRange
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::BetterDayNightManager::dyn_timeOfDayRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_timeOfDayRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeOfDayRange"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeMultiplier
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_timeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_timeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeMultiplier"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double currentTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double totalHours
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_totalHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_totalHours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalHours"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double totalSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_totalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_totalSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorFrom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorFrom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorTo
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorTo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorFromDarker
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorFromDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorFromDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorFromDarker"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorToDarker
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorToDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorToDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorToDarker"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentTimeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentTimeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTimeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_lastIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_lastIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double currentIndexSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_currentIndexSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentIndexSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndexSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single tempLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_tempLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_tempLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double baseSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_baseSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_baseSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean computerInit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BetterDayNightManager::dyn_computerInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_computerInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computerInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single h
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single v
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mySeed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_mySeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_mySeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Random randomNumberGenerator
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::BetterDayNightManager::dyn_randomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_randomNumberGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomNumberGenerator"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager/WeatherType[] weatherCycle
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BetterDayNightManager::WeatherType>& GlobalNamespace::BetterDayNightManager::dyn_weatherCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_weatherCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weatherCycle"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BetterDayNightManager::WeatherType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <currentTimeOfDay>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BetterDayNightManager::dyn_$currentTimeOfDay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_$currentTimeOfDay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentTimeOfDay>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rainChance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_rainChance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_rainChance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rainChance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxRainDuration
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_maxRainDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_maxRainDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRainDuration"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rainDuration
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_rainDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_rainDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rainDuration"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_remainingSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_remainingSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 initialDayCycles
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::BetterDayNightManager::dyn_initialDayCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_initialDayCycles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialDayCycles"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 gameEpochDay
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::BetterDayNightManager::dyn_gameEpochDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_gameEpochDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameEpochDay"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentWeatherCycle
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentWeatherCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentWeatherCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWeatherCycle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fromWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_fromWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 toWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_toWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_fromSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromSky2
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_fromSky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromSky2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromSky2"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromSky3
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_fromSky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromSky3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromSky3"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_toSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toSky2
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_toSky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toSky2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toSky2"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toSky3
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_toSky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toSky3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toSky3"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AddCollidersToParticleSystemTriggers[] weatherSystems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AddCollidersToParticleSystemTriggers*>& GlobalNamespace::BetterDayNightManager::dyn_weatherSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_weatherSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weatherSystems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AddCollidersToParticleSystemTriggers*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Collider> collidersToAddToWeatherSystems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::BetterDayNightManager::dyn_collidersToAddToWeatherSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_collidersToAddToWeatherSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersToAddToWeatherSystems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_overrideIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_overrideIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TimeSettings currentSetting
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeSettings& GlobalNamespace::BetterDayNightManager::dyn_currentSetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentSetting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSetting"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _Color
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Color"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightLerpValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightLerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightLerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightLerpValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSkyTex1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSkyTex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSkyTex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSkyTex1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSkyTex2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSkyTex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSkyTex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSkyTex2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSky2Tex1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky2Tex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky2Tex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSky2Tex1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSky2Tex2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky2Tex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky2Tex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSky2Tex2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSky3Tex1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky3Tex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky3Tex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSky3Tex1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _GlobalDayNightSky3Tex2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky3Tex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn__GlobalDayNightSky3Tex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GlobalDayNightSky3Tex2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shouldRepopulate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BetterDayNightManager::dyn_shouldRepopulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_shouldRepopulate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldRepopulate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine animatingLightFlash
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::BetterDayNightManager::dyn_animatingLightFlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_animatingLightFlash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatingLightFlash"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetterDayNightManager.Register
void GlobalNamespace::BetterDayNightManager::Register(::GlobalNamespace::PerSceneRenderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BetterDayNightManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: BetterDayNightManager.Unregister
void GlobalNamespace::BetterDayNightManager::Unregister(::GlobalNamespace::PerSceneRenderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BetterDayNightManager", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: BetterDayNightManager.get_currentTimeOfDay
::StringW GlobalNamespace::BetterDayNightManager::get_currentTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::get_currentTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.set_currentTimeOfDay
void GlobalNamespace::BetterDayNightManager::set_currentTimeOfDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::set_currentTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BetterDayNightManager.ITimeOfDaySystem.get_currentTimeInSeconds
double GlobalNamespace::BetterDayNightManager::ITimeOfDaySystem_get_currentTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ITimeOfDaySystem.get_currentTimeInSeconds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager*), 4));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.ITimeOfDaySystem.get_totalTimeInSeconds
double GlobalNamespace::BetterDayNightManager::ITimeOfDaySystem_get_totalTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ITimeOfDaySystem.get_totalTimeInSeconds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager*), 5));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.OnEnable
void GlobalNamespace::BetterDayNightManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.OnDisable
void GlobalNamespace::BetterDayNightManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.OnDestroy
void GlobalNamespace::BetterDayNightManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.MaterialColorCorrection
::UnityEngine::Vector4 GlobalNamespace::BetterDayNightManager::MaterialColorCorrection(::UnityEngine::Vector4 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::MaterialColorCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaterialColorCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, color);
}
// Autogenerated method: BetterDayNightManager.UpdateTimeOfDay
::System::Collections::IEnumerator* GlobalNamespace::BetterDayNightManager::UpdateTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::UpdateTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.ChangeLerps
void GlobalNamespace::BetterDayNightManager::ChangeLerps(float newLerp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ChangeLerps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLerps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLerp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLerp);
}
// Autogenerated method: BetterDayNightManager.ChangeMaps
void GlobalNamespace::BetterDayNightManager::ChangeMaps(int fromIndex, int toIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ChangeMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromIndex), ::il2cpp_utils::ExtractType(toIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromIndex, toIndex);
}
// Autogenerated method: BetterDayNightManager.Update
void GlobalNamespace::BetterDayNightManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.RequestRepopulateLightmaps
void GlobalNamespace::BetterDayNightManager::RequestRepopulateLightmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::RequestRepopulateLightmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestRepopulateLightmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.PopulateAllLightmaps
void GlobalNamespace::BetterDayNightManager::PopulateAllLightmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::PopulateAllLightmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateAllLightmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.PopulateAllLightmaps
void GlobalNamespace::BetterDayNightManager::PopulateAllLightmaps(int fromIndex, int toIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::PopulateAllLightmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateAllLightmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromIndex), ::il2cpp_utils::ExtractType(toIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromIndex, toIndex);
}
// Autogenerated method: BetterDayNightManager.CurrentWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::CurrentWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::CurrentWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.NextWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::NextWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::NextWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.LastWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::LastWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::LastWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.GenerateWeatherEventTimes
void GlobalNamespace::BetterDayNightManager::GenerateWeatherEventTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::GenerateWeatherEventTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWeatherEventTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.RegisterScheduledEvent
int GlobalNamespace::BetterDayNightManager::RegisterScheduledEvent(int hour, ::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::RegisterScheduledEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BetterDayNightManager", "RegisterScheduledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, action);
}
// Autogenerated method: BetterDayNightManager.UnregisterScheduledEvent
void GlobalNamespace::BetterDayNightManager::UnregisterScheduledEvent(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::UnregisterScheduledEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BetterDayNightManager", "UnregisterScheduledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: BetterDayNightManager.SetOverrideIndex
void GlobalNamespace::BetterDayNightManager::SetOverrideIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::SetOverrideIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: BetterDayNightManager.AnimateLightFlash
void GlobalNamespace::BetterDayNightManager::AnimateLightFlash(int index, float fadeInDuration, float holdDuration, float fadeOutDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::AnimateLightFlash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateLightFlash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(fadeInDuration), ::il2cpp_utils::ExtractType(holdDuration), ::il2cpp_utils::ExtractType(fadeOutDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, fadeInDuration, holdDuration, fadeOutDuration);
}
// Autogenerated method: BetterDayNightManager.AnimateLightFlashCo
::System::Collections::IEnumerator* GlobalNamespace::BetterDayNightManager::AnimateLightFlashCo(int index, float fadeInDuration, float holdDuration, float fadeOutDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::AnimateLightFlashCo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateLightFlashCo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(fadeInDuration), ::il2cpp_utils::ExtractType(holdDuration), ::il2cpp_utils::ExtractType(fadeOutDuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, index, fadeInDuration, holdDuration, fadeOutDuration);
}
// Autogenerated method: BetterDayNightManager.SetTimeOfDay
void GlobalNamespace::BetterDayNightManager::SetTimeOfDay(int timeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::SetTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeIndex);
}
// Autogenerated method: BetterDayNightManager.FastForward
void GlobalNamespace::BetterDayNightManager::FastForward(float seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::FastForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FastForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seconds);
}
// Autogenerated method: BetterDayNightManager..cctor
void GlobalNamespace::BetterDayNightManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BetterDayNightManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterDayNightManager/WeatherType
#include "GlobalNamespace/BetterDayNightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType None
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType None
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_None(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType Raining
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_Raining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_Raining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "Raining"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType Raining
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_Raining(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_Raining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "Raining", value));
}
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType All
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "All"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType All
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_All(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::WeatherType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterDayNightManager/ScheduledEvent
#include "GlobalNamespace/BetterDayNightManager_ScheduledEvent.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 lastDayCalled
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_lastDayCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_lastDayCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDayCalled"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hour
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_hour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ScheduledEvent::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BetterDayNightManager/<AnimateLightFlashCo>d__104
#include "GlobalNamespace/BetterDayNightManager_-AnimateLightFlashCo-d__104.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeInDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_fadeInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_fadeInDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeInDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeOutDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_fadeOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_fadeOutDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeOutDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <startMap>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$startMap$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$startMap$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startMap>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endTimestamp>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$endTimestamp$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::dyn_$endTimestamp$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endTimestamp>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetterDayNightManager/<AnimateLightFlashCo>d__104.System.IDisposable.Dispose
void GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<AnimateLightFlashCo>d__104.MoveNext
bool GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<AnimateLightFlashCo>d__104.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<AnimateLightFlashCo>d__104.System.Collections.IEnumerator.Reset
void GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<AnimateLightFlashCo>d__104.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$AnimateLightFlashCo$d__104*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BetterDayNightManager/<UpdateTimeOfDay>d__79
#include "GlobalNamespace/BetterDayNightManager_-UpdateTimeOfDay-d__79.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__79.System.IDisposable.Dispose
void GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__79.MoveNext
bool GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__79.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__79.System.Collections.IEnumerator.Reset
void GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__79.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__79*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TimeSettings
#include "GlobalNamespace/TimeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimeSettings Static
::GlobalNamespace::TimeSettings GlobalNamespace::TimeSettings::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeSettings::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimeSettings>("", "TimeSettings", "Static"));
}
// Autogenerated static field setter
// Set static field: static public TimeSettings Static
void GlobalNamespace::TimeSettings::_set_Static(::GlobalNamespace::TimeSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeSettings::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeSettings", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public TimeSettings Normal
::GlobalNamespace::TimeSettings GlobalNamespace::TimeSettings::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeSettings::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimeSettings>("", "TimeSettings", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TimeSettings Normal
void GlobalNamespace::TimeSettings::_set_Normal(::GlobalNamespace::TimeSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeSettings::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeSettings", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TimeSettings::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeSettings::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ITimeOfDaySystem
#include "GlobalNamespace/ITimeOfDaySystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITimeOfDaySystem.get_currentTimeInSeconds
double GlobalNamespace::ITimeOfDaySystem::get_currentTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITimeOfDaySystem::get_currentTimeInSeconds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITimeOfDaySystem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: ITimeOfDaySystem.get_totalTimeInSeconds
double GlobalNamespace::ITimeOfDaySystem::get_totalTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITimeOfDaySystem::get_totalTimeInSeconds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITimeOfDaySystem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DayNightCycle
#include "GlobalNamespace/DayNightCycle.hpp"
// Including type: UnityEngine.LightmapData
#include "UnityEngine/LightmapData.hpp"
// Including type: DayNightCycle/<UpdateWork>d__37
#include "GlobalNamespace/DayNightCycle_-UpdateWork-d__37.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D _dayMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn__dayMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn__dayMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dayMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_fromMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_fromMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D _sunriseMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn__sunriseMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn__sunriseMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunriseMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_toMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_toMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DayNightCycle/LerpBakedLightingJob job
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DayNightCycle::LerpBakedLightingJob& GlobalNamespace::DayNightCycle::dyn_job() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_job");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "job"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DayNightCycle::LerpBakedLightingJob*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Jobs.JobHandle jobHandle
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::DayNightCycle::dyn_jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobHandle"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isComplete
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenStartingJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenStartingJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenStartingJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenStartingJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenPostJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenPostJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenPostJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenPostJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenDuringJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenDuringJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenDuringJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenDuringJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LightmapData newData
[[deprecated("Use field access instead!")]] ::UnityEngine::LightmapData*& GlobalNamespace::DayNightCycle::dyn_newData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newData"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] fromPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_fromPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] toPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_toPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] mixedPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_mixedPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData[] newDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LightmapData*>& GlobalNamespace::DayNightCycle::dyn_newDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D newTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_newTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 textureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_textureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 textureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_textureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockFrom
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockFrom"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockTo
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockTo"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockMix
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockMix"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_subTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_subTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] subTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::DayNightCycle::dyn_subTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_subTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startedCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startedCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startedCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean finishedCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_finishedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_finishedCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startJob
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startJob"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single switchTimeTaken
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_switchTimeTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_switchTimeTaken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchTimeTaken"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean jobStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_jobStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_jobStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_lerpAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_lerpAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentColumn
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentColumn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentSubTexture
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentSubTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentSubTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSubTexture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentRowInSubtexture
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentRowInSubtexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentRowInSubtexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRowInSubtexture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle.Awake
void GlobalNamespace::DayNightCycle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle.Update
void GlobalNamespace::DayNightCycle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle.UpdateWork
::System::Collections::IEnumerator* GlobalNamespace::DayNightCycle::UpdateWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::UpdateWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DayNightCycle/LerpBakedLightingJob
#include "GlobalNamespace/DayNightCycle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> fromPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_fromPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> toPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_toPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> mixedPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_mixedPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_lerpValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle/LerpBakedLightingJob.Execute
void GlobalNamespace::DayNightCycle::LerpBakedLightingJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DayNightCycle::LerpBakedLightingJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DayNightCycle/<UpdateWork>d__37
#include "GlobalNamespace/DayNightCycle_-UpdateWork-d__37.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DayNightCycle <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DayNightCycle*& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DayNightCycle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <j>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$j$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$j$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<j>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.IDisposable.Dispose
void GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.MoveNext
bool GlobalNamespace::DayNightCycle::$UpdateWork$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.IEnumerator.Reset
void GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DayNightResetForBaking
#include "GlobalNamespace/DayNightResetForBaking.hpp"
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager dayNightManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::DayNightResetForBaking::dyn_dayNightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::dyn_dayNightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightResetForBaking.SetMaterialsForBaking
void GlobalNamespace::DayNightResetForBaking::SetMaterialsForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::SetMaterialsForBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialsForBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightResetForBaking.SetMaterialsForGame
void GlobalNamespace::DayNightResetForBaking::SetMaterialsForGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::SetMaterialsForGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialsForGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaColorSlider
#include "GlobalNamespace/GorillaColorSlider.hpp"
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean setRandomly
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaColorSlider::dyn_setRandomly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_setRandomly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setRandomly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single zRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_zRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_zRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaColorSlider::dyn_startingLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_startingLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 valueIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaColorSlider::dyn_valueIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_valueIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single valueImReporting
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_valueImReporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_valueImReporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueImReporting"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTriggerBox gorilla
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerBox*& GlobalNamespace::GorillaColorSlider::dyn_gorilla() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_gorilla");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorilla"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_startingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_startingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaColorSlider.Start
void GlobalNamespace::GorillaColorSlider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaColorSlider.SetPosition
void GlobalNamespace::GorillaColorSlider::SetPosition(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: GorillaColorSlider.InterpolateValue
float GlobalNamespace::GorillaColorSlider::InterpolateValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::InterpolateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaColorSlider.OnSliderRelease
void GlobalNamespace::GorillaColorSlider::OnSliderRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::OnSliderRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSliderRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaComputerTerminal
#include "GlobalNamespace/GorillaComputerTerminal.hpp"
// Including type: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d
#include "GlobalNamespace/GorillaComputerTerminal_--OnEnable-g__OnEnable_Local-3_0-d.hpp"
// Including type: GorillaComputerTerminal/<>c
#include "GlobalNamespace/GorillaComputerTerminal_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myScreenText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaComputerTerminal::dyn_myScreenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_myScreenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myScreenText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myFunctionText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaComputerTerminal::dyn_myFunctionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_myFunctionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myFunctionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer monitorMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaComputerTerminal::dyn_monitorMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_monitorMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monitorMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaComputerTerminal.OnEnable
void GlobalNamespace::GorillaComputerTerminal::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal.Init
void GlobalNamespace::GorillaComputerTerminal::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal.OnDisable
void GlobalNamespace::GorillaComputerTerminal::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal.OnScreenTextChanged
void GlobalNamespace::GorillaComputerTerminal::OnScreenTextChanged(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::OnScreenTextChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScreenTextChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: GorillaComputerTerminal.OnFunctionTextChanged
void GlobalNamespace::GorillaComputerTerminal::OnFunctionTextChanged(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::OnFunctionTextChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFunctionTextChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: GorillaComputerTerminal.OnMaterialsChanged
void GlobalNamespace::GorillaComputerTerminal::OnMaterialsChanged(::ArrayW<::UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::OnMaterialsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMaterialsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: GorillaComputerTerminal.<OnEnable>g__OnEnable_Local|3_0
::System::Collections::IEnumerator* GlobalNamespace::GorillaComputerTerminal::$OnEnable$g__OnEnable_Local_3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::<OnEnable>g__OnEnable_Local|3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>g__OnEnable_Local|3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d
#include "GlobalNamespace/GorillaComputerTerminal_--OnEnable-g__OnEnable_Local-3_0-d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaComputerTerminal <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaComputerTerminal*& GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaComputerTerminal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d.System.IDisposable.Dispose
void GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d.MoveNext
bool GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal/<<OnEnable>g__OnEnable_Local|3_0>d.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaComputerTerminal::$$OnEnable$g__OnEnable_Local|3_0$d*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaComputerTerminal/<>c
#include "GlobalNamespace/GorillaComputerTerminal_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaComputerTerminal/<>c <>9
::GlobalNamespace::GorillaComputerTerminal::$$c* GlobalNamespace::GorillaComputerTerminal::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaComputerTerminal::$$c*>("", "GorillaComputerTerminal/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaComputerTerminal/<>c <>9
void GlobalNamespace::GorillaComputerTerminal::$$c::_set_$$9(::GlobalNamespace::GorillaComputerTerminal::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaComputerTerminal/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__3_1
::System::Func_1<bool>* GlobalNamespace::GorillaComputerTerminal::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("", "GorillaComputerTerminal/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__3_1
void GlobalNamespace::GorillaComputerTerminal::$$c::_set_$$9__3_1(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaComputerTerminal/<>c", "<>9__3_1", value)));
}
// Autogenerated method: GorillaComputerTerminal/<>c..cctor
void GlobalNamespace::GorillaComputerTerminal::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaComputerTerminal/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaComputerTerminal/<>c.<OnEnable>b__3_1
bool GlobalNamespace::GorillaComputerTerminal::$$c::$OnEnable$b__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::$$c::<OnEnable>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DevButtonType
#include "GlobalNamespace/DevButtonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DevButtonType LogLevel
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_LogLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "LogLevel"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType LogLevel
void GlobalNamespace::DevButtonType::_set_LogLevel(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_LogLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "LogLevel", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Grow
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Grow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Grow"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Grow
void GlobalNamespace::DevButtonType::_set_Grow(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Grow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Grow", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Shrink
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Shrink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Shrink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Shrink"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Shrink
void GlobalNamespace::DevButtonType::_set_Shrink(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Shrink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Shrink", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType ScrollUp
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_ScrollUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_ScrollUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "ScrollUp"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType ScrollUp
void GlobalNamespace::DevButtonType::_set_ScrollUp(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_ScrollUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "ScrollUp", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Mute
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Mute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Mute"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Mute
void GlobalNamespace::DevButtonType::_set_Mute(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Mute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Mute", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType LineExpand
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_LineExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_LineExpand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "LineExpand"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType LineExpand
void GlobalNamespace::DevButtonType::_set_LineExpand(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_LineExpand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "LineExpand", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType LineForward
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_LineForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_LineForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "LineForward"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType LineForward
void GlobalNamespace::DevButtonType::_set_LineForward(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_LineForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "LineForward", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType ScrollDown
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_ScrollDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_ScrollDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "ScrollDown"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType ScrollDown
void GlobalNamespace::DevButtonType::_set_ScrollDown(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_ScrollDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "ScrollDown", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Bottom
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Bottom
void GlobalNamespace::DevButtonType::_set_Bottom(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Toggle
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Toggle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Toggle"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Toggle
void GlobalNamespace::DevButtonType::_set_Toggle(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Toggle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Toggle", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType Clear
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "Clear"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType Clear
void GlobalNamespace::DevButtonType::_set_Clear(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "Clear", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType ConsoleMode
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_ConsoleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_ConsoleMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "ConsoleMode"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType ConsoleMode
void GlobalNamespace::DevButtonType::_set_ConsoleMode(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_ConsoleMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "ConsoleMode", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType InspectorMode
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_InspectorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_InspectorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "InspectorMode"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType InspectorMode
void GlobalNamespace::DevButtonType::_set_InspectorMode(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_InspectorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "InspectorMode", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType ComponentInspectorMode
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_ComponentInspectorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_ComponentInspectorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "ComponentInspectorMode"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType ComponentInspectorMode
void GlobalNamespace::DevButtonType::_set_ComponentInspectorMode(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_ComponentInspectorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "ComponentInspectorMode", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType InspectorShowAllFields
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_InspectorShowAllFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_InspectorShowAllFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "InspectorShowAllFields"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType InspectorShowAllFields
void GlobalNamespace::DevButtonType::_set_InspectorShowAllFields(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_InspectorShowAllFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "InspectorShowAllFields", value));
}
// Autogenerated static field getter
// Get static field: static public DevButtonType InspectorShowPrivateItems
::GlobalNamespace::DevButtonType GlobalNamespace::DevButtonType::_get_InspectorShowPrivateItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_get_InspectorShowPrivateItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DevButtonType>("", "DevButtonType", "InspectorShowPrivateItems"));
}
// Autogenerated static field setter
// Set static field: static public DevButtonType InspectorShowPrivateItems
void GlobalNamespace::DevButtonType::_set_InspectorShowPrivateItems(::GlobalNamespace::DevButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::_set_InspectorShowPrivateItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DevButtonType", "InspectorShowPrivateItems", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DevButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DevButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaDevButton
#include "GlobalNamespace/GorillaDevButton.hpp"
// Including type: DevConsoleInstance
#include "GlobalNamespace/DevConsoleInstance.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DevButtonType Type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DevButtonType& GlobalNamespace::GorillaDevButton::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DevButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LogType levelType
[[deprecated("Use field access instead!")]] ::UnityEngine::LogType& GlobalNamespace::GorillaDevButton::dyn_levelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_levelType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelType"))->offset;
  return *reinterpret_cast<::UnityEngine::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DevConsoleInstance targetConsole
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DevConsoleInstance*& GlobalNamespace::GorillaDevButton::dyn_targetConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_targetConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetConsole"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DevConsoleInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDevButton::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean repeatIfHeld
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDevButton::dyn_repeatIfHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_repeatIfHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatIfHeld"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single holdForSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaDevButton::dyn_holdForSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_holdForSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "holdForSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine pressCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::GorillaDevButton::dyn_pressCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::dyn_pressCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaDevButton.get_on
bool GlobalNamespace::GorillaDevButton::get_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::get_on");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_on", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDevButton.set_on
void GlobalNamespace::GorillaDevButton::set_on(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::set_on");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_on", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaDevButton.OnEnable
void GlobalNamespace::GorillaDevButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDevButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaNameManager
#include "GlobalNamespace/GorillaNameManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlayerLineButton
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaPlayerLineButton/<TestPressCheck>d__17
#include "GlobalNamespace/GorillaPlayerLineButton_-TestPressCheck-d__17.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerScoreboardLine parentLine
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerScoreboardLine*& GlobalNamespace::GorillaPlayerLineButton::dyn_parentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_parentLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentLine"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerScoreboardLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton/ButtonType buttonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton::ButtonType& GlobalNamespace::GorillaPlayerLineButton::dyn_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_buttonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerLineButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isAutoOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerLineButton::dyn_isAutoOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_isAutoOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAutoOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material offMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPlayerLineButton::dyn_offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material onMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPlayerLineButton::dyn_onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material autoOnMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPlayerLineButton::dyn_autoOnMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_autoOnMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoOnMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerLineButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerLineButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String autoOnText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerLineButton::dyn_autoOnText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_autoOnText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoOnText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerLineButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerLineButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerLineButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerLineButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerLineButton.OnEnable
void GlobalNamespace::GorillaPlayerLineButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.OnDisable
void GlobalNamespace::GorillaPlayerLineButton::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.TestPressCheck
::System::Collections::IEnumerator* GlobalNamespace::GorillaPlayerLineButton::TestPressCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::TestPressCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPressCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.OnTriggerEnter
void GlobalNamespace::GorillaPlayerLineButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaPlayerLineButton.OnTriggerExit
void GlobalNamespace::GorillaPlayerLineButton::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaPlayerLineButton.UpdateColor
void GlobalNamespace::GorillaPlayerLineButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlayerLineButton/ButtonType
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType HateSpeech
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_HateSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_HateSpeech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "HateSpeech"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType HateSpeech
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_HateSpeech(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_HateSpeech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "HateSpeech", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Cheating
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cheating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cheating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Cheating"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Cheating
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cheating(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cheating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Cheating", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Toxicity
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Toxicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Toxicity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Toxicity"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Toxicity
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Toxicity(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Toxicity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Toxicity", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Mute
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Mute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Mute"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Mute
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Mute(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Mute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Mute", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Report
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Report");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Report"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Report
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Report(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Report");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Report", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Cancel
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Cancel
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cancel(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Cancel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerLineButton::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaPlayerLineButton/<TestPressCheck>d__17
#include "GlobalNamespace/GorillaPlayerLineButton_-TestPressCheck-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__17.System.IDisposable.Dispose
void GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__17.MoveNext
bool GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__17*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: GorillaPlayerScoreboardLine/<>c
#include "GlobalNamespace/GorillaPlayerScoreboardLine_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: GorillaPlayerLineButton/ButtonType
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] targetActors
::ArrayW<int> GlobalNamespace::GorillaPlayerScoreboardLine::_get_targetActors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::_get_targetActors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("", "GorillaPlayerScoreboardLine", "targetActors"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] targetActors
void GlobalNamespace::GorillaPlayerScoreboardLine::_set_targetActors(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::_set_targetActors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine", "targetActors", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerName
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerLevel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLevel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerMMR
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMMR"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image playerSwatch
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerSwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerSwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSwatch"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture infectedTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_infectedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_infectedTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infectedTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetPlayer linePlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetPlayer*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig playerVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerLevelValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevelValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevelValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLevelValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerMMRValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMRValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMRValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMMRValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerNameValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerNameValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerNameVisible
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerNameVisible"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerActorNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerActorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerActorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton muteButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_muteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_muteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muteButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton reportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject hateSpeechButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_hateSpeechButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_hateSpeechButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hateSpeechButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject toxicityButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_toxicityButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_toxicityButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toxicityButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cheatingButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_cheatingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_cheatingButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cheatingButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer speakerIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_speakerIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_speakerIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canPressNextReportButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_canPressNextReportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_canPressNextReportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canPressNextReportButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text[] texts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_texts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_texts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Text*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer[] sprites
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SpriteRenderer*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_sprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_sprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sprites"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SpriteRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer[] meshes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_meshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image[] images
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Image*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "images"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder myRecorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRecorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isMuteManual
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_isMuteManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_isMuteManual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMuteManual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mute
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_mute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 emptyRigCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRigCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject myRig
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reportedCheating
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedCheating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedCheating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedCheating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reportedToxicity
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedToxicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedToxicity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedToxicity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reportedHateSpeech
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedHateSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportedHateSpeech");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedHateSpeech"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reportInProgress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currentNickname
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_currentNickname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_currentNickname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentNickname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doneReporting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_doneReporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_doneReporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doneReporting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lastVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_lastVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_lastVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreBoard parentScoreboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreBoard*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_parentScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_parentScoreboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentScoreboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single initTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_initTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_initTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single emptyRigCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRigCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: RigContainer rigContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_rigContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_rigContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerScoreboardLine.Start
void GlobalNamespace::GorillaPlayerScoreboardLine::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.InitializeLine
void GlobalNamespace::GorillaPlayerScoreboardLine::InitializeLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::InitializeLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.SetLineData
void GlobalNamespace::GorillaPlayerScoreboardLine::SetLineData(::GlobalNamespace::NetPlayer* netPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::SetLineData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netPlayer);
}
// Autogenerated method: GorillaPlayerScoreboardLine.UpdateLine
void GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.UpdatePlayerText
void GlobalNamespace::GorillaPlayerScoreboardLine::UpdatePlayerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::UpdatePlayerText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.PressButton
void GlobalNamespace::GorillaPlayerScoreboardLine::PressButton(bool isOn, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn), ::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn, buttonType);
}
// Autogenerated method: GorillaPlayerScoreboardLine.SetReportState
void GlobalNamespace::GorillaPlayerScoreboardLine::SetReportState(bool reportState, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::SetReportState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reportState), ::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportState, buttonType);
}
// Autogenerated method: GorillaPlayerScoreboardLine.ReportPlayer
void GlobalNamespace::GorillaPlayerScoreboardLine::ReportPlayer(::StringW PlayerID, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType, ::StringW OtherPlayerNickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::ReportPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlayerScoreboardLine", "ReportPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(PlayerID), ::il2cpp_utils::ExtractType(buttonType), ::il2cpp_utils::ExtractType(OtherPlayerNickName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, PlayerID, buttonType, OtherPlayerNickName);
}
// Autogenerated method: GorillaPlayerScoreboardLine.MutePlayer
void GlobalNamespace::GorillaPlayerScoreboardLine::MutePlayer(::StringW PlayerID, ::StringW OtherPlayerNickName, int muting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::MutePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlayerScoreboardLine", "MutePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(PlayerID), ::il2cpp_utils::ExtractType(OtherPlayerNickName), ::il2cpp_utils::ExtractType(muting)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, PlayerID, OtherPlayerNickName, muting);
}
// Autogenerated method: GorillaPlayerScoreboardLine.NormalizeName
::StringW GlobalNamespace::GorillaPlayerScoreboardLine::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: GorillaPlayerScoreboardLine.ResetData
void GlobalNamespace::GorillaPlayerScoreboardLine::ResetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::ResetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.OnEnable
void GlobalNamespace::GorillaPlayerScoreboardLine::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.OnDisable
void GlobalNamespace::GorillaPlayerScoreboardLine::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.SwapToReportState
void GlobalNamespace::GorillaPlayerScoreboardLine::SwapToReportState(bool reportInProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::SwapToReportState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapToReportState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reportInProgress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportInProgress);
}
// Autogenerated method: GorillaPlayerScoreboardLine..cctor
void GlobalNamespace::GorillaPlayerScoreboardLine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlayerScoreboardLine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlayerScoreboardLine/<>c
#include "GlobalNamespace/GorillaPlayerScoreboardLine_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaPlayerScoreboardLine/<>c <>9
::GlobalNamespace::GorillaPlayerScoreboardLine::$$c* GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerScoreboardLine::$$c*>("", "GorillaPlayerScoreboardLine/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaPlayerScoreboardLine/<>c <>9
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9(::GlobalNamespace::GorillaPlayerScoreboardLine::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__50_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__50_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaPlayerScoreboardLine/<>c", "<>9__50_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__50_0
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__50_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__50_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine/<>c", "<>9__50_0", value)));
}
// Autogenerated method: GorillaPlayerScoreboardLine/<>c..cctor
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlayerScoreboardLine/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<>c.<NormalizeName>b__50_0
bool GlobalNamespace::GorillaPlayerScoreboardLine::$$c::$NormalizeName$b__50_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::<NormalizeName>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material pressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPressableButton::dyn_pressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_pressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material unpressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPressableButton::dyn_unpressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_unpressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unpressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer buttonRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaPressableButton::dyn_buttonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_buttonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPressableButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPressableButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testHandLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_testHandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_testHandLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testHandLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPressableButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPressableButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPressableButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onPressButton
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::GorillaPressableButton::dyn_onPressButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_onPressButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPressButton"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<GorillaPressableButton,System.Boolean> onPressed
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::GorillaPressableButton*, bool>*& GlobalNamespace::GorillaPressableButton::dyn_onPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_onPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPressed"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::GorillaPressableButton*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPressableButton.add_onPressed
void GlobalNamespace::GorillaPressableButton::add_onPressed(::System::Action_2<::GlobalNamespace::GorillaPressableButton*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::add_onPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaPressableButton.remove_onPressed
void GlobalNamespace::GorillaPressableButton::remove_onPressed(::System::Action_2<::GlobalNamespace::GorillaPressableButton*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::remove_onPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaPressableButton.Start
void GlobalNamespace::GorillaPressableButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnEnable
void GlobalNamespace::GorillaPressableButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnDisable
void GlobalNamespace::GorillaPressableButton::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnTriggerEnter
void GlobalNamespace::GorillaPressableButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaPressableButton.UpdateColor
void GlobalNamespace::GorillaPressableButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::UpdateColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.ButtonActivation
void GlobalNamespace::GorillaPressableButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.ButtonActivationWithHand
void GlobalNamespace::GorillaPressableButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreboardSpawner
#include "GlobalNamespace/GorillaScoreboardSpawner.hpp"
// Including type: GorillaScoreboardSpawner/<UpdateBoard>d__14
#include "GlobalNamespace/GorillaScoreboardSpawner_-UpdateBoard-d__14.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreboardSpawner::dyn_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_gameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeMMR
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_includeMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_includeMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeMMR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject scoreboardPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_scoreboardPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_scoreboardPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreboardPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject notInRoomText
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_notInRoomText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_notInRoomText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notInRoomText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject controllingParentGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_controllingParentGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_controllingParentGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllingParentGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreBoard currentScoreboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreBoard*& GlobalNamespace::GorillaScoreboardSpawner::dyn_currentScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_currentScoreboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentScoreboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lastVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_lastVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_lastVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forOverlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_forOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_forOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardSpawner.Awake
void GlobalNamespace::GorillaScoreboardSpawner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.Start
void GlobalNamespace::GorillaScoreboardSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.IsCurrentScoreboard
bool GlobalNamespace::GorillaScoreboardSpawner::IsCurrentScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::IsCurrentScoreboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCurrentScoreboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.OnJoinedRoom
void GlobalNamespace::GorillaScoreboardSpawner::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::OnJoinedRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinedRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.IsVisible
bool GlobalNamespace::GorillaScoreboardSpawner::IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.UpdateBoard
::System::Collections::IEnumerator* GlobalNamespace::GorillaScoreboardSpawner::UpdateBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::UpdateBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.OnLeftRoom
void GlobalNamespace::GorillaScoreboardSpawner::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::OnLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.Cleanup
void GlobalNamespace::GorillaScoreboardSpawner::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaScoreboardSpawner/<UpdateBoard>d__14
#include "GlobalNamespace/GorillaScoreboardSpawner_-UpdateBoard-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreboardSpawner <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreboardSpawner*& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreboardSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__14.System.IDisposable.Dispose
void GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__14.MoveNext
bool GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__14*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreboardTotalUpdater
#include "GlobalNamespace/GorillaScoreboardTotalUpdater.hpp"
// Including type: GorillaScoreboardTotalUpdater/<>c
#include "GlobalNamespace/GorillaScoreboardTotalUpdater_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaScoreboardTotalUpdater instance
::GlobalNamespace::GorillaScoreboardTotalUpdater* GlobalNamespace::GorillaScoreboardTotalUpdater::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaScoreboardTotalUpdater*>("", "GorillaScoreboardTotalUpdater", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaScoreboardTotalUpdater instance
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_instance(::GlobalNamespace::GorillaScoreboardTotalUpdater* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::GorillaScoreboardTotalUpdater::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaScoreboardTotalUpdater", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> allScoreboardLines
::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* GlobalNamespace::GorillaScoreboardTotalUpdater::_get_allScoreboardLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_allScoreboardLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>*>("", "GorillaScoreboardTotalUpdater", "allScoreboardLines"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> allScoreboardLines
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_allScoreboardLines(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_allScoreboardLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "allScoreboardLines", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 lineIndex
int GlobalNamespace::GorillaScoreboardTotalUpdater::_get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_lineIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GorillaScoreboardTotalUpdater", "lineIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 lineIndex
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_lineIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "lineIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 linesPerFrame
int GlobalNamespace::GorillaScoreboardTotalUpdater::_get_linesPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_linesPerFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GorillaScoreboardTotalUpdater", "linesPerFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 linesPerFrame
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_linesPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_linesPerFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "linesPerFrame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaScoreBoard> allScoreboards
::System::Collections::Generic::List_1<::GlobalNamespace::GorillaScoreBoard*>* GlobalNamespace::GorillaScoreboardTotalUpdater::_get_allScoreboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_allScoreboards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaScoreBoard*>*>("", "GorillaScoreboardTotalUpdater", "allScoreboards"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaScoreBoard> allScoreboards
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_allScoreboards(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaScoreBoard*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_allScoreboards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "allScoreboards", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 boardIndex
int GlobalNamespace::GorillaScoreboardTotalUpdater::_get_boardIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_boardIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GorillaScoreboardTotalUpdater", "boardIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 boardIndex
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_boardIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_boardIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "boardIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 boardsPerFrame
int GlobalNamespace::GorillaScoreboardTotalUpdater::_get_boardsPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_boardsPerFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GorillaScoreboardTotalUpdater", "boardsPerFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 boardsPerFrame
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_boardsPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_boardsPerFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "boardsPerFrame", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single maxHD
float GlobalNamespace::GorillaScoreboardTotalUpdater::_get_maxHD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_get_maxHD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GorillaScoreboardTotalUpdater", "maxHD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single maxHD
void GlobalNamespace::GorillaScoreboardTotalUpdater::_set_maxHD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::_set_maxHD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater", "maxHD", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NetPlayer> playersInRoom
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::NetPlayer*>*& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_playersInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_playersInRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersInRoom"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::NetPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean joinedRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_joinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_joinedRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinedRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasGameManagerNull
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_wasGameManagerNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_wasGameManagerNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasGameManagerNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forOverlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_forOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_forOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offlineTextErrorString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_offlineTextErrorString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_offlineTextErrorString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineTextErrorString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,GorillaScoreboardTotalUpdater/PlayerReports> reportDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>*& GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_reportDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::dyn_reportDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.UpdateLineState
void GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateLineState(::GlobalNamespace::GorillaPlayerScoreboardLine* line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateLineState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.Awake
void GlobalNamespace::GorillaScoreboardTotalUpdater::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.Start
void GlobalNamespace::GorillaScoreboardTotalUpdater::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.CreateManager
void GlobalNamespace::GorillaScoreboardTotalUpdater::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.SetInstance
void GlobalNamespace::GorillaScoreboardTotalUpdater::SetInstance(::GlobalNamespace::GorillaScoreboardTotalUpdater* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.RegisterSL
void GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterSL(::GlobalNamespace::GorillaPlayerScoreboardLine* sL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterSL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "RegisterSL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sL)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sL);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.UnregisterSL
void GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterSL(::GlobalNamespace::GorillaPlayerScoreboardLine* sL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterSL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "UnregisterSL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sL)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sL);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.RegisterScoreboard
void GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterScoreboard(::GlobalNamespace::GorillaScoreBoard* sB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::RegisterScoreboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "RegisterScoreboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sB);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.UnregisterScoreboard
void GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterScoreboard(::GlobalNamespace::GorillaScoreBoard* sB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::UnregisterScoreboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", "UnregisterScoreboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sB);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.UpdateActiveScoreboards
void GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateActiveScoreboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateActiveScoreboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActiveScoreboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.SetOfflineFailureText
void GlobalNamespace::GorillaScoreboardTotalUpdater::SetOfflineFailureText(::StringW failureText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::SetOfflineFailureText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOfflineFailureText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failureText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failureText);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.ClearOfflineFailureText
void GlobalNamespace::GorillaScoreboardTotalUpdater::ClearOfflineFailureText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::ClearOfflineFailureText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOfflineFailureText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.UpdateScoreboard
void GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateScoreboard(::GlobalNamespace::GorillaScoreBoard* sB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::UpdateScoreboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScoreboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sB);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.Update
void GlobalNamespace::GorillaScoreboardTotalUpdater::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.OnPlayerEnteredRoom
void GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerEnteredRoom(int netPlayerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerEnteredRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerEnteredRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPlayerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netPlayerID);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.OnPlayerLeftRoom
void GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerLeftRoom(int netPlayerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::OnPlayerLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPlayerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netPlayerID);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.JoinedRoom
void GlobalNamespace::GorillaScoreboardTotalUpdater::JoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::JoinedRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinedRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater.OnLeftRoom
void GlobalNamespace::GorillaScoreboardTotalUpdater::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::OnLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater..cctor
void GlobalNamespace::GorillaScoreboardTotalUpdater::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreboardTotalUpdater/PlayerReports
#include "GlobalNamespace/GorillaScoreboardTotalUpdater.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cheating
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_cheating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_cheating");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cheating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean toxicity
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_toxicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_toxicity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toxicity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hateSpeech
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_hateSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_hateSpeech");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hateSpeech"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pressedReport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_pressedReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::dyn_pressedReport");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedReport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardTotalUpdater/PlayerReports..ctor
// ABORTED elsewhere.  GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::PlayerReports(::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports reportToUpdate, ::GlobalNamespace::GorillaPlayerScoreboardLine* lineToUpdate)
// Autogenerated method: GorillaScoreboardTotalUpdater/PlayerReports..ctor
GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::PlayerReports(::GlobalNamespace::GorillaPlayerScoreboardLine* lineToUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::PlayerReports::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineToUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineToUpdate);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreboardTotalUpdater/<>c
#include "GlobalNamespace/GorillaScoreboardTotalUpdater_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaScoreboardTotalUpdater/<>c <>9
::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c* GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c*>("", "GorillaScoreboardTotalUpdater/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaScoreboardTotalUpdater/<>c <>9
void GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_set_$$9(::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<NetPlayer> <>9__32_0
::System::Comparison_1<::GlobalNamespace::NetPlayer*>* GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_get_$$9__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_get_$$9__32_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::GlobalNamespace::NetPlayer*>*>("", "GorillaScoreboardTotalUpdater/<>c", "<>9__32_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<NetPlayer> <>9__32_0
void GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_set_$$9__32_0(::System::Comparison_1<::GlobalNamespace::NetPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_set_$$9__32_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreboardTotalUpdater/<>c", "<>9__32_0", value)));
}
// Autogenerated method: GorillaScoreboardTotalUpdater/<>c..cctor
void GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreboardTotalUpdater/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaScoreboardTotalUpdater/<>c.<JoinedRoom>b__32_0
int GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::$JoinedRoom$b__32_0(::GlobalNamespace::NetPlayer* x, ::GlobalNamespace::NetPlayer* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardTotalUpdater::$$c::<JoinedRoom>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<JoinedRoom>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaThrowableController
#include "GlobalNamespace/GorillaThrowableController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaThrowable
#include "GlobalNamespace/GorillaThrowable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandController
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowableController::dyn_leftHandController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandController"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandController
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowableController::dyn_rightHandController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandController"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHandIsGrabbing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_leftHandIsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandIsGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandIsGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightHandIsGrabbing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_rightHandIsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandIsGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandIsGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowable leftHandGrabbedObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowable*& GlobalNamespace::GorillaThrowableController::dyn_leftHandGrabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandGrabbedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandGrabbedObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowable rightHandGrabbedObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowable*& GlobalNamespace::GorillaThrowableController::dyn_rightHandGrabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandGrabbedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandGrabbedObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverVibrationStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverVibrationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverVibrationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverVibrationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_handRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_handRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice rightDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_rightDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice leftDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_leftDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice inputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_inputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single triggerValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_triggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_triggerValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean boolVar
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_boolVar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_boolVar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boolVar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::GorillaThrowableController::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider minCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaThrowableController::dyn_minCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_minCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider returnCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaThrowableController::dyn_returnCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_returnCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single magnitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_magnitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magnitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testCanGrab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_testCanGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_testCanGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testCanGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gorillaThrowableLayerMask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowableController::dyn_gorillaThrowableLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_gorillaThrowableLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaThrowableLayerMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowableController.Awake
void GlobalNamespace::GorillaThrowableController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowableController.LateUpdate
void GlobalNamespace::GorillaThrowableController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowableController.CheckIfHandHasReleased
bool GlobalNamespace::GorillaThrowableController::CheckIfHandHasReleased(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CheckIfHandHasReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfHandHasReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowableController.CheckIfHandHasGrabbed
bool GlobalNamespace::GorillaThrowableController::CheckIfHandHasGrabbed(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CheckIfHandHasGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfHandHasGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowableController.CanGrabAnObject
bool GlobalNamespace::GorillaThrowableController::CanGrabAnObject(::UnityEngine::Transform* handTransform, ByRef<::UnityEngine::Collider*> returnCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CanGrabAnObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanGrabAnObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handTransform, byref(returnCollider));
}
// Autogenerated method: GorillaThrowableController.GrabbableObjectHover
void GlobalNamespace::GorillaThrowableController::GrabbableObjectHover(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::GrabbableObjectHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabbableObjectHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTriggerColliderHandIndicator
#include "GlobalNamespace/GorillaTriggerColliderHandIndicator.hpp"
// Including type: GorillaThrowableController
#include "GlobalNamespace/GorillaThrowableController.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowableController throwableController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowableController*& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_throwableController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_throwableController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwableController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowableController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerColliderHandIndicator.Update
void GlobalNamespace::GorillaTriggerColliderHandIndicator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerColliderHandIndicator.OnTriggerEnter
void GlobalNamespace::GorillaTriggerColliderHandIndicator::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTurnSlider
#include "GlobalNamespace/GorillaTurnSlider.hpp"
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single zRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_zRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_zRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTurning gorillaTurn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTurning*& GlobalNamespace::GorillaTurnSlider::dyn_gorillaTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_gorillaTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaTurn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTurning**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_startingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_startingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTurnSlider::dyn_startingLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_startingLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurnSlider.Awake
void GlobalNamespace::GorillaTurnSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTurnSlider.FixedUpdate
void GlobalNamespace::GorillaTurnSlider::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTurnSlider.SetPosition
void GlobalNamespace::GorillaTurnSlider::SetPosition(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: GorillaTurnSlider.InterpolateValue
float GlobalNamespace::GorillaTurnSlider::InterpolateValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::InterpolateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTurnSlider.OnSliderRelease
void GlobalNamespace::GorillaTurnSlider::OnSliderRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::OnSliderRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSliderRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFabTitleDataTextDisplay
#include "GlobalNamespace/PlayFabTitleDataTextDisplay.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text textBox
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_textBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_textBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textBox"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color newUpdateColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_newUpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_newUpdateColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newUpdateColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color defaultTextColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_defaultTextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_defaultTextColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultTextColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String playfabKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_playfabKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_playfabKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playfabKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fallbackText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_fallbackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::dyn_fallbackText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFabTitleDataTextDisplay.Start
void GlobalNamespace::PlayFabTitleDataTextDisplay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFabTitleDataTextDisplay.OnPlayFabError
void GlobalNamespace::PlayFabTitleDataTextDisplay::OnPlayFabError(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::OnPlayFabError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayFabError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: PlayFabTitleDataTextDisplay.OnTitleDataRequestComplete
void GlobalNamespace::PlayFabTitleDataTextDisplay::OnTitleDataRequestComplete(::StringW titleDataResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::OnTitleDataRequestComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTitleDataRequestComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(titleDataResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, titleDataResult);
}
// Autogenerated method: PlayFabTitleDataTextDisplay.OnNewTitleDataAdded
void GlobalNamespace::PlayFabTitleDataTextDisplay::OnNewTitleDataAdded(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::OnNewTitleDataAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewTitleDataAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: PlayFabTitleDataTextDisplay.OnDestroy
void GlobalNamespace::PlayFabTitleDataTextDisplay::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabTitleDataTextDisplay::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaEnemyAI
#include "GlobalNamespace/GorillaEnemyAI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AI.NavMeshAgent
#include "UnityEngine/AI/NavMeshAgent.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaEnemyAI::dyn_playerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_playerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshAgent agent
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshAgent*& GlobalNamespace::GorillaEnemyAI::dyn_agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_agent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agent"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshAgent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody r
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaEnemyAI::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaEnemyAI::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaEnemyAI::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaEnemyAI::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaEnemyAI.Start
void GlobalNamespace::GorillaEnemyAI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaEnemyAI::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaEnemyAI.Update
void GlobalNamespace::GorillaEnemyAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.FindClosestPlayer
void GlobalNamespace::GorillaEnemyAI::FindClosestPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::FindClosestPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindClosestPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.OnCollisionEnter
void GlobalNamespace::GorillaEnemyAI::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaEnemySpawner
#include "GlobalNamespace/GorillaEnemySpawner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaFireball
#include "GlobalNamespace/GorillaFireball.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single maxExplosionScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_maxExplosionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_maxExplosionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxExplosionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single totalExplosionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_totalExplosionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_totalExplosionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalExplosionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gravityStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_gravityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_gravityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canExplode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFireball::dyn_canExplode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_canExplode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canExplode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single explosionStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_explosionStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_explosionStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "explosionStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFireball.Update
void GlobalNamespace::GorillaFireball::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.LocalExplode
void GlobalNamespace::GorillaFireball::LocalExplode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::LocalExplode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalExplode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.OnPhotonInstantiate
void GlobalNamespace::GorillaFireball::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFireball*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaFireball.Explode
void GlobalNamespace::GorillaFireball::Explode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Explode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Explode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.Start
void GlobalNamespace::GorillaFireball::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.LateUpdate
void GlobalNamespace::GorillaFireball::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.ThrowThisThingo
void GlobalNamespace::GorillaFireball::ThrowThisThingo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::ThrowThisThingo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.OnCollisionEnter
void GlobalNamespace::GorillaFireball::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaFireballControllerManager
#include "GlobalNamespace/GorillaFireballControllerManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaFireballControllerManager::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaFireballControllerManager::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFireballControllerManager::dyn_hasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_hasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftHandLastState
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_leftHandLastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_leftHandLastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandLastState"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightHandLastState
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_rightHandLastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_rightHandLastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandLastState"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwingThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_throwingThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_throwingThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwingThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFireballControllerManager.Update
void GlobalNamespace::GorillaFireballControllerManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireballControllerManager.TryThrowFireball
void GlobalNamespace::GorillaFireballControllerManager::TryThrowFireball(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::TryThrowFireball");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryThrowFireball", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated method: GorillaFireballControllerManager.CreateFireball
void GlobalNamespace::GorillaFireballControllerManager::CreateFireball(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::CreateFireball");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFireball", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaThrowable
#include "GlobalNamespace/GorillaThrowable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 trackingHistorySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_trackingHistorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_trackingHistorySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingHistorySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_throwMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_throwMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwMagnitudeLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_throwMagnitudeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_throwMagnitudeLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwMagnitudeLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] velocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_velocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_velocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] headsetVelocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_headsetVelocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetVelocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetVelocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_positionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_positionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] headsetPositionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_headsetPositionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetPositionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetPositionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] rotationHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_rotationHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rotationHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] rotationalVelocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_rotationalVelocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rotationalVelocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationalVelocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousHeadsetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousHeadsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousHeadsetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousHeadsetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentHeadsetVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentHeadsetVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentHeadsetVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHeadsetVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentRotationalVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentRotationalVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentRotationalVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRotationalVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 denormalizedVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 denormalizedHeadsetVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedHeadsetVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedHeadsetVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedHeadsetVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 denormalizedRotationalVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedRotationalVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedRotationalVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedRotationalVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaThrowable::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initialLerp
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_initialLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_initialLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialLerp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpDistanceLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_lerpDistanceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_lerpDistanceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpDistanceLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isHeld
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_isHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_isHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHeld"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaThrowable::dyn_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 loopIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_loopIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_loopIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion offsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaThrowable::dyn_offsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_offsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaThrowable::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timeLastReceived
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_timeLastReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_timeLastReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLastReceived"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean synchThrow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_synchThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_synchThrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchThrow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tempFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_tempFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_tempFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform grabbingTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_grabbingTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_grabbingTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbingTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pickupLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_pickupLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_pickupLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickupLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_minVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_minVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLinear
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_isLinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_isLinear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLinear"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single linearMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_linearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_linearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linearMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single exponThrowMultMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_exponThrowMultMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_exponThrowMultMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exponThrowMultMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bounceAudioClip
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_bounceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_bounceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounceAudioClip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowable.Start
void GlobalNamespace::GorillaThrowable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.LateUpdate
void GlobalNamespace::GorillaThrowable::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.IsHandPushing
void GlobalNamespace::GorillaThrowable::IsHandPushing(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::IsHandPushing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHandPushing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowable.StoreHistories
void GlobalNamespace::GorillaThrowable::StoreHistories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::StoreHistories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreHistories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.Grabbed
void GlobalNamespace::GorillaThrowable::Grabbed(::UnityEngine::Transform* grabTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Grabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabTransform);
}
// Autogenerated method: GorillaThrowable.ThrowThisThingo
void GlobalNamespace::GorillaThrowable::ThrowThisThingo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::ThrowThisThingo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaThrowable::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaThrowable.OnCollisionEnter
void GlobalNamespace::GorillaThrowable::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::OnCollisionEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: GorillaThrowable.PlaySurfaceHit
void GlobalNamespace::GorillaThrowable::PlaySurfaceHit(int soundIndex, float tapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::PlaySurfaceHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySurfaceHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(tapVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, tapVolume);
}
// Autogenerated method: GorillaThrowable.InterpolateVolume
float GlobalNamespace::GorillaThrowable::InterpolateVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::InterpolateVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaThrowingRock
#include "GlobalNamespace/GorillaThrowingRock.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single bonkSpeedMin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkSpeedMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bonkSpeedMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkSpeedMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig hitRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaThrowingRock::dyn_hitRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_hitRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowingRock.OnPhotonInstantiate
void GlobalNamespace::GorillaThrowingRock::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowingRock*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaThrowingRock.OnTriggerEnter
void GlobalNamespace::GorillaThrowingRock::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaThrowingRock.OnCollisionEnter
void GlobalNamespace::GorillaThrowingRock::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnCollisionEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SoundPostMuteButton
#include "GlobalNamespace/SoundPostMuteButton.hpp"
// Including type: SynchedMusicController
#include "GlobalNamespace/SynchedMusicController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SynchedMusicController[] musicControllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SynchedMusicController*>& GlobalNamespace::SoundPostMuteButton::dyn_musicControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundPostMuteButton::dyn_musicControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SynchedMusicController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoundPostMuteButton.ButtonActivation
void GlobalNamespace::SoundPostMuteButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundPostMuteButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnlockCompButton
#include "GlobalNamespace/UnlockCompButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UnlockCompButton::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UnlockCompButton::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnlockCompButton.Update
void GlobalNamespace::UnlockCompButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnlockCompButton.Start
void GlobalNamespace::UnlockCompButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnlockCompButton.ButtonActivation
void GlobalNamespace::UnlockCompButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VRRigJobManager
#include "GlobalNamespace/VRRigJobManager.hpp"
// Including type: VRRigJobManager/VRRigTransformJob
#include "GlobalNamespace/VRRigJobManager_VRRigTransformJob.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private VRRigJobManager _instance
::GlobalNamespace::VRRigJobManager* GlobalNamespace::VRRigJobManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRigJobManager*>("", "VRRigJobManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private VRRigJobManager _instance
void GlobalNamespace::VRRigJobManager::_set__instance(::GlobalNamespace::VRRigJobManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigJobManager", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSize
int GlobalNamespace::VRRigJobManager::_get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_get_MaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "VRRigJobManager", "MaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSize
void GlobalNamespace::VRRigJobManager::_set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_set_MaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigJobManager", "MaxSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 questJobThreads
int GlobalNamespace::VRRigJobManager::_get_questJobThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_get_questJobThreads");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "VRRigJobManager", "questJobThreads"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 questJobThreads
void GlobalNamespace::VRRigJobManager::_set_questJobThreads(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::_set_questJobThreads");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigJobManager", "questJobThreads", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRRig> rigList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::VRRigJobManager::dyn_rigList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::dyn_rigList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<VRRigJobManager/VRRigTransformInput> cachedInput
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::VRRigJobManager::VRRigTransformInput>& GlobalNamespace::VRRigJobManager::dyn_cachedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::dyn_cachedInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedInput"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::VRRigJobManager::VRRigTransformInput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Jobs.TransformAccessArray tAA
[[deprecated("Use field access instead!")]] ::UnityEngine::Jobs::TransformAccessArray& GlobalNamespace::VRRigJobManager::dyn_tAA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::dyn_tAA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tAA"))->offset;
  return *reinterpret_cast<::UnityEngine::Jobs::TransformAccessArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 actualListSz
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRigJobManager::dyn_actualListSz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::dyn_actualListSz");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualListSz"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Jobs.JobHandle jobHandle
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::VRRigJobManager::dyn_jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::dyn_jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobHandle"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRigJobManager.get_Instance
::GlobalNamespace::VRRigJobManager* GlobalNamespace::VRRigJobManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigJobManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRigJobManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VRRigJobManager.Awake
void GlobalNamespace::VRRigJobManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigJobManager.OnDestroy
void GlobalNamespace::VRRigJobManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigJobManager.RegisterVRRig
void GlobalNamespace::VRRigJobManager::RegisterVRRig(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::RegisterVRRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterVRRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: VRRigJobManager.DeregisterVRRig
void GlobalNamespace::VRRigJobManager::DeregisterVRRig(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::DeregisterVRRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterVRRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: VRRigJobManager.CopyInput
void GlobalNamespace::VRRigJobManager::CopyInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigJobManager.Update
void GlobalNamespace::VRRigJobManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VRRigJobManager/VRRigTransformJob
#include "GlobalNamespace/VRRigJobManager_VRRigTransformJob.hpp"
// Including type: UnityEngine.Jobs.TransformAccess
#include "UnityEngine/Jobs/TransformAccess.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<VRRigJobManager/VRRigTransformInput> input
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::VRRigJobManager::VRRigTransformInput>& GlobalNamespace::VRRigJobManager::VRRigTransformJob::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::VRRigTransformJob::dyn_input");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::VRRigJobManager::VRRigTransformInput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRigJobManager/VRRigTransformJob.Execute
void GlobalNamespace::VRRigJobManager::VRRigTransformJob::Execute(int i, ::UnityEngine::Jobs::TransformAccess tA) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigJobManager::VRRigTransformJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::VRRigJobManager::VRRigTransformJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, tA);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VRRigLookupTableGenerator
#include "GlobalNamespace/VRRigLookupTableGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRRigLookupTableGenerator.Start
void GlobalNamespace::VRRigLookupTableGenerator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigLookupTableGenerator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigLookupTableGenerator.Update
void GlobalNamespace::VRRigLookupTableGenerator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigLookupTableGenerator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WanderingGhost
#include "GlobalNamespace/WanderingGhost.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: ThrowableSetDressing
#include "GlobalNamespace/ThrowableSetDressing.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 maxColliders
int GlobalNamespace::WanderingGhost::_get_maxColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::_get_maxColliders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "WanderingGhost", "maxColliders"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxColliders
void GlobalNamespace::WanderingGhost::_set_maxColliders(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::_set_maxColliders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "WanderingGhost", "maxColliders", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single patrolSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_patrolSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_patrolSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single idleStayDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_idleStayDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_idleStayDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idleStayDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sphereColliderRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_sphereColliderRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_sphereColliderRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereColliderRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ThrowableSetDressing[] allFlowers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ThrowableSetDressing*>& GlobalNamespace::WanderingGhost::dyn_allFlowers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_allFlowers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allFlowers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ThrowableSetDressing*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 flowerDisabledPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::WanderingGhost::dyn_flowerDisabledPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_flowerDisabledPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowerDisabledPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single flowerSpawnRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_flowerSpawnRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_flowerSpawnRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowerSpawnRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single flowerSpawnDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_flowerSpawnDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_flowerSpawnDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowerSpawnDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask flowerGroundMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::WanderingGhost::dyn_flowerGroundMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_flowerGroundMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowerGroundMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer mrenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::WanderingGhost::dyn_mrenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_mrenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material visibleMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::WanderingGhost::dyn_visibleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_visibleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material scryableMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::WanderingGhost::dyn_scryableMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_scryableMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryableMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject waypointsContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::WanderingGhost::dyn_waypointsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_waypointsContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointsContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject[] waypointRegions
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ZoneBasedObject*>& GlobalNamespace::WanderingGhost::dyn_waypointRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_waypointRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointRegions"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ZoneBasedObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject lastWaypointRegion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ZoneBasedObject*& GlobalNamespace::WanderingGhost::dyn_lastWaypointRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_lastWaypointRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWaypointRegion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ZoneBasedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<WanderingGhost/Waypoint> waypoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::WanderingGhost::Waypoint>*& GlobalNamespace::WanderingGhost::dyn_waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_waypoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::WanderingGhost::Waypoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WanderingGhost/Waypoint currentWaypoint
[[deprecated("Use field access instead!")]] ::GlobalNamespace::WanderingGhost::Waypoint& GlobalNamespace::WanderingGhost::dyn_currentWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_currentWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypoint"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WanderingGhost::Waypoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String debugForceWaypointRegion
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::WanderingGhost::dyn_debugForceWaypointRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_debugForceWaypointRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugForceWaypointRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::WanderingGhost::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] appearAudio
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::WanderingGhost::dyn_appearAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_appearAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appearAudio"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single idleVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_idleVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_idleVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idleVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip patrolAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::WanderingGhost::dyn_patrolAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_patrolAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single patrolVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_patrolVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_patrolVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WanderingGhost/ghostState currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::WanderingGhost::ghostState& GlobalNamespace::WanderingGhost::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WanderingGhost::ghostState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single idlePassedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_idlePassedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_idlePassedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idlePassedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean idlSoundPlayed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::WanderingGhost::dyn_idlSoundPlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_idlSoundPlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idlSoundPlayed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`1<UnityEngine.GameObject> TriggerHauntedObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::UnityEngine::GameObject*>*& GlobalNamespace::WanderingGhost::dyn_TriggerHauntedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_TriggerHauntedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerHauntedObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 hoverVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::WanderingGhost::dyn_hoverVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_hoverVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverRectifyForce
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_hoverRectifyForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_hoverRectifyForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverRectifyForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverRandomForce
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_hoverRandomForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_hoverRandomForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverRandomForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverDrag
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WanderingGhost::dyn_hoverDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_hoverDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverDrag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] hitColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::WanderingGhost::dyn_hitColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::dyn_hitColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WanderingGhost.Start
void GlobalNamespace::WanderingGhost::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.DelayedStart
void GlobalNamespace::WanderingGhost::DelayedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::DelayedStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.LateUpdate
void GlobalNamespace::WanderingGhost::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.PickNextWaypoint
void GlobalNamespace::WanderingGhost::PickNextWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::PickNextWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickNextWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.Patrol
void GlobalNamespace::WanderingGhost::Patrol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Patrol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Patrol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.MaybeHideGhost
bool GlobalNamespace::WanderingGhost::MaybeHideGhost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::MaybeHideGhost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaybeHideGhost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.ChangeState
void GlobalNamespace::WanderingGhost::ChangeState(::GlobalNamespace::WanderingGhost::ghostState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ChangeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: WanderingGhost.UpdateState
void GlobalNamespace::WanderingGhost::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.HauntObjects
void GlobalNamespace::WanderingGhost::HauntObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::HauntObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HauntObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WanderingGhost.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::WanderingGhost::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WanderingGhost*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: WanderingGhost.Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange
void GlobalNamespace::WanderingGhost::Photon_Pun_IOnPhotonViewOwnerChange_OnOwnerChange(::Photon::Realtime::Player* newOwner, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WanderingGhost*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner, previousOwner);
}
// Autogenerated method: WanderingGhost.SpawnFlowerNearby
void GlobalNamespace::WanderingGhost::SpawnFlowerNearby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::SpawnFlowerNearby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnFlowerNearby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WanderingGhost/Waypoint
#include "GlobalNamespace/WanderingGhost.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _visible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::WanderingGhost::Waypoint::dyn__visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Waypoint::dyn__visible");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::WanderingGhost::Waypoint::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::Waypoint::dyn__transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WanderingGhost/Waypoint..ctor
// ABORTED elsewhere.  GlobalNamespace::WanderingGhost::Waypoint::Waypoint(bool visible, ::UnityEngine::Transform* tr)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WanderingGhost/ghostState
#include "GlobalNamespace/WanderingGhost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WanderingGhost/ghostState patrol
::GlobalNamespace::WanderingGhost::ghostState GlobalNamespace::WanderingGhost::ghostState::_get_patrol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ghostState::_get_patrol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::WanderingGhost::ghostState>("", "WanderingGhost/ghostState", "patrol"));
}
// Autogenerated static field setter
// Set static field: static public WanderingGhost/ghostState patrol
void GlobalNamespace::WanderingGhost::ghostState::_set_patrol(::GlobalNamespace::WanderingGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ghostState::_set_patrol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "WanderingGhost/ghostState", "patrol", value));
}
// Autogenerated static field getter
// Get static field: static public WanderingGhost/ghostState idle
::GlobalNamespace::WanderingGhost::ghostState GlobalNamespace::WanderingGhost::ghostState::_get_idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ghostState::_get_idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::WanderingGhost::ghostState>("", "WanderingGhost/ghostState", "idle"));
}
// Autogenerated static field setter
// Set static field: static public WanderingGhost/ghostState idle
void GlobalNamespace::WanderingGhost::ghostState::_set_idle(::GlobalNamespace::WanderingGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ghostState::_set_idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "WanderingGhost/ghostState", "idle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::WanderingGhost::ghostState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WanderingGhost::ghostState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GTZone[] zones
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GTZone>& GlobalNamespace::ZoneBasedObject::dyn_zones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ZoneBasedObject::dyn_zones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zones"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GTZone>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ZoneBasedObject.IsLocalPlayerInZone
bool GlobalNamespace::ZoneBasedObject::IsLocalPlayerInZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ZoneBasedObject::IsLocalPlayerInZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalPlayerInZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ZoneBasedObject.SelectRandomEligible
::GlobalNamespace::ZoneBasedObject* GlobalNamespace::ZoneBasedObject::SelectRandomEligible(::ArrayW<::GlobalNamespace::ZoneBasedObject*> objects, ::StringW overrideChoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ZoneBasedObject::SelectRandomEligible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ZoneBasedObject", "SelectRandomEligible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objects), ::il2cpp_utils::ExtractType(overrideChoice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ZoneBasedObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objects, overrideChoice);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HalloweenWatcherEyes
#include "GlobalNamespace/HalloweenWatcherEyes.hpp"
// Including type: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13
#include "GlobalNamespace/HalloweenWatcherEyes_-CheckIfNearPlayer-d__13.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single timeBetweenUpdates
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_timeBetweenUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_timeBetweenUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeBetweenUpdates"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single watchRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_watchRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_watchRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single watchMaxAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_watchMaxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_watchMaxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchMaxAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_lerpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_lerpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playersViewCenterAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_playersViewCenterAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_playersViewCenterAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersViewCenterAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single durationToBeNormalWhenPlayerLooks
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_durationToBeNormalWhenPlayerLooks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_durationToBeNormalWhenPlayerLooks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "durationToBeNormalWhenPlayerLooks"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftEye
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HalloweenWatcherEyes::dyn_leftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_leftEye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEye"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightEye
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HalloweenWatcherEyes::dyn_rightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_rightEye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEye"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playersViewCenterCosAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_playersViewCenterCosAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_playersViewCenterCosAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersViewCenterCosAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single watchMinCosAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_watchMinCosAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_watchMinCosAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchMinCosAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single pretendingToBeNormalUntilTimestamp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_pretendingToBeNormalUntilTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_pretendingToBeNormalUntilTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pretendingToBeNormalUntilTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HalloweenWatcherEyes.Start
void GlobalNamespace::HalloweenWatcherEyes::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes.CheckIfNearPlayer
::System::Collections::IEnumerator* GlobalNamespace::HalloweenWatcherEyes::CheckIfNearPlayer(float initialSleep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::CheckIfNearPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfNearPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialSleep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, initialSleep);
}
// Autogenerated method: HalloweenWatcherEyes.Update
void GlobalNamespace::HalloweenWatcherEyes::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes.LookNormal
void GlobalNamespace::HalloweenWatcherEyes::LookNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::LookNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13
#include "GlobalNamespace/HalloweenWatcherEyes_-CheckIfNearPlayer-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single initialSleep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_initialSleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_initialSleep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialSleep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HalloweenWatcherEyes <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HalloweenWatcherEyes*& GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HalloweenWatcherEyes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13.System.IDisposable.Dispose
void GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13.MoveNext
bool GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenWatcherEyes/<CheckIfNearPlayer>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenWatcherEyes::$CheckIfNearPlayer$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
