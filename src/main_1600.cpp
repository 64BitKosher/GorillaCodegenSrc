// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.WinnerScoreboard
#include "GorillaTagScripts/ObstacleCourse/WinnerScoreboard.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String raceStarted
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_raceStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_raceStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raceStarted"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String raceLoading
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_raceLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_raceLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raceLoading"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro output
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::WinnerScoreboard::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.WinnerScoreboard.UpdateBoard
void GorillaTagScripts::ObstacleCourse::WinnerScoreboard::UpdateBoard(::StringW winner, ::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState _currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::WinnerScoreboard::UpdateBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(winner), ::il2cpp_utils::ExtractType(_currentState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, winner, _currentState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ISnapTurnOverride
#include "GlobalNamespace/ISnapTurnOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_get_m_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_get_m_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", "m_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_set_m_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_set_m_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", "m_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes m_TurnUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DebounceTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DebounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DebounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentTurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_CurrentTurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_CurrentTurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeStarted
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TimeStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TimeStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AxisReset
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_AxisReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_AxisReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single turnSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<ISnapTurnOverride> turningOverriders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::ISnapTurnOverride*>*& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turningOverriders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turningOverriders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turningOverriders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::ISnapTurnOverride*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Boolean> m_ControllersWereActive
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_ControllersWereActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_ControllersWereActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllersWereActive"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_turnUsage
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_turnUsage
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnUsage(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_controllers
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_turnAmount
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_turnAmount
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_debounceTime
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_debounceTime
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_debounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_deadZone
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_deadZone
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_deadZone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.Update
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.EnsureControllerDataListSize
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::EnsureControllerDataListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::EnsureControllerDataListSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureControllerDataListSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.FakeStartTurn
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::FakeStartTurn(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::FakeStartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeStartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.StartTurn
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::StartTurn(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::StartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.ChangeTurnMode
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ChangeTurnMode(::StringW turnMode, int turnSpeedFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ChangeTurnMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTurnMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turnMode), ::il2cpp_utils::ExtractType(turnSpeedFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnMode, turnSpeedFactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.ConvertedTurnFactor
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ConvertedTurnFactor(float newTurnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ConvertedTurnFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertedTurnFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTurnSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, newTurnSpeed);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.SetTurningOverride
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::SetTurningOverride(::GlobalNamespace::ISnapTurnOverride* caller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::SetTurningOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTurningOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, caller);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.UnsetTurningOverride
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::UnsetTurningOverride(::GlobalNamespace::ISnapTurnOverride* caller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::UnsetTurningOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetTurningOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, caller);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.ValidateTurningOverriders
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ValidateTurningOverriders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ValidateTurningOverriders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTurningOverriders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn..cctor
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FXP.CosmeticItemPrefab
#include "FXP/CosmeticItemPrefab.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78
#include "FXP/CosmeticItemPrefab_-DoAttractTimer-d__78.hpp"
// Including type: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75
#include "FXP/CosmeticItemPrefab_-DoPreviewTimer-d__75.hpp"
// Including type: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69
#include "FXP/CosmeticItemPrefab_-PlayCountdownTimer-d__69.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: GorillaNetworking.Store.StoreUpdateEvent
#include "GorillaNetworking/Store/StoreUpdateEvent.hpp"
// Including type: CosmeticStand
#include "GlobalNamespace/CosmeticStand.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String PedestalID
[[deprecated("Use field access instead!")]] ::StringW& FXP::CosmeticItemPrefab::dyn_PedestalID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_PedestalID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PedestalID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Guid> itemGUID
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Guid>& FXP::CosmeticItemPrefab::dyn_itemGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_itemGUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemGUID"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Guid>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String itemName
[[deprecated("Use field access instead!")]] ::StringW& FXP::CosmeticItemPrefab::dyn_itemName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_itemName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> sockets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& FXP::CosmeticItemPrefab::dyn_sockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_sockets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sockets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 itemSocket
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::dyn_itemSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_itemSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemSocket"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> hoursInPreviewMode
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& FXP::CosmeticItemPrefab::dyn_hoursInPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_hoursInPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoursInPreviewMode"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> hoursInAttractMode
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& FXP::CosmeticItemPrefab::dyn_hoursInAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_hoursInAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoursInAttractMode"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh pedestalMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_pedestalMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_pedestalMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pedestalMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh mannequinMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_mannequinMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_mannequinMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mannequinMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh cosmeticMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_cosmeticMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_cosmeticMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip sfxPreviewMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_sfxPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_sfxPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sfxPreviewMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip sfxAttractMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_sfxAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_sfxAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sfxAttractMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip sfxPurchaseMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_sfxPurchaseMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_sfxPurchaseMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sfxPurchaseMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem vfxPreviewMode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& FXP::CosmeticItemPrefab::dyn_vfxPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_vfxPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vfxPreviewMode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem vfxAttractMode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& FXP::CosmeticItemPrefab::dyn_vfxAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_vfxAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vfxAttractMode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem vfxPurchaseMode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& FXP::CosmeticItemPrefab::dyn_vfxPurchaseMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_vfxPurchaseMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vfxPurchaseMode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goPedestal
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goPedestal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPedestal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPedestal"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goMannequin
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goMannequin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goMannequin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goMannequin"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goCosmeticItem
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goCosmeticItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goCosmeticItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goCosmeticItem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goCosmeticItemGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goCosmeticItemGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goCosmeticItemGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goCosmeticItemGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goCosmeticItemNameplate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goCosmeticItemNameplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goCosmeticItemNameplate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goCosmeticItemNameplate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goClock
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goClock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goClock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goClock"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goPreviewMode
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPreviewMode"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goAttractMode
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goAttractMode"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goPurchaseMode
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goPurchaseMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPurchaseMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPurchaseMode"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh defaultPedestalMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_defaultPedestalMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultPedestalMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPedestalMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material defaultPedestalMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& FXP::CosmeticItemPrefab::dyn_defaultPedestalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultPedestalMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPedestalMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh defaultMannequinMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_defaultMannequinMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultMannequinMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMannequinMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material defaultMannequinMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& FXP::CosmeticItemPrefab::dyn_defaultMannequinMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultMannequinMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMannequinMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh defaultCosmeticMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& FXP::CosmeticItemPrefab::dyn_defaultCosmeticMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultCosmeticMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultCosmeticMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material defaultCosmeticMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& FXP::CosmeticItemPrefab::dyn_defaultCosmeticMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultCosmeticMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultCosmeticMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String defaultItemText
[[deprecated("Use field access instead!")]] ::StringW& FXP::CosmeticItemPrefab::dyn_defaultItemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultItemText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultItemText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultHoursInPreviewMode
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::dyn_defaultHoursInPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultHoursInPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultHoursInPreviewMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultHoursInAttractMode
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::dyn_defaultHoursInAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultHoursInAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultHoursInAttractMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip defaultSFXPreviewMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_defaultSFXPreviewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultSFXPreviewMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSFXPreviewMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip defaultSFXAttractMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_defaultSFXAttractMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultSFXAttractMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSFXAttractMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip defaultSFXPurchaseMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& FXP::CosmeticItemPrefab::dyn_defaultSFXPurchaseMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_defaultSFXPurchaseMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSFXPurchaseMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject goCosmeticItemMeshAtlas
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& FXP::CosmeticItemPrefab::dyn_goCosmeticItemMeshAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goCosmeticItemMeshAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goCosmeticItemMeshAtlas"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource CountdownSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& FXP::CosmeticItemPrefab::dyn_CountdownSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_CountdownSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CountdownSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FXP.CosmeticItemPrefab/EDisplayMode currentDisplayMode
[[deprecated("Use field access instead!")]] ::FXP::CosmeticItemPrefab::EDisplayMode& FXP::CosmeticItemPrefab::dyn_currentDisplayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_currentDisplayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDisplayMode"))->offset;
  return *reinterpret_cast<::FXP::CosmeticItemPrefab::EDisplayMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isValid
[[deprecated("Use field access instead!")]] bool& FXP::CosmeticItemPrefab::dyn_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_isValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource goPreviewModeSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& FXP::CosmeticItemPrefab::dyn_goPreviewModeSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPreviewModeSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPreviewModeSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource goAttractModeSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& FXP::CosmeticItemPrefab::dyn_goAttractModeSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goAttractModeSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goAttractModeSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource goPurchaseModeSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& FXP::CosmeticItemPrefab::dyn_goPurchaseModeSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPurchaseModeSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPurchaseModeSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem goAttractModeVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& FXP::CosmeticItemPrefab::dyn_goAttractModeVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goAttractModeVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goAttractModeVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem goPurchaseModeVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& FXP::CosmeticItemPrefab::dyn_goPurchaseModeVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_goPurchaseModeVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goPurchaseModeVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator coroutinePreviewTimer
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& FXP::CosmeticItemPrefab::dyn_coroutinePreviewTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_coroutinePreviewTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutinePreviewTimer"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator coroutineAttractTimer
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& FXP::CosmeticItemPrefab::dyn_coroutineAttractTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_coroutineAttractTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineAttractTimer"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime startTime
[[deprecated("Use field access instead!")]] ::System::DateTime& FXP::CosmeticItemPrefab::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextMesh clockTextMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& FXP::CosmeticItemPrefab::dyn_clockTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_clockTextMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockTextMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaNetworking.Store.StoreUpdateEvent currentUpdateEvent
[[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreUpdateEvent*& FXP::CosmeticItemPrefab::dyn_currentUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_currentUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentUpdateEvent"))->offset;
  return *reinterpret_cast<::GorillaNetworking::Store::StoreUpdateEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CosmeticStand cosmeticStand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CosmeticStand*& FXP::CosmeticItemPrefab::dyn_cosmeticStand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_cosmeticStand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticStand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CosmeticStand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String itemID
[[deprecated("Use field access instead!")]] ::StringW& FXP::CosmeticItemPrefab::dyn_itemID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_itemID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String oldItemID
[[deprecated("Use field access instead!")]] ::StringW& FXP::CosmeticItemPrefab::dyn_oldItemID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_oldItemID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldItemID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine countdownTimerCoRoutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& FXP::CosmeticItemPrefab::dyn_countdownTimerCoRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::dyn_countdownTimerCoRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownTimerCoRoutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FXP.CosmeticItemPrefab.Awake
void FXP::CosmeticItemPrefab::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.JonsAwakeCode
void FXP::CosmeticItemPrefab::JonsAwakeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::JonsAwakeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JonsAwakeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.OnDisable
void FXP::CosmeticItemPrefab::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.OnEnable
void FXP::CosmeticItemPrefab::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SwitchDisplayMode
void FXP::CosmeticItemPrefab::SwitchDisplayMode(::FXP::CosmeticItemPrefab::EDisplayMode NewDisplayMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SwitchDisplayMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchDisplayMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(NewDisplayMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, NewDisplayMode);
}
// Autogenerated method: FXP.CosmeticItemPrefab.Update
void FXP::CosmeticItemPrefab::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.UpdateClock
void FXP::CosmeticItemPrefab::UpdateClock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::UpdateClock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SetDefaultProperties
void FXP::CosmeticItemPrefab::SetDefaultProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SetDefaultProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.ClearCosmeticMesh
void FXP::CosmeticItemPrefab::ClearCosmeticMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::ClearCosmeticMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCosmeticMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.ClearCosmeticAtlas
void FXP::CosmeticItemPrefab::ClearCosmeticAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::ClearCosmeticAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCosmeticAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SetCosmeticItemFromCosmeticController
void FXP::CosmeticItemPrefab::SetCosmeticItemFromCosmeticController(::GorillaNetworking::CosmeticsController::CosmeticItem item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SetCosmeticItemFromCosmeticController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticItemFromCosmeticController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SetCosmeticStand
void FXP::CosmeticItemPrefab::SetCosmeticStand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SetCosmeticStand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticStand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SetStoreUpdateEvent
void FXP::CosmeticItemPrefab::SetStoreUpdateEvent(::GorillaNetworking::Store::StoreUpdateEvent* storeUpdateEvent, bool playFX) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SetStoreUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStoreUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storeUpdateEvent), ::il2cpp_utils::ExtractType(playFX)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, storeUpdateEvent, playFX);
}
// Autogenerated method: FXP.CosmeticItemPrefab.PlayCountdownTimer
::System::Collections::IEnumerator* FXP::CosmeticItemPrefab::PlayCountdownTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::PlayCountdownTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayCountdownTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.StopCountdownCoroutine
void FXP::CosmeticItemPrefab::StopCountdownCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::StopCountdownCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdownCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.PlaySFX
void FXP::CosmeticItemPrefab::PlaySFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::PlaySFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.SetCosmeticItemProperties
void FXP::CosmeticItemPrefab::SetCosmeticItemProperties(::StringW WhichGUID, ::StringW Name, ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* SocketsList, int Socket, ::StringW PedestalMesh, ::StringW MannequinMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::SetCosmeticItemProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticItemProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(WhichGUID), ::il2cpp_utils::ExtractType(Name), ::il2cpp_utils::ExtractType(SocketsList), ::il2cpp_utils::ExtractType(Socket), ::il2cpp_utils::ExtractType(PedestalMesh), ::il2cpp_utils::ExtractType(MannequinMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, WhichGUID, Name, SocketsList, Socket, PedestalMesh, MannequinMesh);
}
// Autogenerated method: FXP.CosmeticItemPrefab.StartPreviewTimer
void FXP::CosmeticItemPrefab::StartPreviewTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::StartPreviewTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPreviewTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.StopPreviewTimer
void FXP::CosmeticItemPrefab::StopPreviewTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::StopPreviewTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPreviewTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.DoPreviewTimer
::System::Collections::IEnumerator* FXP::CosmeticItemPrefab::DoPreviewTimer(::System::DateTime ReleaseTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::DoPreviewTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoPreviewTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ReleaseTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, ReleaseTime);
}
// Autogenerated method: FXP.CosmeticItemPrefab.StartAttractTimer
void FXP::CosmeticItemPrefab::StartAttractTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::StartAttractTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAttractTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.StopAttractTimer
void FXP::CosmeticItemPrefab::StopAttractTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::StopAttractTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAttractTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab.DoAttractTimer
::System::Collections::IEnumerator* FXP::CosmeticItemPrefab::DoAttractTimer(::System::DateTime ReleaseTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::DoAttractTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAttractTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ReleaseTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, ReleaseTime);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FXP.CosmeticItemPrefab/EDisplayMode
#include "FXP/CosmeticItemPrefab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode NULL
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "NULL"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode NULL
void FXP::CosmeticItemPrefab::EDisplayMode::_set_NULL(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "NULL", value));
}
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode HIDDEN
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_HIDDEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_HIDDEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "HIDDEN"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode HIDDEN
void FXP::CosmeticItemPrefab::EDisplayMode::_set_HIDDEN(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_HIDDEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "HIDDEN", value));
}
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode PREVIEW
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_PREVIEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_PREVIEW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "PREVIEW"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode PREVIEW
void FXP::CosmeticItemPrefab::EDisplayMode::_set_PREVIEW(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_PREVIEW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "PREVIEW", value));
}
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode ATTRACT
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_ATTRACT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_ATTRACT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "ATTRACT"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode ATTRACT
void FXP::CosmeticItemPrefab::EDisplayMode::_set_ATTRACT(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_ATTRACT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "ATTRACT", value));
}
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode PURCHASE
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_PURCHASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_PURCHASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "PURCHASE"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode PURCHASE
void FXP::CosmeticItemPrefab::EDisplayMode::_set_PURCHASE(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_PURCHASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "PURCHASE", value));
}
// Autogenerated static field getter
// Get static field: static public FXP.CosmeticItemPrefab/EDisplayMode POSTPURCHASE
::FXP::CosmeticItemPrefab::EDisplayMode FXP::CosmeticItemPrefab::EDisplayMode::_get_POSTPURCHASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_get_POSTPURCHASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FXP::CosmeticItemPrefab::EDisplayMode>("FXP", "CosmeticItemPrefab/EDisplayMode", "POSTPURCHASE"));
}
// Autogenerated static field setter
// Set static field: static public FXP.CosmeticItemPrefab/EDisplayMode POSTPURCHASE
void FXP::CosmeticItemPrefab::EDisplayMode::_set_POSTPURCHASE(::FXP::CosmeticItemPrefab::EDisplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::_set_POSTPURCHASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FXP", "CosmeticItemPrefab/EDisplayMode", "POSTPURCHASE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::EDisplayMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::EDisplayMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78
#include "FXP/CosmeticItemPrefab_-DoAttractTimer-d__78.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FXP.CosmeticItemPrefab <>4__this
[[deprecated("Use field access instead!")]] ::FXP::CosmeticItemPrefab*& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::FXP::CosmeticItemPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime ReleaseTime
[[deprecated("Use field access instead!")]] ::System::DateTime& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_ReleaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_ReleaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReleaseTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <timerDone>5__2
[[deprecated("Use field access instead!")]] bool& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$timerDone$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$timerDone$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timerDone>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan <remainingTime>5__3
[[deprecated("Use field access instead!")]] ::System::TimeSpan& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$remainingTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$remainingTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<remainingTime>5__3"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <delayTime>5__4
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$delayTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::dyn_$delayTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<delayTime>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78.System.IDisposable.Dispose
void FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78.MoveNext
bool FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78.System.Collections.IEnumerator.Reset
void FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoAttractTimer>d__78.System.Collections.IEnumerator.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoAttractTimer$d__78*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75
#include "FXP/CosmeticItemPrefab_-DoPreviewTimer-d__75.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FXP.CosmeticItemPrefab <>4__this
[[deprecated("Use field access instead!")]] ::FXP::CosmeticItemPrefab*& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::FXP::CosmeticItemPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime ReleaseTime
[[deprecated("Use field access instead!")]] ::System::DateTime& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_ReleaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_ReleaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReleaseTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <timerDone>5__2
[[deprecated("Use field access instead!")]] bool& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$timerDone$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$timerDone$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timerDone>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan <remainingTime>5__3
[[deprecated("Use field access instead!")]] ::System::TimeSpan& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$remainingTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$remainingTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<remainingTime>5__3"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <delayTime>5__4
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$delayTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::dyn_$delayTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<delayTime>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75.System.IDisposable.Dispose
void FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75.MoveNext
bool FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75.System.Collections.IEnumerator.Reset
void FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<DoPreviewTimer>d__75.System.Collections.IEnumerator.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$DoPreviewTimer$d__75*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69
#include "FXP/CosmeticItemPrefab_-PlayCountdownTimer-d__69.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FXP.CosmeticItemPrefab <>4__this
[[deprecated("Use field access instead!")]] ::FXP::CosmeticItemPrefab*& FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::FXP::CosmeticItemPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69.System.IDisposable.Dispose
void FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69.MoveNext
bool FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69.System.Collections.IEnumerator.Reset
void FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FXP.CosmeticItemPrefab/<PlayCountdownTimer>d__69.System.Collections.IEnumerator.get_Current
::Il2CppObject* FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FXP::CosmeticItemPrefab::$PlayCountdownTimer$d__69*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.AssetDatabase
#include "BuildSafe/AssetDatabase.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.AssetDatabase.SaveToDisk
void BuildSafe::AssetDatabase::SaveToDisk(::ArrayW<::UnityEngine::Object*> assetsToSave) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::AssetDatabase::SaveToDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "AssetDatabase", "SaveToDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetsToSave)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetsToSave);
}
// Autogenerated method: BuildSafe.AssetDatabase.SaveAssetsToDisk
void BuildSafe::AssetDatabase::SaveAssetsToDisk(::ArrayW<::UnityEngine::Object*> assetsToSave, bool saveProject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::AssetDatabase::SaveAssetsToDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "AssetDatabase", "SaveAssetsToDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetsToSave), ::il2cpp_utils::ExtractType(saveProject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetsToSave, saveProject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.Callbacks/DidReloadScripts
#include "BuildSafe/Callbacks_DidReloadScripts.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean activeOnly
[[deprecated("Use field access instead!")]] bool& BuildSafe::Callbacks::DidReloadScripts::dyn_activeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Callbacks::DidReloadScripts::dyn_activeOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.EditorApplication
#include "BuildSafe/EditorApplication.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.EditorApplication.add_hierarchyChanged
void BuildSafe::EditorApplication::add_hierarchyChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::add_hierarchyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "add_hierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.EditorApplication.remove_hierarchyChanged
void BuildSafe::EditorApplication::remove_hierarchyChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::remove_hierarchyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "remove_hierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.EditorApplication.add_update
void BuildSafe::EditorApplication::add_update(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::add_update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "add_update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.EditorApplication.remove_update
void BuildSafe::EditorApplication::remove_update(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::remove_update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "remove_update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.EditorApplication.add_delayCall
void BuildSafe::EditorApplication::add_delayCall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::add_delayCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "add_delayCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.EditorApplication.remove_delayCall
void BuildSafe::EditorApplication::remove_delayCall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorApplication::remove_delayCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorApplication", "remove_delayCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.EditorGUIUtility
#include "BuildSafe/EditorGUIUtility.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.EditorGUIUtility.PingObject
void BuildSafe::EditorGUIUtility::PingObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorGUIUtility::PingObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorGUIUtility", "PingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.EditorOnlyScriptAttribute
#include "BuildSafe/EditorOnlyScriptAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.EditorOnlyScripts
#include "BuildSafe/EditorOnlyScripts.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.EditorOnlyScripts.Cleanup
void BuildSafe::EditorOnlyScripts::Cleanup(::ArrayW<::UnityEngine::GameObject*> rootObjects, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::EditorOnlyScripts::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "EditorOnlyScripts", "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootObjects), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rootObjects, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.ObjectFactory
#include "BuildSafe/ObjectFactory.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.ObjectFactory.add_componentWasAdded
void BuildSafe::ObjectFactory::add_componentWasAdded(::System::Action_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::ObjectFactory::add_componentWasAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "ObjectFactory", "add_componentWasAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.ObjectFactory.remove_componentWasAdded
void BuildSafe::ObjectFactory::remove_componentWasAdded(::System::Action_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::ObjectFactory::remove_componentWasAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "ObjectFactory", "remove_componentWasAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.Reflection
#include "BuildSafe/Reflection.hpp"
// Including type: BuildSafe.Reflection/<>c
#include "BuildSafe/Reflection_--c.hpp"
// Including type: BuildSafe.Reflection/<>c__9`1
#include "BuildSafe/Reflection_--c__9_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Reflection.Assembly[] gAssemblyCache
::ArrayW<::System::Reflection::Assembly*> BuildSafe::Reflection::_get_gAssemblyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::_get_gAssemblyCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::Assembly*>>("BuildSafe", "Reflection", "gAssemblyCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Assembly[] gAssemblyCache
void BuildSafe::Reflection::_set_gAssemblyCache(::ArrayW<::System::Reflection::Assembly*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::_set_gAssemblyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "Reflection", "gAssemblyCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] gTypeCache
::ArrayW<::System::Type*> BuildSafe::Reflection::_get_gTypeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::_get_gTypeCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("BuildSafe", "Reflection", "gTypeCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] gTypeCache
void BuildSafe::Reflection::_set_gTypeCache(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::_set_gTypeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "Reflection", "gTypeCache", value));
}
// Autogenerated method: BuildSafe.Reflection.get_AllAssemblies
::ArrayW<::System::Reflection::Assembly*> BuildSafe::Reflection::get_AllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::get_AllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection", "get_AllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::Assembly*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BuildSafe.Reflection.get_AllTypes
::ArrayW<::System::Type*> BuildSafe::Reflection::get_AllTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::get_AllTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection", "get_AllTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BuildSafe.Reflection..cctor
void BuildSafe::Reflection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BuildSafe.Reflection.PreFetchAllAssemblies
::ArrayW<::System::Reflection::Assembly*> BuildSafe::Reflection::PreFetchAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::PreFetchAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection", "PreFetchAllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::Assembly*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BuildSafe.Reflection.PreFetchAllTypes
::ArrayW<::System::Type*> BuildSafe::Reflection::PreFetchAllTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::PreFetchAllTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection", "PreFetchAllTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.Reflection/<>c
#include "BuildSafe/Reflection_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BuildSafe.Reflection/<>c <>9
::BuildSafe::Reflection::$$c* BuildSafe::Reflection::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::BuildSafe::Reflection::$$c*>("BuildSafe", "Reflection/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BuildSafe.Reflection/<>c <>9
void BuildSafe::Reflection::$$c::_set_$$9(::BuildSafe::Reflection::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BuildSafe", "Reflection/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__7_0
::System::Func_2<::System::Reflection::Assembly*, bool>* BuildSafe::Reflection::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::Assembly*, bool>*>("BuildSafe", "Reflection/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__7_0
void BuildSafe::Reflection::$$c::_set_$$9__7_0(::System::Func_2<::System::Reflection::Assembly*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BuildSafe", "Reflection/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<System.Type>> <>9__8_0
::System::Func_2<::System::Reflection::Assembly*, ::System::Collections::Generic::IEnumerable_1<::System::Type*>*>* BuildSafe::Reflection::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::Assembly*, ::System::Collections::Generic::IEnumerable_1<::System::Type*>*>*>("BuildSafe", "Reflection/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<System.Type>> <>9__8_0
void BuildSafe::Reflection::$$c::_set_$$9__8_0(::System::Func_2<::System::Reflection::Assembly*, ::System::Collections::Generic::IEnumerable_1<::System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BuildSafe", "Reflection/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__8_1
::System::Func_2<::System::Type*, bool>* BuildSafe::Reflection::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("BuildSafe", "Reflection/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__8_1
void BuildSafe::Reflection::$$c::_set_$$9__8_1(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BuildSafe", "Reflection/<>c", "<>9__8_1", value)));
}
// Autogenerated method: BuildSafe.Reflection/<>c..cctor
void BuildSafe::Reflection::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "Reflection/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BuildSafe.Reflection/<>c.<PreFetchAllAssemblies>b__7_0
bool BuildSafe::Reflection::$$c::$PreFetchAllAssemblies$b__7_0(::System::Reflection::Assembly* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::<PreFetchAllAssemblies>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PreFetchAllAssemblies>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a);
}
// Autogenerated method: BuildSafe.Reflection/<>c.<PreFetchAllTypes>b__8_0
::System::Collections::Generic::IEnumerable_1<::System::Type*>* BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_0(::System::Reflection::Assembly* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::<PreFetchAllTypes>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PreFetchAllTypes>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method, a);
}
// Autogenerated method: BuildSafe.Reflection/<>c.<PreFetchAllTypes>b__8_1
bool BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_1(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::<PreFetchAllTypes>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PreFetchAllTypes>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SceneBakeExampleTask
#include "BuildSafe/SceneBakeExampleTask.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.SceneBakeExampleTask.DuplicateAndRecolor
void BuildSafe::SceneBakeExampleTask::DuplicateAndRecolor(::UnityEngine::GameObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeExampleTask::DuplicateAndRecolor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneBakeExampleTask", "DuplicateAndRecolor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: BuildSafe.SceneBakeExampleTask.OnSceneBake
void BuildSafe::SceneBakeExampleTask::OnSceneBake(::UnityEngine::SceneManagement::Scene scene, ::BuildSafe::SceneBakeMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeExampleTask::OnSceneBake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SceneBakeMode
#include "BuildSafe/SceneBakeMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuildSafe.SceneBakeMode Always
::BuildSafe::SceneBakeMode BuildSafe::SceneBakeMode::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SceneBakeMode>("BuildSafe", "SceneBakeMode", "Always"));
}
// Autogenerated static field setter
// Set static field: static public BuildSafe.SceneBakeMode Always
void BuildSafe::SceneBakeMode::_set_Always(::BuildSafe::SceneBakeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SceneBakeMode", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public BuildSafe.SceneBakeMode OnBuildPlayer
::BuildSafe::SceneBakeMode BuildSafe::SceneBakeMode::_get_OnBuildPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_get_OnBuildPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SceneBakeMode>("BuildSafe", "SceneBakeMode", "OnBuildPlayer"));
}
// Autogenerated static field setter
// Set static field: static public BuildSafe.SceneBakeMode OnBuildPlayer
void BuildSafe::SceneBakeMode::_set_OnBuildPlayer(::BuildSafe::SceneBakeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_set_OnBuildPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SceneBakeMode", "OnBuildPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public BuildSafe.SceneBakeMode OnEditorPlayMode
::BuildSafe::SceneBakeMode BuildSafe::SceneBakeMode::_get_OnEditorPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_get_OnEditorPlayMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SceneBakeMode>("BuildSafe", "SceneBakeMode", "OnEditorPlayMode"));
}
// Autogenerated static field setter
// Set static field: static public BuildSafe.SceneBakeMode OnEditorPlayMode
void BuildSafe::SceneBakeMode::_set_OnEditorPlayMode(::BuildSafe::SceneBakeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_set_OnEditorPlayMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SceneBakeMode", "OnEditorPlayMode", value));
}
// Autogenerated static field getter
// Get static field: static public BuildSafe.SceneBakeMode Disabled
::BuildSafe::SceneBakeMode BuildSafe::SceneBakeMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SceneBakeMode>("BuildSafe", "SceneBakeMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public BuildSafe.SceneBakeMode Disabled
void BuildSafe::SceneBakeMode::_set_Disabled(::BuildSafe::SceneBakeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SceneBakeMode", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BuildSafe::SceneBakeMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SceneBakeTask
#include "BuildSafe/SceneBakeTask.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BuildSafe.SceneBakeMode m_bakeMode
[[deprecated("Use field access instead!")]] ::BuildSafe::SceneBakeMode& BuildSafe::SceneBakeTask::dyn_m_bakeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::dyn_m_bakeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bakeMode"))->offset;
  return *reinterpret_cast<::BuildSafe::SceneBakeMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_callbackOrder
[[deprecated("Use field access instead!")]] int& BuildSafe::SceneBakeTask::dyn_m_callbackOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::dyn_m_callbackOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_callbackOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_runIfInactive
[[deprecated("Use field access instead!")]] bool& BuildSafe::SceneBakeTask::dyn_m_runIfInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::dyn_m_runIfInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_runIfInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuildSafe.SceneBakeTask.get_bakeMode
::BuildSafe::SceneBakeMode BuildSafe::SceneBakeTask::get_bakeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::get_bakeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BuildSafe::SceneBakeMode, false>(this, ___internal__method);
}
// Autogenerated method: BuildSafe.SceneBakeTask.set_bakeMode
void BuildSafe::SceneBakeTask::set_bakeMode(::BuildSafe::SceneBakeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::set_bakeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bakeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneBakeTask.get_callbackOrder
int BuildSafe::SceneBakeTask::get_callbackOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::get_callbackOrder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuildSafe.SceneBakeTask.set_callbackOrder
void BuildSafe::SceneBakeTask::set_callbackOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::set_callbackOrder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneBakeTask.get_runIfInactive
bool BuildSafe::SceneBakeTask::get_runIfInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::get_runIfInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_runIfInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BuildSafe.SceneBakeTask.set_runIfInactive
void BuildSafe::SceneBakeTask::set_runIfInactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::set_runIfInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_runIfInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneBakeTask.OnSceneBake
void BuildSafe::SceneBakeTask::OnSceneBake(::UnityEngine::SceneManagement::Scene scene, ::BuildSafe::SceneBakeMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::OnSceneBake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: BuildSafe.SceneBakeTask.ForceRun
void BuildSafe::SceneBakeTask::ForceRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneBakeTask::ForceRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SceneView
#include "BuildSafe/SceneView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.SceneView.add_duringSceneGui
void BuildSafe::SceneView::add_duringSceneGui(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneView::add_duringSceneGui");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneView", "add_duringSceneGui", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneView.remove_duringSceneGui
void BuildSafe::SceneView::remove_duringSceneGui(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneView::remove_duringSceneGui");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneView", "remove_duringSceneGui", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneView.add_duringSceneGuiTick
void BuildSafe::SceneView::add_duringSceneGuiTick(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneView::add_duringSceneGuiTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneView", "add_duringSceneGuiTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BuildSafe.SceneView.remove_duringSceneGuiTick
void BuildSafe::SceneView::remove_duringSceneGuiTick(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneView::remove_duringSceneGuiTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneView", "remove_duringSceneGuiTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SceneViewUtils
#include "BuildSafe/SceneViewUtils.hpp"
// Including type: BuildSafe.SceneViewUtils/FuncRaycastWorld
#include "BuildSafe/SceneViewUtils_FuncRaycastWorld.hpp"
// Including type: BuildSafe.SceneViewUtils/FuncPickClosestGameObject
#include "BuildSafe/SceneViewUtils_FuncPickClosestGameObject.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BuildSafe.SceneViewUtils/FuncRaycastWorld RaycastWorld
::BuildSafe::SceneViewUtils::FuncRaycastWorld* BuildSafe::SceneViewUtils::_get_RaycastWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::_get_RaycastWorld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SceneViewUtils::FuncRaycastWorld*>("BuildSafe", "SceneViewUtils", "RaycastWorld"));
}
// Autogenerated static field setter
// Set static field: static public readonly BuildSafe.SceneViewUtils/FuncRaycastWorld RaycastWorld
void BuildSafe::SceneViewUtils::_set_RaycastWorld(::BuildSafe::SceneViewUtils::FuncRaycastWorld* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::_set_RaycastWorld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SceneViewUtils", "RaycastWorld", value));
}
// Autogenerated method: BuildSafe.SceneViewUtils.RaycastWorldSafe
bool BuildSafe::SceneViewUtils::RaycastWorldSafe(::UnityEngine::Vector2 screenPos, ByRef<::UnityEngine::RaycastHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::RaycastWorldSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneViewUtils", "RaycastWorldSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPos), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, screenPos, byref(hit));
}
// Autogenerated method: BuildSafe.SceneViewUtils..cctor
void BuildSafe::SceneViewUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SceneViewUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BuildSafe.SceneViewUtils/FuncRaycastWorld
#include "BuildSafe/SceneViewUtils_FuncRaycastWorld.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.SceneViewUtils/FuncRaycastWorld.Invoke
bool BuildSafe::SceneViewUtils::FuncRaycastWorld::Invoke(::UnityEngine::Vector2 screenPos, ByRef<::UnityEngine::RaycastHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncRaycastWorld::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncRaycastWorld*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, screenPos, byref(hit));
}
// Autogenerated method: BuildSafe.SceneViewUtils/FuncRaycastWorld.BeginInvoke
::System::IAsyncResult* BuildSafe::SceneViewUtils::FuncRaycastWorld::BeginInvoke(::UnityEngine::Vector2 screenPos, ByRef<::UnityEngine::RaycastHit> hit, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncRaycastWorld::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncRaycastWorld*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, screenPos, byref(hit), callback, object);
}
// Autogenerated method: BuildSafe.SceneViewUtils/FuncRaycastWorld.EndInvoke
bool BuildSafe::SceneViewUtils::FuncRaycastWorld::EndInvoke(ByRef<::UnityEngine::RaycastHit> hit, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncRaycastWorld::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncRaycastWorld*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(hit), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BuildSafe.SceneViewUtils/FuncPickClosestGameObject
#include "BuildSafe/SceneViewUtils_FuncPickClosestGameObject.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildSafe.SceneViewUtils/FuncPickClosestGameObject.Invoke
::UnityEngine::GameObject* BuildSafe::SceneViewUtils::FuncPickClosestGameObject::Invoke(::UnityEngine::Camera* cam, int layers, ::UnityEngine::Vector2 position, ::ArrayW<::UnityEngine::GameObject*> ignore, ::ArrayW<::UnityEngine::GameObject*> filter, ByRef<int> materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncPickClosestGameObject::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncPickClosestGameObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, cam, layers, position, ignore, filter, byref(materialIndex));
}
// Autogenerated method: BuildSafe.SceneViewUtils/FuncPickClosestGameObject.BeginInvoke
::System::IAsyncResult* BuildSafe::SceneViewUtils::FuncPickClosestGameObject::BeginInvoke(::UnityEngine::Camera* cam, int layers, ::UnityEngine::Vector2 position, ::ArrayW<::UnityEngine::GameObject*> ignore, ::ArrayW<::UnityEngine::GameObject*> filter, ByRef<int> materialIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncPickClosestGameObject::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncPickClosestGameObject*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, cam, layers, position, ignore, filter, byref(materialIndex), callback, object);
}
// Autogenerated method: BuildSafe.SceneViewUtils/FuncPickClosestGameObject.EndInvoke
::UnityEngine::GameObject* BuildSafe::SceneViewUtils::FuncPickClosestGameObject::EndInvoke(ByRef<int> materialIndex, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncPickClosestGameObject::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneViewUtils::FuncPickClosestGameObject*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, byref(materialIndex), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildSafe.SessionState
#include "BuildSafe/SessionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BuildSafe.SessionState Shared
::BuildSafe::SessionState* BuildSafe::SessionState::_get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SessionState::_get_Shared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BuildSafe::SessionState*>("BuildSafe", "SessionState", "Shared"));
}
// Autogenerated static field setter
// Set static field: static public readonly BuildSafe.SessionState Shared
void BuildSafe::SessionState::_set_Shared(::BuildSafe::SessionState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SessionState::_set_Shared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BuildSafe", "SessionState", "Shared", value));
}
// Autogenerated method: BuildSafe.SessionState.get_Item
::StringW BuildSafe::SessionState::get_Item(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SessionState::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: BuildSafe.SessionState.set_Item
void BuildSafe::SessionState::set_Item(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SessionState::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: BuildSafe.SessionState..cctor
void BuildSafe::SessionState::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SessionState::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "SessionState", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.FusionRuntimeCheck
#include "Fusion/FusionRuntimeCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.FusionRuntimeCheck.RuntimeCheck
void Fusion::FusionRuntimeCheck::RuntimeCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionRuntimeCheck::RuntimeCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionRuntimeCheck", "RuntimeCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.FusionUnityLogger
#include "Fusion/FusionUnityLogger.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Fusion.ILogBuilder
#include "Fusion/ILogBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _builder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Fusion::FusionUnityLogger::dyn__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseGlobalPrefix
[[deprecated("Use field access instead!")]] bool& Fusion::FusionUnityLogger::dyn_UseGlobalPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_UseGlobalPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseGlobalPrefix"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseColorTags
[[deprecated("Use field access instead!")]] bool& Fusion::FusionUnityLogger::dyn_UseColorTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_UseColorTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseColorTags"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GlobalPrefixColor
[[deprecated("Use field access instead!")]] ::StringW& Fusion::FusionUnityLogger::dyn_GlobalPrefixColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_GlobalPrefixColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalPrefixColor"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 MinRandomColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& Fusion::FusionUnityLogger::dyn_MinRandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_MinRandomColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinRandomColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 MaxRandomColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& Fusion::FusionUnityLogger::dyn_MaxRandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_MaxRandomColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxRandomColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color ServerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Fusion::FusionUnityLogger::dyn_ServerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_ServerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Int32> <GetColor>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, int>*& Fusion::FusionUnityLogger::dyn_$GetColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::dyn_$GetColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GetColor>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.FusionUnityLogger.get_GetColor
::System::Func_2<::Il2CppObject*, int>* Fusion::FusionUnityLogger::get_GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::get_GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, int>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.FusionUnityLogger.set_GetColor
void Fusion::FusionUnityLogger::set_GetColor(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::set_GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.FusionUnityLogger.GetRandomColor
int Fusion::FusionUnityLogger::GetRandomColor(int seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::GetRandomColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRandomColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, seed);
}
// Autogenerated method: Fusion.FusionUnityLogger.GetRandomColor
int Fusion::FusionUnityLogger::GetRandomColor(int seed, ::UnityEngine::Color32 min, ::UnityEngine::Color32 max, ::UnityEngine::Color32 svr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::GetRandomColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnityLogger", "GetRandomColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(svr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, min, max, svr);
}
// Autogenerated method: Fusion.FusionUnityLogger.Color32ToRGB24
int Fusion::FusionUnityLogger::Color32ToRGB24(::UnityEngine::Color32 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::Color32ToRGB24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnityLogger", "Color32ToRGB24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Fusion.FusionUnityLogger.Color32ToRGBString
::StringW Fusion::FusionUnityLogger::Color32ToRGBString(::UnityEngine::Color32 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::Color32ToRGBString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnityLogger", "Color32ToRGBString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Fusion.FusionUnityLogger.Initialize
void Fusion::FusionUnityLogger::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnityLogger", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.FusionUnityLogger.<.ctor>b__12_0
int Fusion::FusionUnityLogger::$_ctor$b__12_0(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnityLogger::<.ctor>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkRunnerExtensions
#include "Fusion/NetworkRunnerExtensions.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.NetworkRunnerExtensions.SetActiveScene
bool Fusion::NetworkRunnerExtensions::SetActiveScene(::Fusion::NetworkRunner* runner, ::StringW sceneNameOrPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRunnerExtensions::SetActiveScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkRunnerExtensions", "SetActiveScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner), ::il2cpp_utils::ExtractType(sceneNameOrPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, runner, sceneNameOrPath);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerBase
#include "Fusion/NetworkSceneManagerBase.hpp"
// Including type: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate
#include "Fusion/NetworkSceneManagerBase_FinishedLoadingDelegate.hpp"
// Including type: Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0
#include "Fusion/NetworkSceneManagerBase_--c__DisplayClass28_0.hpp"
// Including type: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28
#include "Fusion/NetworkSceneManagerBase_-SwitchSceneWrapper-d__28.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.WeakReference`1<Fusion.NetworkSceneManagerBase> s_currentlyLoading
::System::WeakReference_1<::Fusion::NetworkSceneManagerBase*>* Fusion::NetworkSceneManagerBase::_get_s_currentlyLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::_get_s_currentlyLoading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference_1<::Fusion::NetworkSceneManagerBase*>*>("Fusion", "NetworkSceneManagerBase", "s_currentlyLoading"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference`1<Fusion.NetworkSceneManagerBase> s_currentlyLoading
void Fusion::NetworkSceneManagerBase::_set_s_currentlyLoading(::System::WeakReference_1<::Fusion::NetworkSceneManagerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::_set_s_currentlyLoading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "NetworkSceneManagerBase", "s_currentlyLoading", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ShowHierarchyWindowOverlay
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkSceneManagerBase::dyn_ShowHierarchyWindowOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::dyn_ShowHierarchyWindowOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowHierarchyWindowOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator _runningCoroutine
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Fusion::NetworkSceneManagerBase::dyn__runningCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::dyn__runningCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runningCoroutine"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentSceneOutdated
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkSceneManagerBase::dyn__currentSceneOutdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::dyn__currentSceneOutdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSceneOutdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SceneRef _currentScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerBase::dyn__currentScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::dyn__currentScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkRunner <Runner>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& Fusion::NetworkSceneManagerBase::dyn_$Runner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::dyn_$Runner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Runner>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.get_Runner
::Fusion::NetworkRunner* Fusion::NetworkSceneManagerBase::get_Runner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::get_Runner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Runner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkRunner*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.set_Runner
void Fusion::NetworkSceneManagerBase::set_Runner(::Fusion::NetworkRunner* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::set_Runner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Runner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.OnEnable
void Fusion::NetworkSceneManagerBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.OnDisable
void Fusion::NetworkSceneManagerBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.LateUpdate
void Fusion::NetworkSceneManagerBase::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.IsScenePathOrNameEqual
bool Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual(::UnityEngine::SceneManagement::Scene scene, ::StringW nameOrPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkSceneManagerBase", "IsScenePathOrNameEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(nameOrPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, nameOrPath);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.TryGetScenePathFromBuildSettings
bool Fusion::NetworkSceneManagerBase::TryGetScenePathFromBuildSettings(::Fusion::SceneRef sceneRef, ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::TryGetScenePathFromBuildSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkSceneManagerBase", "TryGetScenePathFromBuildSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneRef), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneRef, byref(path));
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.TryGetScenePath
bool Fusion::NetworkSceneManagerBase::TryGetScenePath(::Fusion::SceneRef sceneRef, ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::TryGetScenePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sceneRef, byref(path));
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.TryGetSceneRef
bool Fusion::NetworkSceneManagerBase::TryGetSceneRef(::StringW nameOrPath, ByRef<::Fusion::SceneRef> sceneRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::TryGetSceneRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameOrPath, byref(sceneRef));
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.IsScenePathOrNameEqual
bool Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual(::UnityEngine::SceneManagement::Scene scene, ::Fusion::SceneRef sceneRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsScenePathOrNameEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(sceneRef)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scene, sceneRef);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.FindNetworkObjects
::System::Collections::Generic::List_1<::Fusion::NetworkObject*>* Fusion::NetworkSceneManagerBase::FindNetworkObjects(::UnityEngine::SceneManagement::Scene scene, bool disable, bool addVisibilityNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::FindNetworkObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNetworkObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(disable), ::il2cpp_utils::ExtractType(addVisibilityNodes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Fusion::NetworkObject*>*, false>(this, ___internal__method, scene, disable, addVisibilityNodes);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.Fusion.INetworkSceneManager.Initialize
void Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Initialize(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::Fusion.INetworkSceneManager.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.Fusion.INetworkSceneManager.Shutdown
void Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Shutdown(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::Fusion.INetworkSceneManager.Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.Fusion.INetworkSceneManager.IsReady
bool Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_IsReady(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::Fusion.INetworkSceneManager.IsReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, runner);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.Initialize
void Fusion::NetworkSceneManagerBase::Initialize(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.Shutdown
void Fusion::NetworkSceneManagerBase::Shutdown(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.SwitchScene
::System::Collections::IEnumerator* Fusion::NetworkSceneManagerBase::SwitchScene(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::SwitchScene");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, prevScene, newScene, finished);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.LogTrace
void Fusion::NetworkSceneManagerBase::LogTrace(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::LogTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.LogError
void Fusion::NetworkSceneManagerBase::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.LogWarn
void Fusion::NetworkSceneManagerBase::LogWarn(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::LogWarn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase.SwitchSceneWrapper
::System::Collections::IEnumerator* Fusion::NetworkSceneManagerBase::SwitchSceneWrapper(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::SwitchSceneWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchSceneWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevScene), ::il2cpp_utils::ExtractType(newScene)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, prevScene, newScene);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase..cctor
void Fusion::NetworkSceneManagerBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkSceneManagerBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate
#include "Fusion/NetworkSceneManagerBase_FinishedLoadingDelegate.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate.Invoke
void Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::Invoke(::System::Collections::Generic::IEnumerable_1<::Fusion::NetworkObject*>* sceneObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneObjects);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate.BeginInvoke
::System::IAsyncResult* Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::BeginInvoke(::System::Collections::Generic::IEnumerable_1<::Fusion::NetworkObject*>* sceneObjects, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sceneObjects, callback, object);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate.EndInvoke
void Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0
#include "Fusion/NetworkSceneManagerBase_--c__DisplayClass28_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean finishCalled
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::dyn_finishCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::dyn_finishCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Guid,Fusion.NetworkObject> sceneObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>*& Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::dyn_sceneObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::dyn_sceneObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0.<SwitchSceneWrapper>b__0
void Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::$SwitchSceneWrapper$b__0(::System::Collections::Generic::IEnumerable_1<::Fusion::NetworkObject*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::<SwitchSceneWrapper>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SwitchSceneWrapper>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objects);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28
#include "Fusion/NetworkSceneManagerBase_-SwitchSceneWrapper-d__28.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0
#include "Fusion/NetworkSceneManagerBase_--c__DisplayClass28_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkSceneManagerBase <>4__this
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerBase*& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef prevScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_prevScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_prevScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef newScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_newScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_newScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0 <>8__1
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0*& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <error>5__2
[[deprecated("Use field access instead!")]] ::System::Exception*& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$error$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$error$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<error>5__2"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator <coro>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$coro$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$coro$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coro>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <next>5__4
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$next$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::dyn_$next$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<next>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.System.IDisposable.Dispose
void Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.MoveNext
bool Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.<>m__Finally1
void Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.System.Collections.IEnumerator.Reset
void Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerBase/<SwitchSceneWrapper>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerDefault
#include "Fusion/NetworkSceneManagerDefault.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass1_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass1_0.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass4_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass4_0.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass5_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass5_0.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4
#include "Fusion/NetworkSceneManagerDefault_-SwitchSceneMultiplePeer-d__4.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5
#include "Fusion/NetworkSceneManagerDefault_-SwitchSceneSinglePeer-d__5.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate
#include "Fusion/NetworkSceneManagerBase_FinishedLoadingDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PostLoadDelayFrames
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSceneManagerDefault::dyn_PostLoadDelayFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::dyn_PostLoadDelayFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostLoadDelayFrames"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault.LoadSceneAsync
::UnityEngine::YieldInstruction* Fusion::NetworkSceneManagerDefault::LoadSceneAsync(::Fusion::SceneRef sceneRef, ::UnityEngine::SceneManagement::LoadSceneParameters parameters, ::System::Action_1<::UnityEngine::SceneManagement::Scene>* loaded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::LoadSceneAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::YieldInstruction*, false>(this, ___internal__method, sceneRef, parameters, loaded);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault.UnloadSceneAsync
::UnityEngine::YieldInstruction* Fusion::NetworkSceneManagerDefault::UnloadSceneAsync(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::UnloadSceneAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::YieldInstruction*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault.SwitchSceneMultiplePeer
::System::Collections::IEnumerator* Fusion::NetworkSceneManagerDefault::SwitchSceneMultiplePeer(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::SwitchSceneMultiplePeer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, prevScene, newScene, finished);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault.SwitchSceneSinglePeer
::System::Collections::IEnumerator* Fusion::NetworkSceneManagerDefault::SwitchSceneSinglePeer(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::SwitchSceneSinglePeer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, prevScene, newScene, finished);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault.SwitchScene
::System::Collections::IEnumerator* Fusion::NetworkSceneManagerDefault::SwitchScene(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::SwitchScene");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, prevScene, newScene, finished);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass1_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass1_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String scenePath
[[deprecated("Use field access instead!")]] ::StringW& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_scenePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_scenePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.SceneManagement.Scene> loaded
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::SceneManagement::Scene>*& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_loaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loaded"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::SceneManagement::Scene>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean alreadyHandled
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_alreadyHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_alreadyHandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alreadyHandled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoadedHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>*& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_sceneLoadedHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::dyn_sceneLoadedHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLoadedHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass1_0.<LoadSceneAsync>b__0
void Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::$LoadSceneAsync$b__0(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::<LoadSceneAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSceneAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, _);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass1_0.<LoadSceneAsync>b__1
void Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::$LoadSceneAsync$b__1(::UnityEngine::AsyncOperation* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0::<LoadSceneAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSceneAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass4_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass4_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SceneManagement.Scene loadedScene
[[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::Scene& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0::dyn_loadedScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0::dyn_loadedScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedScene"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass4_0.<SwitchSceneMultiplePeer>b__0
void Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0::$SwitchSceneMultiplePeer$b__0(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0::<SwitchSceneMultiplePeer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SwitchSceneMultiplePeer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass5_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SceneManagement.Scene loadedScene
[[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::Scene& Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0::dyn_loadedScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0::dyn_loadedScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedScene"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass5_0.<SwitchSceneSinglePeer>b__0
void Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0::$SwitchSceneSinglePeer$b__0(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0::<SwitchSceneSinglePeer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SwitchSceneSinglePeer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4
#include "Fusion/NetworkSceneManagerDefault_-SwitchSceneMultiplePeer-d__4.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass4_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass4_0.hpp"
// Including type: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate
#include "Fusion/NetworkSceneManagerBase_FinishedLoadingDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef prevScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_prevScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_prevScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkSceneManagerDefault <>4__this
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerDefault*& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerDefault**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef newScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_newScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_newScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkSceneManagerDefault/<>c__DisplayClass4_0 <>8__1
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0*& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finished"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.LoadSceneParameters <loadSceneParameters>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::LoadSceneParameters& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$loadSceneParameters$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$loadSceneParameters$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadSceneParameters>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::LoadSceneParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.Scene <sceneToUnload>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::Scene& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$sceneToUnload$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$sceneToUnload$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sceneToUnload>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] <tempSceneSpawnedPrefabs>5__4
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$tempSceneSpawnedPrefabs$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$tempSceneSpawnedPrefabs$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tempSceneSpawnedPrefabs>5__4"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Fusion.NetworkObject> <sceneObjects>5__5
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::NetworkObject*>*& Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$sceneObjects$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::dyn_$sceneObjects$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sceneObjects>5__5"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::NetworkObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4.System.IDisposable.Dispose
void Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4.MoveNext
bool Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4.System.Collections.IEnumerator.Reset
void Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneMultiplePeer>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5
#include "Fusion/NetworkSceneManagerDefault_-SwitchSceneSinglePeer-d__5.hpp"
// Including type: Fusion.NetworkSceneManagerDefault/<>c__DisplayClass5_0
#include "Fusion/NetworkSceneManagerDefault_--c__DisplayClass5_0.hpp"
// Including type: Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate
#include "Fusion/NetworkSceneManagerBase_FinishedLoadingDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef prevScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_prevScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_prevScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkSceneManagerDefault <>4__this
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerDefault*& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerDefault**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef newScene
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_newScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_newScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newScene"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkSceneManagerDefault/<>c__DisplayClass5_0 <>8__1
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0*& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished
[[deprecated("Use field access instead!")]] ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finished"))->offset;
  return *reinterpret_cast<::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5.System.IDisposable.Dispose
void Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5.MoveNext
bool Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5.System.Collections.IEnumerator.Reset
void Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSceneManagerDefault/<SwitchSceneSinglePeer>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.FusionUnitySceneManagerUtils
#include "Fusion/FusionUnitySceneManagerUtils.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.FusionUnitySceneManagerUtils.GetSceneBuildIndex
int Fusion::FusionUnitySceneManagerUtils::GetSceneBuildIndex(::StringW nameOrPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnitySceneManagerUtils::GetSceneBuildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnitySceneManagerUtils", "GetSceneBuildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameOrPath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameOrPath);
}
// Autogenerated method: Fusion.FusionUnitySceneManagerUtils.GetSceneIndex
int Fusion::FusionUnitySceneManagerUtils::GetSceneIndex(::System::Collections::Generic::IList_1<::StringW>* scenePathsOrNames, ::StringW nameOrPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnitySceneManagerUtils::GetSceneIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnitySceneManagerUtils", "GetSceneIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenePathsOrNames), ::il2cpp_utils::ExtractType(nameOrPath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scenePathsOrNames, nameOrPath);
}
// Autogenerated method: Fusion.FusionUnitySceneManagerUtils.GetFileNameWithoutExtensionPosition
void Fusion::FusionUnitySceneManagerUtils::GetFileNameWithoutExtensionPosition(::StringW nameOrPath, ByRef<int> index, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionUnitySceneManagerUtils::GetFileNameWithoutExtensionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "FusionUnitySceneManagerUtils", "GetFileNameWithoutExtensionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameOrPath), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameOrPath, byref(index), byref(length));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Editor.BoundsTools
#include "Fusion/Editor/BoundsTools.hpp"
// Including type: Fusion.Editor.BoundsTools/BoundsType
#include "Fusion/Editor/BoundsTools_BoundsType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> meshFilters
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* Fusion::Editor::BoundsTools::_get_meshFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_meshFilters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*>("Fusion.Editor", "BoundsTools", "meshFilters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> meshFilters
void Fusion::Editor::BoundsTools::_set_meshFilters(::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_meshFilters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "meshFilters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Renderer> meshRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* Fusion::Editor::BoundsTools::_get_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_meshRenderers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>("Fusion.Editor", "BoundsTools", "meshRenderers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Renderer> meshRenderers
void Fusion::Editor::BoundsTools::_set_meshRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_meshRenderers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "meshRenderers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* Fusion::Editor::BoundsTools::_get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_colliders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*>("Fusion.Editor", "BoundsTools", "colliders"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> colliders
void Fusion::Editor::BoundsTools::_set_colliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_colliders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "colliders", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> validColliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* Fusion::Editor::BoundsTools::_get_validColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_validColliders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*>("Fusion.Editor", "BoundsTools", "validColliders"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> validColliders
void Fusion::Editor::BoundsTools::_set_validColliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_validColliders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "validColliders", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> spriteRenderers
::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>* Fusion::Editor::BoundsTools::_get_spriteRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_spriteRenderers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>*>("Fusion.Editor", "BoundsTools", "spriteRenderers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> spriteRenderers
void Fusion::Editor::BoundsTools::_set_spriteRenderers(::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_spriteRenderers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "spriteRenderers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> colliders2D
::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* Fusion::Editor::BoundsTools::_get_colliders2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_colliders2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>*>("Fusion.Editor", "BoundsTools", "colliders2D"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> colliders2D
void Fusion::Editor::BoundsTools::_set_colliders2D(::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_colliders2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "colliders2D", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> validColliders2D
::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* Fusion::Editor::BoundsTools::_get_validColliders2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_get_validColliders2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>*>("Fusion.Editor", "BoundsTools", "validColliders2D"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> validColliders2D
void Fusion::Editor::BoundsTools::_set_validColliders2D(::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::_set_validColliders2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools", "validColliders2D", value));
}
// Autogenerated method: Fusion.Editor.BoundsTools.CollectMyBounds
::UnityEngine::Bounds Fusion::Editor::BoundsTools::CollectMyBounds(::UnityEngine::GameObject* go, ::Fusion::Editor::BoundsTools::BoundsType factorIn, ByRef<int> numOfBoundsFound, bool includeChildren, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::CollectMyBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Editor", "BoundsTools", "CollectMyBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(factorIn), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(includeChildren), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, factorIn, byref(numOfBoundsFound), includeChildren, includeInactive);
}
// Autogenerated method: Fusion.Editor.BoundsTools.CollectMyBounds
::UnityEngine::Bounds Fusion::Editor::BoundsTools::CollectMyBounds(::UnityEngine::GameObject* go, ::Fusion::Editor::BoundsTools::BoundsType factorIn, bool includeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::CollectMyBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Editor", "BoundsTools", "CollectMyBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(factorIn), ::il2cpp_utils::ExtractType(includeChildren)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, factorIn, includeChildren);
}
// Autogenerated method: Fusion.Editor.BoundsTools..cctor
void Fusion::Editor::BoundsTools::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Editor", "BoundsTools", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Editor.BoundsTools/BoundsType
#include "Fusion/Editor/BoundsTools_BoundsType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Editor.BoundsTools/BoundsType Both
::Fusion::Editor::BoundsTools::BoundsType Fusion::Editor::BoundsTools::BoundsType::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Editor::BoundsTools::BoundsType>("Fusion.Editor", "BoundsTools/BoundsType", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Editor.BoundsTools/BoundsType Both
void Fusion::Editor::BoundsTools::BoundsType::_set_Both(::Fusion::Editor::BoundsTools::BoundsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools/BoundsType", "Both", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Editor.BoundsTools/BoundsType MeshRenderer
::Fusion::Editor::BoundsTools::BoundsType Fusion::Editor::BoundsTools::BoundsType::_get_MeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_get_MeshRenderer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Editor::BoundsTools::BoundsType>("Fusion.Editor", "BoundsTools/BoundsType", "MeshRenderer"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Editor.BoundsTools/BoundsType MeshRenderer
void Fusion::Editor::BoundsTools::BoundsType::_set_MeshRenderer(::Fusion::Editor::BoundsTools::BoundsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_set_MeshRenderer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools/BoundsType", "MeshRenderer", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Editor.BoundsTools/BoundsType Collider
::Fusion::Editor::BoundsTools::BoundsType Fusion::Editor::BoundsTools::BoundsType::_get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_get_Collider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Editor::BoundsTools::BoundsType>("Fusion.Editor", "BoundsTools/BoundsType", "Collider"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Editor.BoundsTools/BoundsType Collider
void Fusion::Editor::BoundsTools::BoundsType::_set_Collider(::Fusion::Editor::BoundsTools::BoundsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_set_Collider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools/BoundsType", "Collider", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Editor.BoundsTools/BoundsType Manual
::Fusion::Editor::BoundsTools::BoundsType Fusion::Editor::BoundsTools::BoundsType::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Editor::BoundsTools::BoundsType>("Fusion.Editor", "BoundsTools/BoundsType", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Editor.BoundsTools/BoundsType Manual
void Fusion::Editor::BoundsTools::BoundsType::_set_Manual(::Fusion::Editor::BoundsTools::BoundsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Editor", "BoundsTools/BoundsType", "Manual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Editor::BoundsTools::BoundsType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Editor::BoundsTools::BoundsType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.StatsInternal.IFusionStatsView
#include "Fusion/StatsInternal/IFusionStatsView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.StatsInternal.IFusionStatsView.Initialize
void Fusion::StatsInternal::IFusionStatsView::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::IFusionStatsView::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::StatsInternal::IFusionStatsView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.IFusionStatsView.CalculateLayout
void Fusion::StatsInternal::IFusionStatsView::CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::IFusionStatsView::CalculateLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::StatsInternal::IFusionStatsView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.IFusionStatsView.Refresh
void Fusion::StatsInternal::IFusionStatsView::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::IFusionStatsView::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::StatsInternal::IFusionStatsView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled
bool Fusion::StatsInternal::IFusionStatsView::get_isActiveAndEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::IFusionStatsView::get_isActiveAndEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::StatsInternal::IFusionStatsView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.IFusionStatsView.get_transform
::UnityEngine::Transform* Fusion::StatsInternal::IFusionStatsView::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::IFusionStatsView::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::StatsInternal::IFusionStatsView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.StatsInternal.FusionStatsUtilities
#include "Fusion/StatsInternal/FusionStatsUtilities.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.UI.GridLayoutGroup
#include "UnityEngine/UI/GridLayoutGroup.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 PAD
int Fusion::StatsInternal::FusionStatsUtilities::_get_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "PAD"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PAD
void Fusion::StatsInternal::FusionStatsUtilities::_set_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "PAD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MARGIN
int Fusion::StatsInternal::FusionStatsUtilities::_get_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "MARGIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MARGIN
void Fusion::StatsInternal::FusionStatsUtilities::_set_MARGIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "MARGIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 FONT_SIZE
int Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 FONT_SIZE
void Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 FONT_SIZE_MIN
int Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 FONT_SIZE_MIN
void Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE_MIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 FONT_SIZE_MAX
int Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_FONT_SIZE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 FONT_SIZE_MAX
void Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_FONT_SIZE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "FONT_SIZE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> _cachedGraphVisualizationNames
::System::Collections::Generic::List_1<::StringW>* Fusion::StatsInternal::FusionStatsUtilities::_get__cachedGraphVisualizationNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get__cachedGraphVisualizationNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::StringW>*>("Fusion.StatsInternal", "FusionStatsUtilities", "_cachedGraphVisualizationNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> _cachedGraphVisualizationNames
void Fusion::StatsInternal::FusionStatsUtilities::_set__cachedGraphVisualizationNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set__cachedGraphVisualizationNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "_cachedGraphVisualizationNames", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 METER_TEXTURE_WIDTH
int Fusion::StatsInternal::FusionStatsUtilities::_get_METER_TEXTURE_WIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_METER_TEXTURE_WIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "METER_TEXTURE_WIDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 METER_TEXTURE_WIDTH
void Fusion::StatsInternal::FusionStatsUtilities::_set_METER_TEXTURE_WIDTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_METER_TEXTURE_WIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "METER_TEXTURE_WIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D _meterTexture
::UnityEngine::Texture2D* Fusion::StatsInternal::FusionStatsUtilities::_get__meterTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get__meterTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture2D*>("Fusion.StatsInternal", "FusionStatsUtilities", "_meterTexture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D _meterTexture
void Fusion::StatsInternal::FusionStatsUtilities::_set__meterTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set__meterTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "_meterTexture", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Sprite _meterSprite
::UnityEngine::Sprite* Fusion::StatsInternal::FusionStatsUtilities::_get__meterSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get__meterSprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Sprite*>("Fusion.StatsInternal", "FusionStatsUtilities", "_meterSprite"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Sprite _meterSprite
void Fusion::StatsInternal::FusionStatsUtilities::_set__meterSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set__meterSprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "_meterSprite", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 R
int Fusion::StatsInternal::FusionStatsUtilities::_get_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "R"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 R
void Fusion::StatsInternal::FusionStatsUtilities::_set_R(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "R", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D _circle32Texture
::UnityEngine::Texture2D* Fusion::StatsInternal::FusionStatsUtilities::_get__circle32Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get__circle32Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture2D*>("Fusion.StatsInternal", "FusionStatsUtilities", "_circle32Texture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D _circle32Texture
void Fusion::StatsInternal::FusionStatsUtilities::_set__circle32Texture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set__circle32Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "_circle32Texture", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Sprite _circle32Sprite
::UnityEngine::Sprite* Fusion::StatsInternal::FusionStatsUtilities::_get__circle32Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get__circle32Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Sprite*>("Fusion.StatsInternal", "FusionStatsUtilities", "_circle32Sprite"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Sprite _circle32Sprite
void Fusion::StatsInternal::FusionStatsUtilities::_set__circle32Sprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set__circle32Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "_circle32Sprite", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color DARK_GREEN
::UnityEngine::Color Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_GREEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_GREEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_GREEN"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color DARK_GREEN
void Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_GREEN(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_GREEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_GREEN", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color DARK_BLUE
::UnityEngine::Color Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_BLUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_BLUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_BLUE"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color DARK_BLUE
void Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_BLUE(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_BLUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_BLUE", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color DARK_RED
::UnityEngine::Color Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_RED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_DARK_RED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_RED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color DARK_RED
void Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_RED(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_DARK_RED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "DARK_RED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single BTTN_LBL_NORM_HGHT
float Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_LBL_NORM_HGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_LBL_NORM_HGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_LBL_NORM_HGHT"));
}
// Autogenerated static field setter
// Set static field: static public System.Single BTTN_LBL_NORM_HGHT
void Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_LBL_NORM_HGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_LBL_NORM_HGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_LBL_NORM_HGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BTTN_FONT_SIZE_MAX
int Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_FONT_SIZE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_FONT_SIZE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_FONT_SIZE_MAX"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BTTN_FONT_SIZE_MAX
void Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_FONT_SIZE_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_FONT_SIZE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_FONT_SIZE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single BTTN_ALPHA
float Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_BTTN_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BTTN_ALPHA
void Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_ALPHA(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_BTTN_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "BTTN_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single GUIDE_MARGIN
float Fusion::StatsInternal::FusionStatsUtilities::_get_GUIDE_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_GUIDE_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Fusion.StatsInternal", "FusionStatsUtilities", "GUIDE_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single GUIDE_MARGIN
void Fusion::StatsInternal::FusionStatsUtilities::_set_GUIDE_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_GUIDE_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "GUIDE_MARGIN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single GUIDE_MARGIN_HALF
float Fusion::StatsInternal::FusionStatsUtilities::_get_GUIDE_MARGIN_HALF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_get_GUIDE_MARGIN_HALF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Fusion.StatsInternal", "FusionStatsUtilities", "GUIDE_MARGIN_HALF"));
}
// Autogenerated static field setter
// Set static field: static private System.Single GUIDE_MARGIN_HALF
void Fusion::StatsInternal::FusionStatsUtilities::_set_GUIDE_MARGIN_HALF(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::_set_GUIDE_MARGIN_HALF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.StatsInternal", "FusionStatsUtilities", "GUIDE_MARGIN_HALF", value));
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.get_CachedTelemetryNames
::System::Collections::Generic::List_1<::StringW>* Fusion::StatsInternal::FusionStatsUtilities::get_CachedTelemetryNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::get_CachedTelemetryNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "get_CachedTelemetryNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.get_MeterTexture
::UnityEngine::Texture2D* Fusion::StatsInternal::FusionStatsUtilities::get_MeterTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::get_MeterTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "get_MeterTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.get_MeterSprite
::UnityEngine::Sprite* Fusion::StatsInternal::FusionStatsUtilities::get_MeterSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::get_MeterSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "get_MeterSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.get_Circle32Texture
::UnityEngine::Texture2D* Fusion::StatsInternal::FusionStatsUtilities::get_Circle32Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::get_Circle32Texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "get_Circle32Texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.get_CircleSprite
::UnityEngine::Sprite* Fusion::StatsInternal::FusionStatsUtilities::get_CircleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::get_CircleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "get_CircleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.TryFindActiveRunner
bool Fusion::StatsInternal::FusionStatsUtilities::TryFindActiveRunner(::GlobalNamespace::FusionStats* fusionStats, ByRef<::Fusion::NetworkRunner*> runner, ::System::Nullable_1<::Fusion::SimulationModes> mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::TryFindActiveRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "TryFindActiveRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fusionStats), ::il2cpp_utils::ExtractIndependentType<::Fusion::NetworkRunner*&>(), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fusionStats, byref(runner), mode);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.CreateRectTransform
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform(::UnityEngine::Transform* parent, ::StringW name, bool expand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "CreateRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(expand)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name, expand);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.CreateRectTransform
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform(::StringW name, ::UnityEngine::Transform* parent, bool expand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "CreateRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(expand)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, parent, expand);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.CreateDropdown
::UnityEngine::UI::Dropdown* Fusion::StatsInternal::FusionStatsUtilities::CreateDropdown(::UnityEngine::RectTransform* rt, float padding, ::UnityEngine::Color fontColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(fontColor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Dropdown*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, padding, fontColor);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddText
::UnityEngine::UI::Text* Fusion::StatsInternal::FusionStatsUtilities::AddText(::UnityEngine::RectTransform* rt, ::StringW label, ::UnityEngine::TextAnchor anchor, ::UnityEngine::Color FontColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(FontColor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Text*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, label, anchor, FontColor);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.MakeButton
void Fusion::StatsInternal::FusionStatsUtilities::MakeButton(::UnityEngine::RectTransform* parent, ByRef<::UnityEngine::UI::Button*> button, ::StringW iconText, ::StringW labelText, ByRef<::UnityEngine::UI::Text*> icon, ByRef<::UnityEngine::UI::Text*> text, ::UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::MakeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "MakeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(iconText), ::il2cpp_utils::ExtractType(labelText), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UI::Text*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UI::Text*&>(), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, byref(button), iconText, labelText, byref(icon), byref(text), action);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddHorizontalLayoutGroup
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::AddHorizontalLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddHorizontalLayoutGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddHorizontalLayoutGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(spacing), ::il2cpp_utils::ExtractType(rgtPad), ::il2cpp_utils::ExtractType(lftPad), ::il2cpp_utils::ExtractType(topPad), ::il2cpp_utils::ExtractType(botPad)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, spacing, rgtPad, lftPad, topPad, botPad);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddVerticalLayoutGroup
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::AddVerticalLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddVerticalLayoutGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddVerticalLayoutGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(spacing), ::il2cpp_utils::ExtractType(rgtPad), ::il2cpp_utils::ExtractType(lftPad), ::il2cpp_utils::ExtractType(topPad), ::il2cpp_utils::ExtractType(botPad)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, spacing, rgtPad, lftPad, topPad, botPad);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddGridlLayoutGroup
::UnityEngine::UI::GridLayoutGroup* Fusion::StatsInternal::FusionStatsUtilities::AddGridlLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddGridlLayoutGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddGridlLayoutGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(spacing), ::il2cpp_utils::ExtractType(rgtPad), ::il2cpp_utils::ExtractType(lftPad), ::il2cpp_utils::ExtractType(topPad), ::il2cpp_utils::ExtractType(botPad)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::GridLayoutGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, spacing, rgtPad, lftPad, topPad, botPad);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddImage
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::AddImage(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, color);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddCircleSprite
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddCircleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, color);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.AddCircleSprite
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color, ByRef<::UnityEngine::UI::Image*> image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "AddCircleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UI::Image*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, color, byref(image));
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.ExpandAnchor
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::ExpandAnchor(::UnityEngine::RectTransform* rt, ::System::Nullable_1<float> padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::ExpandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "ExpandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, padding);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.ExpandTopAnchor
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::ExpandTopAnchor(::UnityEngine::RectTransform* rt, ::System::Nullable_1<float> padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::ExpandTopAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "ExpandTopAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, padding);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.ExpandMiddleLeft
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::ExpandMiddleLeft(::UnityEngine::RectTransform* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::ExpandMiddleLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "ExpandMiddleLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.SetSizeDelta
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::SetSizeDelta(::UnityEngine::RectTransform* rt, float offsetX, float offsetY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::SetSizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "SetSizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(offsetX), ::il2cpp_utils::ExtractType(offsetY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, offsetX, offsetY);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.SetOffsets
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::SetOffsets(::UnityEngine::RectTransform* rt, float minX, float maxX, float minY, float maxY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::SetOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "SetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(minX), ::il2cpp_utils::ExtractType(maxX), ::il2cpp_utils::ExtractType(minY), ::il2cpp_utils::ExtractType(maxY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, minX, maxX, minY, maxY);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.SetPivot
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::SetPivot(::UnityEngine::RectTransform* rt, float pivotX, float pivotY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::SetPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "SetPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(pivotX), ::il2cpp_utils::ExtractType(pivotY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, pivotX, pivotY);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.SetAnchors
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::SetAnchors(::UnityEngine::RectTransform* rt, float minX, float maxX, float minY, float maxY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::SetAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "SetAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(minX), ::il2cpp_utils::ExtractType(maxX), ::il2cpp_utils::ExtractType(minY), ::il2cpp_utils::ExtractType(maxY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt, minX, maxX, minY, maxY);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities.MakeGuides
::UnityEngine::RectTransform* Fusion::StatsInternal::FusionStatsUtilities::MakeGuides(::UnityEngine::RectTransform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::MakeGuides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", "MakeGuides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent);
}
// Autogenerated method: Fusion.StatsInternal.FusionStatsUtilities..cctor
void Fusion::StatsInternal::FusionStatsUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StatsInternal::FusionStatsUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.StatsInternal", "FusionStatsUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.SceneSnapshot
#include "DynamicSceneManagerHelper/SceneSnapshot.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot/Data
#include "DynamicSceneManagerHelper/SceneSnapshot_Data.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<OVRAnchor,DynamicSceneManagerHelper.SceneSnapshot/Data> <Anchors>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SceneSnapshot::Data*>*& DynamicSceneManagerHelper::SceneSnapshot::dyn_$Anchors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::dyn_$Anchors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Anchors>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SceneSnapshot::Data*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManagerHelper.SceneSnapshot.get_Anchors
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SceneSnapshot::Data*>* DynamicSceneManagerHelper::SceneSnapshot::get_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::get_Anchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Anchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SceneSnapshot::Data*>*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManagerHelper.SceneSnapshot.Contains
bool DynamicSceneManagerHelper::SceneSnapshot::Contains(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, anchor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.SceneSnapshot/Data
#include "DynamicSceneManagerHelper/SceneSnapshot_Data.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRAnchor> Children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Rect> Rect
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Rect>& DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rect"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Rect>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Bounds> Bounds
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Bounds>& DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SceneSnapshot::Data::dyn_Bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bounds"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Bounds>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.SnapshotComparer
#include "DynamicSceneManagerHelper/SnapshotComparer.hpp"
// Including type: DynamicSceneManagerHelper.SnapshotComparer/<>c__DisplayClass10_0
#include "DynamicSceneManagerHelper/SnapshotComparer_--c__DisplayClass10_0.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot/Data
#include "DynamicSceneManagerHelper/SceneSnapshot_Data.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly DynamicSceneManagerHelper.SceneSnapshot <BaseSnapshot>k__BackingField
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& DynamicSceneManagerHelper::SnapshotComparer::dyn_$BaseSnapshot$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::dyn_$BaseSnapshot$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BaseSnapshot>k__BackingField"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DynamicSceneManagerHelper.SceneSnapshot <NewSnapshot>k__BackingField
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& DynamicSceneManagerHelper::SnapshotComparer::dyn_$NewSnapshot$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::dyn_$NewSnapshot$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewSnapshot>k__BackingField"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.get_BaseSnapshot
::DynamicSceneManagerHelper::SceneSnapshot* DynamicSceneManagerHelper::SnapshotComparer::get_BaseSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::get_BaseSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DynamicSceneManagerHelper::SceneSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.get_NewSnapshot
::DynamicSceneManagerHelper::SceneSnapshot* DynamicSceneManagerHelper::SnapshotComparer::get_NewSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::get_NewSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DynamicSceneManagerHelper::SceneSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.Compare
::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* DynamicSceneManagerHelper::SnapshotComparer::Compare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.CheckRoomChanges
void DynamicSceneManagerHelper::SnapshotComparer::CheckRoomChanges(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::CheckRoomChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRoomChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changes);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.CheckBoundsChanges
void DynamicSceneManagerHelper::SnapshotComparer::CheckBoundsChanges(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::CheckBoundsChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBoundsChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changes);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.Has2DBounds
bool DynamicSceneManagerHelper::SnapshotComparer::Has2DBounds(::DynamicSceneManagerHelper::SceneSnapshot::Data* data1, ::DynamicSceneManagerHelper::SceneSnapshot::Data* data2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::Has2DBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Has2DBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data1, data2);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.Are2DBoundsDifferent
bool DynamicSceneManagerHelper::SnapshotComparer::Are2DBoundsDifferent(::DynamicSceneManagerHelper::SceneSnapshot::Data* data1, ::DynamicSceneManagerHelper::SceneSnapshot::Data* data2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::Are2DBoundsDifferent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Are2DBoundsDifferent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data1, data2);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.Has3DBounds
bool DynamicSceneManagerHelper::SnapshotComparer::Has3DBounds(::DynamicSceneManagerHelper::SceneSnapshot::Data* data1, ::DynamicSceneManagerHelper::SceneSnapshot::Data* data2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::Has3DBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Has3DBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data1, data2);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer.Are3DBoundsDifferent
bool DynamicSceneManagerHelper::SnapshotComparer::Are3DBoundsDifferent(::DynamicSceneManagerHelper::SceneSnapshot::Data* data1, ::DynamicSceneManagerHelper::SceneSnapshot::Data* data2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::Are3DBoundsDifferent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Are3DBoundsDifferent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data1, data2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.SnapshotComparer/ChangeType
#include "DynamicSceneManagerHelper/SnapshotComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType New
::DynamicSceneManagerHelper::SnapshotComparer::ChangeType DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "New"));
}
// Autogenerated static field setter
// Set static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType New
void DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_New(::DynamicSceneManagerHelper::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "New", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType Missing
::DynamicSceneManagerHelper::SnapshotComparer::ChangeType DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_Missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_Missing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "Missing"));
}
// Autogenerated static field setter
// Set static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType Missing
void DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_Missing(::DynamicSceneManagerHelper::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_Missing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "Missing", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType ChangedId
::DynamicSceneManagerHelper::SnapshotComparer::ChangeType DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_ChangedId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_ChangedId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "ChangedId"));
}
// Autogenerated static field setter
// Set static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType ChangedId
void DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_ChangedId(::DynamicSceneManagerHelper::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_ChangedId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "ChangedId", value));
}
// Autogenerated static field getter
// Get static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType ChangedBounds
::DynamicSceneManagerHelper::SnapshotComparer::ChangeType DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_ChangedBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_get_ChangedBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "ChangedBounds"));
}
// Autogenerated static field setter
// Set static field: static public DynamicSceneManagerHelper.SnapshotComparer/ChangeType ChangedBounds
void DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_ChangedBounds(::DynamicSceneManagerHelper::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::_set_ChangedBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DynamicSceneManagerHelper", "SnapshotComparer/ChangeType", "ChangedBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& DynamicSceneManagerHelper::SnapshotComparer::ChangeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::ChangeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.SnapshotComparer/<>c__DisplayClass10_0
#include "DynamicSceneManagerHelper/SnapshotComparer_--c__DisplayClass10_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRAnchor baseAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::dyn_baseAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::dyn_baseAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManagerHelper.SnapshotComparer/<>c__DisplayClass10_0.<CheckBoundsChanges>b__0
bool DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::$CheckBoundsChanges$b__0(::GlobalNamespace::OVRAnchor newAnchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::SnapshotComparer::$$c__DisplayClass10_0::<CheckBoundsChanges>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckBoundsChanges>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAnchor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newAnchor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.UnityObjectUpdater
#include "DynamicSceneManagerHelper/UnityObjectUpdater.hpp"
// Including type: DynamicSceneManagerHelper.UnityObjectUpdater/<CreateUnityObject>d__0
#include "DynamicSceneManagerHelper/UnityObjectUpdater_-CreateUnityObject-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DynamicSceneManagerHelper.UnityObjectUpdater.CreateUnityObject
::System::Threading::Tasks::Task_1<::UnityEngine::GameObject*>* DynamicSceneManagerHelper::UnityObjectUpdater::CreateUnityObject(::GlobalNamespace::OVRAnchor anchor, ::UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::CreateUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method, anchor, parent);
}
// Autogenerated method: DynamicSceneManagerHelper.UnityObjectUpdater.UpdateUnityObject
void DynamicSceneManagerHelper::UnityObjectUpdater::UpdateUnityObject(::GlobalNamespace::OVRAnchor anchor, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::UpdateUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManagerHelper.UnityObjectUpdater/<CreateUnityObject>d__0
#include "DynamicSceneManagerHelper/UnityObjectUpdater_-CreateUnityObject-d__0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.GameObject> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::GameObject*>& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRAnchor anchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_anchor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject parent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_parent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLocatable <locatable>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLocatable& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$locatable$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$locatable$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<locatable>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLocatable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManagerHelper.UnityObjectUpdater/<CreateUnityObject>d__0.MoveNext
void DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManagerHelper.UnityObjectUpdater/<CreateUnityObject>d__0.SetStateMachine
void DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::DynamicSceneManagerHelper::UnityObjectUpdater::$CreateUnityObject$d__0), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColorGrabbable
#include "OculusSampleFramework/ColorGrabbable.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_GRAB
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_GRAB
void OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
void OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::ColorGrabbable::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] m_meshRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highlight
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ColorGrabbable::dyn_m_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_highlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.get_Highlight
bool OculusSampleFramework::ColorGrabbable::get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::get_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.set_Highlight
void OculusSampleFramework::ColorGrabbable::set_Highlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::set_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.UpdateColor
void OculusSampleFramework::ColorGrabbable::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.Awake
void OculusSampleFramework::ColorGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.SetColor
void OculusSampleFramework::ColorGrabbable::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable..cctor
void OculusSampleFramework::ColorGrabbable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "ColorGrabbable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabBegin
void OculusSampleFramework::ColorGrabbable::GrabBegin(::GlobalNamespace::OVRGrabber* hand, ::UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabEnd
void OculusSampleFramework::ColorGrabbable::GrabEnd(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String m_materialColorField
[[deprecated("Use field access instead!")]] ::StringW& OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialColorField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair m_crosshair
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshair"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabManager m_crosshairManager
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabManager*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshairManager"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& OculusSampleFramework::DistanceGrabbable::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_mpb
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& OculusSampleFramework::DistanceGrabbable::dyn_m_mpb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_mpb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mpb"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_inRange
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_inRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_inRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_targeted
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_targeted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targeted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_InRange
bool OculusSampleFramework::DistanceGrabbable::get_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_InRange
void OculusSampleFramework::DistanceGrabbable::set_InRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_Targeted
bool OculusSampleFramework::DistanceGrabbable::get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_Targeted
void OculusSampleFramework::DistanceGrabbable::set_Targeted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.RefreshCrosshair
void OculusSampleFramework::DistanceGrabbable::RefreshCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::RefreshCrosshair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCrosshair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.Start
void OculusSampleFramework::DistanceGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_spherecastRadius
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_noSnapThreshhold
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_noSnapThreshhold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_preventGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preventGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullVelocity
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullMaxRotationRate
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullMaxRotationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_movingObjectToHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movingObjectToHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxGrabDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxGrabDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_grabObjectsInLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabObjectsInLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_obstructionLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_obstructionLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber m_otherHand
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabber*& OculusSampleFramework::DistanceGrabber::dyn_m_otherHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_otherHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_otherHand"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.DistanceGrabbable m_target
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabbable*& OculusSampleFramework::DistanceGrabber::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_targetCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabber::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.set_UseSpherecast
void OculusSampleFramework::DistanceGrabber::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.HitInfoToGrabbable
::OculusSampleFramework::DistanceGrabbable* OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable(::UnityEngine::RaycastHit hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "DistanceGrabber", "HitInfoToGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::DistanceGrabbable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitInfo);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTarget
bool OculusSampleFramework::DistanceGrabber::FindTarget(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTargetWithSpherecast
bool OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetWithSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Start
void OculusSampleFramework::DistanceGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Update
void OculusSampleFramework::DistanceGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabBegin
void OculusSampleFramework::DistanceGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.MoveGrabbedObject
void OculusSampleFramework::DistanceGrabber::MoveGrabbedObject(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabVolumeEnable
void OculusSampleFramework::DistanceGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.OffhandGrabbed
void OculusSampleFramework::DistanceGrabber::OffhandGrabbed(::GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair/CrosshairState m_state
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair::CrosshairState& OculusSampleFramework::GrabbableCrosshair::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair::CrosshairState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_centerEyeAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_centerEyeAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_targetedCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetedCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_enabledCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabledCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Start
void OculusSampleFramework::GrabbableCrosshair::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.SetState
void OculusSampleFramework::GrabbableCrosshair::SetState(::OculusSampleFramework::GrabbableCrosshair::CrosshairState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Update
void OculusSampleFramework::GrabbableCrosshair::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair/CrosshairState
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_grabVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::GrabManager::dyn_m_grabVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_m_grabVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorInRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorInRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorHighlighted
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorHighlighted"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorOutOfRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorOutOfRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerEnter
void OculusSampleFramework::GrabManager::OnTriggerEnter(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerExit
void OculusSampleFramework::GrabManager::OnTriggerExit(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PauseOnInputLoss
#include "OculusSampleFramework/PauseOnInputLoss.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.Start
void OculusSampleFramework::PauseOnInputLoss::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusLost
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusAcquired
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolTags ToolTags
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolTags& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToolTags"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<OculusSampleFramework.ColliderZone> CollidersTouchingUs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidersTouchingUs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.ColliderZone> _elementsToCleanUp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsToCleanUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnDisable
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.Update
void OculusSampleFramework::BoneCapsuleTriggerLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerEnter
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerExit
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.CleanUpDeadColliders
void OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpDeadColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ENTRY_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ENTRY_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PERP_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PERP_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _proximityZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__proximityZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__proximityZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _contactZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__contactZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _actionZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__actionZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__actionZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController/ContactTest[] _contactTests
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>& OculusSampleFramework::ButtonController::dyn__contactTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactTests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactTests"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonPlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _makeSureToolIsOnPositiveSide
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeSureToolIsOnPositiveSide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localButtonDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::ButtonController::dyn__localButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__localButtonDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localButtonDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableToolTags[] _allValidToolsTags
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::InteractableToolTags>& OculusSampleFramework::ButtonController::dyn__allValidToolsTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allValidToolsTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allValidToolsTags"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::InteractableToolTags>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _toolTagsMask
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::dyn__toolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolTagsMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolTagsMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowMultipleNearFieldInteraction
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ButtonController::dyn__allowMultipleNearFieldInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allowMultipleNearFieldInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowMultipleNearFieldInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableState <CurrentButtonState>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::ButtonController::dyn_$CurrentButtonState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn_$CurrentButtonState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentButtonState>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.InteractableTool,OculusSampleFramework.InteractableState> _toolToState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>*& OculusSampleFramework::ButtonController::dyn__toolToState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolToState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolToState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_LocalButtonDirection
::UnityEngine::Vector3 OculusSampleFramework::ButtonController::get_LocalButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_LocalButtonDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalButtonDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_CurrentButtonState
::OculusSampleFramework::InteractableState OculusSampleFramework::ButtonController::get_CurrentButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_CurrentButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.set_CurrentButtonState
void OculusSampleFramework::ButtonController::set_CurrentButtonState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::set_CurrentButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonController.FireInteractionEventsOnDepth
void OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth(::OculusSampleFramework::InteractableCollisionDepth oldDepth, ::OculusSampleFramework::InteractableTool* collidingTool, ::OculusSampleFramework::InteractionType interactionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireInteractionEventsOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDepth), ::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(interactionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDepth, collidingTool, interactionType);
}
// Autogenerated method: OculusSampleFramework.ButtonController.GetUpcomingStateNearField
::OculusSampleFramework::InteractableState OculusSampleFramework::ButtonController::GetUpcomingStateNearField(::OculusSampleFramework::InteractableState oldState, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::GetUpcomingStateNearField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpcomingStateNearField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newCollisionDepth), ::il2cpp_utils::ExtractType(toolIsInActionZone), ::il2cpp_utils::ExtractType(toolIsInContactZone), ::il2cpp_utils::ExtractType(toolIsInProximity), ::il2cpp_utils::ExtractType(validContact), ::il2cpp_utils::ExtractType(onPositiveSideOfInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableState, false>(this, ___internal__method, oldState, newCollisionDepth, toolIsInActionZone, toolIsInContactZone, toolIsInProximity, validContact, onPositiveSideOfInteractable);
}
// Autogenerated method: OculusSampleFramework.ButtonController.ForceResetButton
void OculusSampleFramework::ButtonController::ForceResetButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ForceResetButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceResetButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.IsValidContact
bool OculusSampleFramework::ButtonController::IsValidContact(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::IsValidContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassEntryTest
bool OculusSampleFramework::ButtonController::PassEntryTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassEntryTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassEntryTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassPerpTest
bool OculusSampleFramework::ButtonController::PassPerpTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassPerpTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassPerpTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_ValidToolTagsMask
int OculusSampleFramework::ButtonController::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.Awake
void OculusSampleFramework::ButtonController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.UpdateCollisionDepth
void OculusSampleFramework::ButtonController::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController/ContactTest
#include "OculusSampleFramework/ButtonController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
void OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
void OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::ContactTest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonTriggerZone
#include "OculusSampleFramework/ButtonTriggerZone.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _parentInteractableObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentInteractableObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable <ParentInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ButtonTriggerZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_Collider
void OculusSampleFramework::ButtonTriggerZone::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_ParentInteractable
void OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable(::OculusSampleFramework::Interactable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.Awake
void OculusSampleFramework::ButtonTriggerZone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.ColliderZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ColliderZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ColliderZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ColliderZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZone Collider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::ColliderZoneArgs::dyn_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Collider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single FrameTime
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractionType InteractionT
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractionType& OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractionT"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Enter
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Enter"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Enter
void OculusSampleFramework::InteractionType::_set_Enter(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Enter", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Stay
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Stay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Stay
void OculusSampleFramework::InteractionType::_set_Stay(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Stay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Exit
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Exit
void OculusSampleFramework::InteractionType::_set_Exit(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Exit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SKELETON_VISUALIZER_NAME
::StringW OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SKELETON_VISUALIZER_NAME
void OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager*>("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
void OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager/HandsVisualMode VisualMode
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager::HandsVisualMode& OculusSampleFramework::HandsManager::dyn_VisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_VisualMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisualMode"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager::HandsVisualMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] _hand
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRHand*>& OculusSampleFramework::HandsManager::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] _handSkeleton
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeleton*>& OculusSampleFramework::HandsManager::dyn__handSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeleton"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer[] _handSkeletonRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>& OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh[] _handMesh
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMesh*>& OculusSampleFramework::HandsManager::dyn__handMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMesh"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer[] _handMeshRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMeshRenderer*>& OculusSampleFramework::HandsManager::dyn__handMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMeshRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _leftMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__leftMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _rightMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__rightMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentHandAlpha
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::HandsManager::dyn__currentHandAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__currentHandAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHandAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HandAlphaId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::dyn_HandAlphaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_HandAlphaId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandAlphaId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHand
void OculusSampleFramework::HandsManager::set_RightHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_RightHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeleton
void OculusSampleFramework::HandsManager::set_RightHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_RightHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMesh
void OculusSampleFramework::HandsManager::set_RightHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_RightHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMeshRenderer
void OculusSampleFramework::HandsManager::set_RightHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHand
void OculusSampleFramework::HandsManager::set_LeftHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_LeftHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeleton
void OculusSampleFramework::HandsManager::set_LeftHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_LeftHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMesh
void OculusSampleFramework::HandsManager::set_LeftHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMeshRenderer
void OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_Instance
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::HandsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_Instance
void OculusSampleFramework::HandsManager::set_Instance(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Awake
void OculusSampleFramework::HandsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Update
void OculusSampleFramework::HandsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.FindSkeletonVisualGameObjects
::System::Collections::IEnumerator* OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSkeletonVisualGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SwitchVisualization
void OculusSampleFramework::HandsManager::SwitchVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SetToCurrentVisualMode
void OculusSampleFramework::HandsManager::SetToCurrentVisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SetToCurrentVisualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCurrentVisualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.GetCapsulesPerBone
::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>* OculusSampleFramework::HandsManager::GetCapsulesPerBone(::GlobalNamespace::OVRSkeleton* skeleton, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::GetCapsulesPerBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "GetCapsulesPerBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeleton, boneId);
}
// Autogenerated method: OculusSampleFramework.HandsManager.IsInitialized
bool OculusSampleFramework::HandsManager::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager/HandsVisualMode
#include "OculusSampleFramework/HandsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.IDisposable.Dispose
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.MoveNext
bool OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.Reset
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _proximityZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__proximityZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__proximityZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _contactZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__contactZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__contactZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _actionZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__actionZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__actionZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ProximityZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ProximityZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ProximityZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProximityZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ContactZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ContactZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ContactZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContactZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ActionZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ActionZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ActionZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActionZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.Interactable/InteractableStateArgsEvent InteractableStateChanged
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable::InteractableStateArgsEvent*& OculusSampleFramework::Interactable::dyn_InteractableStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_InteractableStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableStateChanged"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable::InteractableStateArgsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ProximityCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ProximityCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ProximityCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProximityCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ContactCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ContactCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ContactCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContactCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ActionCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ActionCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ActionCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActionCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ValidToolTagsMask
int OculusSampleFramework::Interactable::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ProximityZoneEvent
void OculusSampleFramework::Interactable::add_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ProximityZoneEvent
void OculusSampleFramework::Interactable::remove_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnProximityZoneEvent
void OculusSampleFramework::Interactable::OnProximityZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnProximityZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ContactZoneEvent
void OculusSampleFramework::Interactable::add_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ContactZoneEvent
void OculusSampleFramework::Interactable::remove_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnContactZoneEvent
void OculusSampleFramework::Interactable::OnContactZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnContactZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ActionZoneEvent
void OculusSampleFramework::Interactable::add_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ActionZoneEvent
void OculusSampleFramework::Interactable::remove_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnActionZoneEvent
void OculusSampleFramework::Interactable::OnActionZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnActionZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.UpdateCollisionDepth
void OculusSampleFramework::Interactable::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated method: OculusSampleFramework.Interactable.Awake
void OculusSampleFramework::Interactable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnDestroy
void OculusSampleFramework::Interactable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth None
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth None
void OculusSampleFramework::InteractableCollisionDepth::_set_None(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Proximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Proximity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Proximity"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
void OculusSampleFramework::InteractableCollisionDepth::_set_Proximity(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Proximity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Proximity", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
void OculusSampleFramework::InteractableCollisionDepth::_set_Contact(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Action
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Action
void OculusSampleFramework::InteractableCollisionDepth::_set_Action(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableCollisionDepth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableState
#include "OculusSampleFramework/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState Default
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState Default
void OculusSampleFramework::InteractableState::_set_Default(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ProximityState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ProximityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ProximityState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ProximityState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ProximityState
void OculusSampleFramework::InteractableState::_set_ProximityState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ProximityState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ProximityState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ContactState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ContactState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ContactState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ContactState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ContactState
void OculusSampleFramework::InteractableState::_set_ContactState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ContactState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ContactState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ActionState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ActionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ActionState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ActionState
void OculusSampleFramework::InteractableState::_set_ActionState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ActionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ActionState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.Interactable Interactable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::InteractableStateArgs::dyn_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool Tool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableStateArgs::dyn_Tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState OldInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OldInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState NewInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZoneArgs ColliderArgs
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZoneArgs*& OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderArgs"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZoneArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableRegistry
#include "OculusSampleFramework/InteractableRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::_get__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_get__interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*>("OculusSampleFramework", "InteractableRegistry", "_interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
void OculusSampleFramework::InteractableRegistry::_set__interactables(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_set__interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableRegistry", "_interactables", value));
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.get_Interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::get_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::get_Interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "get_Interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.RegisterInteractable
void OculusSampleFramework::InteractableRegistry::RegisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.UnregisterInteractable
void OculusSampleFramework::InteractableRegistry::UnregisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry..cctor
void OculusSampleFramework::InteractableRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsCreator
#include "OculusSampleFramework/InteractableToolsCreator.hpp"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] LeftHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] RightHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.Awake
void OculusSampleFramework::InteractableToolsCreator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolsToHands
::System::Collections::IEnumerator* OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands(::ArrayW<::UnityEngine::Transform*> toolObjects, bool isRightHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolsToHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toolObjects), ::il2cpp_utils::ExtractType(isRightHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, toolObjects, isRightHand);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolToHandTransform
void OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform(::UnityEngine::Transform* tool, bool isRightHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolToHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tool), ::il2cpp_utils::ExtractType(isRightHanded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tool, isRightHanded);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] toolObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toolObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRightHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolsCreator <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolsCreator*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolsCreator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.HandsManager <handsManagerObj>5__2
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsManagerObj>5__2"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1/Enumerator<UnityEngine.Transform> <>7__wrap2
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <toolObject>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<toolObject>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton <handSkeletonToAttachTo>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handSkeletonToAttachTo>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.IDisposable.Dispose
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.MoveNext
bool OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.<>m__Finally1
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.Reset
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsInputRouter
#include "OculusSampleFramework/InteractableToolsInputRouter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolsInputRouter*>("OculusSampleFramework", "InteractableToolsInputRouter", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
void OculusSampleFramework::InteractableToolsInputRouter::_set__instance(::OculusSampleFramework::InteractableToolsInputRouter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolsInputRouter", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.get_Instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableToolsInputRouter", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolsInputRouter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.RegisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UnregisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.Update
void OculusSampleFramework::InteractableToolsInputRouter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateToolsAndEnableState
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool toolsAreEnabledThisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToolsAndEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(toolsAreEnabledThisFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, toolsAreEnabledThisFrame);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateTools
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateTools(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool resetCollisionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateTools");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTools", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(resetCollisionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, resetCollisionData);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.ToggleToolsEnableState
void OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleToolsEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tools, enableState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeTool
#include "OculusSampleFramework/FingerTipPokeTool.hpp"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_VELOCITY_FRAMES
int OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_VELOCITY_FRAMES
void OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.FingerTipPokeToolView _fingerTipPokeToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeToolView*& OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerTipPokeToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandFinger _fingerToFollow
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::HandFinger& OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerToFollow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _velocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currVelocityFrame
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currVelocityFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sampledMaxFramesAlready
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampledMaxFramesAlready"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::FingerTipPokeTool::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>& OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneCapsuleTriggerLogic"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastScale
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeTool::dyn__lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBoneCapsule _capsuleToTrack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBoneCapsule*& OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsuleToTrack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoneCapsule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.AttachTriggerLogic
::System::Collections::IEnumerator* OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachTriggerLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Update
void OculusSampleFramework::FingerTipPokeTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.UpdateAverageVelocity
void OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverageVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.CheckAndUpdateScale
void OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndUpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::FingerTipPokeTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::FingerTipPokeTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_IsFarFieldTool
bool OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_EnableState
bool OculusSampleFramework::FingerTipPokeTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.set_EnableState
void OculusSampleFramework::FingerTipPokeTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Initialize
void OculusSampleFramework::FingerTipPokeTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.FocusOnInteractable
void OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.DeFocus
void OculusSampleFramework::FingerTipPokeTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.FingerTipPokeTool <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeTool*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.IDisposable.Dispose
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.MoveNext
bool OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.Reset
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _sphereMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ToolActivateState>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ToolActivateState>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SphereRadius>k__BackingField
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SphereRadius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_InteractableTool
void OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_EnableState
bool OculusSampleFramework::FingerTipPokeToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_EnableState
void OculusSampleFramework::FingerTipPokeToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_ToolActivateState
bool OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_ToolActivateState
void OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_SphereRadius
float OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_SphereRadius
void OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.Awake
void OculusSampleFramework::FingerTipPokeToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.SetFocusedInteractable
void OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags None
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags None
void OculusSampleFramework::InteractableToolTags::_set_None(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Ray
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Ray
void OculusSampleFramework::InteractableToolTags::_set_Ray(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Ray", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Poke
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Poke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Poke");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Poke"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Poke
void OculusSampleFramework::InteractableToolTags::_set_Poke(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Poke");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Poke", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags All
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "All"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags All
void OculusSampleFramework::InteractableToolTags::_set_All(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolTags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState Inactive
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState Inactive
void OculusSampleFramework::ToolInputState::_set_Inactive(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDown(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
void OculusSampleFramework::ToolInputState::_set_PrimaryInputUp(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ToolInputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.ColliderZone InteractableCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableCollisionDepth CollisionDepth
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableCollisionDepth& OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionDepth"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableCollisionDepth*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRightHandedTool>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRightHandedTool>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Velocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <InteractionPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractionPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<OculusSampleFramework.InteractableCollisionInfo> _currentIntersectingObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentIntersectingObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _addedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__addedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__addedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _removedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__removedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__removedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _remainingInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__remainingInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__remainingInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remainingInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _currInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _prevInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTransform
::UnityEngine::Transform* OculusSampleFramework::InteractableTool::get_ToolTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsRightHandedTool
bool OculusSampleFramework::InteractableTool::get_IsRightHandedTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_IsRightHandedTool
void OculusSampleFramework::InteractableTool::set_IsRightHandedTool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::InteractableTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsFarFieldTool
bool OculusSampleFramework::InteractableTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_Velocity
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_Velocity
void OculusSampleFramework::InteractableTool::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_InteractionPosition
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_InteractionPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_InteractionPosition
void OculusSampleFramework::InteractableTool::set_InteractionPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetCurrentIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.FocusOnInteractable
void OculusSampleFramework::InteractableTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.DeFocus
void OculusSampleFramework::InteractableTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_EnableState
bool OculusSampleFramework::InteractableTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_EnableState
void OculusSampleFramework::InteractableTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.Initialize
void OculusSampleFramework::InteractableTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetFirstCurrentCollisionInfo
::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*> OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstCurrentCollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.ClearAllCurrentCollisionInfos
void OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllCurrentCollisionInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateCurrentCollisionsBasedOnDepth
void OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateLatestCollisionData
void OculusSampleFramework::InteractableTool::UpdateLatestCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateLatestCollisionData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolView
#include "OculusSampleFramework/InteractableToolView.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::InteractableToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.SetFocusedInteractable
void OculusSampleFramework::InteractableToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_EnableState
bool OculusSampleFramework::InteractableToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_EnableState
void OculusSampleFramework::InteractableToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_ToolActivateState
bool OculusSampleFramework::InteractableToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_ToolActivateState
void OculusSampleFramework::InteractableToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single PINCH_STRENGTH_THRESHOLD
float OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PINCH_STRENGTH_THRESHOLD
void OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule/PinchState _currPinchState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule::PinchState& OculusSampleFramework::PinchStateModule::dyn__currPinchState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__currPinchState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currPinchState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule::PinchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _firstFocusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFocusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchUpAndDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchUpAndDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchSteadyOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchSteadyOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.UpdateState
void OculusSampleFramework::PinchStateModule::UpdateState(::GlobalNamespace::OVRHand* hand, ::OculusSampleFramework::Interactable* currFocusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(currFocusedInteractable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, currFocusedInteractable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule/PinchState
#include "OculusSampleFramework/PinchStateModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState None
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState None
void OculusSampleFramework::PinchStateModule::PinchState::_set_None(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::PinchStateModule::PinchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayTool
#include "OculusSampleFramework/RayTool.hpp"
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
float OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
void OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COLLIDER_RADIUS
float OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COLLIDER_RADIUS
void OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
int OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
void OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.RayToolView _rayToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::RayToolView*& OculusSampleFramework::RayTool::dyn__rayToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__rayToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::RayToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farFieldMaxDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__farFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__farFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule _pinchStateModule
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule*& OculusSampleFramework::RayTool::dyn__pinchStateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__pinchStateModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchStateModule"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _focusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__focusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__focusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _collidersOverlapped
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__collidersOverlapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__collidersOverlapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersOverlapped"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _currInteractableCastedAgainst
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableCastedAgainst"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleReleaseDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleReleaseDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] _primaryHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& OculusSampleFramework::RayTool::dyn__primaryHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__primaryHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _secondaryOverlapResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__secondaryOverlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__secondaryOverlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryOverlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayTool::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayTool.OnDestroy
void OculusSampleFramework::RayTool::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.Update
void OculusSampleFramework::RayTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetRayCastOrigin
::UnityEngine::Vector3 OculusSampleFramework::RayTool::GetRayCastOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetRayCastOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRayCastOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.HasRayReleasedInteractable
bool OculusSampleFramework::RayTool::HasRayReleasedInteractable(::OculusSampleFramework::Interactable* focusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::HasRayReleasedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRayReleasedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, focusedInteractable);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindTargetInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindTargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindTargetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindPrimaryRaycastHit
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindPrimaryRaycastHit(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindPrimaryRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrimaryRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindInteractableViaConeTest
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindInteractableViaConeTest(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindInteractableViaConeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractableViaConeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::RayTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::RayTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_IsFarFieldTool
bool OculusSampleFramework::RayTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_EnableState
bool OculusSampleFramework::RayTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.set_EnableState
void OculusSampleFramework::RayTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayTool.Initialize
void OculusSampleFramework::RayTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::RayTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FocusOnInteractable
void OculusSampleFramework::RayTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.RayTool.DeFocus
void OculusSampleFramework::RayTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
int OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
void OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
float OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
void OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& OculusSampleFramework::RayToolView::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _toolActivateState
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayToolView::dyn__toolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__toolActivateState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolActivateState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _focusedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__focusedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__focusedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] linePositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::RayToolView::dyn_linePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_linePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _oldColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__oldColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__oldColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _highLightColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__highLightColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__highLightColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highLightColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_EnableState
bool OculusSampleFramework::RayToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_EnableState
void OculusSampleFramework::RayToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_ToolActivateState
bool OculusSampleFramework::RayToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_ToolActivateState
void OculusSampleFramework::RayToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Awake
void OculusSampleFramework::RayToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::RayToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_InteractableTool
void OculusSampleFramework::RayToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.SetFocusedInteractable
void OculusSampleFramework::RayToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Update
void OculusSampleFramework::RayToolView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.GetPointOnBezierCurve
::UnityEngine::Vector3 OculusSampleFramework::RayToolView::GetPointOnBezierCurve(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::GetPointOnBezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "RayToolView", "GetPointOnBezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabberSample
#include "OculusSampleFramework/DistanceGrabberSample.hpp"
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabberSample::dyn_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabberSample::dyn_allowGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_allowGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber[] m_grabbers
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::DistanceGrabber*>& OculusSampleFramework::DistanceGrabberSample::dyn_m_grabbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_m_grabbers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabbers"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::DistanceGrabber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabberSample::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.set_UseSpherecast
void OculusSampleFramework::DistanceGrabberSample::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.get_AllowGrabThroughWalls
bool OculusSampleFramework::DistanceGrabberSample::get_AllowGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::get_AllowGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.set_AllowGrabThroughWalls
void OculusSampleFramework::DistanceGrabberSample::set_AllowGrabThroughWalls(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::set_AllowGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.Start
void OculusSampleFramework::DistanceGrabberSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.ToggleSphereCasting
void OculusSampleFramework::DistanceGrabberSample::ToggleSphereCasting(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::ToggleSphereCasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleSphereCasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.ToggleGrabThroughWalls
void OculusSampleFramework::DistanceGrabberSample::ToggleGrabThroughWalls(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::ToggleGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ControllerBoxController
#include "OculusSampleFramework/ControllerBoxController.hpp"
// Including type: OculusSampleFramework.TrainLocomotive
#include "OculusSampleFramework/TrainLocomotive.hpp"
// Including type: OculusSampleFramework.CowController
#include "OculusSampleFramework/CowController.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrainLocomotive _locomotive
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainLocomotive*& OculusSampleFramework::ControllerBoxController::dyn__locomotive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::dyn__locomotive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locomotive"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainLocomotive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.CowController _cowController
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::CowController*& OculusSampleFramework::ControllerBoxController::dyn__cowController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::dyn__cowController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cowController"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::CowController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.Awake
void OculusSampleFramework::ControllerBoxController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.StartStopStateChanged
void OculusSampleFramework::ControllerBoxController::StartStopStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::StartStopStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStopStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.DecreaseSpeedStateChanged
void OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.IncreaseSpeedStateChanged
void OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.SmokeButtonStateChanged
void OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmokeButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.WhistleButtonStateChanged
void OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhistleButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.ReverseButtonStateChanged
void OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.SwitchVisualization
void OculusSampleFramework::ControllerBoxController::SwitchVisualization(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.GoMoo
void OculusSampleFramework::ControllerBoxController::GoMoo(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::GoMoo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoMoo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.CowController
#include "OculusSampleFramework/CowController.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _cowAnimation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& OculusSampleFramework::CowController::dyn__cowAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::dyn__cowAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cowAnimation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _mooCowAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::CowController::dyn__mooCowAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::dyn__mooCowAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mooCowAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.CowController.Start
void OculusSampleFramework::CowController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.CowController.PlayMooSound
void OculusSampleFramework::CowController::PlayMooSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::PlayMooSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayMooSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.CowController.GoMooCowGo
void OculusSampleFramework::CowController::GoMooCowGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::GoMooCowGo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoMooCowGo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PanelHMDFollower
#include "OculusSampleFramework/PanelHMDFollower.hpp"
// Including type: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13
#include "OculusSampleFramework/PanelHMDFollower_-LerpToHMD-d__13.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single TOTAL_DURATION
float OculusSampleFramework::PanelHMDFollower::_get_TOTAL_DURATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_get_TOTAL_DURATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PanelHMDFollower", "TOTAL_DURATION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TOTAL_DURATION
void OculusSampleFramework::PanelHMDFollower::_set_TOTAL_DURATION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_set_TOTAL_DURATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PanelHMDFollower", "TOTAL_DURATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HMD_MOVEMENT_THRESHOLD
float OculusSampleFramework::PanelHMDFollower::_get_HMD_MOVEMENT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_get_HMD_MOVEMENT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PanelHMDFollower", "HMD_MOVEMENT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HMD_MOVEMENT_THRESHOLD
void OculusSampleFramework::PanelHMDFollower::_set_HMD_MOVEMENT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_set_HMD_MOVEMENT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PanelHMDFollower", "HMD_MOVEMENT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__minDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__minDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minZDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__minZDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__minZDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minZDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& OculusSampleFramework::PanelHMDFollower::dyn__cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _panelInitialPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__panelInitialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__panelInitialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_panelInitialPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::PanelHMDFollower::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastMovedToPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__lastMovedToPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__lastMovedToPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastMovedToPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.Awake
void OculusSampleFramework::PanelHMDFollower::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.Update
void OculusSampleFramework::PanelHMDFollower::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.CalculateIdealAnchorPosition
::UnityEngine::Vector3 OculusSampleFramework::PanelHMDFollower::CalculateIdealAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::CalculateIdealAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateIdealAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.LerpToHMD
::System::Collections::IEnumerator* OculusSampleFramework::PanelHMDFollower::LerpToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::LerpToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13
#include "OculusSampleFramework/PanelHMDFollower_-LerpToHMD-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.PanelHMDFollower <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PanelHMDFollower*& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PanelHMDFollower**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <newPanelPosition>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$newPanelPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$newPanelPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newPanelPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$startTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$startTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endTime>5__4
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$endTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$endTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.IDisposable.Dispose
void OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.MoveNext
bool OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.IEnumerator.Reset
void OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.SelectionCylinder
#include "OculusSampleFramework/SelectionCylinder.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _colorId
int OculusSampleFramework::SelectionCylinder::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "SelectionCylinder", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _colorId
void OculusSampleFramework::SelectionCylinder::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "SelectionCylinder", "_colorId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _selectionMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::SelectionCylinder::dyn__selectionMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__selectionMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _selectionMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& OculusSampleFramework::SelectionCylinder::dyn__selectionMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__selectionMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _defaultSelectionColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& OculusSampleFramework::SelectionCylinder::dyn__defaultSelectionColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__defaultSelectionColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSelectionColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _highlightColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& OculusSampleFramework::SelectionCylinder::dyn__highlightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__highlightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.SelectionCylinder/SelectionState _currSelectionState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::SelectionCylinder::SelectionState& OculusSampleFramework::SelectionCylinder::dyn__currSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__currSelectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currSelectionState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::SelectionCylinder::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.get_CurrSelectionState
::OculusSampleFramework::SelectionCylinder::SelectionState OculusSampleFramework::SelectionCylinder::get_CurrSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::get_CurrSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::SelectionCylinder::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.set_CurrSelectionState
void OculusSampleFramework::SelectionCylinder::set_CurrSelectionState(::OculusSampleFramework::SelectionCylinder::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::set_CurrSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.Awake
void OculusSampleFramework::SelectionCylinder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.OnDestroy
void OculusSampleFramework::SelectionCylinder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.AffectSelectionColor
void OculusSampleFramework::SelectionCylinder::AffectSelectionColor(::ArrayW<::UnityEngine::Color> newColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::AffectSelectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AffectSelectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColors);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder..cctor
void OculusSampleFramework::SelectionCylinder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "SelectionCylinder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
