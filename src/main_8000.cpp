// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHaptics/OVRHapticsOutput m_output
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHaptics::OVRHapticsOutput*& GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_output"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHaptics::OVRHapticsOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_lowLatencyMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lowLatencyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_paddingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_prevSamplesQueued
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueued"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_prevSamplesQueuedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueuedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionMisses
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionMisses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numUnderruns
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numUnderruns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_controller
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRNativeBuffer m_nativeBuffer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRNativeBuffer*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nativeBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRNativeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip m_paddingClip
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingClip"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 PrevSampleRateHz
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_PrevSampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_PrevSampleRateHz");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevSampleRateHz"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ReadCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip <Clip>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clip>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_ReadCount
int GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_ReadCount
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_Clip
::GlobalNamespace::OVRHapticsClip* GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHapticsClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_Clip
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip(::GlobalNamespace::OVRHapticsClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Capacity>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capacity>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Samples>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Samples>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHapticsClip.get_Count
int GlobalNamespace::OVRHapticsClip::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Count
void GlobalNamespace::OVRHapticsClip::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Capacity
int GlobalNamespace::OVRHapticsClip::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Capacity
void GlobalNamespace::OVRHapticsClip::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Samples
::ArrayW<uint8_t> GlobalNamespace::OVRHapticsClip::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Samples
void GlobalNamespace::OVRHapticsClip::set_Samples(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.WriteSample
void GlobalNamespace::OVRHapticsClip::WriteSample(uint8_t sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::WriteSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: OVRHapticsClip.Reset
void GlobalNamespace::OVRHapticsClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.InitializeFromAudioFloatTrack
void GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack(::ArrayW<float> sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFromAudioFloatTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceData), ::il2cpp_utils::ExtractType(sourceFrequency), ::il2cpp_utils::ExtractType(sourceChannelCount), ::il2cpp_utils::ExtractType(sourceChannel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceData, sourceFrequency, sourceChannelCount, sourceChannel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X_PITCH
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X_PITCH
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_Y
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_Y
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_HEIGHT
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_HEIGHT
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_ROLL
float GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MAX_ROLL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_ROLL
void GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MAX_ROLL", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRHeadsetEmulator/OpMode opMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHeadsetEmulator::OpMode& GlobalNamespace::OVRHeadsetEmulator::dyn_opMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_opMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHeadsetEmulator::OpMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseOnRelease
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseOnRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseByMiddleMouseButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseByMiddleMouseButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] activateKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] pitchKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager*& GlobalNamespace::OVRHeadsetEmulator::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastFrameEmulationActivated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFrameEmulationActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetTranslation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetTranslation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSentEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSentEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emulatorHasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emulatorHasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CursorLockMode previousCursorLockMode
[[deprecated("Use field access instead!")]] ::UnityEngine::CursorLockMode& GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousCursorLockMode"))->offset;
  return *reinterpret_cast<::UnityEngine::CursorLockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHeadsetEmulator.Start
void GlobalNamespace::OVRHeadsetEmulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.Update
void GlobalNamespace::OVRHeadsetEmulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsEmulationActivated
bool GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmulationActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsTweakingPitch
bool GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTweakingPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator/OpMode
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode Off
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode Off
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode EditorOnly
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "EditorOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode EditorOnly
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "EditorOnly", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "AlwaysOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "AlwaysOn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter.hpp"
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRSkeletonMetadata.hpp"
// Including type: OVRUnityHumanoidSkeletonRetargeter/JointAdjustment
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_JointAdjustment.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata _sourceSkeletonData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__sourceSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__sourceSkeletonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceSkeletonData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata _sourceSkeletonTPoseData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__sourceSkeletonTPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__sourceSkeletonTPoseData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceSkeletonTPoseData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata _targetSkeletonData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__targetSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__targetSkeletonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetSkeletonData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animatorTargetSkeleton
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__animatorTargetSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__animatorTargetSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animatorTargetSkeleton"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> _customBoneIdToHumanBodyBone
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__customBoneIdToHumanBodyBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__customBoneIdToHumanBodyBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customBoneIdToHumanBodyBone"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,UnityEngine.Quaternion> _targetTPoseRotations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::UnityEngine::Quaternion>*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__targetTPoseRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__targetTPoseRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTPoseRotations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastSkelChangeCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__lastSkelChangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__lastSkelChangeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSkelChangeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRUnityHumanoidSkeletonRetargeter/JointAdjustment[] _adjustments
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment*>& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__adjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__adjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustments"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection[] _bodySectionsToAlign
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__bodySectionsToAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__bodySectionsToAlign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodySectionsToAlign"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection[] _bodySectionToPosition
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__bodySectionToPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::dyn__bodySectionToPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodySectionToPosition"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_SourceSkeletonData
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_SourceSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_SourceSkeletonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceSkeletonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_SourceSkeletonTPoseData
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_SourceSkeletonTPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_SourceSkeletonTPoseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceSkeletonTPoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_TargetSkeletonData
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_TargetSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_TargetSkeletonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetSkeletonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_AnimatorTargetSkeleton
::UnityEngine::Animator* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_AnimatorTargetSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_AnimatorTargetSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnimatorTargetSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_CustomBoneIdToHumanBodyBone
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_CustomBoneIdToHumanBodyBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_CustomBoneIdToHumanBodyBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomBoneIdToHumanBodyBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_TargetTPoseRotations
::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::UnityEngine::Quaternion>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_TargetTPoseRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_TargetTPoseRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetTPoseRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::UnityEngine::Quaternion>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_Adjustments
::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment*> GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_Adjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_Adjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Adjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_BodySectionsToAlign
::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection> GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_BodySectionsToAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_BodySectionsToAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BodySectionsToAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.get_BodySectionToPosition
::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection> GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_BodySectionToPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::get_BodySectionToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BodySectionToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.ValidateGameObjectForUnityHumanoidRetargeting
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::ValidateGameObjectForUnityHumanoidRetargeting(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::ValidateGameObjectForUnityHumanoidRetargeting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter", "ValidateGameObjectForUnityHumanoidRetargeting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.StoreTTargetPoseRotations
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::StoreTTargetPoseRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::StoreTTargetPoseRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreTTargetPoseRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.CreateCustomBoneIdToHumanBodyBoneMapping
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::CreateCustomBoneIdToHumanBodyBoneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::CreateCustomBoneIdToHumanBodyBoneMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCustomBoneIdToHumanBodyBoneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.CopyBoneIdToHumanBodyBoneMapping
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::CopyBoneIdToHumanBodyBoneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::CopyBoneIdToHumanBodyBoneMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyBoneIdToHumanBodyBoneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.AdjustCustomBoneIdToHumanBodyBoneMapping
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::AdjustCustomBoneIdToHumanBodyBoneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::AdjustCustomBoneIdToHumanBodyBoneMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustCustomBoneIdToHumanBodyBoneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.RemoveMappingCorrespondingToHumanBodyBone
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::RemoveMappingCorrespondingToHumanBodyBone(::UnityEngine::HumanBodyBones boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::RemoveMappingCorrespondingToHumanBodyBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMappingCorrespondingToHumanBodyBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boneId);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.RecomputeSkeletalOffsetsIfNecessary
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::RecomputeSkeletalOffsetsIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::RecomputeSkeletalOffsetsIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecomputeSkeletalOffsetsIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.ComputeOffsetsUsingSkeletonComponent
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::ComputeOffsetsUsingSkeletonComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::ComputeOffsetsUsingSkeletonComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeOffsetsUsingSkeletonComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.IsBodySectionInArray
bool GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::IsBodySectionInArray(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection bodySectionToCheck, ::ArrayW<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection> sectionArrayToCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::IsBodySectionInArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter", "IsBodySectionInArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bodySectionToCheck), ::il2cpp_utils::ExtractType(sectionArrayToCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bodySectionToCheck, sectionArrayToCheck);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.AlignTargetWithSource
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::AlignTargetWithSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::AlignTargetWithSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlignTargetWithSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.FindAdjustment
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::FindAdjustment(::UnityEngine::HumanBodyBones boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::FindAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment*, false>(this, ___internal__method, boneId);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.Start
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSkeleton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter.Update
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSkeleton*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter.hpp"
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRHumanBodyBonesMappings_BodyTrackingBoneId.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,System.Tuple`2<UnityEngine.HumanBodyBones,UnityEngine.HumanBodyBones>> BoneToJointPair
::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::System::Tuple_2<::UnityEngine::HumanBodyBones, ::UnityEngine::HumanBodyBones>*>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneToJointPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneToJointPair");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::System::Tuple_2<::UnityEngine::HumanBodyBones, ::UnityEngine::HumanBodyBones>*>*>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneToJointPair")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,System.Tuple`2<UnityEngine.HumanBodyBones,UnityEngine.HumanBodyBones>> BoneToJointPair
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneToJointPair(::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::System::Tuple_2<::UnityEngine::HumanBodyBones, ::UnityEngine::HumanBodyBones>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneToJointPair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneToJointPair", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection> BoneToBodySection
::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneToBodySection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneToBodySection");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>*>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneToBodySection")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection> BoneToBodySection
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneToBodySection(::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneToBodySection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneToBodySection", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> BoneIdToHumanBodyBone
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneIdToHumanBodyBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneIdToHumanBodyBone");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>*>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneIdToHumanBodyBone")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,UnityEngine.HumanBodyBones> BoneIdToHumanBodyBone
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneIdToHumanBodyBone(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneIdToHumanBodyBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneIdToHumanBodyBone", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,System.Tuple`2<OVRSkeleton/BoneId,OVRSkeleton/BoneId>> BoneIdToJointPair
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::System::Tuple_2<::GlobalNamespace::OVRSkeleton::BoneId, ::GlobalNamespace::OVRSkeleton::BoneId>*>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneIdToJointPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_get_BoneIdToJointPair");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::System::Tuple_2<::GlobalNamespace::OVRSkeleton::BoneId, ::GlobalNamespace::OVRSkeleton::BoneId>*>*>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneIdToJointPair")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<OVRSkeleton/BoneId,System.Tuple`2<OVRSkeleton/BoneId,OVRSkeleton/BoneId>> BoneIdToJointPair
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneIdToJointPair(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::System::Tuple_2<::GlobalNamespace::OVRSkeleton::BoneId, ::GlobalNamespace::OVRSkeleton::BoneId>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_set_BoneIdToJointPair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", "BoneIdToJointPair", value));
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings..cctor
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftLeg
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftLeg"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftLeg
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftLeg(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftLeg", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftFoot
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftFoot
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftFoot(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightLeg
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightLeg"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightLeg
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightLeg(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightLeg", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightFoot
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightFoot
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightFoot(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftArm
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftArm"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftArm
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftArm(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftArm", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftHand
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection LeftHand
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftHand(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightArm
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightArm"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightArm
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightArm(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightArm", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightHand
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection RightHand
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightHand(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Hips
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Hips"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Hips
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Hips(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Hips", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Back
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Back
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Back(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Neck
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Neck"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Neck
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Neck(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Neck", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Head
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection Head
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Head(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodySection", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodySection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRHumanBodyBonesMappings_BodyTrackingBoneId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Start
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Start
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Start(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Root
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Root"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Root
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Root(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Root", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Hips
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Hips"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Hips
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Hips(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Hips", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineLower
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineLower"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineLower
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineLower(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineLower", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineMiddle
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineMiddle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineMiddle"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineMiddle
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineMiddle(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineMiddle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineMiddle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineUpper
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_SpineUpper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineUpper"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_SpineUpper
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineUpper(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_SpineUpper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_SpineUpper", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Chest
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Chest"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Chest
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Chest(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Chest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Neck
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Neck"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Neck
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Neck(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Neck", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Head
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_Head
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Head(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_Head", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftShoulder
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftShoulder
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftShoulder(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftScapula
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftScapula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftScapula");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftScapula"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftScapula
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftScapula(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftScapula");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftScapula", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftArmUpper
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftArmUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftArmUpper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftArmUpper"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftArmUpper
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftArmUpper(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftArmUpper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftArmUpper", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftArmLower
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftArmLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftArmLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftArmLower"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftArmLower
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftArmLower(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftArmLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftArmLower", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandWristTwist
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandWristTwist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandWristTwist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandWristTwist"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandWristTwist
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandWristTwist(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandWristTwist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandWristTwist", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightShoulder
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightShoulder
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightShoulder(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightScapula
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightScapula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightScapula");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightScapula"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightScapula
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightScapula(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightScapula");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightScapula", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightArmUpper
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightArmUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightArmUpper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightArmUpper"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightArmUpper
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightArmUpper(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightArmUpper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightArmUpper", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightArmLower
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightArmLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightArmLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightArmLower"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightArmLower
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightArmLower(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightArmLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightArmLower", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandWristTwist
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandWristTwist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandWristTwist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandWristTwist"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandWristTwist
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandWristTwist(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandWristTwist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandWristTwist", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandPalm
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandPalm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandPalm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandPalm"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandPalm
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandPalm(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandPalm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandPalm", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandWrist
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandWrist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandWrist"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandWrist
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandWrist(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandWrist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandWrist", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandThumbTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandIndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandIndexTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandIndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandIndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandMiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandMiddleTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandMiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandMiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandRingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandRingTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandRingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandRingTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_LeftHandLittleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_LeftHandLittleTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_LeftHandLittleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_LeftHandLittleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandPalm
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandPalm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandPalm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandPalm"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandPalm
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandPalm(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandPalm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandPalm", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandWrist
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandWrist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandWrist"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandWrist
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandWrist(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandWrist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandWrist", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandThumbTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandIndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandIndexTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandIndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandIndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandMiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandMiddleTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandMiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandMiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandRingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandRingTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandRingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandRingTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleMetacarpal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleMetacarpal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleMetacarpal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleMetacarpal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleMetacarpal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleMetacarpal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleMetacarpal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleMetacarpal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleProximal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleProximal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleProximal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleIntermediate
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleIntermediate
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleIntermediate(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleDistal
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleDistal
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleDistal(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleTip
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_RightHandLittleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_RightHandLittleTip
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleTip(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_RightHandLittleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_RightHandLittleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_End
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Body_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_End"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Body_End
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_End(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Body_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Body_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId NoOverride
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_NoOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_NoOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "NoOverride"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId NoOverride
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_NoOverride(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_NoOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "NoOverride", value));
}
// Autogenerated static field getter
// Get static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Remove
::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId>("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId Remove
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Remove(::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId", "Remove", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRSkeletonMetadata.hpp"
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRSkeletonMetadata_BoneData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: OVRBone
#include "GlobalNamespace/OVRBone.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.HumanBodyBones,OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData> <BodyToBoneData>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::dyn_$BodyToBoneData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::dyn_$BodyToBoneData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BodyToBoneData>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.HumanBodyBones[] _boneEnumValues
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::HumanBodyBones>& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::dyn__boneEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::dyn__boneEnumValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneEnumValues"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::HumanBodyBones>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.get_BodyToBoneData
::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::get_BodyToBoneData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::get_BodyToBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BodyToBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::HumanBodyBones, ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.BuildBoneDataSkeleton
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneDataSkeleton(::GlobalNamespace::OVRSkeleton* skeleton, bool useBindPose, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* customBoneIdToHumanBodyBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneDataSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildBoneDataSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(useBindPose), ::il2cpp_utils::ExtractType(customBoneIdToHumanBodyBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skeleton, useBindPose, customBoneIdToHumanBodyBone);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.AssembleSkeleton
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::AssembleSkeleton(::GlobalNamespace::OVRSkeleton* skeleton, bool useBindPose, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSkeleton::BoneId, ::UnityEngine::HumanBodyBones>* customBoneIdToHumanBodyBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::AssembleSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssembleSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(useBindPose), ::il2cpp_utils::ExtractType(customBoneIdToHumanBodyBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skeleton, useBindPose, customBoneIdToHumanBodyBone);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.FindBoneWithBoneId
::GlobalNamespace::OVRBone* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindBoneWithBoneId(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRBone*>* bones, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindBoneWithBoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata", "FindBoneWithBoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, boneId);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.BuildBoneData
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneData(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.BuildCoordinateAxesForAllBones
void GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildCoordinateAxesForAllBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BuildCoordinateAxesForAllBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCoordinateAxesForAllBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.FindFirstChild
::UnityEngine::Transform* GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindFirstChild(::UnityEngine::Transform* startTransform, ::UnityEngine::Transform* currTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::FindFirstChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata", "FindFirstChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTransform), ::il2cpp_utils::ExtractType(currTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startTransform, currTransform);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.CreateQuaternionForBoneDataWithRightVec
::UnityEngine::Quaternion GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneDataWithRightVec(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Vector3 toPosition, ::UnityEngine::Vector3 rightVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneDataWithRightVec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata", "CreateQuaternionForBoneDataWithRightVec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPosition), ::il2cpp_utils::ExtractType(toPosition), ::il2cpp_utils::ExtractType(rightVector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromPosition, toPosition, rightVector);
}
// Autogenerated method: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata.CreateQuaternionForBoneData
::UnityEngine::Quaternion GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneData(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Vector3 toPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::CreateQuaternionForBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata", "CreateQuaternionForBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPosition), ::il2cpp_utils::ExtractType(toPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromPosition, toPosition);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/OVRSkeletonMetadata/BoneData
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_OVRSkeletonMetadata_BoneData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OriginalJoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_OriginalJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_OriginalJoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalJoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 FromPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_FromPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_FromPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FromPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ToPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_ToPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_ToPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform JointPairStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JointPairStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform JointPairEnd
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JointPairEnd"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion JointPairOrientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_JointPairOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JointPairOrientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Quaternion> CorrectionQuaternion
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_CorrectionQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_CorrectionQuaternion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CorrectionQuaternion"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform ParentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_ParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_ParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DegenerateJoint
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_DegenerateJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRSkeletonMetadata::BoneData::dyn_DegenerateJoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DegenerateJoint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRUnityHumanoidSkeletonRetargeter/JointAdjustment
#include "GlobalNamespace/OVRUnityHumanoidSkeletonRetargeter_JointAdjustment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.HumanBodyBones Joint
[[deprecated("Use field access instead!")]] ::UnityEngine::HumanBodyBones& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_Joint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_Joint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joint"))->offset;
  return *reinterpret_cast<::UnityEngine::HumanBodyBones*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion RotationChange
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_RotationChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_RotationChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationChange"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableRotationTransform
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_DisableRotationTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_DisableRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableRotationTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisablePositionTransform
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_DisablePositionTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_DisablePositionTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisablePositionTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRUnityHumanoidSkeletonRetargeter/OVRHumanBodyBonesMappings/BodyTrackingBoneId BoneIdOverrideValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId& GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_BoneIdOverrideValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::JointAdjustment::dyn_BoneIdOverrideValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BoneIdOverrideValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRUnityHumanoidSkeletonRetargeter::OVRHumanBodyBonesMappings::BodyTrackingBoneId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
// Including type: OVRInput/HapticsLocation
#include "GlobalNamespace/OVRInput_HapticsLocation.hpp"
// Including type: OVRInput/InteractionProfile
#include "GlobalNamespace/OVRInput_InteractionProfile.hpp"
// Including type: OVRInput/Hand
#include "GlobalNamespace/OVRInput_Hand.hpp"
// Including type: OVRInput/InputDeviceShowState
#include "GlobalNamespace/OVRInput_InputDeviceShowState.hpp"
// Including type: OVRInput/ControllerInHandState
#include "GlobalNamespace/OVRInput_ControllerInHandState.hpp"
// Including type: OVRInput/HapticsAmplitudeEnvelopeVibration
#include "GlobalNamespace/OVRInput_HapticsAmplitudeEnvelopeVibration.hpp"
// Including type: OVRInput/HapticsPcmVibration
#include "GlobalNamespace/OVRInput_HapticsPcmVibration.hpp"
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_DEADZONE_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_DEADZONE_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* GlobalNamespace::OVRInput::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>*>("", "OVRInput", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
void GlobalNamespace::OVRInput::_set_controllers(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "controllers", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller activeControllerType
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_activeControllerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "activeControllerType"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller activeControllerType
void GlobalNamespace::OVRInput::_set_activeControllerType(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_activeControllerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "activeControllerType", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller connectedControllerTypes
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_connectedControllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_connectedControllerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "connectedControllerTypes"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller connectedControllerTypes
void GlobalNamespace::OVRInput::_set_connectedControllerTypes(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_connectedControllerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "connectedControllerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Step stepType
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRInput::_get_stepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_stepType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRInput", "stepType"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Step stepType
void GlobalNamespace::OVRInput::_set_stepType(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_stepType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "stepType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fixedUpdateCount
int GlobalNamespace::OVRInput::_get_fixedUpdateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_fixedUpdateCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "fixedUpdateCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fixedUpdateCount
void GlobalNamespace::OVRInput::_set_fixedUpdateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_fixedUpdateCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "fixedUpdateCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveController
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveController"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveController
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveController", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveControllerCached
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveControllerCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveControllerCached
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _pluginSupportsActiveControllerMinVersion
::System::Version* GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRInput", "_pluginSupportsActiveControllerMinVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _pluginSupportsActiveControllerMinVersion
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerMinVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HAPTIC_CHANNELS
int GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "NUM_HAPTIC_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HAPTIC_CHANNELS
void GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "NUM_HAPTIC_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/HapticInfo[] hapticInfos
::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> GlobalNamespace::OVRInput::_get_hapticInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_hapticInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*>>("", "OVRInput", "hapticInfos"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/HapticInfo[] hapticInfos
void GlobalNamespace::OVRInput::_set_hapticInfos(::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_hapticInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "hapticInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
float GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
void GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
float GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
void GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_TOUCH_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_TOUCH_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_TOUCH_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_TOUCH_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> GlobalNamespace::OVRInput::_get_openVRControllerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_openVRControllerDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails>>("", "OVRInput", "openVRControllerDetails"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
void GlobalNamespace::OVRInput::_set_openVRControllerDetails(::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_openVRControllerDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "openVRControllerDetails", value));
}
// Autogenerated method: OVRInput.get_pluginSupportsActiveController
bool GlobalNamespace::OVRInput::get_pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::get_pluginSupportsActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "get_pluginSupportsActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput..cctor
void GlobalNamespace::OVRInput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Update
void GlobalNamespace::OVRInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.FixedUpdate
void GlobalNamespace::OVRInput::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetCurrentInteractionProfile
::GlobalNamespace::OVRInput::InteractionProfile GlobalNamespace::OVRInput::GetCurrentInteractionProfile(::GlobalNamespace::OVRInput::Hand hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetCurrentInteractionProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetCurrentInteractionProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::InteractionProfile, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRInput.GetControllerOrientationTracked
bool GlobalNamespace::OVRInput::GetControllerOrientationTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerOrientationValid
bool GlobalNamespace::OVRInput::GetControllerOrientationValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionTracked
bool GlobalNamespace::OVRInput::GetControllerPositionTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionValid
bool GlobalNamespace::OVRInput::GetControllerPositionValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.AreHandPosesGeneratedByControllerData
bool GlobalNamespace::OVRInput::AreHandPosesGeneratedByControllerData(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRInput::Hand hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::AreHandPosesGeneratedByControllerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, hand);
}
// Autogenerated method: OVRInput.EnableSimultaneousHandsAndControllers
bool GlobalNamespace::OVRInput::EnableSimultaneousHandsAndControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::EnableSimultaneousHandsAndControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "EnableSimultaneousHandsAndControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.DisableSimultaneousHandsAndControllers
bool GlobalNamespace::OVRInput::DisableSimultaneousHandsAndControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::DisableSimultaneousHandsAndControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "DisableSimultaneousHandsAndControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetControllerIsInHandState
::GlobalNamespace::OVRInput::ControllerInHandState GlobalNamespace::OVRInput::GetControllerIsInHandState(::GlobalNamespace::OVRInput::Hand hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerIsInHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerIsInHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::ControllerInHandState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRInput.GetActiveControllerForHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveControllerForHand(::GlobalNamespace::OVRInput::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetActiveControllerForHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveControllerForHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handedness);
}
// Autogenerated method: OVRInput.GetLocalControllerPosition
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerPosition(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerRotation
::UnityEngine::Quaternion GlobalNamespace::OVRInput::GetLocalControllerRotation(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerStatesWithoutPrediction
bool GlobalNamespace::OVRInput::GetLocalControllerStatesWithoutPrediction(::GlobalNamespace::OVRInput::Controller controllerType, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> velocity, ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerStatesWithoutPrediction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerStatesWithoutPrediction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType, byref(position), byref(rotation), byref(velocity), byref(angularVelocity));
}
// Autogenerated method: OVRInput.GetDominantHand
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButton
bool GlobalNamespace::OVRInput::GetResolvedButton(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonDown
bool GlobalNamespace::OVRInput::GetResolvedButtonDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonUp
bool GlobalNamespace::OVRInput::GetResolvedButtonUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouch
bool GlobalNamespace::OVRInput::GetResolvedTouch(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchDown
bool GlobalNamespace::OVRInput::GetResolvedTouchDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchUp
bool GlobalNamespace::OVRInput::GetResolvedTouchUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouch
bool GlobalNamespace::OVRInput::GetResolvedNearTouch(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchDown
bool GlobalNamespace::OVRInput::GetResolvedNearTouchDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchUp
bool GlobalNamespace::OVRInput::GetResolvedNearTouchUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis1D
float GlobalNamespace::OVRInput::GetResolvedAxis1D(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis1D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis1D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis2D
::UnityEngine::Vector2 GlobalNamespace::OVRInput::GetResolvedAxis2D(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetConnectedControllers
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.IsControllerConnected
bool GlobalNamespace::OVRInput::IsControllerConnected(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsControllerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsControllerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: OVRInput.GetActiveController
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.StartVibration
void GlobalNamespace::OVRInput::StartVibration(float amplitude, float duration, ::UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(controllerNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, duration, controllerNode);
}
// Autogenerated method: OVRInput.SetOpenVRLocalPose
void GlobalNamespace::OVRInput::SetOpenVRLocalPose(::UnityEngine::Vector3 leftPos, ::UnityEngine::Vector3 rightPos, ::UnityEngine::Quaternion leftRot, ::UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftPos), ::il2cpp_utils::ExtractType(rightPos), ::il2cpp_utils::ExtractType(leftRot), ::il2cpp_utils::ExtractType(rightRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRInput.GetOpenVRStringProperty
::StringW GlobalNamespace::OVRInput::GetOpenVRStringProperty(::OVR::OpenVR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetOpenVRStringProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetOpenVRStringProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, deviceId);
}
// Autogenerated method: OVRInput.UpdateXRControllerNodeIds
void GlobalNamespace::OVRInput::UpdateXRControllerNodeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerNodeIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerNodeIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.UpdateXRControllerHaptics
void GlobalNamespace::OVRInput::UpdateXRControllerHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.InitHapticInfo
void GlobalNamespace::OVRInput::InitHapticInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InitHapticInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "InitHapticInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.PlayHapticImpulse
void GlobalNamespace::OVRInput::PlayHapticImpulse(float amplitude, ::UnityEngine::XR::XRNode deviceNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::PlayHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "PlayHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(deviceNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, deviceNode);
}
// Autogenerated method: OVRInput.IsValidOpenVRDevice
bool GlobalNamespace::OVRInput::IsValidOpenVRDevice(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsValidOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsValidOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: OVRInput.SetControllerVibration
void GlobalNamespace::OVRInput::SetControllerVibration(float frequency, float amplitude, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.SetControllerLocalizedVibration
void GlobalNamespace::OVRInput::SetControllerLocalizedVibration(::GlobalNamespace::OVRInput::HapticsLocation hapticsLocationMask, float frequency, float amplitude, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerLocalizedVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerLocalizedVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hapticsLocationMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hapticsLocationMask, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.SetControllerHapticsAmplitudeEnvelope
void GlobalNamespace::OVRInput::SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::OVRInput::HapticsAmplitudeEnvelopeVibration hapticsVibration, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerHapticsAmplitudeEnvelope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hapticsVibration), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hapticsVibration, controllerMask);
}
// Autogenerated method: OVRInput.SetControllerHapticsPcm
int GlobalNamespace::OVRInput::SetControllerHapticsPcm(::GlobalNamespace::OVRInput::HapticsPcmVibration hapticsVibration, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerHapticsPcm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerHapticsPcm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hapticsVibration), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hapticsVibration, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerSampleRateHz
float GlobalNamespace::OVRInput::GetControllerSampleRateHz(::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerSampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerSampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining(::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.CalculateAbsMax
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateAbsMax(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateAbsMax
float GlobalNamespace::OVRInput::CalculateAbsMax(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateDeadzone
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateDeadzone(::UnityEngine::Vector2 a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.CalculateDeadzone
float GlobalNamespace::OVRInput::CalculateDeadzone(float a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.ShouldResolveController
bool GlobalNamespace::OVRInput::ShouldResolveController(::GlobalNamespace::OVRInput::Controller controllerType, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ShouldResolveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "ShouldResolveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType, controllerMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Button None
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button None
void GlobalNamespace::OVRInput::Button::_set_None(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button One
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button One
void GlobalNamespace::OVRInput::Button::_set_One(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Two
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Two
void GlobalNamespace::OVRInput::Button::_set_Two(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Three
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Three
void GlobalNamespace::OVRInput::Button::_set_Three(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Four
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Four
void GlobalNamespace::OVRInput::Button::_set_Four(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Start
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Start
void GlobalNamespace::OVRInput::Button::_set_Start(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Back
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Back
void GlobalNamespace::OVRInput::Button::_set_Back(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryShoulder
void GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryShoulder
void GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadUp
void GlobalNamespace::OVRInput::Button::_set_DpadUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadDown
void GlobalNamespace::OVRInput::Button::_set_DpadDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadLeft
void GlobalNamespace::OVRInput::Button::_set_DpadLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadRight
void GlobalNamespace::OVRInput::Button::_set_DpadRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Up
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Up
void GlobalNamespace::OVRInput::Button::_set_Up(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Down
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Down
void GlobalNamespace::OVRInput::Button::_set_Down(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Left
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Left
void GlobalNamespace::OVRInput::Button::_set_Left(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Right
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Right
void GlobalNamespace::OVRInput::Button::_set_Right(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Any
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Any
void GlobalNamespace::OVRInput::Button::_set_Any(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Button::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton None
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton None
void GlobalNamespace::OVRInput::RawButton::_set_None(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton A
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton A
void GlobalNamespace::OVRInput::RawButton::_set_A(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton B
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton B
void GlobalNamespace::OVRInput::RawButton::_set_B(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton X
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton X
void GlobalNamespace::OVRInput::RawButton::_set_X(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Y
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Y
void GlobalNamespace::OVRInput::RawButton::_set_Y(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Start
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Start
void GlobalNamespace::OVRInput::RawButton::_set_Start(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Back
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Back
void GlobalNamespace::OVRInput::RawButton::_set_Back(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LShoulder
void GlobalNamespace::OVRInput::RawButton::_set_LShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_LTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RShoulder
void GlobalNamespace::OVRInput::RawButton::_set_RShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_RTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadUp
void GlobalNamespace::OVRInput::RawButton::_set_DpadUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadDown
void GlobalNamespace::OVRInput::RawButton::_set_DpadDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadLeft
void GlobalNamespace::OVRInput::RawButton::_set_DpadLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadRight
void GlobalNamespace::OVRInput::RawButton::_set_DpadRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Any
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Any
void GlobalNamespace::OVRInput::RawButton::_set_Any(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch None
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch None
void GlobalNamespace::OVRInput::Touch::_set_None(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch One
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch One
void GlobalNamespace::OVRInput::Touch::_set_One(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Two
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Two
void GlobalNamespace::OVRInput::Touch::_set_Two(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Three
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Three
void GlobalNamespace::OVRInput::Touch::_set_Three(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Four
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Four
void GlobalNamespace::OVRInput::Touch::_set_Four(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Any
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Any
void GlobalNamespace::OVRInput::Touch::_set_Any(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Touch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch None
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch None
void GlobalNamespace::OVRInput::RawTouch::_set_None(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch A
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch A
void GlobalNamespace::OVRInput::RawTouch::_set_A(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch B
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch B
void GlobalNamespace::OVRInput::RawTouch::_set_B(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch X
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch X
void GlobalNamespace::OVRInput::RawTouch::_set_X(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Y
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Y
void GlobalNamespace::OVRInput::RawTouch::_set_Y(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Any
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Any
void GlobalNamespace::OVRInput::RawTouch::_set_Any(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch None
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch None
void GlobalNamespace::OVRInput::NearTouch::_set_None(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch Any
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch Any
void GlobalNamespace::OVRInput::NearTouch::_set_Any(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::NearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch None
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch None
void GlobalNamespace::OVRInput::RawNearTouch::_set_None(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch Any
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch Any
void GlobalNamespace::OVRInput::RawNearTouch::_set_Any(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawNearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D None
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D None
void GlobalNamespace::OVRInput::Axis1D::_set_None(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTriggerCurl
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerCurl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTriggerCurl"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTriggerCurl
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerCurl(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerCurl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTriggerCurl", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTriggerSlide
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerSlide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTriggerSlide"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTriggerSlide
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerSlide(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerSlide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTriggerSlide", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryThumbRestForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryThumbRestForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryThumbRestForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryThumbRestForce
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryThumbRestForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryThumbRestForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryThumbRestForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryStylusForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryStylusForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryStylusForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryStylusForce
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryStylusForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryStylusForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryStylusForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTriggerCurl
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerCurl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTriggerCurl"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTriggerCurl
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerCurl(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerCurl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTriggerCurl", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTriggerSlide
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerSlide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTriggerSlide"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTriggerSlide
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerSlide(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerSlide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTriggerSlide", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryThumbRestForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryThumbRestForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryThumbRestForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryThumbRestForce
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryThumbRestForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryThumbRestForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryThumbRestForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryStylusForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryStylusForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryStylusForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryStylusForce
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryStylusForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryStylusForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryStylusForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTriggerForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTriggerForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTriggerForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTriggerForce
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTriggerForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTriggerForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTriggerForce
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTriggerForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTriggerForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTriggerForce
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerForce(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTriggerForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTriggerForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D Any
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D Any
void GlobalNamespace::OVRInput::Axis1D::_set_Any(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D None
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D None
void GlobalNamespace::OVRInput::RawAxis1D::_set_None(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTriggerCurl
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerCurl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTriggerCurl"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTriggerCurl
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerCurl(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerCurl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTriggerCurl", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTriggerSlide
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerSlide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTriggerSlide"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTriggerSlide
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerSlide(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerSlide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTriggerSlide", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LThumbRestForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LThumbRestForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LThumbRestForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LThumbRestForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_LThumbRestForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LThumbRestForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LThumbRestForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LStylusForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LStylusForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LStylusForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LStylusForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_LStylusForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LStylusForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LStylusForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTriggerCurl
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerCurl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTriggerCurl"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTriggerCurl
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerCurl(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerCurl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTriggerCurl", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTriggerSlide
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerSlide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTriggerSlide"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTriggerSlide
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerSlide(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerSlide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTriggerSlide", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RThumbRestForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RThumbRestForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RThumbRestForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RThumbRestForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_RThumbRestForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RThumbRestForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RThumbRestForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RStylusForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RStylusForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RStylusForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RStylusForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_RStylusForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RStylusForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RStylusForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTriggerForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTriggerForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTriggerForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTriggerForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTriggerForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTriggerForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTriggerForce
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTriggerForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTriggerForce"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTriggerForce
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerForce(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTriggerForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTriggerForce", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D Any
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D Any
void GlobalNamespace::OVRInput::RawAxis1D::_set_Any(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D None
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D None
void GlobalNamespace::OVRInput::Axis2D::_set_None(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D Any
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D Any
void GlobalNamespace::OVRInput::Axis2D::_set_Any(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D None
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D None
void GlobalNamespace::OVRInput::RawAxis2D::_set_None(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D Any
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D Any
void GlobalNamespace::OVRInput::RawAxis2D::_set_Any(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton None
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton None
void GlobalNamespace::OVRInput::OpenVRButton::_set_None(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Two
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Two
void GlobalNamespace::OVRInput::OpenVRButton::_set_Two(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Thumbstick
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Thumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Thumbstick
void GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Thumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Grip
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Grip
void GlobalNamespace::OVRInput::OpenVRButton::_set_Grip(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Grip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller None
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller None
void GlobalNamespace::OVRInput::Controller::_set_None(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LTouch
void GlobalNamespace::OVRInput::Controller::_set_LTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RTouch
void GlobalNamespace::OVRInput::Controller::_set_RTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Touch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Touch
void GlobalNamespace::OVRInput::Controller::_set_Touch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Remote
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Remote
void GlobalNamespace::OVRInput::Controller::_set_Remote(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Remote", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Gamepad
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Gamepad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Gamepad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Gamepad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Gamepad
void GlobalNamespace::OVRInput::Controller::_set_Gamepad(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Gamepad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Gamepad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Hands
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Hands
void GlobalNamespace::OVRInput::Controller::_set_Hands(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LHand
void GlobalNamespace::OVRInput::Controller::_set_LHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RHand
void GlobalNamespace::OVRInput::Controller::_set_RHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Active
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Active"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Active
void GlobalNamespace::OVRInput::Controller::_set_Active(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller All
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "All"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller All
void GlobalNamespace::OVRInput::Controller::_set_All(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Controller::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness Unsupported
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness Unsupported
void GlobalNamespace::OVRInput::Handedness::_set_Unsupported(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness LeftHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_LeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_LeftHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "LeftHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness LeftHanded
void GlobalNamespace::OVRInput::Handedness::_set_LeftHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_LeftHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "LeftHanded", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness RightHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_RightHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_RightHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "RightHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness RightHanded
void GlobalNamespace::OVRInput::Handedness::_set_RightHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_RightHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "RightHanded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Handedness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/HapticsLocation
#include "GlobalNamespace/OVRInput_HapticsLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/HapticsLocation None
::GlobalNamespace::OVRInput::HapticsLocation GlobalNamespace::OVRInput::HapticsLocation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::HapticsLocation>("", "OVRInput/HapticsLocation", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/HapticsLocation None
void GlobalNamespace::OVRInput::HapticsLocation::_set_None(::GlobalNamespace::OVRInput::HapticsLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/HapticsLocation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/HapticsLocation Hand
::GlobalNamespace::OVRInput::HapticsLocation GlobalNamespace::OVRInput::HapticsLocation::_get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_get_Hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::HapticsLocation>("", "OVRInput/HapticsLocation", "Hand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/HapticsLocation Hand
void GlobalNamespace::OVRInput::HapticsLocation::_set_Hand(::GlobalNamespace::OVRInput::HapticsLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_set_Hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/HapticsLocation", "Hand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/HapticsLocation Thumb
::GlobalNamespace::OVRInput::HapticsLocation GlobalNamespace::OVRInput::HapticsLocation::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::HapticsLocation>("", "OVRInput/HapticsLocation", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/HapticsLocation Thumb
void GlobalNamespace::OVRInput::HapticsLocation::_set_Thumb(::GlobalNamespace::OVRInput::HapticsLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/HapticsLocation", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/HapticsLocation Index
::GlobalNamespace::OVRInput::HapticsLocation GlobalNamespace::OVRInput::HapticsLocation::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::HapticsLocation>("", "OVRInput/HapticsLocation", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/HapticsLocation Index
void GlobalNamespace::OVRInput::HapticsLocation::_set_Index(::GlobalNamespace::OVRInput::HapticsLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/HapticsLocation", "Index", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::HapticsLocation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticsLocation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/InteractionProfile
#include "GlobalNamespace/OVRInput_InteractionProfile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/InteractionProfile None
::GlobalNamespace::OVRInput::InteractionProfile GlobalNamespace::OVRInput::InteractionProfile::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InteractionProfile>("", "OVRInput/InteractionProfile", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InteractionProfile None
void GlobalNamespace::OVRInput::InteractionProfile::_set_None(::GlobalNamespace::OVRInput::InteractionProfile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InteractionProfile", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InteractionProfile Touch
::GlobalNamespace::OVRInput::InteractionProfile GlobalNamespace::OVRInput::InteractionProfile::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InteractionProfile>("", "OVRInput/InteractionProfile", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InteractionProfile Touch
void GlobalNamespace::OVRInput::InteractionProfile::_set_Touch(::GlobalNamespace::OVRInput::InteractionProfile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InteractionProfile", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InteractionProfile TouchPro
::GlobalNamespace::OVRInput::InteractionProfile GlobalNamespace::OVRInput::InteractionProfile::_get_TouchPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_get_TouchPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InteractionProfile>("", "OVRInput/InteractionProfile", "TouchPro"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InteractionProfile TouchPro
void GlobalNamespace::OVRInput::InteractionProfile::_set_TouchPro(::GlobalNamespace::OVRInput::InteractionProfile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_set_TouchPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InteractionProfile", "TouchPro", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InteractionProfile TouchPlus
::GlobalNamespace::OVRInput::InteractionProfile GlobalNamespace::OVRInput::InteractionProfile::_get_TouchPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_get_TouchPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InteractionProfile>("", "OVRInput/InteractionProfile", "TouchPlus"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InteractionProfile TouchPlus
void GlobalNamespace::OVRInput::InteractionProfile::_set_TouchPlus(::GlobalNamespace::OVRInput::InteractionProfile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::_set_TouchPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InteractionProfile", "TouchPlus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::InteractionProfile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InteractionProfile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/Hand
#include "GlobalNamespace/OVRInput_Hand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Hand None
::GlobalNamespace::OVRInput::Hand GlobalNamespace::OVRInput::Hand::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Hand>("", "OVRInput/Hand", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Hand None
void GlobalNamespace::OVRInput::Hand::_set_None(::GlobalNamespace::OVRInput::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Hand", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Hand HandLeft
::GlobalNamespace::OVRInput::Hand GlobalNamespace::OVRInput::Hand::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Hand>("", "OVRInput/Hand", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Hand HandLeft
void GlobalNamespace::OVRInput::Hand::_set_HandLeft(::GlobalNamespace::OVRInput::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Hand", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Hand HandRight
::GlobalNamespace::OVRInput::Hand GlobalNamespace::OVRInput::Hand::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Hand>("", "OVRInput/Hand", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Hand HandRight
void GlobalNamespace::OVRInput::Hand::_set_HandRight(::GlobalNamespace::OVRInput::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Hand", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Hand::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Hand::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/InputDeviceShowState
#include "GlobalNamespace/OVRInput_InputDeviceShowState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/InputDeviceShowState Always
::GlobalNamespace::OVRInput::InputDeviceShowState GlobalNamespace::OVRInput::InputDeviceShowState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InputDeviceShowState>("", "OVRInput/InputDeviceShowState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InputDeviceShowState Always
void GlobalNamespace::OVRInput::InputDeviceShowState::_set_Always(::GlobalNamespace::OVRInput::InputDeviceShowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InputDeviceShowState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InputDeviceShowState ControllerInHandOrNoHand
::GlobalNamespace::OVRInput::InputDeviceShowState GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerInHandOrNoHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerInHandOrNoHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InputDeviceShowState>("", "OVRInput/InputDeviceShowState", "ControllerInHandOrNoHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InputDeviceShowState ControllerInHandOrNoHand
void GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerInHandOrNoHand(::GlobalNamespace::OVRInput::InputDeviceShowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerInHandOrNoHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InputDeviceShowState", "ControllerInHandOrNoHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InputDeviceShowState ControllerInHand
::GlobalNamespace::OVRInput::InputDeviceShowState GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InputDeviceShowState>("", "OVRInput/InputDeviceShowState", "ControllerInHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InputDeviceShowState ControllerInHand
void GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerInHand(::GlobalNamespace::OVRInput::InputDeviceShowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InputDeviceShowState", "ControllerInHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InputDeviceShowState ControllerNotInHand
::GlobalNamespace::OVRInput::InputDeviceShowState GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerNotInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_get_ControllerNotInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InputDeviceShowState>("", "OVRInput/InputDeviceShowState", "ControllerNotInHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InputDeviceShowState ControllerNotInHand
void GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerNotInHand(::GlobalNamespace::OVRInput::InputDeviceShowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_set_ControllerNotInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InputDeviceShowState", "ControllerNotInHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/InputDeviceShowState NoHand
::GlobalNamespace::OVRInput::InputDeviceShowState GlobalNamespace::OVRInput::InputDeviceShowState::_get_NoHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_get_NoHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::InputDeviceShowState>("", "OVRInput/InputDeviceShowState", "NoHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/InputDeviceShowState NoHand
void GlobalNamespace::OVRInput::InputDeviceShowState::_set_NoHand(::GlobalNamespace::OVRInput::InputDeviceShowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::_set_NoHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/InputDeviceShowState", "NoHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::InputDeviceShowState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InputDeviceShowState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/ControllerInHandState
#include "GlobalNamespace/OVRInput_ControllerInHandState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/ControllerInHandState NoHand
::GlobalNamespace::OVRInput::ControllerInHandState GlobalNamespace::OVRInput::ControllerInHandState::_get_NoHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_get_NoHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::ControllerInHandState>("", "OVRInput/ControllerInHandState", "NoHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/ControllerInHandState NoHand
void GlobalNamespace::OVRInput::ControllerInHandState::_set_NoHand(::GlobalNamespace::OVRInput::ControllerInHandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_set_NoHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/ControllerInHandState", "NoHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/ControllerInHandState ControllerInHand
::GlobalNamespace::OVRInput::ControllerInHandState GlobalNamespace::OVRInput::ControllerInHandState::_get_ControllerInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_get_ControllerInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::ControllerInHandState>("", "OVRInput/ControllerInHandState", "ControllerInHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/ControllerInHandState ControllerInHand
void GlobalNamespace::OVRInput::ControllerInHandState::_set_ControllerInHand(::GlobalNamespace::OVRInput::ControllerInHandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_set_ControllerInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/ControllerInHandState", "ControllerInHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/ControllerInHandState ControllerNotInHand
::GlobalNamespace::OVRInput::ControllerInHandState GlobalNamespace::OVRInput::ControllerInHandState::_get_ControllerNotInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_get_ControllerNotInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::ControllerInHandState>("", "OVRInput/ControllerInHandState", "ControllerNotInHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/ControllerInHandState ControllerNotInHand
void GlobalNamespace::OVRInput::ControllerInHandState::_set_ControllerNotInHand(::GlobalNamespace::OVRInput::ControllerInHandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::_set_ControllerNotInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/ControllerInHandState", "ControllerNotInHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::ControllerInHandState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ControllerInHandState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRController
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController Unknown
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController Unknown
void GlobalNamespace::OVRInput::OpenVRController::_set_Unknown(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController OculusTouch
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "OculusTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController OculusTouch
void GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "OculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController ViveController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_ViveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_ViveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "ViveController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController ViveController
void GlobalNamespace::OVRInput::OpenVRController::_set_ViveController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_ViveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "ViveController", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController WindowsMRController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "WindowsMRController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController WindowsMRController
void GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "WindowsMRController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRController::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean playingHaptics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRInput::HapticInfo::dyn_playingHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_playingHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingHaptics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticsDurationPlayed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDurationPlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDurationPlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticsDurationPlayed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticsDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticsDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode node
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::OVRInput::HapticInfo::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualNearTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualNearTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis1DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis1DMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis2DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis2DMap.hpp"
// Including type: OVRInput/HapticsLocation
#include "GlobalNamespace/OVRInput_HapticsLocation.hpp"
// Including type: OVRInput/HapticsAmplitudeEnvelopeVibration
#include "GlobalNamespace/OVRInput_HapticsAmplitudeEnvelopeVibration.hpp"
// Including type: OVRInput/HapticsPcmVibration
#include "GlobalNamespace/OVRInput_HapticsPcmVibration.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller controllerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::OVRInput::OVRControllerBase::dyn_controllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_controllerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualButtonMap buttonMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_buttonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_buttonMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualTouchMap touchMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_touchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_touchMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualNearTouchMap nearTouchMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_nearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_nearTouchMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearTouchMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualAxis1DMap axis1DMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis1DMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis1DMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualAxis2DMap axis2DMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis2DMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis2DMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/ControllerState6 previousState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::ControllerState6& GlobalNamespace::OVRInput::OVRControllerBase::dyn_previousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_previousState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::ControllerState6*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/ControllerState6 currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::ControllerState6& GlobalNamespace::OVRInput::OVRControllerBase::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::ControllerState6*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldApplyDeadzone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRInput::OVRControllerBase::dyn_shouldApplyDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_shouldApplyDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldApplyDeadzone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] HapticsPcmSamplesConsumedCache
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& GlobalNamespace::OVRInput::OVRControllerBase::dyn_HapticsPcmSamplesConsumedCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_HapticsPcmSamplesConsumedCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HapticsPcmSamplesConsumedCache"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase.Update
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::OVRControllerBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetOpenVRControllerState
::GlobalNamespace::OVRPlugin::ControllerState6 GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOpenVRControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState6, false>(this, ___internal__method, controllerType);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerVibration
void GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration(float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, amplitude);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerLocalizedVibration
void GlobalNamespace::OVRInput::OVRControllerBase::SetControllerLocalizedVibration(::GlobalNamespace::OVRInput::HapticsLocation hapticsLocationMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::SetControllerLocalizedVibration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hapticsLocationMask, frequency, amplitude);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerHapticsAmplitudeEnvelope
void GlobalNamespace::OVRInput::OVRControllerBase::SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::OVRInput::HapticsAmplitudeEnvelopeVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::SetControllerHapticsAmplitudeEnvelope");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hapticsVibration);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerHapticsPcm
int GlobalNamespace::OVRInput::OVRControllerBase::SetControllerHapticsPcm(::GlobalNamespace::OVRInput::HapticsPcmVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::SetControllerHapticsPcm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hapticsVibration);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetControllerSampleRateHz
float GlobalNamespace::OVRInput::OVRControllerBase::GetControllerSampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::GetControllerSampleRateHz");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Touch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::NearTouch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawNearTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Axis1D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis1D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Axis2D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis2D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton One
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_One");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "One"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Two
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Two");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Two"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Three
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Three");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Three"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Four
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Four");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Four"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Start
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Start"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Back
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Back");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Back"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryShoulder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryShoulder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryShoulder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryShoulder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Up
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Up"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Down
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Down");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Down"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Left
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Left"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Right
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Right"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualButtonMap.ToRawMask
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask(::GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualTouchMap.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch One
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_One");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "One"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch Two
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Two");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Two"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch Three
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Three");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Three"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch Four
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_Four");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Four"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch PrimaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch PrimaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch PrimaryThumbRest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryThumbRest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbRest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch PrimaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_PrimaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch SecondaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch SecondaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch SecondaryThumbRest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryThumbRest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbRest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawTouch SecondaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::dyn_SecondaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualTouchMap.ToRawMask
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::ToRawMask(::GlobalNamespace::OVRInput::Touch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualNearTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualNearTouchMap.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawNearTouch None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawNearTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawNearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawNearTouch PrimaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawNearTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_PrimaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawNearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawNearTouch PrimaryThumbButtons
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawNearTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_PrimaryThumbButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbButtons"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawNearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawNearTouch SecondaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawNearTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_SecondaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawNearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawNearTouch SecondaryThumbButtons
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawNearTouch& GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::dyn_SecondaryThumbButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbButtons"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawNearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualNearTouchMap.ToRawMask
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::ToRawMask(::GlobalNamespace::OVRInput::NearTouch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawNearTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualAxis1DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis1DMap.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryIndexTriggerCurl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerCurl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTriggerCurl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryIndexTriggerSlide
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTriggerSlide"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryThumbRestForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryThumbRestForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbRestForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryStylusForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryStylusForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryStylusForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryIndexTriggerCurl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerCurl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerCurl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTriggerCurl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryIndexTriggerSlide
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTriggerSlide"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryThumbRestForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryThumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryThumbRestForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbRestForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryStylusForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryStylusForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryStylusForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryStylusForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D PrimaryIndexTriggerForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_PrimaryIndexTriggerForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTriggerForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis1D SecondaryIndexTriggerForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis1D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::dyn_SecondaryIndexTriggerForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTriggerForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis1D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualAxis1DMap.ToRawMask
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::ToRawMask(::GlobalNamespace::OVRInput::Axis1D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis1D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualAxis2DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis2DMap.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis2D None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis2D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis2D PrimaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis2D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_PrimaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis2D PrimaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis2D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_PrimaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis2D SecondaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis2D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_SecondaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawAxis2D SecondaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawAxis2D& GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::dyn_SecondaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawAxis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualAxis2DMap.ToRawMask
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::ToRawMask(::GlobalNamespace::OVRInput::Axis2D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis2D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerTouch::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerLTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLTouch::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRTouch.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerRTouch::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRTouch::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerHands.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerHands::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerHands::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerLHand.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerLHand::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerLHand::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRHand.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerRHand::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRHand::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerRemote.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerRemote::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadPC.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadPC::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerGamepadAndroid.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerGamepadAndroid::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRInput::OVRControllerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRKtxTexture
#include "GlobalNamespace/OVRKtxTexture.hpp"
// Including type: OVRTextureData
#include "GlobalNamespace/OVRTextureData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 KTX_TTF_BC7_RGBA
uint GlobalNamespace::OVRKtxTexture::_get_KTX_TTF_BC7_RGBA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKtxTexture::_get_KTX_TTF_BC7_RGBA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "OVRKtxTexture", "KTX_TTF_BC7_RGBA"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 KTX_TTF_BC7_RGBA
void GlobalNamespace::OVRKtxTexture::_set_KTX_TTF_BC7_RGBA(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKtxTexture::_set_KTX_TTF_BC7_RGBA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRKtxTexture", "KTX_TTF_BC7_RGBA", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 KTX_TTF_ASTC_4x4_RGBA
uint GlobalNamespace::OVRKtxTexture::_get_KTX_TTF_ASTC_4x4_RGBA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKtxTexture::_get_KTX_TTF_ASTC_4x4_RGBA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "OVRKtxTexture", "KTX_TTF_ASTC_4x4_RGBA"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 KTX_TTF_ASTC_4x4_RGBA
void GlobalNamespace::OVRKtxTexture::_set_KTX_TTF_ASTC_4x4_RGBA(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKtxTexture::_set_KTX_TTF_ASTC_4x4_RGBA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRKtxTexture", "KTX_TTF_ASTC_4x4_RGBA", value));
}
// Autogenerated method: OVRKtxTexture.Load
bool GlobalNamespace::OVRKtxTexture::Load(::ArrayW<uint8_t> data, ByRef<::GlobalNamespace::OVRTextureData> ktxData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKtxTexture::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRKtxTexture", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(ktxData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(ktxData));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLayerAttribute
#include "GlobalNamespace/OVRLayerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OVRManager/EventListener
#include "GlobalNamespace/OVRManager_EventListener.hpp"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRRuntimeSettings
#include "GlobalNamespace/OVRRuntimeSettings.hpp"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace/OVRMixedRealityCaptureSettings.hpp"
// Including type: OVRManager/Observable`1
#include "GlobalNamespace/OVRManager_Observable_1.hpp"
// Including type: OVRManager/PassthroughCapabilities
#include "GlobalNamespace/OVRManager_PassthroughCapabilities.hpp"
// Including type: OVRManager/XrApi
#include "GlobalNamespace/OVRManager_XrApi.hpp"
// Including type: OVRManager/ProcessorPerformanceLevel
#include "GlobalNamespace/OVRManager_ProcessorPerformanceLevel.hpp"
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
// Including type: OVRManager/FoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FoveatedRenderingLevel.hpp"
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRManager <instance>k__BackingField
::GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager*>("", "OVRManager", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRManager <instance>k__BackingField
void GlobalNamespace::OVRManager::_set_$instance$k__BackingField(::GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRDisplay <display>k__BackingField
::GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::_get_$display$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_$display$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRDisplay*>("", "OVRManager", "<display>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRDisplay <display>k__BackingField
void GlobalNamespace::OVRManager::_set_$display$k__BackingField(::GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_$display$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<display>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTracker <tracker>k__BackingField
::GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::_get_$tracker$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_$tracker$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTracker*>("", "OVRManager", "<tracker>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRTracker <tracker>k__BackingField
void GlobalNamespace::OVRManager::_set_$tracker$k__BackingField(::GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_$tracker$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<tracker>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRBoundary <boundary>k__BackingField
::GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::_get_$boundary$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_$boundary$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary*>("", "OVRManager", "<boundary>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRBoundary <boundary>k__BackingField
void GlobalNamespace::OVRManager::_set_$boundary$k__BackingField(::GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_$boundary$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<boundary>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRRuntimeSettings <runtimeSettings>k__BackingField
::GlobalNamespace::OVRRuntimeSettings* GlobalNamespace::OVRManager::_get_$runtimeSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_$runtimeSettings$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRRuntimeSettings*>("", "OVRManager", "<runtimeSettings>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRRuntimeSettings <runtimeSettings>k__BackingField
void GlobalNamespace::OVRManager::_set_$runtimeSettings$k__BackingField(::GlobalNamespace::OVRRuntimeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_$runtimeSettings$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<runtimeSettings>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRProfile _profile
::GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::_get__profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__profile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRProfile*>("", "OVRManager", "_profile"));
}
// Autogenerated static field setter
// Set static field: static private OVRProfile _profile
void GlobalNamespace::OVRManager::_set__profile(::GlobalNamespace::OVRProfile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__profile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_profile", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDAcquired
::System::Action* GlobalNamespace::OVRManager::_get_HMDAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_HMDAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "HMDAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDAcquired
void GlobalNamespace::OVRManager::_set_HMDAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_HMDAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDLost
::System::Action* GlobalNamespace::OVRManager::_get_HMDLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_HMDLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "HMDLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDLost
void GlobalNamespace::OVRManager::_set_HMDLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_HMDLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDMounted
::System::Action* GlobalNamespace::OVRManager::_get_HMDMounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_HMDMounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "HMDMounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDMounted
void GlobalNamespace::OVRManager::_set_HMDMounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_HMDMounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDMounted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDUnmounted
::System::Action* GlobalNamespace::OVRManager::_get_HMDUnmounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_HMDUnmounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "HMDUnmounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDUnmounted
void GlobalNamespace::OVRManager::_set_HMDUnmounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_HMDUnmounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDUnmounted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusAcquired
::System::Action* GlobalNamespace::OVRManager::_get_VrFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_VrFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "VrFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusAcquired
void GlobalNamespace::OVRManager::_set_VrFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_VrFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusLost
::System::Action* GlobalNamespace::OVRManager::_get_VrFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_VrFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "VrFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusLost
void GlobalNamespace::OVRManager::_set_VrFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_VrFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusAcquired
::System::Action* GlobalNamespace::OVRManager::_get_InputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_InputFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "InputFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusAcquired
void GlobalNamespace::OVRManager::_set_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_InputFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusLost
::System::Action* GlobalNamespace::OVRManager::_get_InputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_InputFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "InputFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusLost
void GlobalNamespace::OVRManager::_set_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_InputFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action AudioOutChanged
::System::Action* GlobalNamespace::OVRManager::_get_AudioOutChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_AudioOutChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "AudioOutChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioOutChanged
void GlobalNamespace::OVRManager::_set_AudioOutChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_AudioOutChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioOutChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action AudioInChanged
::System::Action* GlobalNamespace::OVRManager::_get_AudioInChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_AudioInChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "AudioInChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioInChanged
void GlobalNamespace::OVRManager::_set_AudioInChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_AudioInChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioInChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action TrackingAcquired
::System::Action* GlobalNamespace::OVRManager::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingAcquired
void GlobalNamespace::OVRManager::_set_TrackingAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action TrackingLost
::System::Action* GlobalNamespace::OVRManager::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingLost
void GlobalNamespace::OVRManager::_set_TrackingLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.Single,System.Single> DisplayRefreshRateChanged
::System::Action_2<float, float>* GlobalNamespace::OVRManager::_get_DisplayRefreshRateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_DisplayRefreshRateChanged");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<float, float>*>("", "OVRManager", "DisplayRefreshRateChanged")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.Single,System.Single> DisplayRefreshRateChanged
void GlobalNamespace::OVRManager::_set_DisplayRefreshRateChanged(::System::Action_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_DisplayRefreshRateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "DisplayRefreshRateChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid> SpatialAnchorCreateComplete
::System::Action_4<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid>* GlobalNamespace::OVRManager::_get_SpatialAnchorCreateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpatialAnchorCreateComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_4<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid>*>("", "OVRManager", "SpatialAnchorCreateComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid> SpatialAnchorCreateComplete
void GlobalNamespace::OVRManager::_set_SpatialAnchorCreateComplete(::System::Action_4<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpatialAnchorCreateComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpatialAnchorCreateComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean> SpaceSetComponentStatusComplete
::System::Action_6<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceComponentType, bool>* GlobalNamespace::OVRManager::_get_SpaceSetComponentStatusComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceSetComponentStatusComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_6<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceComponentType, bool>*>("", "OVRManager", "SpaceSetComponentStatusComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean> SpaceSetComponentStatusComplete
void GlobalNamespace::OVRManager::_set_SpaceSetComponentStatusComplete(::System::Action_6<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceComponentType, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceSetComponentStatusComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceSetComponentStatusComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.UInt64> SpaceQueryResults
::System::Action_1<uint64_t>* GlobalNamespace::OVRManager::_get_SpaceQueryResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceQueryResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<uint64_t>*>("", "OVRManager", "SpaceQueryResults"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.UInt64> SpaceQueryResults
void GlobalNamespace::OVRManager::_set_SpaceQueryResults(::System::Action_1<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceQueryResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceQueryResults", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.UInt64,System.Boolean> SpaceQueryComplete
::System::Action_2<uint64_t, bool>* GlobalNamespace::OVRManager::_get_SpaceQueryComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceQueryComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<uint64_t, bool>*>("", "OVRManager", "SpaceQueryComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.UInt64,System.Boolean> SpaceQueryComplete
void GlobalNamespace::OVRManager::_set_SpaceQueryComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceQueryComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceQueryComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid> SpaceSaveComplete
::System::Action_4<uint64_t, ::GlobalNamespace::OVRSpace, bool, ::System::Guid>* GlobalNamespace::OVRManager::_get_SpaceSaveComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceSaveComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_4<uint64_t, ::GlobalNamespace::OVRSpace, bool, ::System::Guid>*>("", "OVRManager", "SpaceSaveComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid> SpaceSaveComplete
void GlobalNamespace::OVRManager::_set_SpaceSaveComplete(::System::Action_4<uint64_t, ::GlobalNamespace::OVRSpace, bool, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceSaveComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceSaveComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation> SpaceEraseComplete
::System::Action_4<uint64_t, bool, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation>* GlobalNamespace::OVRManager::_get_SpaceEraseComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceEraseComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_4<uint64_t, bool, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation>*>("", "OVRManager", "SpaceEraseComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation> SpaceEraseComplete
void GlobalNamespace::OVRManager::_set_SpaceEraseComplete(::System::Action_4<uint64_t, bool, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceEraseComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceEraseComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> ShareSpacesComplete
::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* GlobalNamespace::OVRManager::_get_ShareSpacesComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_ShareSpacesComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>*>("", "OVRManager", "ShareSpacesComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> ShareSpacesComplete
void GlobalNamespace::OVRManager::_set_ShareSpacesComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_ShareSpacesComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "ShareSpacesComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> SpaceListSaveComplete
::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* GlobalNamespace::OVRManager::_get_SpaceListSaveComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SpaceListSaveComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>*>("", "OVRManager", "SpaceListSaveComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> SpaceListSaveComplete
void GlobalNamespace::OVRManager::_set_SpaceListSaveComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SpaceListSaveComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SpaceListSaveComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.UInt64,System.Boolean> SceneCaptureComplete
::System::Action_2<uint64_t, bool>* GlobalNamespace::OVRManager::_get_SceneCaptureComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_SceneCaptureComplete");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<uint64_t, bool>*>("", "OVRManager", "SceneCaptureComplete")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.UInt64,System.Boolean> SceneCaptureComplete
void GlobalNamespace::OVRManager::_set_SceneCaptureComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_SceneCaptureComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "SceneCaptureComplete", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HSWDismissed
::System::Action* GlobalNamespace::OVRManager::_get_HSWDismissed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_HSWDismissed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "OVRManager", "HSWDismissed"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HSWDismissed
void GlobalNamespace::OVRManager::_set_HSWDismissed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_HSWDismissed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HSWDismissed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresentCached
bool GlobalNamespace::OVRManager::_get__isHmdPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__isHmdPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresentCached
void GlobalNamespace::OVRManager::_set__isHmdPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__isHmdPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresent
bool GlobalNamespace::OVRManager::_get__isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__isHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresent
void GlobalNamespace::OVRManager::_set__isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__isHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasHmdPresent
bool GlobalNamespace::OVRManager::_get__wasHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__wasHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasHmdPresent
void GlobalNamespace::OVRManager::_set__wasHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__wasHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocusCached
bool GlobalNamespace::OVRManager::_get__hasVrFocusCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__hasVrFocusCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocusCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocusCached
void GlobalNamespace::OVRManager::_set__hasVrFocusCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__hasVrFocusCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocusCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocus
bool GlobalNamespace::OVRManager::_get__hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__hasVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocus
void GlobalNamespace::OVRManager::_set__hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__hasVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadVrFocus
bool GlobalNamespace::OVRManager::_get__hadVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__hadVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadVrFocus
void GlobalNamespace::OVRManager::_set__hadVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__hadVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadInputFocus
bool GlobalNamespace::OVRManager::_get__hadInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__hadInputFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadInputFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadInputFocus
void GlobalNamespace::OVRManager::_set__hadInputFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__hadInputFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadInputFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _pixelStepPerFrame
int GlobalNamespace::OVRManager::_get__pixelStepPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__pixelStepPerFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRManager", "_pixelStepPerFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _pixelStepPerFrame
void GlobalNamespace::OVRManager::_set__pixelStepPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__pixelStepPerFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_pixelStepPerFrame", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OCULUS_UNITY_NAME_STR
::StringW GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRManager", "OCULUS_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OCULUS_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OCULUS_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OPENVR_UNITY_NAME_STR
::StringW GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRManager", "OPENVR_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OPENVR_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OPENVR_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice loadedXRDevice
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager::_get_loadedXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_loadedXRDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager", "loadedXRDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice loadedXRDevice
void GlobalNamespace::OVRManager::_set_loadedXRDevice(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_loadedXRDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "loadedXRDevice", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
::UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
::UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
::UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
::UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetRight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean m_SpaceWarpEnabled
bool GlobalNamespace::OVRManager::_get_m_SpaceWarpEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_m_SpaceWarpEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "m_SpaceWarpEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean m_SpaceWarpEnabled
void GlobalNamespace::OVRManager::_set_m_SpaceWarpEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_m_SpaceWarpEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "m_SpaceWarpEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform m_AppSpaceTransform
::UnityEngine::Transform* GlobalNamespace::OVRManager::_get_m_AppSpaceTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_m_AppSpaceTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("", "OVRManager", "m_AppSpaceTransform"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform m_AppSpaceTransform
void GlobalNamespace::OVRManager::_set_m_AppSpaceTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_m_AppSpaceTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "m_AppSpaceTransform", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.DepthTextureMode m_CachedDepthTextureMode
::UnityEngine::DepthTextureMode GlobalNamespace::OVRManager::_get_m_CachedDepthTextureMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_m_CachedDepthTextureMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DepthTextureMode>("", "OVRManager", "m_CachedDepthTextureMode"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.DepthTextureMode m_CachedDepthTextureMode
void GlobalNamespace::OVRManager::_set_m_CachedDepthTextureMode(::UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_m_CachedDepthTextureMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "m_CachedDepthTextureMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresentCached
bool GlobalNamespace::OVRManager::_get__isUserPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__isUserPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresentCached
void GlobalNamespace::OVRManager::_set__isUserPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__isUserPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresent
bool GlobalNamespace::OVRManager::_get__isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__isUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresent
void GlobalNamespace::OVRManager::_set__isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__isUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasUserPresent
bool GlobalNamespace::OVRManager::_get__wasUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__wasUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasUserPresent
void GlobalNamespace::OVRManager::_set__wasUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__wasUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioOutIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioOutIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioOutIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioInIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioInIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioInIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioOutId
::StringW GlobalNamespace::OVRManager::_get_prevAudioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_prevAudioOutId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRManager", "prevAudioOutId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioOutId
void GlobalNamespace::OVRManager::_set_prevAudioOutId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_prevAudioOutId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioInId
::StringW GlobalNamespace::OVRManager::_get_prevAudioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_prevAudioInId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRManager", "prevAudioInId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioInId
void GlobalNamespace::OVRManager::_set_prevAudioInId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_prevAudioInId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean wasPositionTracked
bool GlobalNamespace::OVRManager::_get_wasPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_wasPositionTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "wasPositionTracked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean wasPositionTracked
void GlobalNamespace::OVRManager::_set_wasPositionTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_wasPositionTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "wasPositionTracked", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/EventDataBuffer eventDataBuffer
::GlobalNamespace::OVRPlugin::EventDataBuffer GlobalNamespace::OVRManager::_get_eventDataBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_eventDataBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventDataBuffer>("", "OVRManager", "eventDataBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/EventDataBuffer eventDataBuffer
void GlobalNamespace::OVRManager::_set_eventDataBuffer(::GlobalNamespace::OVRPlugin::EventDataBuffer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_eventDataBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "eventDataBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
::StringW GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
void GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean OVRManagerinitialized
bool GlobalNamespace::OVRManager::_get_OVRManagerinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OVRManagerinitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "OVRManagerinitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean OVRManagerinitialized
void GlobalNamespace::OVRManager::_set_OVRManagerinitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OVRManagerinitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OVRManagerinitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem> s_displaySubsystems
::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystem*>* GlobalNamespace::OVRManager::_get_s_displaySubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_s_displaySubsystems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystem*>*>("", "OVRManager", "s_displaySubsystems"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem> s_displaySubsystems
void GlobalNamespace::OVRManager::_set_s_displaySubsystems(::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_s_displaySubsystems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "s_displaySubsystems", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor> s_displaySubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>* GlobalNamespace::OVRManager::_get_s_displaySubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_s_displaySubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>*>("", "OVRManager", "s_displaySubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor> s_displaySubsystemDescriptors
void GlobalNamespace::OVRManager::_set_s_displaySubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_s_displaySubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "s_displaySubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_inputSubsystems
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* GlobalNamespace::OVRManager::_get_s_inputSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_s_inputSubsystems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>*>("", "OVRManager", "s_inputSubsystems"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_inputSubsystems
void GlobalNamespace::OVRManager::_set_s_inputSubsystems(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_s_inputSubsystems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "s_inputSubsystems", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean multipleMainCameraWarningPresented
bool GlobalNamespace::OVRManager::_get_multipleMainCameraWarningPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_multipleMainCameraWarningPresented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "multipleMainCameraWarningPresented"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean multipleMainCameraWarningPresented
void GlobalNamespace::OVRManager::_set_multipleMainCameraWarningPresented(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_multipleMainCameraWarningPresented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "multipleMainCameraWarningPresented", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean suppressUnableToFindMainCameraMessage
bool GlobalNamespace::OVRManager::_get_suppressUnableToFindMainCameraMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_suppressUnableToFindMainCameraMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "suppressUnableToFindMainCameraMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean suppressUnableToFindMainCameraMessage
void GlobalNamespace::OVRManager::_set_suppressUnableToFindMainCameraMessage(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_suppressUnableToFindMainCameraMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "suppressUnableToFindMainCameraMessage", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference`1<UnityEngine.Camera> lastFoundMainCamera
::System::WeakReference_1<::UnityEngine::Camera*>* GlobalNamespace::OVRManager::_get_lastFoundMainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_lastFoundMainCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference_1<::UnityEngine::Camera*>*>("", "OVRManager", "lastFoundMainCamera"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference`1<UnityEngine.Camera> lastFoundMainCamera
void GlobalNamespace::OVRManager::_set_lastFoundMainCamera(::System::WeakReference_1<::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_lastFoundMainCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "lastFoundMainCamera", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticMixedRealityCaptureInitialized
bool GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticMixedRealityCaptureInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticMixedRealityCaptureInitialized
void GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMixedRealityCaptureInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticPrevEnableMixedRealityCapture
bool GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticPrevEnableMixedRealityCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticPrevEnableMixedRealityCapture
void GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticPrevEnableMixedRealityCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
::GlobalNamespace::OVRMixedRealityCaptureSettings* GlobalNamespace::OVRManager::_get_staticMrcSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_staticMrcSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRMixedRealityCaptureSettings*>("", "OVRManager", "staticMrcSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
void GlobalNamespace::OVRManager::_set_staticMrcSettings(::GlobalNamespace::OVRMixedRealityCaptureSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_staticMrcSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMrcSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean suppressDisableMixedRealityBecauseOfNoMainCameraWarning
bool GlobalNamespace::OVRManager::_get_suppressDisableMixedRealityBecauseOfNoMainCameraWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_suppressDisableMixedRealityBecauseOfNoMainCameraWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "suppressDisableMixedRealityBecauseOfNoMainCameraWarning"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean suppressDisableMixedRealityBecauseOfNoMainCameraWarning
void GlobalNamespace::OVRManager::_set_suppressDisableMixedRealityBecauseOfNoMainCameraWarning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_suppressDisableMixedRealityBecauseOfNoMainCameraWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "suppressDisableMixedRealityBecauseOfNoMainCameraWarning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> OnPassthroughInitializedStateChange
::System::Action_1<bool>* GlobalNamespace::OVRManager::_get_OnPassthroughInitializedStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get_OnPassthroughInitializedStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("", "OVRManager", "OnPassthroughInitializedStateChange"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> OnPassthroughInitializedStateChange
void GlobalNamespace::OVRManager::_set_OnPassthroughInitializedStateChange(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set_OnPassthroughInitializedStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OnPassthroughInitializedStateChange", value));
}
// Autogenerated static field getter
// Get static field: static private OVRManager/Observable`1<OVRManager/PassthroughInitializationState> _passthroughInitializationState
::GlobalNamespace::OVRManager_Observable_1<::GlobalNamespace::OVRManager_PassthroughInitializationState>* GlobalNamespace::OVRManager::_get__passthroughInitializationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__passthroughInitializationState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_Observable_1<::GlobalNamespace::OVRManager_PassthroughInitializationState>*>("", "OVRManager", "_passthroughInitializationState"));
}
// Autogenerated static field setter
// Set static field: static private OVRManager/Observable`1<OVRManager/PassthroughInitializationState> _passthroughInitializationState
void GlobalNamespace::OVRManager::_set__passthroughInitializationState(::GlobalNamespace::OVRManager_Observable_1<::GlobalNamespace::OVRManager_PassthroughInitializationState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__passthroughInitializationState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_passthroughInitializationState", value));
}
// Autogenerated static field getter
// Get static field: static private OVRManager/PassthroughCapabilities _passthroughCapabilities
::GlobalNamespace::OVRManager_PassthroughCapabilities* GlobalNamespace::OVRManager::_get__passthroughCapabilities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_get__passthroughCapabilities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughCapabilities*>("", "OVRManager", "_passthroughCapabilities"));
}
// Autogenerated static field setter
// Set static field: static private OVRManager/PassthroughCapabilities _passthroughCapabilities
void GlobalNamespace::OVRManager::_set__passthroughCapabilities(::GlobalNamespace::OVRManager_PassthroughCapabilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::_set__passthroughCapabilities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_passthroughCapabilities", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<UnityEngine.Camera> disabledCameras
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Camera*>*& GlobalNamespace::OVRManager::dyn_disabledCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_disabledCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disabledCameras"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Camera*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single prevTimeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_prevTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_prevTimeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevTimeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRecommendedMSAALevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_useRecommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_useRecommendedMSAALevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRecommendedMSAALevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _monoscopic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn__monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__monoscopic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoscopic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/LayerSharpenType _sharpenType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::LayerSharpenType& GlobalNamespace::OVRManager::dyn__sharpenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__sharpenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharpenType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::LayerSharpenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/ColorSpace _colorGamut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_ColorSpace& GlobalNamespace::OVRManager::dyn__colorGamut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__colorGamut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorGamut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_ColorSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableDynamicResolution
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_enableDynamicResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_enableDynamicResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableDynamicResolution"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDynamicResolutionScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_minDynamicResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_minDynamicResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDynamicResolutionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDynamicResolutionScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_maxDynamicResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_maxDynamicResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDynamicResolutionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minRenderScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_minRenderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_minRenderScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minRenderScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRenderScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_maxRenderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_maxRenderScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRenderScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPoseRelativeOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRManager::dyn__headPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__headPoseRelativeOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPoseRelativeOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPoseRelativeOffsetTranslation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRManager::dyn__headPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__headPoseRelativeOffsetTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPoseRelativeOffsetTranslation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 profilerTcpPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager::dyn_profilerTcpPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_profilerTcpPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilerTcpPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean expandMixedRealityCapturePropertySheet
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_expandMixedRealityCapturePropertySheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_expandMixedRealityCapturePropertySheet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandMixedRealityCapturePropertySheet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMixedReality
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_enableMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_enableMixedReality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMixedReality"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/CompositionMethod compositionMethod
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_CompositionMethod& GlobalNamespace::OVRManager::dyn_compositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_compositionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compositionMethod"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_CompositionMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask extraHiddenLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OVRManager::dyn_extraHiddenLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_extraHiddenLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraHiddenLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask extraVisibleLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OVRManager::dyn_extraVisibleLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_extraVisibleLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraVisibleLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicCullingMask
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_dynamicCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_dynamicCullingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicCullingMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color externalCompositionBackdropColorRift
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRManager::dyn_externalCompositionBackdropColorRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_externalCompositionBackdropColorRift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCompositionBackdropColorRift"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color externalCompositionBackdropColorQuest
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRManager::dyn_externalCompositionBackdropColorQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_externalCompositionBackdropColorQuest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCompositionBackdropColorQuest"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/CameraDevice capturingCameraDevice
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_CameraDevice& GlobalNamespace::OVRManager::dyn_capturingCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_capturingCameraDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capturingCameraDevice"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_CameraDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipCameraFrameHorizontally
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_flipCameraFrameHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_flipCameraFrameHorizontally");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipCameraFrameHorizontally"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipCameraFrameVertically
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_flipCameraFrameVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_flipCameraFrameVertically");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipCameraFrameVertically"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handPoseStateLatency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_handPoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_handPoseStateLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handPoseStateLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sandwichCompositionRenderLatency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_sandwichCompositionRenderLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_sandwichCompositionRenderLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sandwichCompositionRenderLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sandwichCompositionBufferedFrames
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager::dyn_sandwichCompositionBufferedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_sandwichCompositionBufferedFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sandwichCompositionBufferedFrames"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color chromaKeyColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRManager::dyn_chromaKeyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_chromaKeyColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chromaKeyColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySimilarity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_chromaKeySimilarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_chromaKeySimilarity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chromaKeySimilarity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySmoothRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_chromaKeySmoothRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_chromaKeySmoothRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chromaKeySmoothRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chromaKeySpillRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_chromaKeySpillRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_chromaKeySpillRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chromaKeySpillRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useDynamicLighting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_useDynamicLighting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDynamicLighting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/DepthQuality depthQuality
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_DepthQuality& GlobalNamespace::OVRManager::dyn_depthQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_depthQuality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthQuality"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_DepthQuality*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dynamicLightingSmoothFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_dynamicLightingSmoothFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_dynamicLightingSmoothFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicLightingSmoothFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dynamicLightingDepthVariationClampingValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_dynamicLightingDepthVariationClampingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_dynamicLightingDepthVariationClampingValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicLightingDepthVariationClampingValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/VirtualGreenScreenType virtualGreenScreenType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_VirtualGreenScreenType& GlobalNamespace::OVRManager::dyn_virtualGreenScreenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_virtualGreenScreenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualGreenScreenType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_VirtualGreenScreenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenTopY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_virtualGreenScreenTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_virtualGreenScreenTopY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualGreenScreenTopY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenBottomY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_virtualGreenScreenBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_virtualGreenScreenBottomY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualGreenScreenBottomY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean virtualGreenScreenApplyDepthCulling
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_virtualGreenScreenApplyDepthCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_virtualGreenScreenApplyDepthCulling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualGreenScreenApplyDepthCulling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single virtualGreenScreenDepthTolerance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRManager::dyn_virtualGreenScreenDepthTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_virtualGreenScreenDepthTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualGreenScreenDepthTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/MrcActivationMode mrcActivationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_MrcActivationMode& GlobalNamespace::OVRManager::dyn_mrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_mrcActivationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcActivationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_MrcActivationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/InstantiateMrcCameraDelegate instantiateMixedRealityCameraGameObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*& GlobalNamespace::OVRManager::dyn_instantiateMixedRealityCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_instantiateMixedRealityCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instantiateMixedRealityCameraGameObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean launchMultimodalHandsControllersOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_launchMultimodalHandsControllersOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_launchMultimodalHandsControllersOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "launchMultimodalHandsControllersOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isInsightPassthroughEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_isInsightPassthroughEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_isInsightPassthroughEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isInsightPassthroughEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean requestBodyTrackingPermissionOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_requestBodyTrackingPermissionOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_requestBodyTrackingPermissionOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestBodyTrackingPermissionOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean requestFaceTrackingPermissionOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_requestFaceTrackingPermissionOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_requestFaceTrackingPermissionOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestFaceTrackingPermissionOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean requestEyeTrackingPermissionOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_requestEyeTrackingPermissionOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_requestEyeTrackingPermissionOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestEyeTrackingPermissionOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean requestScenePermissionOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_requestScenePermissionOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_requestScenePermissionOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestScenePermissionOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _localDimming
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn__localDimming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__localDimming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDimming"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/TrackingOrigin _trackingOriginType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_TrackingOrigin& GlobalNamespace::OVRManager::dyn__trackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__trackingOriginType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingOriginType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_TrackingOrigin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePositionTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_usePositionTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_usePositionTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePositionTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRotationTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_useRotationTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_useRotationTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRotationTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useIPDInPositionTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_useIPDInPositionTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_useIPDInPositionTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useIPDInPositionTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetTrackerOnLoad
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_resetTrackerOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_resetTrackerOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetTrackerOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowRecenter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_AllowRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_AllowRecenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowRecenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LateControllerUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_LateControllerUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_LateControllerUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LateControllerUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LateLatching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_LateLatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_LateLatching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LateLatching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/ControllerDrivenHandPosesType _readOnlyControllerDrivenHandPosesType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType& GlobalNamespace::OVRManager::dyn__readOnlyControllerDrivenHandPosesType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn__readOnlyControllerDrivenHandPosesType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnlyControllerDrivenHandPosesType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/ControllerDrivenHandPosesType controllerDrivenHandPosesType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType& GlobalNamespace::OVRManager::dyn_controllerDrivenHandPosesType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_controllerDrivenHandPosesType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerDrivenHandPosesType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isSupportedPlatform>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager::dyn_$isSupportedPlatform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_$isSupportedPlatform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isSupportedPlatform>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OVRManager/EventListener> eventListeners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::OVRManager_EventListener*>*& GlobalNamespace::OVRManager::dyn_eventListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::dyn_eventListeners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventListeners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::OVRManager_EventListener*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRManager.get_instance
::GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_instance
void GlobalNamespace::OVRManager::set_instance(::GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_display
::GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::get_display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_display
void GlobalNamespace::OVRManager::set_display(::GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tracker
::GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::get_tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_tracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_tracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tracker
void GlobalNamespace::OVRManager::set_tracker(::GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_tracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_tracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_boundary
::GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::get_boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_boundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_boundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_boundary
void GlobalNamespace::OVRManager::set_boundary(::GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_boundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_boundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_runtimeSettings
::GlobalNamespace::OVRRuntimeSettings* GlobalNamespace::OVRManager::get_runtimeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_runtimeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_runtimeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRRuntimeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_runtimeSettings
void GlobalNamespace::OVRManager::set_runtimeSettings(::GlobalNamespace::OVRRuntimeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_runtimeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_runtimeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_profile
::GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::get_profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_profile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_profile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRProfile*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.add_HMDAcquired
void GlobalNamespace::OVRManager::add_HMDAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDAcquired
void GlobalNamespace::OVRManager::remove_HMDAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDLost
void GlobalNamespace::OVRManager::add_HMDLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_HMDLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDLost
void GlobalNamespace::OVRManager::remove_HMDLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_HMDLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDMounted
void GlobalNamespace::OVRManager::add_HMDMounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDMounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDMounted
void GlobalNamespace::OVRManager::remove_HMDMounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDMounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDUnmounted
void GlobalNamespace::OVRManager::add_HMDUnmounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDUnmounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDUnmounted
void GlobalNamespace::OVRManager::remove_HMDUnmounted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDUnmounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusAcquired
void GlobalNamespace::OVRManager::add_VrFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusAcquired
void GlobalNamespace::OVRManager::remove_VrFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusLost
void GlobalNamespace::OVRManager::add_VrFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusLost
void GlobalNamespace::OVRManager::remove_VrFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusAcquired
void GlobalNamespace::OVRManager::add_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusAcquired
void GlobalNamespace::OVRManager::remove_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusLost
void GlobalNamespace::OVRManager::add_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusLost
void GlobalNamespace::OVRManager::remove_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioOutChanged
void GlobalNamespace::OVRManager::add_AudioOutChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioOutChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioOutChanged
void GlobalNamespace::OVRManager::remove_AudioOutChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioOutChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioInChanged
void GlobalNamespace::OVRManager::add_AudioInChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioInChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioInChanged
void GlobalNamespace::OVRManager::remove_AudioInChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioInChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingAcquired
void GlobalNamespace::OVRManager::add_TrackingAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingAcquired
void GlobalNamespace::OVRManager::remove_TrackingAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingLost
void GlobalNamespace::OVRManager::add_TrackingLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingLost
void GlobalNamespace::OVRManager::remove_TrackingLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_DisplayRefreshRateChanged
void GlobalNamespace::OVRManager::add_DisplayRefreshRateChanged(::System::Action_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_DisplayRefreshRateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_DisplayRefreshRateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_DisplayRefreshRateChanged
void GlobalNamespace::OVRManager::remove_DisplayRefreshRateChanged(::System::Action_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_DisplayRefreshRateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_DisplayRefreshRateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpatialAnchorCreateComplete
void GlobalNamespace::OVRManager::add_SpatialAnchorCreateComplete(::System::Action_4<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpatialAnchorCreateComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpatialAnchorCreateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpatialAnchorCreateComplete
void GlobalNamespace::OVRManager::remove_SpatialAnchorCreateComplete(::System::Action_4<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpatialAnchorCreateComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpatialAnchorCreateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceSetComponentStatusComplete
void GlobalNamespace::OVRManager::add_SpaceSetComponentStatusComplete(::System::Action_6<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceComponentType, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceSetComponentStatusComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceSetComponentStatusComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceSetComponentStatusComplete
void GlobalNamespace::OVRManager::remove_SpaceSetComponentStatusComplete(::System::Action_6<uint64_t, bool, ::GlobalNamespace::OVRSpace, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceComponentType, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceSetComponentStatusComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceSetComponentStatusComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceQueryResults
void GlobalNamespace::OVRManager::add_SpaceQueryResults(::System::Action_1<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceQueryResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceQueryResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceQueryResults
void GlobalNamespace::OVRManager::remove_SpaceQueryResults(::System::Action_1<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceQueryResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceQueryResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceQueryComplete
void GlobalNamespace::OVRManager::add_SpaceQueryComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceQueryComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceQueryComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceQueryComplete
void GlobalNamespace::OVRManager::remove_SpaceQueryComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceQueryComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceQueryComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceSaveComplete
void GlobalNamespace::OVRManager::add_SpaceSaveComplete(::System::Action_4<uint64_t, ::GlobalNamespace::OVRSpace, bool, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceSaveComplete
void GlobalNamespace::OVRManager::remove_SpaceSaveComplete(::System::Action_4<uint64_t, ::GlobalNamespace::OVRSpace, bool, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceEraseComplete
void GlobalNamespace::OVRManager::add_SpaceEraseComplete(::System::Action_4<uint64_t, bool, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceEraseComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceEraseComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceEraseComplete
void GlobalNamespace::OVRManager::remove_SpaceEraseComplete(::System::Action_4<uint64_t, bool, ::System::Guid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceEraseComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceEraseComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_ShareSpacesComplete
void GlobalNamespace::OVRManager::add_ShareSpacesComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_ShareSpacesComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_ShareSpacesComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_ShareSpacesComplete
void GlobalNamespace::OVRManager::remove_ShareSpacesComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_ShareSpacesComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_ShareSpacesComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SpaceListSaveComplete
void GlobalNamespace::OVRManager::add_SpaceListSaveComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SpaceListSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SpaceListSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SpaceListSaveComplete
void GlobalNamespace::OVRManager::remove_SpaceListSaveComplete(::System::Action_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SpaceListSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SpaceListSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_SceneCaptureComplete
void GlobalNamespace::OVRManager::add_SceneCaptureComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_SceneCaptureComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_SceneCaptureComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_SceneCaptureComplete
void GlobalNamespace::OVRManager::remove_SceneCaptureComplete(::System::Action_2<uint64_t, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_SceneCaptureComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_SceneCaptureComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HSWDismissed
void GlobalNamespace::OVRManager::add_HSWDismissed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::add_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "add_HSWDismissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HSWDismissed
void GlobalNamespace::OVRManager::remove_HSWDismissed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::remove_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "remove_HSWDismissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isHmdPresent
bool GlobalNamespace::OVRManager::get_isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_isHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_isHmdPresent
void GlobalNamespace::OVRManager::set_isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_isHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_audioOutId
::StringW GlobalNamespace::OVRManager::get_audioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_audioOutId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_audioOutId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_audioInId
::StringW GlobalNamespace::OVRManager::get_audioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_audioInId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_audioInId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_hasVrFocus
bool GlobalNamespace::OVRManager::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_hasVrFocus
void GlobalNamespace::OVRManager::set_hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_hasInputFocus
bool GlobalNamespace::OVRManager::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_chromatic
bool GlobalNamespace::OVRManager::get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_chromatic
void GlobalNamespace::OVRManager::set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_monoscopic
bool GlobalNamespace::OVRManager::get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_monoscopic
void GlobalNamespace::OVRManager::set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_sharpenType
::GlobalNamespace::OVRPlugin::LayerSharpenType GlobalNamespace::OVRManager::get_sharpenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_sharpenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharpenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::LayerSharpenType, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_sharpenType
void GlobalNamespace::OVRManager::set_sharpenType(::GlobalNamespace::OVRPlugin::LayerSharpenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_sharpenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharpenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_colorGamut
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager::get_colorGamut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_colorGamut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGamut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_ColorSpace, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_colorGamut
void GlobalNamespace::OVRManager::set_colorGamut(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_colorGamut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGamut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_nativeColorGamut
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager::get_nativeColorGamut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_nativeColorGamut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nativeColorGamut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_ColorSpace, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.IsAdaptiveResSupportedByEngine
bool GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsAdaptiveResSupportedByEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetRotation
::UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetRotation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetTranslation
::UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetTranslation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_eyeFovPremultipliedAlphaModeEnabled
bool GlobalNamespace::OVRManager::get_eyeFovPremultipliedAlphaModeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_eyeFovPremultipliedAlphaModeEnabled
void GlobalNamespace::OVRManager::set_eyeFovPremultipliedAlphaModeEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_enableMixedReality
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_enableMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_enableMixedReality
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_enableMixedReality(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_enableMixedReality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers
::UnityEngine::LayerMask GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers
::UnityEngine::LayerMask GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_compositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_compositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_compositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_compositionMethod
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_compositionMethod(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_compositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift
::UnityEngine::Color GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest
::UnityEngine::Color GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CameraDevice, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 24));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 26));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames
int GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_chromaKeyColor
::UnityEngine::Color GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_chromaKeyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_chromaKeyColor
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_chromaKeyColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeyColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 34));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 36));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_useDynamicLighting
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_useDynamicLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_useDynamicLighting
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_useDynamicLighting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_useDynamicLighting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_depthQuality
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_depthQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_depthQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_DepthQuality, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_depthQuality
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_depthQuality(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_depthQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 42));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 44));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_VirtualGreenScreenType, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 48));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 50));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling
bool GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 52));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance
float GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 54));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_mrcActivationMode
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_mrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_MrcActivationMode, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_mrcActivationMode
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_mrcActivationMode(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_mrcActivationMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject
::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject
void GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_xrApi
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager::get_xrApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_xrApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_XrApi, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.get_xrInstance
uint64_t GlobalNamespace::OVRManager::get_xrInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_xrInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.get_xrSession
uint64_t GlobalNamespace::OVRManager::get_xrSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_xrSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.get_vsyncCount
int GlobalNamespace::OVRManager::get_vsyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_vsyncCount
void GlobalNamespace::OVRManager::set_vsyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_batteryLevel
float GlobalNamespace::OVRManager::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryTemperature
float GlobalNamespace::OVRManager::get_batteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_batteryTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryStatus
int GlobalNamespace::OVRManager::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_volumeLevel
float GlobalNamespace::OVRManager::get_volumeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_volumeLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_volumeLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_suggestedCpuPerfLevel
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager::get_suggestedCpuPerfLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_suggestedCpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_suggestedCpuPerfLevel
void GlobalNamespace::OVRManager::set_suggestedCpuPerfLevel(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_suggestedCpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_suggestedGpuPerfLevel
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager::get_suggestedGpuPerfLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_suggestedGpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_suggestedGpuPerfLevel
void GlobalNamespace::OVRManager::set_suggestedGpuPerfLevel(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_suggestedGpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_cpuLevel
int GlobalNamespace::OVRManager::get_cpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_cpuLevel
void GlobalNamespace::OVRManager::set_cpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuLevel
int GlobalNamespace::OVRManager::get_gpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_gpuLevel
void GlobalNamespace::OVRManager::set_gpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isPowerSavingActive
bool GlobalNamespace::OVRManager::get_isPowerSavingActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_isPowerSavingActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_isPowerSavingActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_eyeTextureFormat
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager::get_eyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_EyeTextureFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_eyeTextureFormat
void GlobalNamespace::OVRManager::set_eyeTextureFormat(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_eyeTrackedFoveatedRenderingSupported
bool GlobalNamespace::OVRManager::get_eyeTrackedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_eyeTrackedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeTrackedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_eyeTrackedFoveatedRenderingEnabled
bool GlobalNamespace::OVRManager::get_eyeTrackedFoveatedRenderingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_eyeTrackedFoveatedRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_eyeTrackedFoveatedRenderingEnabled
void GlobalNamespace::OVRManager::set_eyeTrackedFoveatedRenderingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_eyeTrackedFoveatedRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.OnPermissionGranted
void GlobalNamespace::OVRManager::OnPermissionGranted(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "OnPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permissionId);
}
// Autogenerated method: OVRManager.get_foveatedRenderingLevel
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager::get_foveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_foveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_foveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_FoveatedRenderingLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_foveatedRenderingLevel
void GlobalNamespace::OVRManager::set_foveatedRenderingLevel(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_foveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_foveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingLevel
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_useDynamicFoveatedRendering
bool GlobalNamespace::OVRManager::get_useDynamicFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_useDynamicFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_useDynamicFoveatedRendering
void GlobalNamespace::OVRManager::set_useDynamicFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_useDynamicFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_useDynamicFixedFoveatedRendering
bool GlobalNamespace::OVRManager::get_useDynamicFixedFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_useDynamicFixedFoveatedRendering
void GlobalNamespace::OVRManager::set_useDynamicFixedFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tiledMultiResSupported
bool GlobalNamespace::OVRManager::get_tiledMultiResSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_tiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_tiledMultiResLevel
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager::get_tiledMultiResLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_TiledMultiResLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tiledMultiResLevel
void GlobalNamespace::OVRManager::set_tiledMultiResLevel(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "set_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuUtilSupported
bool GlobalNamespace::OVRManager::get_gpuUtilSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_gpuUtilSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_gpuUtilLevel
float GlobalNamespace::OVRManager::get_gpuUtilLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_gpuUtilLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_systemHeadsetType
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager::get_systemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_systemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_systemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_SystemHeadsetType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.SetColorScaleAndOffset
void GlobalNamespace::OVRManager::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(applyToAllLayers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRManager.SetOpenVRLocalPose
void GlobalNamespace::OVRManager::SetOpenVRLocalPose(::UnityEngine::Vector3 leftPos, ::UnityEngine::Vector3 rightPos, ::UnityEngine::Quaternion leftRot, ::UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftPos), ::il2cpp_utils::ExtractType(rightPos), ::il2cpp_utils::ExtractType(leftRot), ::il2cpp_utils::ExtractType(rightRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRManager.GetOpenVRControllerOffset
::GlobalNamespace::OVRPose GlobalNamespace::OVRManager::GetOpenVRControllerOffset(::UnityEngine::XR::XRNode hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetOpenVRControllerOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetOpenVRControllerOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRManager.SetSpaceWarp
void GlobalNamespace::OVRManager::SetSpaceWarp(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::SetSpaceWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "SetSpaceWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRManager.GetSpaceWarp
bool GlobalNamespace::OVRManager::GetSpaceWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetSpaceWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetSpaceWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.SetDepthSubmission
bool GlobalNamespace::OVRManager::SetDepthSubmission(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::SetDepthSubmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "SetDepthSubmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enable);
}
// Autogenerated method: OVRManager.get_trackingOriginType
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager::get_trackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_TrackingOrigin, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_trackingOriginType
void GlobalNamespace::OVRManager::set_trackingOriginType(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_IsSimultaneousHandsAndControllersSupported
bool GlobalNamespace::OVRManager::get_IsSimultaneousHandsAndControllersSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_IsSimultaneousHandsAndControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSimultaneousHandsAndControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.get_isSupportedPlatform
bool GlobalNamespace::OVRManager::get_isSupportedPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isSupportedPlatform
void GlobalNamespace::OVRManager::set_isSupportedPlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isUserPresent
bool GlobalNamespace::OVRManager::get_isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUserPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isUserPresent
void GlobalNamespace::OVRManager::set_isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::set_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isUserPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.RegisterEventListener
void GlobalNamespace::OVRManager::RegisterEventListener(::GlobalNamespace::OVRManager_EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::RegisterEventListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterEventListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: OVRManager.DeregisterEventListener
void GlobalNamespace::OVRManager::DeregisterEventListener(::GlobalNamespace::OVRManager_EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::DeregisterEventListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterEventListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: OVRManager.get_utilitiesVersion
::System::Version* GlobalNamespace::OVRManager::get_utilitiesVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_utilitiesVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_utilitiesVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_pluginVersion
::System::Version* GlobalNamespace::OVRManager::get_pluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_pluginVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_pluginVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_sdkVersion
::System::Version* GlobalNamespace::OVRManager::get_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::get_sdkVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "get_sdkVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.MixedRealityEnabledFromCmd
bool GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "MixedRealityEnabledFromCmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseDirectCompositionFromCmd
bool GlobalNamespace::OVRManager::UseDirectCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::UseDirectCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "UseDirectCompositionFromCmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseExternalCompositionFromCmd
bool GlobalNamespace::OVRManager::UseExternalCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::UseExternalCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "UseExternalCompositionFromCmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.CreateMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "CreateMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.LoadMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "LoadMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsUnityAlphaOrBetaVersion
bool GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsUnityAlphaOrBetaVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.InitOVRManager
void GlobalNamespace::OVRManager::InitOVRManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::InitOVRManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitOVRManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.InitPermissionRequest
void GlobalNamespace::OVRManager::InitPermissionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::InitPermissionRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitPermissionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Awake
void GlobalNamespace::OVRManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.SetCurrentXRDevice
void GlobalNamespace::OVRManager::SetCurrentXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::SetCurrentXRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentXRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.GetCurrentDisplaySubsystem
::UnityEngine::XR::XRDisplaySubsystem* GlobalNamespace::OVRManager::GetCurrentDisplaySubsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetCurrentDisplaySubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetCurrentDisplaySubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRDisplaySubsystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.GetCurrentDisplaySubsystemDescriptor
::UnityEngine::XR::XRDisplaySubsystemDescriptor* GlobalNamespace::OVRManager::GetCurrentDisplaySubsystemDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetCurrentDisplaySubsystemDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetCurrentDisplaySubsystemDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRDisplaySubsystemDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.GetCurrentInputSubsystem
::UnityEngine::XR::XRInputSubsystem* GlobalNamespace::OVRManager::GetCurrentInputSubsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetCurrentInputSubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetCurrentInputSubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRInputSubsystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.Initialize
void GlobalNamespace::OVRManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Update
void GlobalNamespace::OVRManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.UpdateHMDEvents
void GlobalNamespace::OVRManager::UpdateHMDEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::UpdateHMDEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHMDEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FindMainCamera
::UnityEngine::Camera* GlobalNamespace::OVRManager::FindMainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::FindMainCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "FindMainCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.OnDisable
void GlobalNamespace::OVRManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.LateUpdate
void GlobalNamespace::OVRManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FixedUpdate
void GlobalNamespace::OVRManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnDestroy
void GlobalNamespace::OVRManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnApplicationPause
void GlobalNamespace::OVRManager::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: OVRManager.OnApplicationFocus
void GlobalNamespace::OVRManager::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRManager.OnApplicationQuit
void GlobalNamespace::OVRManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.ReturnToLauncher
void GlobalNamespace::OVRManager::ReturnToLauncher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::ReturnToLauncher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToLauncher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.PlatformUIConfirmQuit
void GlobalNamespace::OVRManager::PlatformUIConfirmQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::PlatformUIConfirmQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "PlatformUIConfirmQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.StaticInitializeMixedRealityCapture
void GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture(::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "StaticInitializeMixedRealityCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration);
}
// Autogenerated method: OVRManager.StaticUpdateMixedRealityCapture
void GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture(::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::UnityEngine::GameObject* gameObject, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "StaticUpdateMixedRealityCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, gameObject, trackingOrigin);
}
// Autogenerated method: OVRManager.StaticShutdownMixedRealityCapture
void GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture(::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "StaticShutdownMixedRealityCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration);
}
// Autogenerated method: OVRManager.PassthroughInitializedOrPending
bool GlobalNamespace::OVRManager::PassthroughInitializedOrPending(::GlobalNamespace::OVRManager_PassthroughInitializationState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::PassthroughInitializedOrPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "PassthroughInitializedOrPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: OVRManager.InitializeInsightPassthrough
bool GlobalNamespace::OVRManager::InitializeInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::InitializeInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.ShutdownInsightPassthrough
void GlobalNamespace::OVRManager::ShutdownInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::ShutdownInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UpdateInsightPassthrough
void GlobalNamespace::OVRManager::UpdateInsightPassthrough(bool shouldBeEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::UpdateInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "UpdateInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldBeEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shouldBeEnabled);
}
// Autogenerated method: OVRManager.IsMultimodalHandsControllersSupported
bool GlobalNamespace::OVRManager::IsMultimodalHandsControllersSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsMultimodalHandsControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsInsightPassthroughSupported
bool GlobalNamespace::OVRManager::IsInsightPassthroughSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsInsightPassthroughSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsInsightPassthroughSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.GetPassthroughCapabilities
::GlobalNamespace::OVRManager_PassthroughCapabilities* GlobalNamespace::OVRManager::GetPassthroughCapabilities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::GetPassthroughCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "GetPassthroughCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_PassthroughCapabilities*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsInsightPassthroughInitialized
bool GlobalNamespace::OVRManager::IsInsightPassthroughInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsInsightPassthroughInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.HasInsightPassthroughInitFailed
bool GlobalNamespace::OVRManager::HasInsightPassthroughInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::HasInsightPassthroughInitFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "HasInsightPassthroughInitFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsInsightPassthroughInitPending
bool GlobalNamespace::OVRManager::IsInsightPassthroughInitPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsInsightPassthroughInitPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsInsightPassthroughInitPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsPassthroughRecommended
bool GlobalNamespace::OVRManager::IsPassthroughRecommended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsPassthroughRecommended");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsPassthroughRecommended", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsOpenXRLoaderActive
bool GlobalNamespace::OVRManager::IsOpenXRLoaderActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::IsOpenXRLoaderActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", "IsOpenXRLoaderActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager..cctor
void GlobalNamespace::OVRManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRMixedReality
#include "GlobalNamespace/OVRMixedReality.hpp"
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean useFakeExternalCamera
bool GlobalNamespace::OVRMixedReality::_get_useFakeExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_useFakeExternalCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRMixedReality", "useFakeExternalCamera"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean useFakeExternalCamera
void GlobalNamespace::OVRMixedReality::_set_useFakeExternalCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_useFakeExternalCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "useFakeExternalCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 fakeCameraFloorLevelPosition
::UnityEngine::Vector3 GlobalNamespace::OVRMixedReality::_get_fakeCameraFloorLevelPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_fakeCameraFloorLevelPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRMixedReality", "fakeCameraFloorLevelPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 fakeCameraFloorLevelPosition
void GlobalNamespace::OVRMixedReality::_set_fakeCameraFloorLevelPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_fakeCameraFloorLevelPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraFloorLevelPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 fakeCameraEyeLevelPosition
::UnityEngine::Vector3 GlobalNamespace::OVRMixedReality::_get_fakeCameraEyeLevelPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_fakeCameraEyeLevelPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRMixedReality", "fakeCameraEyeLevelPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 fakeCameraEyeLevelPosition
void GlobalNamespace::OVRMixedReality::_set_fakeCameraEyeLevelPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_fakeCameraEyeLevelPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraEyeLevelPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Quaternion fakeCameraRotation
::UnityEngine::Quaternion GlobalNamespace::OVRMixedReality::_get_fakeCameraRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_fakeCameraRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("", "OVRMixedReality", "fakeCameraRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Quaternion fakeCameraRotation
void GlobalNamespace::OVRMixedReality::_set_fakeCameraRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_fakeCameraRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraRotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single fakeCameraFov
float GlobalNamespace::OVRMixedReality::_get_fakeCameraFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_fakeCameraFov");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRMixedReality", "fakeCameraFov"));
}
// Autogenerated static field setter
// Set static field: static public System.Single fakeCameraFov
void GlobalNamespace::OVRMixedReality::_set_fakeCameraFov(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_fakeCameraFov");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraFov", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single fakeCameraAspect
float GlobalNamespace::OVRMixedReality::_get_fakeCameraAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_fakeCameraAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRMixedReality", "fakeCameraAspect"));
}
// Autogenerated static field setter
// Set static field: static public System.Single fakeCameraAspect
void GlobalNamespace::OVRMixedReality::_set_fakeCameraAspect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_fakeCameraAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "fakeCameraAspect", value));
}
// Autogenerated static field getter
// Get static field: static public OVRComposition currentComposition
::GlobalNamespace::OVRComposition* GlobalNamespace::OVRMixedReality::_get_currentComposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_get_currentComposition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRComposition*>("", "OVRMixedReality", "currentComposition"));
}
// Autogenerated static field setter
// Set static field: static public OVRComposition currentComposition
void GlobalNamespace::OVRMixedReality::_set_currentComposition(::GlobalNamespace::OVRComposition* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::_set_currentComposition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMixedReality", "currentComposition", value));
}
// Autogenerated method: OVRMixedReality.Update
void GlobalNamespace::OVRMixedReality::Update(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedReality", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parentObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRMixedReality.Cleanup
void GlobalNamespace::OVRMixedReality::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedReality", "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRMixedReality.RecenterPose
void GlobalNamespace::OVRMixedReality::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedReality", "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRMixedReality..cctor
void GlobalNamespace::OVRMixedReality::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMixedReality::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRMixedReality", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRMultimodalHandsAndControllersSample
#include "GlobalNamespace/OVRMultimodalHandsAndControllersSample.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button enableButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_enableButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_enableButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button disableButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_disableButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_disableButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text displayText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_displayText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::dyn_displayText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.Awake
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.OnDestroy
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.OnEnable
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.OnDisable
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.Update
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.EnableMultiModality
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::EnableMultiModality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::EnableMultiModality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMultiModality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMultimodalHandsAndControllersSample.DisableMultiModality
void GlobalNamespace::OVRMultimodalHandsAndControllersSample::DisableMultiModality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMultimodalHandsAndControllersSample::DisableMultiModality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMultiModality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROnCompleteListener
#include "GlobalNamespace/OVROnCompleteListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVROnCompleteListener.onSuccess
void GlobalNamespace::OVROnCompleteListener::onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROnCompleteListener::onSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROnCompleteListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROnCompleteListener.onFailure
void GlobalNamespace::OVROnCompleteListener::onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROnCompleteListener::onFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROnCompleteListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVROverlay/ExternalSurfaceObjectCreated
#include "GlobalNamespace/OVROverlay_ExternalSurfaceObjectCreated.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 maxInstances
int GlobalNamespace::OVROverlay::_get_maxInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_get_maxInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVROverlay", "maxInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 maxInstances
void GlobalNamespace::OVROverlay::_set_maxInstances(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_set_maxInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "maxInstances", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay[] instances
::ArrayW<::GlobalNamespace::OVROverlay*> GlobalNamespace::OVROverlay::_get_instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_get_instances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVROverlay*>>("", "OVROverlay", "instances"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay[] instances
void GlobalNamespace::OVROverlay::_set_instances(::ArrayW<::GlobalNamespace::OVROverlay*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_set_instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "instances", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material tex2DMaterial
::UnityEngine::Material* GlobalNamespace::OVROverlay::_get_tex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_get_tex2DMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "OVROverlay", "tex2DMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material tex2DMaterial
void GlobalNamespace::OVROverlay::_set_tex2DMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_set_tex2DMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "tex2DMaterial", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material cubeMaterial
::UnityEngine::Material* GlobalNamespace::OVROverlay::_get_cubeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_get_cubeMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "OVROverlay", "cubeMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material cubeMaterial
void GlobalNamespace::OVROverlay::_set_cubeMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::_set_cubeMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay", "cubeMaterial", value));
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay/OverlayType currentOverlayType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayType& GlobalNamespace::OVROverlay::dyn_currentOverlayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_currentOverlayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentOverlayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDynamic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_isDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_isDynamic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDynamic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isProtectedContent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_isProtectedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_isProtectedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isProtectedContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect srcRectLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlay::dyn_srcRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_srcRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "srcRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect srcRectRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlay::dyn_srcRectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_srcRectRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "srcRectRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect destRectLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlay::dyn_destRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_destRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect destRectRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlay::dyn_destRectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_destRectRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destRectRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean invertTextureRects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_invertTextureRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_invertTextureRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invertTextureRects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/TextureRectMatrixf textureRectMatrix
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::TextureRectMatrixf& GlobalNamespace::OVROverlay::dyn_textureRectMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_textureRectMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureRectMatrix"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::TextureRectMatrixf*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideTextureRectMatrix
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_overrideTextureRectMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_overrideTextureRectMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideTextureRectMatrix"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overridePerLayerColorScaleAndOffset
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_overridePerLayerColorScaleAndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_overridePerLayerColorScaleAndOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePerLayerColorScaleAndOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 colorScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OVROverlay::dyn_colorScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_colorScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 colorOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OVROverlay::dyn_colorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_colorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useExpensiveSuperSample
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useExpensiveSuperSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useExpensiveSuperSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useExpensiveSuperSample"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useExpensiveSharpen
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useExpensiveSharpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useExpensiveSharpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useExpensiveSharpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hidden
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isExternalSurface
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_isExternalSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_isExternalSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExternalSurface"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 externalSurfaceWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_externalSurfaceWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_externalSurfaceWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalSurfaceWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 externalSurfaceHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_externalSurfaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_externalSurfaceHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalSurfaceHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 compositionDepth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_compositionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_compositionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compositionDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerCompositionDepth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_layerCompositionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerCompositionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerCompositionDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noDepthBufferTesting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_noDepthBufferTesting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_noDepthBufferTesting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noDepthBufferTesting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/EyeTextureFormat layerTextureFormat
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::EyeTextureFormat& GlobalNamespace::OVROverlay::dyn_layerTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerTextureFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerTextureFormat"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay/OverlayShape currentOverlayShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayShape& GlobalNamespace::OVROverlay::dyn_currentOverlayShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_currentOverlayShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentOverlayShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay/OverlayShape prevOverlayShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayShape& GlobalNamespace::OVROverlay::dyn_prevOverlayShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_prevOverlayShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevOverlayShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] textures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVROverlay::dyn_textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isAlphaPremultiplied
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_isAlphaPremultiplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_isAlphaPremultiplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAlphaPremultiplied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useBicubicFiltering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useBicubicFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useBicubicFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useBicubicFiltering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useLegacyCubemapRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useLegacyCubemapRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useLegacyCubemapRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useLegacyCubemapRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useEfficientSupersample
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useEfficientSupersample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useEfficientSupersample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useEfficientSupersample"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useEfficientSharpen
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useEfficientSharpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useEfficientSharpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useEfficientSharpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAutomaticFiltering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_useAutomaticFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_useAutomaticFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAutomaticFiltering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _previewInEditor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn__previewInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn__previewInEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewInEditor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.IntPtr[] texturePtrs
[[deprecated("Use field access instead!")]] ::ArrayW<::System::IntPtr>& GlobalNamespace::OVROverlay::dyn_texturePtrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_texturePtrs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturePtrs"))->offset;
  return *reinterpret_cast<::ArrayW<::System::IntPtr>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr externalSurfaceObject
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVROverlay::dyn_externalSurfaceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_externalSurfaceObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalSurfaceObject"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay/ExternalSurfaceObjectCreated externalSurfaceObjectCreated
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated*& GlobalNamespace::OVROverlay::dyn_externalSurfaceObjectCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_externalSurfaceObjectCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalSurfaceObjectCreated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isOverridePending
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_isOverridePending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_isOverridePending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOverridePending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <layerId>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_$layerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_$layerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<layerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay/LayerTexture[] layerTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVROverlay::LayerTexture>& GlobalNamespace::OVROverlay::dyn_layerTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVROverlay::LayerTexture>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/LayerDesc layerDesc
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::LayerDesc& GlobalNamespace::OVROverlay::dyn_layerDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerDesc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerDesc"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::LayerDesc*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stageCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_stageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_stageCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stageCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle layerIdHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& GlobalNamespace::OVROverlay::dyn_layerIdHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerIdHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIdHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr layerIdPtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVROverlay::dyn_layerIdPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_layerIdPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIdPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 frameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_frameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_frameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 prevFrameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::dyn_prevFrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_prevFrameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevFrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer rend
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::OVROverlay::dyn_rend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_rend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rend"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 OpenVROverlayHandle
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVROverlay::dyn_OpenVROverlayHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_OpenVROverlayHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OpenVROverlayHandle"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 OpenVRUVOffsetAndScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OVROverlay::dyn_OpenVRUVOffsetAndScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_OpenVRUVOffsetAndScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OpenVRUVOffsetAndScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 OpenVRMouseScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::OVROverlay::dyn_OpenVRMouseScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_OpenVRMouseScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OpenVRMouseScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager/XRDevice constructedOverlayXRDevice
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_XRDevice& GlobalNamespace::OVROverlay::dyn_constructedOverlayXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_constructedOverlayXRDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructedOverlayXRDevice"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_XRDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xrDeviceConstructed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlay::dyn_xrDeviceConstructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::dyn_xrDeviceConstructed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrDeviceConstructed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlay.get_previewInEditor
bool GlobalNamespace::OVROverlay::get_previewInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::get_previewInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.set_previewInEditor
void GlobalNamespace::OVROverlay::set_previewInEditor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::set_previewInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVROverlay.OverrideOverlayTextureInfo
void GlobalNamespace::OVROverlay::OverrideOverlayTextureInfo(::UnityEngine::Texture* srcTexture, ::System::IntPtr nativePtr, ::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverrideOverlayTextureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideOverlayTextureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcTexture), ::il2cpp_utils::ExtractType(nativePtr), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, srcTexture, nativePtr, node);
}
// Autogenerated method: OVROverlay.get_layerId
int GlobalNamespace::OVROverlay::get_layerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::get_layerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.set_layerId
void GlobalNamespace::OVROverlay::set_layerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::set_layerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVROverlay.get_layout
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVROverlay::get_layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::get_layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::LayerLayout, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.get_texturesPerStage
int GlobalNamespace::OVROverlay::get_texturesPerStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::get_texturesPerStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texturesPerStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.NeedsTexturesForShape
bool GlobalNamespace::OVROverlay::NeedsTexturesForShape(::GlobalNamespace::OVROverlay::OverlayShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::NeedsTexturesForShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlay", "NeedsTexturesForShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape);
}
// Autogenerated method: OVROverlay.CreateLayer
bool GlobalNamespace::OVROverlay::CreateLayer(int mipLevels, int sampleCount, ::GlobalNamespace::OVRPlugin::EyeTextureFormat etFormat, int flags, ::GlobalNamespace::OVRPlugin::Sizei size, ::GlobalNamespace::OVRPlugin::OverlayShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::CreateLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mipLevels), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(etFormat), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mipLevels, sampleCount, etFormat, flags, size, shape);
}
// Autogenerated method: OVROverlay.CreateLayerTextures
bool GlobalNamespace::OVROverlay::CreateLayerTextures(bool useMipmaps, ::GlobalNamespace::OVRPlugin::Sizei size, bool isHdr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::CreateLayerTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLayerTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMipmaps), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isHdr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, useMipmaps, size, isHdr);
}
// Autogenerated method: OVROverlay.DestroyLayerTextures
void GlobalNamespace::OVROverlay::DestroyLayerTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::DestroyLayerTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyLayerTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.DestroyLayer
void GlobalNamespace::OVROverlay::DestroyLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::DestroyLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.SetSrcDestRects
void GlobalNamespace::OVROverlay::SetSrcDestRects(::UnityEngine::Rect srcLeft, ::UnityEngine::Rect srcRight, ::UnityEngine::Rect destLeft, ::UnityEngine::Rect destRight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::SetSrcDestRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSrcDestRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcLeft), ::il2cpp_utils::ExtractType(srcRight), ::il2cpp_utils::ExtractType(destLeft), ::il2cpp_utils::ExtractType(destRight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, srcLeft, srcRight, destLeft, destRight);
}
// Autogenerated method: OVROverlay.UpdateTextureRectMatrix
void GlobalNamespace::OVROverlay::UpdateTextureRectMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::UpdateTextureRectMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextureRectMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.SetPerLayerColorScaleAndOffset
void GlobalNamespace::OVROverlay::SetPerLayerColorScaleAndOffset(::UnityEngine::Vector4 scale, ::UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::SetPerLayerColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerLayerColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale, offset);
}
// Autogenerated method: OVROverlay.LatchLayerTextures
bool GlobalNamespace::OVROverlay::LatchLayerTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::LatchLayerTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LatchLayerTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.GetCurrentLayerDesc
::GlobalNamespace::OVRPlugin::LayerDesc GlobalNamespace::OVROverlay::GetCurrentLayerDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::GetCurrentLayerDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::LayerDesc, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.GetBlitRect
::UnityEngine::Rect GlobalNamespace::OVROverlay::GetBlitRect(int eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::GetBlitRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlitRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, eyeId);
}
// Autogenerated method: OVROverlay.BlitSubImage
void GlobalNamespace::OVROverlay::BlitSubImage(::UnityEngine::Texture* src, ::UnityEngine::RenderTexture* dst, ::UnityEngine::Material* mat, ::UnityEngine::Rect rect, bool invertRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::BlitSubImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlitSubImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(invertRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst, mat, rect, invertRect);
}
// Autogenerated method: OVROverlay.PopulateLayer
bool GlobalNamespace::OVROverlay::PopulateLayer(int mipLevels, bool isHdr, ::GlobalNamespace::OVRPlugin::Sizei size, int sampleCount, int stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::PopulateLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mipLevels), ::il2cpp_utils::ExtractType(isHdr), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(stage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mipLevels, isHdr, size, sampleCount, stage);
}
// Autogenerated method: OVROverlay.SubmitLayer
bool GlobalNamespace::OVROverlay::SubmitLayer(bool overlay, bool headLocked, bool noDepthBufferTesting, ::GlobalNamespace::OVRPose pose, ::UnityEngine::Vector3 scale, int frameIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::SubmitLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overlay), ::il2cpp_utils::ExtractType(headLocked), ::il2cpp_utils::ExtractType(noDepthBufferTesting), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(frameIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, overlay, headLocked, noDepthBufferTesting, pose, scale, frameIndex);
}
// Autogenerated method: OVROverlay.SetupEditorPreview
void GlobalNamespace::OVROverlay::SetupEditorPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::SetupEditorPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEditorPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.ResetEditorPreview
void GlobalNamespace::OVROverlay::ResetEditorPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ResetEditorPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetEditorPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.IsPassthroughShape
bool GlobalNamespace::OVROverlay::IsPassthroughShape(::GlobalNamespace::OVROverlay::OverlayShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::IsPassthroughShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlay", "IsPassthroughShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape);
}
// Autogenerated method: OVROverlay.Awake
void GlobalNamespace::OVROverlay::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.get_OpenVROverlayKey
::StringW GlobalNamespace::OVROverlay::get_OpenVROverlayKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::get_OpenVROverlayKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlay", "get_OpenVROverlayKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVROverlay.OnEnable
void GlobalNamespace::OVROverlay::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.InitOVROverlay
void GlobalNamespace::OVROverlay::InitOVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::InitOVROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitOVROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.OnDisable
void GlobalNamespace::OVROverlay::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.OnDestroy
void GlobalNamespace::OVROverlay::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay.ComputePoseAndScale
void GlobalNamespace::OVROverlay::ComputePoseAndScale(ByRef<::GlobalNamespace::OVRPose> pose, ByRef<::UnityEngine::Vector3> scale, ByRef<bool> overlay, ByRef<bool> headLocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ComputePoseAndScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePoseAndScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(overlay), ::il2cpp_utils::ExtractType(headLocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose), byref(scale), byref(overlay), byref(headLocked));
}
// Autogenerated method: OVROverlay.ComputeSubmit
bool GlobalNamespace::OVROverlay::ComputeSubmit(ByRef<::GlobalNamespace::OVRPose> pose, ByRef<::UnityEngine::Vector3> scale, ByRef<bool> overlay, ByRef<bool> headLocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ComputeSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(overlay), ::il2cpp_utils::ExtractType(headLocked)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose), byref(scale), byref(overlay), byref(headLocked));
}
// Autogenerated method: OVROverlay.OpenVROverlayUpdate
void GlobalNamespace::OVROverlay::OpenVROverlayUpdate(::UnityEngine::Vector3 scale, ::GlobalNamespace::OVRPose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OpenVROverlayUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenVROverlayUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale, pose);
}
// Autogenerated method: OVROverlay.LateUpdate
void GlobalNamespace::OVROverlay::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay..cctor
void GlobalNamespace::OVROverlay::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlay", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlay/OverlayShape
#include "GlobalNamespace/OVROverlay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape Quad
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape Quad
void GlobalNamespace::OVROverlay::OverlayShape::_set_Quad(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "Quad", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape Cylinder
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape Cylinder
void GlobalNamespace::OVROverlay::OverlayShape::_set_Cylinder(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape Cubemap
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape Cubemap
void GlobalNamespace::OVROverlay::OverlayShape::_set_Cubemap(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape OffcenterCubemap
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_OffcenterCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_OffcenterCubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "OffcenterCubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape OffcenterCubemap
void GlobalNamespace::OVROverlay::OverlayShape::_set_OffcenterCubemap(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_OffcenterCubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "OffcenterCubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape Equirect
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_Equirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_Equirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "Equirect"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape Equirect
void GlobalNamespace::OVROverlay::OverlayShape::_set_Equirect(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_Equirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "Equirect", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape ReconstructionPassthrough
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_ReconstructionPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_ReconstructionPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "ReconstructionPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape ReconstructionPassthrough
void GlobalNamespace::OVROverlay::OverlayShape::_set_ReconstructionPassthrough(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_ReconstructionPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "ReconstructionPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape SurfaceProjectedPassthrough
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_SurfaceProjectedPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_SurfaceProjectedPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "SurfaceProjectedPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape SurfaceProjectedPassthrough
void GlobalNamespace::OVROverlay::OverlayShape::_set_SurfaceProjectedPassthrough(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_SurfaceProjectedPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "SurfaceProjectedPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape Fisheye
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_Fisheye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_Fisheye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "Fisheye"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape Fisheye
void GlobalNamespace::OVROverlay::OverlayShape::_set_Fisheye(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_Fisheye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "Fisheye", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape KeyboardHandsPassthrough
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_KeyboardHandsPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_KeyboardHandsPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "KeyboardHandsPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape KeyboardHandsPassthrough
void GlobalNamespace::OVROverlay::OverlayShape::_set_KeyboardHandsPassthrough(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_KeyboardHandsPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "KeyboardHandsPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayShape KeyboardMaskedHandsPassthrough
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVROverlay::OverlayShape::_get_KeyboardMaskedHandsPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_get_KeyboardMaskedHandsPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayShape>("", "OVROverlay/OverlayShape", "KeyboardMaskedHandsPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayShape KeyboardMaskedHandsPassthrough
void GlobalNamespace::OVROverlay::OverlayShape::_set_KeyboardMaskedHandsPassthrough(::GlobalNamespace::OVROverlay::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::_set_KeyboardMaskedHandsPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayShape", "KeyboardMaskedHandsPassthrough", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::OverlayShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlay/OverlayType
#include "GlobalNamespace/OVROverlay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayType None
::GlobalNamespace::OVROverlay::OverlayType GlobalNamespace::OVROverlay::OverlayType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayType>("", "OVROverlay/OverlayType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayType None
void GlobalNamespace::OVROverlay::OverlayType::_set_None(::GlobalNamespace::OVROverlay::OverlayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayType Underlay
::GlobalNamespace::OVROverlay::OverlayType GlobalNamespace::OVROverlay::OverlayType::_get_Underlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_get_Underlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayType>("", "OVROverlay/OverlayType", "Underlay"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayType Underlay
void GlobalNamespace::OVROverlay::OverlayType::_set_Underlay(::GlobalNamespace::OVROverlay::OverlayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_set_Underlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayType", "Underlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlay/OverlayType Overlay
::GlobalNamespace::OVROverlay::OverlayType GlobalNamespace::OVROverlay::OverlayType::_get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_get_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlay::OverlayType>("", "OVROverlay/OverlayType", "Overlay"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlay/OverlayType Overlay
void GlobalNamespace::OVROverlay::OverlayType::_set_Overlay(::GlobalNamespace::OVROverlay::OverlayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::_set_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlay/OverlayType", "Overlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlay::OverlayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::OverlayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVROverlay/ExternalSurfaceObjectCreated
#include "GlobalNamespace/OVROverlay_ExternalSurfaceObjectCreated.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVROverlay/ExternalSurfaceObjectCreated.Invoke
void GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlay/ExternalSurfaceObjectCreated.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVROverlay/ExternalSurfaceObjectCreated.EndInvoke
void GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROverlay::ExternalSurfaceObjectCreated*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator
#include "GlobalNamespace/OVROverlayMeshGenerator.hpp"
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> _Tris
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Tris"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector2> _UV
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__UV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UV"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector4> _CubeUV
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__CubeUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__CubeUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CubeUV"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _Verts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Verts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _CameraRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CameraRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastDestRectLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastDestRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastDestRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDestRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastDestRectRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastDestRectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastDestRectRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDestRectRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.TextureDimension _LastTextureDimension
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::TextureDimension& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastTextureDimension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastTextureDimension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastTextureDimension"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::TextureDimension*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay/OverlayShape _LastShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayShape& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastSrcRectLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastSrcRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastSrcRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastSrcRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _Mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshCollider _MeshCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _MeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _MeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay _Overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _Transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlayMeshGenerator.OnEnable
void GlobalNamespace::OVROverlayMeshGenerator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.OnDisable
void GlobalNamespace::OVROverlayMeshGenerator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.OnDestroy
void GlobalNamespace::OVROverlayMeshGenerator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.Initialize
void GlobalNamespace::OVROverlayMeshGenerator::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.SetOverlay
void GlobalNamespace::OVROverlayMeshGenerator::SetOverlay(::GlobalNamespace::OVROverlay* overlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::SetOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overlay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overlay);
}
// Autogenerated method: OVROverlayMeshGenerator.GetBoundingRect
::UnityEngine::Rect GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect(::UnityEngine::Rect a, ::UnityEngine::Rect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetBoundingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVROverlayMeshGenerator.CreateMesh
void GlobalNamespace::OVROverlayMeshGenerator::CreateMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CreateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.UpdateMesh
void GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh(::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, bool cubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cubemap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shape, position, rotation, scale, rect, cubemap);
}
// Autogenerated method: OVROverlayMeshGenerator.GenerateMesh
void GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uvs, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* cubeUVs, ::System::Collections::Generic::List_1<int>* tris, ::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GenerateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(cubeUVs), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uvs, cubeUVs, tris, shape, position, rotation, scale, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.InverseTransformVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::InverseTransformVert(ByRef<::UnityEngine::Vector3> vert, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> scale, float worldScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::InverseTransformVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "InverseTransformVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vert), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(worldScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(vert), byref(position), byref(scale), worldScale);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV(float theta, float phi, float expandScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi), ::il2cpp_utils::ExtractType(expandScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi, expandScale);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert(float theta, float phi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildSphere
void GlobalNamespace::OVROverlayMeshGenerator::BuildSphere(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, float worldScale, int latitudes, int longitudes, float expandCoefficient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(latitudes), ::il2cpp_utils::ExtractType(longitudes), ::il2cpp_utils::ExtractType(expandCoefficient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, position, rotation, scale, rect, worldScale, latitudes, longitudes, expandCoefficient);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, float sideU, float sideV, float expandScale, float expandOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideU), ::il2cpp_utils::ExtractType(sideV), ::il2cpp_utils::ExtractType(expandScale), ::il2cpp_utils::ExtractType(expandOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideU, sideV, expandScale, expandOffset);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, float sideU, float sideV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideU), ::il2cpp_utils::ExtractType(sideV)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideU, sideV);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildCube
void GlobalNamespace::OVROverlayMeshGenerator::BuildCube(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* cubeUV, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, float worldScale, int subQuads, float expandCoefficient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(cubeUV), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(subQuads), ::il2cpp_utils::ExtractType(expandCoefficient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, cubeUV, triangles, position, rotation, scale, worldScale, subQuads, expandCoefficient);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildQuad
void GlobalNamespace::OVROverlayMeshGenerator::BuildQuad(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildHemicylinder
void GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, int longitudes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildHemicylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(longitudes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, scale, rect, longitudes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Bottom
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Bottom
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Front
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Front"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Front
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Front", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Back
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Back
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Right
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Right
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Left
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Left
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Top
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Top"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Top
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace COUNT
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace COUNT
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRPassthroughColorLut
#include "GlobalNamespace/OVRPassthroughColorLut.hpp"
// Including type: OVRPassthroughLayer/IStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_IStyleHandler.hpp"
// Including type: OVRPassthroughLayer/StylesHandler
#include "GlobalNamespace/OVRPassthroughLayer_StylesHandler.hpp"
// Including type: OVRPassthroughLayer/NoneStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_NoneStyleHandler.hpp"
// Including type: OVRPassthroughLayer/BaseGeneratedStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_BaseGeneratedStyleHandler.hpp"
// Including type: OVRPassthroughLayer/MonoToRgbaStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToRgbaStyleHandler.hpp"
// Including type: OVRPassthroughLayer/MonoToMonoStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToMonoStyleHandler.hpp"
// Including type: OVRPassthroughLayer/BCSStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_BCSStyleHandler.hpp"
// Including type: OVRPassthroughLayer/ColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_ColorLutHandler.hpp"
// Including type: OVRPassthroughLayer/InterpolatedColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_InterpolatedColorLutHandler.hpp"
// Including type: OVRPassthroughLayer/<>c__DisplayClass10_0
#include "GlobalNamespace/OVRPassthroughLayer_--c__DisplayClass10_0.hpp"
// Including type: OVRPassthroughLayer/<>c__DisplayClass9_0
#include "GlobalNamespace/OVRPassthroughLayer_--c__DisplayClass9_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVROverlay/OverlayShape
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<OVRPassthroughLayer/ColorMapEditorType,OVRPlugin/InsightPassthroughColorMapType> _editorToColorMapType
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType, ::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>* GlobalNamespace::OVRPassthroughLayer::_get__editorToColorMapType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::_get__editorToColorMapType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType, ::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>*>("", "OVRPassthroughLayer", "_editorToColorMapType")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<OVRPassthroughLayer/ColorMapEditorType,OVRPlugin/InsightPassthroughColorMapType> _editorToColorMapType
void GlobalNamespace::OVRPassthroughLayer::_set__editorToColorMapType(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType, ::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::_set__editorToColorMapType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer", "_editorToColorMapType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Gradient colorMapNeutralGradient
::UnityEngine::Gradient* GlobalNamespace::OVRPassthroughLayer::_get_colorMapNeutralGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::_get_colorMapNeutralGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Gradient*>("", "OVRPassthroughLayer", "colorMapNeutralGradient"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Gradient colorMapNeutralGradient
void GlobalNamespace::OVRPassthroughLayer::_set_colorMapNeutralGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::_set_colorMapNeutralGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer", "colorMapNeutralGradient", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRPassthroughLayer/ProjectionSurfaceType projectionSurfaceType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType& GlobalNamespace::OVRPassthroughLayer::dyn_projectionSurfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_projectionSurfaceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionSurfaceType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay/OverlayType overlayType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay::OverlayType& GlobalNamespace::OVRPassthroughLayer::dyn_overlayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_overlayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 compositionDepth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPassthroughLayer::dyn_compositionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_compositionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compositionDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hidden
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn_hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overridePerLayerColorScaleAndOffset
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn_overridePerLayerColorScaleAndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_overridePerLayerColorScaleAndOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePerLayerColorScaleAndOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 colorScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OVRPassthroughLayer::dyn_colorScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 colorOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OVRPassthroughLayer::dyn_colorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OVRPassthroughLayer/ColorMapEditorType colorMapEditorType_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorType_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorType_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorType_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Gradient colorMapEditorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single colorMapEditorContrast
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorContrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorContrast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorContrast"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single colorMapEditorBrightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single colorMapEditorPosterize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorPosterize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorPosterize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorPosterize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single colorMapEditorSaturation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorSaturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapEditorSaturation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapEditorSaturation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Texture2D _colorLutSourceTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::dyn__colorLutSourceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__colorLutSourceTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorLutSourceTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Texture2D _colorLutTargetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::dyn__colorLutTargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__colorLutTargetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorLutTargetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single _lutWeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn__lutWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__lutWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lutWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _flipLutY
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn__flipLutY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__flipLutY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flipLutY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/Settings _settings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::Settings& GlobalNamespace::OVRPassthroughLayer::dyn__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::Settings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRPassthroughLayer::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cameraRigInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn_cameraRigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_cameraRigInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRigInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject auxGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRPassthroughLayer::dyn_auxGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_auxGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "auxGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay passthroughOverlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVRPassthroughLayer::dyn_passthroughOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_passthroughOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughOverlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,OVRPassthroughLayer/PassthroughMeshInstance> surfaceGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::OVRPassthroughLayer::PassthroughMeshInstance>*& GlobalNamespace::OVRPassthroughLayer::dyn_surfaceGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_surfaceGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::OVRPassthroughLayer::PassthroughMeshInstance>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRPassthroughLayer/DeferredPassthroughMeshAddition> deferredSurfaceGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRPassthroughLayer::DeferredPassthroughMeshAddition>*& GlobalNamespace::OVRPassthroughLayer::dyn_deferredSurfaceGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_deferredSurfaceGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deferredSurfaceGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRPassthroughLayer::DeferredPassthroughMeshAddition>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<OVRPassthroughLayer/SerializedSurfaceGeometry> serializedSurfaceGeometry
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRPassthroughLayer::SerializedSurfaceGeometry>*& GlobalNamespace::OVRPassthroughLayer::dyn_serializedSurfaceGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_serializedSurfaceGeometry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedSurfaceGeometry"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRPassthroughLayer::SerializedSurfaceGeometry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single textureOpacity_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::dyn_textureOpacity_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_textureOpacity_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureOpacity_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean edgeRenderingEnabled_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn_edgeRenderingEnabled_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_edgeRenderingEnabled_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edgeRenderingEnabled_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Color edgeColor_
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRPassthroughLayer::dyn_edgeColor_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_edgeColor_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edgeColor_"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/InsightPassthroughColorMapType colorMapType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType& GlobalNamespace::OVRPassthroughLayer::dyn_colorMapType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_colorMapType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMapType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean styleDirty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::dyn_styleDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn_styleDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "styleDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/StylesHandler _stylesHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::StylesHandler*& GlobalNamespace::OVRPassthroughLayer::dyn__stylesHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::dyn__stylesHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stylesHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::StylesHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer.AddSurfaceGeometry
void GlobalNamespace::OVRPassthroughLayer::AddSurfaceGeometry(::UnityEngine::GameObject* obj, bool updateTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::AddSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(updateTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, updateTransform);
}
// Autogenerated method: OVRPassthroughLayer.RemoveSurfaceGeometry
void GlobalNamespace::OVRPassthroughLayer::RemoveSurfaceGeometry(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::RemoveSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPassthroughLayer.IsSurfaceGeometry
bool GlobalNamespace::OVRPassthroughLayer::IsSurfaceGeometry(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IsSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPassthroughLayer.get_textureOpacity
float GlobalNamespace::OVRPassthroughLayer::get_textureOpacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::get_textureOpacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureOpacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.set_textureOpacity
void GlobalNamespace::OVRPassthroughLayer::set_textureOpacity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::set_textureOpacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textureOpacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer.get_edgeRenderingEnabled
bool GlobalNamespace::OVRPassthroughLayer::get_edgeRenderingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::get_edgeRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_edgeRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.set_edgeRenderingEnabled
void GlobalNamespace::OVRPassthroughLayer::set_edgeRenderingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::set_edgeRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_edgeRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer.get_edgeColor
::UnityEngine::Color GlobalNamespace::OVRPassthroughLayer::get_edgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::get_edgeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_edgeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.set_edgeColor
void GlobalNamespace::OVRPassthroughLayer::set_edgeColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::set_edgeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_edgeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer.SetColorMap
void GlobalNamespace::OVRPassthroughLayer::SetColorMap(::ArrayW<::UnityEngine::Color> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetColorMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: OVRPassthroughLayer.SetColorLut
void GlobalNamespace::OVRPassthroughLayer::SetColorLut(::GlobalNamespace::OVRPassthroughColorLut* lut, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lut), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lut, weight);
}
// Autogenerated method: OVRPassthroughLayer.SetColorLut
void GlobalNamespace::OVRPassthroughLayer::SetColorLut(::GlobalNamespace::OVRPassthroughColorLut* lutSource, ::GlobalNamespace::OVRPassthroughColorLut* lutTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lutSource), ::il2cpp_utils::ExtractType(lutTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lutSource, lutTarget, weight);
}
// Autogenerated method: OVRPassthroughLayer.SetColorMapControls
void GlobalNamespace::OVRPassthroughLayer::SetColorMapControls(float contrast, float brightness, float posterize, ::UnityEngine::Gradient* gradient, ::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType colorMapType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetColorMapControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorMapControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contrast), ::il2cpp_utils::ExtractType(brightness), ::il2cpp_utils::ExtractType(posterize), ::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(colorMapType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contrast, brightness, posterize, gradient, colorMapType);
}
// Autogenerated method: OVRPassthroughLayer.SetColorMapMonochromatic
void GlobalNamespace::OVRPassthroughLayer::SetColorMapMonochromatic(::ArrayW<uint8_t> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetColorMapMonochromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorMapMonochromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: OVRPassthroughLayer.SetBrightnessContrastSaturation
void GlobalNamespace::OVRPassthroughLayer::SetBrightnessContrastSaturation(float brightness, float contrast, float saturation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetBrightnessContrastSaturation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBrightnessContrastSaturation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brightness), ::il2cpp_utils::ExtractType(contrast), ::il2cpp_utils::ExtractType(saturation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, brightness, contrast, saturation);
}
// Autogenerated method: OVRPassthroughLayer.DisableColorMap
void GlobalNamespace::OVRPassthroughLayer::DisableColorMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::DisableColorMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableColorMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.get_colorMapEditorType
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::get_colorMapEditorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::get_colorMapEditorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorMapEditorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.set_colorMapEditorType
void GlobalNamespace::OVRPassthroughLayer::set_colorMapEditorType(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::set_colorMapEditorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorMapEditorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer.SetStyleDirty
void GlobalNamespace::OVRPassthroughLayer::SetStyleDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SetStyleDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStyleDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.AddDeferredSurfaceGeometries
void GlobalNamespace::OVRPassthroughLayer::AddDeferredSurfaceGeometries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::AddDeferredSurfaceGeometries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDeferredSurfaceGeometries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.GetTransformMatrixForPassthroughSurfaceObject
::UnityEngine::Matrix4x4 GlobalNamespace::OVRPassthroughLayer::GetTransformMatrixForPassthroughSurfaceObject(::UnityEngine::Matrix4x4 worldFromObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::GetTransformMatrixForPassthroughSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformMatrixForPassthroughSurfaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldFromObj)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, worldFromObj);
}
// Autogenerated method: OVRPassthroughLayer.CreateAndAddMesh
bool GlobalNamespace::OVRPassthroughLayer::CreateAndAddMesh(::UnityEngine::GameObject* obj, ByRef<uint64_t> meshHandle, ByRef<uint64_t> instanceHandle, ByRef<::UnityEngine::Matrix4x4> localToWorld) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::CreateAndAddMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj, byref(meshHandle), byref(instanceHandle), byref(localToWorld));
}
// Autogenerated method: OVRPassthroughLayer.DestroySurfaceGeometries
void GlobalNamespace::OVRPassthroughLayer::DestroySurfaceGeometries(bool addBackToDeferredQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::DestroySurfaceGeometries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySurfaceGeometries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addBackToDeferredQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, addBackToDeferredQueue);
}
// Autogenerated method: OVRPassthroughLayer.UpdateSurfaceGeometryTransforms
void GlobalNamespace::OVRPassthroughLayer::UpdateSurfaceGeometryTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::UpdateSurfaceGeometryTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSurfaceGeometryTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.UpdateSurfaceGeometryTransform
void GlobalNamespace::OVRPassthroughLayer::UpdateSurfaceGeometryTransform(uint64_t instanceHandle, ::UnityEngine::Matrix4x4 localToWorld) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::UpdateSurfaceGeometryTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSurfaceGeometryTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceHandle), ::il2cpp_utils::ExtractType(localToWorld)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceHandle, localToWorld);
}
// Autogenerated method: OVRPassthroughLayer.CreateNeutralColorMapGradient
::UnityEngine::Gradient* GlobalNamespace::OVRPassthroughLayer::CreateNeutralColorMapGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::CreateNeutralColorMapGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPassthroughLayer", "CreateNeutralColorMapGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.HasControlsBasedColorMap
bool GlobalNamespace::OVRPassthroughLayer::HasControlsBasedColorMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::HasControlsBasedColorMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasControlsBasedColorMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.UpdateColorMapFromControls
void GlobalNamespace::OVRPassthroughLayer::UpdateColorMapFromControls(bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::UpdateColorMapFromControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColorMapFromControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forceUpdate);
}
// Autogenerated method: OVRPassthroughLayer.SyncToOverlay
void GlobalNamespace::OVRPassthroughLayer::SyncToOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::SyncToOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncToOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.IsUserDefinedAndDoesNotContainSurfaceGeometry
bool GlobalNamespace::OVRPassthroughLayer::IsUserDefinedAndDoesNotContainSurfaceGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IsUserDefinedAndDoesNotContainSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUserDefinedAndDoesNotContainSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.ClampWeight
float GlobalNamespace::OVRPassthroughLayer::ClampWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ClampWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPassthroughLayer", "ClampWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, weight);
}
// Autogenerated method: OVRPassthroughLayer.get_overlayShape
::GlobalNamespace::OVROverlay::OverlayShape GlobalNamespace::OVRPassthroughLayer::get_overlayShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::get_overlayShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overlayShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVROverlay::OverlayShape, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.Awake
void GlobalNamespace::OVRPassthroughLayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.Update
void GlobalNamespace::OVRPassthroughLayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.LateUpdate
void GlobalNamespace::OVRPassthroughLayer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.CreateOvrPluginStyleObject
::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2 GlobalNamespace::OVRPassthroughLayer::CreateOvrPluginStyleObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::CreateOvrPluginStyleObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOvrPluginStyleObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.OnEnable
void GlobalNamespace::OVRPassthroughLayer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.OnDisable
void GlobalNamespace::OVRPassthroughLayer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer.OnDestroy
void GlobalNamespace::OVRPassthroughLayer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer..cctor
void GlobalNamespace::OVRPassthroughLayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPassthroughLayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/ProjectionSurfaceType
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ProjectionSurfaceType Reconstructed
::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_get_Reconstructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_get_Reconstructed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType>("", "OVRPassthroughLayer/ProjectionSurfaceType", "Reconstructed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ProjectionSurfaceType Reconstructed
void GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_set_Reconstructed(::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_set_Reconstructed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ProjectionSurfaceType", "Reconstructed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ProjectionSurfaceType UserDefined
::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_get_UserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_get_UserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType>("", "OVRPassthroughLayer/ProjectionSurfaceType", "UserDefined"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ProjectionSurfaceType UserDefined
void GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_set_UserDefined(::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::_set_UserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ProjectionSurfaceType", "UserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ProjectionSurfaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/ColorMapEditorType
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType None
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType None
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_None(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType GrayscaleToColor
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_GrayscaleToColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_GrayscaleToColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "GrayscaleToColor"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType GrayscaleToColor
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_GrayscaleToColor(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_GrayscaleToColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "GrayscaleToColor", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType Controls
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Controls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Controls");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "Controls"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType Controls
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Controls(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Controls");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "Controls", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType Custom
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType Custom
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Custom(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType Grayscale
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Grayscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_Grayscale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "Grayscale"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType Grayscale
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Grayscale(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_Grayscale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "Grayscale", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType ColorAdjustment
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_ColorAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_ColorAdjustment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "ColorAdjustment"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType ColorAdjustment
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_ColorAdjustment(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_ColorAdjustment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "ColorAdjustment", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType ColorLut
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_ColorLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_ColorLut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "ColorLut"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType ColorLut
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_ColorLut(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_ColorLut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "ColorLut", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPassthroughLayer/ColorMapEditorType InterpolatedColorLut
::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_InterpolatedColorLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_get_InterpolatedColorLut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType>("", "OVRPassthroughLayer/ColorMapEditorType", "InterpolatedColorLut"));
}
// Autogenerated static field setter
// Set static field: static public OVRPassthroughLayer/ColorMapEditorType InterpolatedColorLut
void GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_InterpolatedColorLut(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::_set_InterpolatedColorLut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPassthroughLayer/ColorMapEditorType", "InterpolatedColorLut", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D colorLutTargetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_colorLutTargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_colorLutTargetTexture");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorLutTargetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D colorLutSourceTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_colorLutSourceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_colorLutSourceTexture");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorLutSourceTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single saturation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_saturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_saturation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saturation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posterize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_posterize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_posterize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posterize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single brightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_brightness");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single contrast
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_contrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_contrast");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contrast"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Gradient gradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_gradient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lutWeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_lutWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_lutWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lutWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipLutY
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::Settings::dyn_flipLutY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::Settings::dyn_flipLutY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipLutY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/Settings..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRPassthroughLayer::Settings::Settings(::UnityEngine::Texture2D* colorLutTargetTexture, ::UnityEngine::Texture2D* colorLutSourceTexture, float saturation, float posterize, float brightness, float contrast, ::UnityEngine::Gradient* gradient, float lutWeight, bool flipLutY)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/IStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_IStyleHandler.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPassthroughLayer/IStyleHandler.ApplyStyleSettings
void GlobalNamespace::OVRPassthroughLayer::IStyleHandler::ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IStyleHandler::ApplyStyleSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(style));
}
// Autogenerated method: OVRPassthroughLayer/IStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/IStyleHandler.get_IsValid
bool GlobalNamespace::OVRPassthroughLayer::IStyleHandler::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IStyleHandler::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/IStyleHandler.Clear
void GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::IStyleHandler::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/StylesHandler
#include "GlobalNamespace/OVRPassthroughLayer_StylesHandler.hpp"
// Including type: OVRPassthroughColorLut
#include "GlobalNamespace/OVRPassthroughColorLut.hpp"
// Including type: OVRPassthroughLayer/NoneStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_NoneStyleHandler.hpp"
// Including type: OVRPassthroughLayer/ColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_ColorLutHandler.hpp"
// Including type: OVRPassthroughLayer/InterpolatedColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_InterpolatedColorLutHandler.hpp"
// Including type: OVRPassthroughLayer/MonoToRgbaStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToRgbaStyleHandler.hpp"
// Including type: OVRPassthroughLayer/MonoToMonoStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToMonoStyleHandler.hpp"
// Including type: OVRPassthroughLayer/BCSStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_BCSStyleHandler.hpp"
// Including type: OVRPassthroughLayer/IStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_IStyleHandler.hpp"
// Including type: OVRPlugin/InsightPassthroughColorMapType
#include "GlobalNamespace/OVRPlugin_InsightPassthroughColorMapType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/NoneStyleHandler _noneHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__noneHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__noneHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noneHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/ColorLutHandler _lutHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__lutHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__lutHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lutHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/InterpolatedColorLutHandler _interpolatedLutHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__interpolatedLutHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__interpolatedLutHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolatedLutHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/MonoToRgbaStyleHandler _monoToRgbaHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__monoToRgbaHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__monoToRgbaHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoToRgbaHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/MonoToMonoStyleHandler _monoToMonoHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__monoToMonoHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__monoToMonoHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoToMonoHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/BCSStyleHandler _bcsHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__bcsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__bcsHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bcsHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _colorMapDataHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__colorMapDataHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__colorMapDataHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorMapDataHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _colorMapData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__colorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn__colorMapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorMapData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPassthroughLayer/IStyleHandler CurrentStyleHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*& GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn_CurrentStyleHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::dyn_CurrentStyleHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentStyleHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::IStyleHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.SetStyleHandler
void GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetStyleHandler(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetStyleHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStyleHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.GetStyleHandler
::GlobalNamespace::OVRPassthroughLayer::IStyleHandler* GlobalNamespace::OVRPassthroughLayer::StylesHandler::GetStyleHandler(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::GetStyleHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPassthroughLayer::IStyleHandler*, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.SetColorLutHandler
void GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetColorLutHandler(::GlobalNamespace::OVRPassthroughColorLut* lut, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetColorLutHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorLutHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lut), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lut, weight);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.SetInterpolatedColorLutHandler
void GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetInterpolatedColorLutHandler(::GlobalNamespace::OVRPassthroughColorLut* lutSource, ::GlobalNamespace::OVRPassthroughColorLut* lutTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetInterpolatedColorLutHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInterpolatedColorLutHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lutSource), ::il2cpp_utils::ExtractType(lutTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lutSource, lutTarget, weight);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.SetMonoToRgbaHandler
void GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetMonoToRgbaHandler(::ArrayW<::UnityEngine::Color> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetMonoToRgbaHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMonoToRgbaHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: OVRPassthroughLayer/StylesHandler.SetMonoToMonoHandler
void GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetMonoToMonoHandler(::ArrayW<uint8_t> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::StylesHandler::SetMonoToMonoHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMonoToMonoHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/NoneStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_NoneStyleHandler.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPassthroughLayer/NoneStyleHandler.get_IsValid
bool GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/NoneStyleHandler.ApplyStyleSettings
void GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::ApplyStyleSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(style));
}
// Autogenerated method: OVRPassthroughLayer/NoneStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/NoneStyleHandler.Clear
void GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::NoneStyleHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/BaseGeneratedStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_BaseGeneratedStyleHandler.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _colorMapDataHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::dyn__colorMapDataHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::dyn__colorMapDataHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorMapDataHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] _colorMapData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::dyn__colorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::dyn__colorMapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorMapData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.get_MapSize
uint GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::get_MapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::get_MapSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.get_IsValid
bool GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.ApplyStyleSettings
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::ApplyStyleSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(style));
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.Clear
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.AllocateColorMapData
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::AllocateColorMapData(uint size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::AllocateColorMapData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.DeallocateColorMapData
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::DeallocateColorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::DeallocateColorMapData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.WriteColorToColorMap
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::WriteColorToColorMap(int colorIndex, ByRef<::UnityEngine::Color> color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::WriteColorToColorMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteColorToColorMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorIndex), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorIndex, byref(color));
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.WriteFloatToColorMap
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::WriteFloatToColorMap(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::WriteFloatToColorMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFloatToColorMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: OVRPassthroughLayer/BaseGeneratedStyleHandler.ComputeBrightnessContrastPosterizeMap
void GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::ComputeBrightnessContrastPosterizeMap(::ArrayW<uint8_t> result, float brightness, float contrast, float posterize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler::ComputeBrightnessContrastPosterizeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPassthroughLayer/BaseGeneratedStyleHandler", "ComputeBrightnessContrastPosterizeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(brightness), ::il2cpp_utils::ExtractType(contrast), ::il2cpp_utils::ExtractType(posterize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result, brightness, contrast, posterize);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/MonoToRgbaStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToRgbaStyleHandler.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] _tmpColorMapData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::dyn__tmpColorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::dyn__tmpColorMapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmpColorMapData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/MonoToRgbaStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::Update(::ArrayW<::UnityEngine::Color> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: OVRPassthroughLayer/MonoToRgbaStyleHandler.get_MapSize
uint GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::get_MapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::get_MapSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/MonoToRgbaStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/MonoToRgbaStyleHandler.AllocateColorMapData
void GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::AllocateColorMapData(uint size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::AllocateColorMapData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: OVRPassthroughLayer/MonoToRgbaStyleHandler.DeallocateColorMapData
void GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::DeallocateColorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToRgbaStyleHandler::DeallocateColorMapData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/MonoToMonoStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_MonoToMonoStyleHandler.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPassthroughLayer/MonoToMonoStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::Update(::ArrayW<uint8_t> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: OVRPassthroughLayer/MonoToMonoStyleHandler.get_MapSize
uint GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::get_MapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::get_MapSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/MonoToMonoStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::MonoToMonoStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/BCSStyleHandler
#include "GlobalNamespace/OVRPassthroughLayer_BCSStyleHandler.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPassthroughLayer/BCSStyleHandler.get_MapSize
uint GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler::get_MapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler::get_MapSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/BCSStyleHandler.Update
void GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::BCSStyleHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::BaseGeneratedStyleHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/ColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_ColorLutHandler.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: OVRPassthroughColorLut
#include "GlobalNamespace/OVRPassthroughColorLut.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _currentFlipLutY
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn__currentFlipLutY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn__currentFlipLutY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentFlipLutY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Texture2D _currentColorLutSourceTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn__currentColorLutSourceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn__currentColorLutSourceTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColorLutSourceTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughColorLut <Lut>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughColorLut*& GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$Lut$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$Lut$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Lut>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughColorLut**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Weight>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$Weight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$Weight$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Weight>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsValid>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$IsValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::dyn_$IsValid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsValid>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.get_Lut
::GlobalNamespace::OVRPassthroughColorLut* GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_Lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_Lut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Lut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPassthroughColorLut*, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.set_Lut
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_Lut(::GlobalNamespace::OVRPassthroughColorLut* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_Lut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Lut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.get_Weight
float GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_Weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.set_Weight
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_Weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_Weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.get_IsValid
bool GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.set_IsValid
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_IsValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::set_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.ApplyStyleSettings
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::ApplyStyleSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(style));
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.Update
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.GetColorLutForTexture
::GlobalNamespace::OVRPassthroughColorLut* GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::GetColorLutForTexture(::UnityEngine::Texture2D* newTexture, ::GlobalNamespace::OVRPassthroughColorLut* lut, ByRef<::UnityEngine::Texture2D*> lastTexture, bool flipY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::GetColorLutForTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorLutForTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTexture), ::il2cpp_utils::ExtractType(lut), ::il2cpp_utils::ExtractType(lastTexture), ::il2cpp_utils::ExtractType(flipY)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPassthroughColorLut*, false>(this, ___internal__method, newTexture, lut, byref(lastTexture), flipY);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.Update
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Update(::GlobalNamespace::OVRPassthroughColorLut* lut, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lut), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lut, weight);
}
// Autogenerated method: OVRPassthroughLayer/ColorLutHandler.Clear
void GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/InterpolatedColorLutHandler
#include "GlobalNamespace/OVRPassthroughLayer_InterpolatedColorLutHandler.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: OVRPassthroughColorLut
#include "GlobalNamespace/OVRPassthroughColorLut.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPassthroughLayer/Settings
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _currentColorLutTargetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::dyn__currentColorLutTargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::dyn__currentColorLutTargetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColorLutTargetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughColorLut <LutTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughColorLut*& GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::dyn_$LutTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::dyn_$LutTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LutTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughColorLut**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.get_LutTarget
::GlobalNamespace::OVRPassthroughColorLut* GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::get_LutTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::get_LutTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LutTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPassthroughColorLut*, false>(this, ___internal__method);
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.set_LutTarget
void GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::set_LutTarget(::GlobalNamespace::OVRPassthroughColorLut* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::set_LutTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LutTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.Update
void GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Update(::GlobalNamespace::OVRPassthroughColorLut* lutSource, ::GlobalNamespace::OVRPassthroughColorLut* lutTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lutSource), ::il2cpp_utils::ExtractType(lutTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lutSource, lutTarget, weight);
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.ApplyStyleSettings
void GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::ApplyStyleSettings(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::ApplyStyleSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(style));
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.Update
void GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Update(::GlobalNamespace::OVRPassthroughLayer::Settings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: OVRPassthroughLayer/InterpolatedColorLutHandler.Clear
void GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::InterpolatedColorLutHandler::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPassthroughLayer::ColorLutHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/<>c__DisplayClass10_0
#include "GlobalNamespace/OVRPassthroughLayer_--c__DisplayClass10_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRPassthroughLayer/DeferredPassthroughMeshAddition
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject obj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass10_0::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass10_0::dyn_obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/<>c__DisplayClass10_0.<IsSurfaceGeometry>b__0
bool GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass10_0::$IsSurfaceGeometry$b__0(::GlobalNamespace::OVRPassthroughLayer::DeferredPassthroughMeshAddition x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass10_0::<IsSurfaceGeometry>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsSurfaceGeometry>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPassthroughLayer/<>c__DisplayClass9_0
#include "GlobalNamespace/OVRPassthroughLayer_--c__DisplayClass9_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRPassthroughLayer/DeferredPassthroughMeshAddition
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject obj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass9_0::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass9_0::dyn_obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPassthroughLayer/<>c__DisplayClass9_0.<RemoveSurfaceGeometry>b__0
bool GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass9_0::$RemoveSurfaceGeometry$b__0(::GlobalNamespace::OVRPassthroughLayer::DeferredPassthroughMeshAddition x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPassthroughLayer::$$c__DisplayClass9_0::<RemoveSurfaceGeometry>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveSurfaceGeometry>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPermissionsRequester
#include "GlobalNamespace/OVRPermissionsRequester.hpp"
// Including type: OVRPermissionsRequester/<>c
#include "GlobalNamespace/OVRPermissionsRequester_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Android.PermissionCallbacks
#include "UnityEngine/Android/PermissionCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> PermissionGranted
::System::Action_1<::StringW>* GlobalNamespace::OVRPermissionsRequester::_get_PermissionGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_get_PermissionGranted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("", "OVRPermissionsRequester", "PermissionGranted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> PermissionGranted
void GlobalNamespace::OVRPermissionsRequester::_set_PermissionGranted(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_set_PermissionGranted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester", "PermissionGranted", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FaceTrackingPermission
::StringW GlobalNamespace::OVRPermissionsRequester::_get_FaceTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_get_FaceTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPermissionsRequester", "FaceTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private System.String FaceTrackingPermission
void GlobalNamespace::OVRPermissionsRequester::_set_FaceTrackingPermission(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_set_FaceTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester", "FaceTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.String EyeTrackingPermission
::StringW GlobalNamespace::OVRPermissionsRequester::_get_EyeTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_get_EyeTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPermissionsRequester", "EyeTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private System.String EyeTrackingPermission
void GlobalNamespace::OVRPermissionsRequester::_set_EyeTrackingPermission(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_set_EyeTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester", "EyeTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.String BodyTrackingPermission
::StringW GlobalNamespace::OVRPermissionsRequester::_get_BodyTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_get_BodyTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPermissionsRequester", "BodyTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private System.String BodyTrackingPermission
void GlobalNamespace::OVRPermissionsRequester::_set_BodyTrackingPermission(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_set_BodyTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester", "BodyTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ScenePermission
::StringW GlobalNamespace::OVRPermissionsRequester::_get_ScenePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_get_ScenePermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPermissionsRequester", "ScenePermission"));
}
// Autogenerated static field setter
// Set static field: static private System.String ScenePermission
void GlobalNamespace::OVRPermissionsRequester::_set_ScenePermission(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::_set_ScenePermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester", "ScenePermission", value));
}
// Autogenerated method: OVRPermissionsRequester.add_PermissionGranted
void GlobalNamespace::OVRPermissionsRequester::add_PermissionGranted(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::add_PermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "add_PermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPermissionsRequester.remove_PermissionGranted
void GlobalNamespace::OVRPermissionsRequester::remove_PermissionGranted(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::remove_PermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "remove_PermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPermissionsRequester.GetPermissionId
::StringW GlobalNamespace::OVRPermissionsRequester::GetPermissionId(::GlobalNamespace::OVRPermissionsRequester::Permission permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::GetPermissionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "GetPermissionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: OVRPermissionsRequester.IsPermissionSupportedByPlatform
bool GlobalNamespace::OVRPermissionsRequester::IsPermissionSupportedByPlatform(::GlobalNamespace::OVRPermissionsRequester::Permission permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::IsPermissionSupportedByPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "IsPermissionSupportedByPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: OVRPermissionsRequester.IsPermissionGranted
bool GlobalNamespace::OVRPermissionsRequester::IsPermissionGranted(::GlobalNamespace::OVRPermissionsRequester::Permission permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::IsPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "IsPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: OVRPermissionsRequester.Request
void GlobalNamespace::OVRPermissionsRequester::Request(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRPermissionsRequester::Permission>* permissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permissions);
}
// Autogenerated method: OVRPermissionsRequester.RequestPermissions
void GlobalNamespace::OVRPermissionsRequester::RequestPermissions(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRPermissionsRequester::Permission>* permissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::RequestPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "RequestPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permissions);
}
// Autogenerated method: OVRPermissionsRequester.ShouldRequestPermission
bool GlobalNamespace::OVRPermissionsRequester::ShouldRequestPermission(::GlobalNamespace::OVRPermissionsRequester::Permission permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::ShouldRequestPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "ShouldRequestPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: OVRPermissionsRequester.BuildPermissionCallbacks
::UnityEngine::Android::PermissionCallbacks* GlobalNamespace::OVRPermissionsRequester::BuildPermissionCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::BuildPermissionCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester", "BuildPermissionCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Android::PermissionCallbacks*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPermissionsRequester/Permission
#include "GlobalNamespace/OVRPermissionsRequester.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPermissionsRequester/Permission FaceTracking
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRPermissionsRequester::Permission::_get_FaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_get_FaceTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRPermissionsRequester/Permission", "FaceTracking"));
}
// Autogenerated static field setter
// Set static field: static public OVRPermissionsRequester/Permission FaceTracking
void GlobalNamespace::OVRPermissionsRequester::Permission::_set_FaceTracking(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_set_FaceTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/Permission", "FaceTracking", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPermissionsRequester/Permission BodyTracking
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRPermissionsRequester::Permission::_get_BodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_get_BodyTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRPermissionsRequester/Permission", "BodyTracking"));
}
// Autogenerated static field setter
// Set static field: static public OVRPermissionsRequester/Permission BodyTracking
void GlobalNamespace::OVRPermissionsRequester::Permission::_set_BodyTracking(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_set_BodyTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/Permission", "BodyTracking", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPermissionsRequester/Permission EyeTracking
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRPermissionsRequester::Permission::_get_EyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_get_EyeTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRPermissionsRequester/Permission", "EyeTracking"));
}
// Autogenerated static field setter
// Set static field: static public OVRPermissionsRequester/Permission EyeTracking
void GlobalNamespace::OVRPermissionsRequester::Permission::_set_EyeTracking(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_set_EyeTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/Permission", "EyeTracking", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPermissionsRequester/Permission Scene
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRPermissionsRequester::Permission::_get_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_get_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRPermissionsRequester/Permission", "Scene"));
}
// Autogenerated static field setter
// Set static field: static public OVRPermissionsRequester/Permission Scene
void GlobalNamespace::OVRPermissionsRequester::Permission::_set_Scene(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::_set_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/Permission", "Scene", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPermissionsRequester::Permission::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::Permission::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPermissionsRequester/<>c
#include "GlobalNamespace/OVRPermissionsRequester_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPermissionsRequester/<>c <>9
::GlobalNamespace::OVRPermissionsRequester::$$c* GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::$$c*>("", "OVRPermissionsRequester/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPermissionsRequester/<>c <>9
void GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9(::GlobalNamespace::OVRPermissionsRequester::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__14_0
::System::Action_1<::StringW>* GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("", "OVRPermissionsRequester/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__14_0
void GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_0(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__14_1
::System::Action_1<::StringW>* GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("", "OVRPermissionsRequester/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__14_1
void GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_1(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/<>c", "<>9__14_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__14_2
::System::Action_1<::StringW>* GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_get_$$9__14_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("", "OVRPermissionsRequester/<>c", "<>9__14_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__14_2
void GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_2(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::_set_$$9__14_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRPermissionsRequester/<>c", "<>9__14_2", value)));
}
// Autogenerated method: OVRPermissionsRequester/<>c..cctor
void GlobalNamespace::OVRPermissionsRequester::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPermissionsRequester/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPermissionsRequester/<>c.<BuildPermissionCallbacks>b__14_0
void GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_0(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::<BuildPermissionCallbacks>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildPermissionCallbacks>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated method: OVRPermissionsRequester/<>c.<BuildPermissionCallbacks>b__14_1
void GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_1(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::<BuildPermissionCallbacks>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildPermissionCallbacks>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated method: OVRPermissionsRequester/<>c.<BuildPermissionCallbacks>b__14_2
void GlobalNamespace::OVRPermissionsRequester::$$c::$BuildPermissionCallbacks$b__14_2(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPermissionsRequester::$$c::<BuildPermissionCallbacks>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildPermissionCallbacks>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlatformMenu
#include "GlobalNamespace/OVRPlatformMenu.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: OVRPlatformMenu/eBackButtonAction
#include "GlobalNamespace/OVRPlatformMenu_eBackButtonAction.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<System.String> sceneStack
::System::Collections::Generic::Stack_1<::StringW>* GlobalNamespace::OVRPlatformMenu::_get_sceneStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::_get_sceneStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::StringW>*>("", "OVRPlatformMenu", "sceneStack"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<System.String> sceneStack
void GlobalNamespace::OVRPlatformMenu::_set_sceneStack(::System::Collections::Generic::Stack_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::_set_sceneStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu", "sceneStack", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/RawButton inputCode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRPlatformMenu::dyn_inputCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::dyn_inputCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputCode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlatformMenu/eHandler shortPressHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlatformMenu::eHandler& GlobalNamespace::OVRPlatformMenu::dyn_shortPressHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::dyn_shortPressHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortPressHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlatformMenu::eHandler*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Boolean> OnShortPress
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& GlobalNamespace::OVRPlatformMenu::dyn_OnShortPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::dyn_OnShortPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnShortPress"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlatformMenu.HandleBackButtonState
::GlobalNamespace::OVRPlatformMenu::eBackButtonAction GlobalNamespace::OVRPlatformMenu::HandleBackButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::HandleBackButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBackButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlatformMenu::eBackButtonAction, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlatformMenu.Awake
void GlobalNamespace::OVRPlatformMenu::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlatformMenu.ShowConfirmQuitMenu
void GlobalNamespace::OVRPlatformMenu::ShowConfirmQuitMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::ShowConfirmQuitMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowConfirmQuitMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlatformMenu.RetreatOneLevel
bool GlobalNamespace::OVRPlatformMenu::RetreatOneLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::RetreatOneLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlatformMenu", "RetreatOneLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlatformMenu.Update
void GlobalNamespace::OVRPlatformMenu::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlatformMenu..cctor
void GlobalNamespace::OVRPlatformMenu::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlatformMenu", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlatformMenu/eHandler
#include "GlobalNamespace/OVRPlatformMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eHandler ShowConfirmQuit
::GlobalNamespace::OVRPlatformMenu::eHandler GlobalNamespace::OVRPlatformMenu::eHandler::_get_ShowConfirmQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eHandler::_get_ShowConfirmQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eHandler>("", "OVRPlatformMenu/eHandler", "ShowConfirmQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eHandler ShowConfirmQuit
void GlobalNamespace::OVRPlatformMenu::eHandler::_set_ShowConfirmQuit(::GlobalNamespace::OVRPlatformMenu::eHandler value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eHandler::_set_ShowConfirmQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eHandler", "ShowConfirmQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eHandler RetreatOneLevel
::GlobalNamespace::OVRPlatformMenu::eHandler GlobalNamespace::OVRPlatformMenu::eHandler::_get_RetreatOneLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eHandler::_get_RetreatOneLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eHandler>("", "OVRPlatformMenu/eHandler", "RetreatOneLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eHandler RetreatOneLevel
void GlobalNamespace::OVRPlatformMenu::eHandler::_set_RetreatOneLevel(::GlobalNamespace::OVRPlatformMenu::eHandler value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eHandler::_set_RetreatOneLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eHandler", "RetreatOneLevel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlatformMenu::eHandler::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eHandler::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlatformMenu/eBackButtonAction
#include "GlobalNamespace/OVRPlatformMenu_eBackButtonAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eBackButtonAction NONE
::GlobalNamespace::OVRPlatformMenu::eBackButtonAction GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eBackButtonAction>("", "OVRPlatformMenu/eBackButtonAction", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eBackButtonAction NONE
void GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_NONE(::GlobalNamespace::OVRPlatformMenu::eBackButtonAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eBackButtonAction", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eBackButtonAction SHORT_PRESS
::GlobalNamespace::OVRPlatformMenu::eBackButtonAction GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_SHORT_PRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_SHORT_PRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eBackButtonAction>("", "OVRPlatformMenu/eBackButtonAction", "SHORT_PRESS"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eBackButtonAction SHORT_PRESS
void GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_SHORT_PRESS(::GlobalNamespace::OVRPlatformMenu::eBackButtonAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_SHORT_PRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eBackButtonAction", "SHORT_PRESS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlatformMenu::eBackButtonAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/GUID
#include "GlobalNamespace/OVRPlugin_GUID.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/LogLevel
#include "GlobalNamespace/OVRPlugin_LogLevel.hpp"
// Including type: OVRPlugin/LogCallback2DelegateType
#include "GlobalNamespace/OVRPlugin_LogCallback2DelegateType.hpp"
// Including type: OVRPlugin/CameraStatus
#include "GlobalNamespace/OVRPlugin_CameraStatus.hpp"
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Tracker
#include "GlobalNamespace/OVRPlugin_Tracker.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
// Including type: OVRPlugin/InteractionProfile
#include "GlobalNamespace/OVRPlugin_InteractionProfile.hpp"
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/RecenterFlags
#include "GlobalNamespace/OVRPlugin_RecenterFlags.hpp"
// Including type: OVRPlugin/BatteryStatus
#include "GlobalNamespace/OVRPlugin_BatteryStatus.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/PlatformUI
#include "GlobalNamespace/OVRPlugin_PlatformUI.hpp"
// Including type: OVRPlugin/SystemRegion
#include "GlobalNamespace/OVRPlugin_SystemRegion.hpp"
// Including type: OVRPlugin/SystemHeadset
#include "GlobalNamespace/OVRPlugin_SystemHeadset.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/LayerSuperSamplingType
#include "GlobalNamespace/OVRPlugin_LayerSuperSamplingType.hpp"
// Including type: OVRPlugin/LayerSharpenType
#include "GlobalNamespace/OVRPlugin_LayerSharpenType.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRPlugin/CameraDeviceDepthSensingMode
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthSensingMode.hpp"
// Including type: OVRPlugin/CameraDeviceDepthQuality
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthQuality.hpp"
// Including type: OVRPlugin/FoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FoveatedRenderingLevel.hpp"
// Including type: OVRPlugin/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRPlugin/TiledMultiResLevel
#include "GlobalNamespace/OVRPlugin_TiledMultiResLevel.hpp"
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
// Including type: OVRPlugin/ProcessorPerformanceLevel
#include "GlobalNamespace/OVRPlugin_ProcessorPerformanceLevel.hpp"
// Including type: OVRPlugin/FeatureType
#include "GlobalNamespace/OVRPlugin_FeatureType.hpp"
// Including type: OVRPlugin/CameraDeviceIntrinsicsParameters
#include "GlobalNamespace/OVRPlugin_CameraDeviceIntrinsicsParameters.hpp"
// Including type: OVRPlugin/OverlayFlag
#include "GlobalNamespace/OVRPlugin_OverlayFlag.hpp"
// Including type: OVRPlugin/Vector2f
#include "GlobalNamespace/OVRPlugin_Vector2f.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
// Including type: OVRPlugin/Vector4s
#include "GlobalNamespace/OVRPlugin_Vector4s.hpp"
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
// Including type: OVRPlugin/HapticsLocation
#include "GlobalNamespace/OVRPlugin_HapticsLocation.hpp"
// Including type: OVRPlugin/ControllerState6
#include "GlobalNamespace/OVRPlugin_ControllerState6.hpp"
// Including type: OVRPlugin/ControllerState5
#include "GlobalNamespace/OVRPlugin_ControllerState5.hpp"
// Including type: OVRPlugin/ControllerState4
#include "GlobalNamespace/OVRPlugin_ControllerState4.hpp"
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
// Including type: OVRPlugin/ControllerState
#include "GlobalNamespace/OVRPlugin_ControllerState.hpp"
// Including type: OVRPlugin/HapticsBuffer
#include "GlobalNamespace/OVRPlugin_HapticsBuffer.hpp"
// Including type: OVRPlugin/HapticsState
#include "GlobalNamespace/OVRPlugin_HapticsState.hpp"
// Including type: OVRPlugin/HapticsDesc
#include "GlobalNamespace/OVRPlugin_HapticsDesc.hpp"
// Including type: OVRPlugin/HapticsAmplitudeEnvelopeVibration
#include "GlobalNamespace/OVRPlugin_HapticsAmplitudeEnvelopeVibration.hpp"
// Including type: OVRPlugin/HapticsPcmVibration
#include "GlobalNamespace/OVRPlugin_HapticsPcmVibration.hpp"
// Including type: OVRPlugin/HapticsConstants
#include "GlobalNamespace/OVRPlugin_HapticsConstants.hpp"
// Including type: OVRPlugin/AppPerfFrameStats
#include "GlobalNamespace/OVRPlugin_AppPerfFrameStats.hpp"
// Including type: OVRPlugin/AppPerfStats
#include "GlobalNamespace/OVRPlugin_AppPerfStats.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/Sizef
#include "GlobalNamespace/OVRPlugin_Sizef.hpp"
// Including type: OVRPlugin/Size3f
#include "GlobalNamespace/OVRPlugin_Size3f.hpp"
// Including type: OVRPlugin/Vector2i
#include "GlobalNamespace/OVRPlugin_Vector2i.hpp"
// Including type: OVRPlugin/Recti
#include "GlobalNamespace/OVRPlugin_Recti.hpp"
// Including type: OVRPlugin/RectiPair
#include "GlobalNamespace/OVRPlugin_RectiPair.hpp"
// Including type: OVRPlugin/Rectf
#include "GlobalNamespace/OVRPlugin_Rectf.hpp"
// Including type: OVRPlugin/RectfPair
#include "GlobalNamespace/OVRPlugin_RectfPair.hpp"
// Including type: OVRPlugin/Boundsf
#include "GlobalNamespace/OVRPlugin_Boundsf.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace/OVRPlugin_Frustumf2.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/BoundaryTestResult
#include "GlobalNamespace/OVRPlugin_BoundaryTestResult.hpp"
// Including type: OVRPlugin/BoundaryGeometry
#include "GlobalNamespace/OVRPlugin_BoundaryGeometry.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Fovf
#include "GlobalNamespace/OVRPlugin_Fovf.hpp"
// Including type: OVRPlugin/FovfPair
#include "GlobalNamespace/OVRPlugin_FovfPair.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/LayerFlags
#include "GlobalNamespace/OVRPlugin_LayerFlags.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/BlendFactor
#include "GlobalNamespace/OVRPlugin_BlendFactor.hpp"
// Including type: OVRPlugin/LayerSubmit
#include "GlobalNamespace/OVRPlugin_LayerSubmit.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/HandFinger
#include "GlobalNamespace/OVRPlugin_HandFinger.hpp"
// Including type: OVRPlugin/HandState
#include "GlobalNamespace/OVRPlugin_HandState.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRPlugin/SkeletonConstants
#include "GlobalNamespace/OVRPlugin_SkeletonConstants.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Skeleton2
#include "GlobalNamespace/OVRPlugin_Skeleton2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/MeshConstants
#include "GlobalNamespace/OVRPlugin_MeshConstants.hpp"
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
// Including type: OVRPlugin/SpaceLocationFlags
#include "GlobalNamespace/OVRPlugin_SpaceLocationFlags.hpp"
// Including type: OVRPlugin/SpaceLocationf
#include "GlobalNamespace/OVRPlugin_SpaceLocationf.hpp"
// Including type: OVRPlugin/BodyJointLocation
#include "GlobalNamespace/OVRPlugin_BodyJointLocation.hpp"
// Including type: OVRPlugin/BodyState
#include "GlobalNamespace/OVRPlugin_BodyState.hpp"
// Including type: OVRPlugin/BodyStateInternal
#include "GlobalNamespace/OVRPlugin_BodyStateInternal.hpp"
// Including type: OVRPlugin/KeyboardState
#include "GlobalNamespace/OVRPlugin_KeyboardState.hpp"
// Including type: OVRPlugin/KeyboardDescriptionConstants
#include "GlobalNamespace/OVRPlugin_KeyboardDescriptionConstants.hpp"
// Including type: OVRPlugin/TrackedKeyboardPresentationStyles
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardPresentationStyles.hpp"
// Including type: OVRPlugin/TrackedKeyboardFlags
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardFlags.hpp"
// Including type: OVRPlugin/TrackedKeyboardQueryFlags
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardQueryFlags.hpp"
// Including type: OVRPlugin/KeyboardDescription
#include "GlobalNamespace/OVRPlugin_KeyboardDescription.hpp"
// Including type: OVRPlugin/FaceExpressionStatus
#include "GlobalNamespace/OVRPlugin_FaceExpressionStatus.hpp"
// Including type: OVRPlugin/FaceState
#include "GlobalNamespace/OVRPlugin_FaceState.hpp"
// Including type: OVRPlugin/FaceState2Internal
#include "GlobalNamespace/OVRPlugin_FaceState2Internal.hpp"
// Including type: OVRPlugin/FaceRegionConfidence
#include "GlobalNamespace/OVRPlugin_FaceRegionConfidence.hpp"
// Including type: OVRPlugin/FaceExpression
#include "GlobalNamespace/OVRPlugin_FaceExpression.hpp"
// Including type: OVRPlugin/FaceConstants
#include "GlobalNamespace/OVRPlugin_FaceConstants.hpp"
// Including type: OVRPlugin/EyeGazesState
#include "GlobalNamespace/OVRPlugin_EyeGazesState.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
// Including type: OVRPlugin/RenderModelProperties
#include "GlobalNamespace/OVRPlugin_RenderModelProperties.hpp"
// Including type: OVRPlugin/RenderModelPropertiesInternal
#include "GlobalNamespace/OVRPlugin_RenderModelPropertiesInternal.hpp"
// Including type: OVRPlugin/RenderModelFlags
#include "GlobalNamespace/OVRPlugin_RenderModelFlags.hpp"
// Including type: OVRPlugin/VirtualKeyboardLocationType
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardLocationType.hpp"
// Including type: OVRPlugin/VirtualKeyboardSpaceCreateInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardSpaceCreateInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardLocationInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardLocationInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardCreateInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardCreateInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardInputSource
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputSource.hpp"
// Including type: OVRPlugin/VirtualKeyboardInputStateFlags
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputStateFlags.hpp"
// Including type: OVRPlugin/VirtualKeyboardInputInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelAnimationState
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelAnimationState.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelAnimationStates
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelAnimationStates.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelAnimationStatesInternal
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelAnimationStatesInternal.hpp"
// Including type: OVRPlugin/VirtualKeyboardTextureIds
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardTextureIds.hpp"
// Including type: OVRPlugin/VirtualKeyboardTextureIdsInternal
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardTextureIdsInternal.hpp"
// Including type: OVRPlugin/VirtualKeyboardTextureData
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardTextureData.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelVisibility
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelVisibility.hpp"
// Including type: OVRPlugin/InsightPassthroughColorMapType
#include "GlobalNamespace/OVRPlugin_InsightPassthroughColorMapType.hpp"
// Including type: OVRPlugin/InsightPassthroughStyleFlags
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyleFlags.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPlugin/PassthroughColorLutChannels
#include "GlobalNamespace/OVRPlugin_PassthroughColorLutChannels.hpp"
// Including type: OVRPlugin/PassthroughColorLutData
#include "GlobalNamespace/OVRPlugin_PassthroughColorLutData.hpp"
// Including type: OVRPlugin/InsightPassthroughKeyboardHandsIntensity
#include "GlobalNamespace/OVRPlugin_InsightPassthroughKeyboardHandsIntensity.hpp"
// Including type: OVRPlugin/PassthroughCapabilityFlags
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilityFlags.hpp"
// Including type: OVRPlugin/PassthroughCapabilityFields
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilityFields.hpp"
// Including type: OVRPlugin/PassthroughCapabilities
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilities.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
// Including type: OVRPlugin/SpaceStoragePersistenceMode
#include "GlobalNamespace/OVRPlugin_SpaceStoragePersistenceMode.hpp"
// Including type: OVRPlugin/SpaceQueryActionType
#include "GlobalNamespace/OVRPlugin_SpaceQueryActionType.hpp"
// Including type: OVRPlugin/SpaceQueryType
#include "GlobalNamespace/OVRPlugin_SpaceQueryType.hpp"
// Including type: OVRPlugin/SpaceQueryFilterType
#include "GlobalNamespace/OVRPlugin_SpaceQueryFilterType.hpp"
// Including type: OVRPlugin/SpatialAnchorCreateInfo
#include "GlobalNamespace/OVRPlugin_SpatialAnchorCreateInfo.hpp"
// Including type: OVRPlugin/SpaceFilterInfoIds
#include "GlobalNamespace/OVRPlugin_SpaceFilterInfoIds.hpp"
// Including type: OVRPlugin/SpaceFilterInfoComponents
#include "GlobalNamespace/OVRPlugin_SpaceFilterInfoComponents.hpp"
// Including type: OVRPlugin/SpaceQueryInfo
#include "GlobalNamespace/OVRPlugin_SpaceQueryInfo.hpp"
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/GetBoneSkeleton2Delegate
#include "GlobalNamespace/OVRPlugin_GetBoneSkeleton2Delegate.hpp"
// Including type: OVRPlugin/SpaceContainerInternal
#include "GlobalNamespace/OVRPlugin_SpaceContainerInternal.hpp"
// Including type: OVRPlugin/SpaceSemanticLabelInternal
#include "GlobalNamespace/OVRPlugin_SpaceSemanticLabelInternal.hpp"
// Including type: OVRPlugin/RoomLayout
#include "GlobalNamespace/OVRPlugin_RoomLayout.hpp"
// Including type: OVRPlugin/RoomLayoutInternal
#include "GlobalNamespace/OVRPlugin_RoomLayoutInternal.hpp"
// Including type: OVRPlugin/PolygonalBoundary2DInternal
#include "GlobalNamespace/OVRPlugin_PolygonalBoundary2DInternal.hpp"
// Including type: OVRPlugin/SceneCaptureRequestInternal
#include "GlobalNamespace/OVRPlugin_SceneCaptureRequestInternal.hpp"
// Including type: OVRPlugin/PinnedArray`1
#include "GlobalNamespace/OVRPlugin_PinnedArray_1.hpp"
// Including type: OVRPlugin/TriangleMeshInternal
#include "GlobalNamespace/OVRPlugin_TriangleMeshInternal.hpp"
// Including type: OVRPlugin/PassthroughPreferenceFields
#include "GlobalNamespace/OVRPlugin_PassthroughPreferenceFields.hpp"
// Including type: OVRPlugin/PassthroughPreferenceFlags
#include "GlobalNamespace/OVRPlugin_PassthroughPreferenceFlags.hpp"
// Including type: OVRPlugin/PassthroughPreferences
#include "GlobalNamespace/OVRPlugin_PassthroughPreferences.hpp"
// Including type: OVRPlugin/Ktx
#include "GlobalNamespace/OVRPlugin_Ktx.hpp"
// Including type: OVRPlugin/UnityOpenXR
#include "GlobalNamespace/OVRPlugin_UnityOpenXR.hpp"
// Including type: OVRPlugin/Qpl
#include "GlobalNamespace/OVRPlugin_Qpl.hpp"
// Including type: OVRPlugin/OVRP_0_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_0.hpp"
// Including type: OVRPlugin/OVRP_0_1_1
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_1.hpp"
// Including type: OVRPlugin/OVRP_0_1_2
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_2.hpp"
// Including type: OVRPlugin/OVRP_0_1_3
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_3.hpp"
// Including type: OVRPlugin/OVRP_0_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_5_0.hpp"
// Including type: OVRPlugin/OVRP_1_0_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_0_0.hpp"
// Including type: OVRPlugin/OVRP_1_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_1_0.hpp"
// Including type: OVRPlugin/OVRP_1_2_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_2_0.hpp"
// Including type: OVRPlugin/OVRP_1_3_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_3_0.hpp"
// Including type: OVRPlugin/OVRP_1_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_5_0.hpp"
// Including type: OVRPlugin/OVRP_1_6_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_6_0.hpp"
// Including type: OVRPlugin/OVRP_1_7_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_7_0.hpp"
// Including type: OVRPlugin/OVRP_1_8_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_8_0.hpp"
// Including type: OVRPlugin/OVRP_1_9_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_9_0.hpp"
// Including type: OVRPlugin/OVRP_1_10_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_10_0.hpp"
// Including type: OVRPlugin/OVRP_1_11_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_11_0.hpp"
// Including type: OVRPlugin/OVRP_1_12_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_12_0.hpp"
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_15_0.hpp"
// Including type: OVRPlugin/OVRP_1_16_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_16_0.hpp"
// Including type: OVRPlugin/OVRP_1_17_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_17_0.hpp"
// Including type: OVRPlugin/OVRP_1_18_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_18_0.hpp"
// Including type: OVRPlugin/OVRP_1_19_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_19_0.hpp"
// Including type: OVRPlugin/OVRP_1_21_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_21_0.hpp"
// Including type: OVRPlugin/OVRP_1_28_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_28_0.hpp"
// Including type: OVRPlugin/OVRP_1_29_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_29_0.hpp"
// Including type: OVRPlugin/OVRP_1_30_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_30_0.hpp"
// Including type: OVRPlugin/OVRP_1_31_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_31_0.hpp"
// Including type: OVRPlugin/OVRP_1_32_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_32_0.hpp"
// Including type: OVRPlugin/OVRP_1_34_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_34_0.hpp"
// Including type: OVRPlugin/OVRP_1_35_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_35_0.hpp"
// Including type: OVRPlugin/OVRP_1_36_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_36_0.hpp"
// Including type: OVRPlugin/OVRP_1_37_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_37_0.hpp"
// Including type: OVRPlugin/OVRP_1_38_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_38_0.hpp"
// Including type: OVRPlugin/OVRP_1_39_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_39_0.hpp"
// Including type: OVRPlugin/OVRP_1_40_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_40_0.hpp"
// Including type: OVRPlugin/OVRP_1_41_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_41_0.hpp"
// Including type: OVRPlugin/OVRP_1_42_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_42_0.hpp"
// Including type: OVRPlugin/OVRP_1_43_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_43_0.hpp"
// Including type: OVRPlugin/OVRP_1_44_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_44_0.hpp"
// Including type: OVRPlugin/OVRP_1_45_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_45_0.hpp"
// Including type: OVRPlugin/OVRP_1_46_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_46_0.hpp"
// Including type: OVRPlugin/OVRP_1_47_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_47_0.hpp"
// Including type: OVRPlugin/OVRP_1_48_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_48_0.hpp"
// Including type: OVRPlugin/OVRP_1_49_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_49_0.hpp"
// Including type: OVRPlugin/OVRP_1_50_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_50_0.hpp"
// Including type: OVRPlugin/OVRP_1_51_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_51_0.hpp"
// Including type: OVRPlugin/OVRP_1_52_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_52_0.hpp"
// Including type: OVRPlugin/OVRP_1_53_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_53_0.hpp"
// Including type: OVRPlugin/OVRP_1_54_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_54_0.hpp"
// Including type: OVRPlugin/OVRP_1_55_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_0.hpp"
// Including type: OVRPlugin/OVRP_1_55_1
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_1.hpp"
// Including type: OVRPlugin/OVRP_1_56_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_56_0.hpp"
// Including type: OVRPlugin/OVRP_1_57_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_57_0.hpp"
// Including type: OVRPlugin/OVRP_1_58_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_58_0.hpp"
// Including type: OVRPlugin/OVRP_1_59_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_59_0.hpp"
// Including type: OVRPlugin/OVRP_1_60_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_60_0.hpp"
// Including type: OVRPlugin/OVRP_1_61_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_61_0.hpp"
// Including type: OVRPlugin/OVRP_1_62_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_62_0.hpp"
// Including type: OVRPlugin/OVRP_1_63_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_63_0.hpp"
// Including type: OVRPlugin/OVRP_1_64_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_64_0.hpp"
// Including type: OVRPlugin/OVRP_1_65_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_65_0.hpp"
// Including type: OVRPlugin/OVRP_1_66_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_66_0.hpp"
// Including type: OVRPlugin/OVRP_1_67_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_67_0.hpp"
// Including type: OVRPlugin/OVRP_1_68_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_68_0.hpp"
// Including type: OVRPlugin/OVRP_1_69_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_69_0.hpp"
// Including type: OVRPlugin/OVRP_1_70_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_70_0.hpp"
// Including type: OVRPlugin/OVRP_1_71_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_71_0.hpp"
// Including type: OVRPlugin/OVRP_1_72_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_72_0.hpp"
// Including type: OVRPlugin/OVRP_1_73_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_73_0.hpp"
// Including type: OVRPlugin/OVRP_1_74_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_74_0.hpp"
// Including type: OVRPlugin/OVRP_1_75_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_75_0.hpp"
// Including type: OVRPlugin/OVRP_1_76_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_76_0.hpp"
// Including type: OVRPlugin/OVRP_1_78_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_78_0.hpp"
// Including type: OVRPlugin/OVRP_1_79_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_79_0.hpp"
// Including type: OVRPlugin/OVRP_1_81_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_81_0.hpp"
// Including type: OVRPlugin/OVRP_1_82_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_82_0.hpp"
// Including type: OVRPlugin/OVRP_1_83_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_83_0.hpp"
// Including type: OVRPlugin/OVRP_1_84_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_84_0.hpp"
// Including type: OVRPlugin/OVRP_1_85_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_85_0.hpp"
// Including type: OVRPlugin/OVRP_1_86_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_86_0.hpp"
// Including type: OVRPlugin/OVRP_1_87_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_87_0.hpp"
// Including type: OVRPlugin/OVRP_1_88_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_88_0.hpp"
// Including type: OVRPlugin/OVRP_1_89_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_89_0.hpp"
// Including type: OVRPlugin/<>c
#include "GlobalNamespace/OVRPlugin_--c.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean isSupportedPlatform
bool GlobalNamespace::OVRPlugin::_get_isSupportedPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_isSupportedPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "isSupportedPlatform"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean isSupportedPlatform
void GlobalNamespace::OVRPlugin::_set_isSupportedPlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_isSupportedPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "isSupportedPlatform", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version wrapperVersion
::System::Version* GlobalNamespace::OVRPlugin::_get_wrapperVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_wrapperVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "wrapperVersion"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version wrapperVersion
void GlobalNamespace::OVRPlugin::_set_wrapperVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_wrapperVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "wrapperVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _version
::System::Version* GlobalNamespace::OVRPlugin::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_version"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _version
void GlobalNamespace::OVRPlugin::_set__version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_version", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _nativeSDKVersion
::System::Version* GlobalNamespace::OVRPlugin::_get__nativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeSDKVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_nativeSDKVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _nativeSDKVersion
void GlobalNamespace::OVRPlugin::_set__nativeSDKVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeSDKVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeSDKVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_CPU_CORES
int GlobalNamespace::OVRPlugin::_get_MAX_CPU_CORES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_MAX_CPU_CORES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "MAX_CPU_CORES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_CPU_CORES
void GlobalNamespace::OVRPlugin::_set_MAX_CPU_CORES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_MAX_CPU_CORES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "MAX_CPU_CORES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OverlayShapeFlagShift
int GlobalNamespace::OVRPlugin::_get_OverlayShapeFlagShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_OverlayShapeFlagShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "OverlayShapeFlagShift"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OverlayShapeFlagShift
void GlobalNamespace::OVRPlugin::_set_OverlayShapeFlagShift(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_OverlayShapeFlagShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "OverlayShapeFlagShift", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AppPerfFrameStatsMaxCount
int GlobalNamespace::OVRPlugin::_get_AppPerfFrameStatsMaxCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_AppPerfFrameStatsMaxCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "AppPerfFrameStatsMaxCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AppPerfFrameStatsMaxCount
void GlobalNamespace::OVRPlugin::_set_AppPerfFrameStatsMaxCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_AppPerfFrameStatsMaxCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "AppPerfFrameStatsMaxCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EventDataBufferSize
int GlobalNamespace::OVRPlugin::_get_EventDataBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_EventDataBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "EventDataBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EventDataBufferSize
void GlobalNamespace::OVRPlugin::_set_EventDataBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_EventDataBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "EventDataBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RENDER_MODEL_NULL_KEY
int GlobalNamespace::OVRPlugin::_get_RENDER_MODEL_NULL_KEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_RENDER_MODEL_NULL_KEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "RENDER_MODEL_NULL_KEY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RENDER_MODEL_NULL_KEY
void GlobalNamespace::OVRPlugin::_set_RENDER_MODEL_NULL_KEY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_RENDER_MODEL_NULL_KEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "RENDER_MODEL_NULL_KEY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpaceFilterInfoIdsMaxSize
int GlobalNamespace::OVRPlugin::_get_SpaceFilterInfoIdsMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_SpaceFilterInfoIdsMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "SpaceFilterInfoIdsMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpaceFilterInfoIdsMaxSize
void GlobalNamespace::OVRPlugin::_set_SpaceFilterInfoIdsMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_SpaceFilterInfoIdsMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "SpaceFilterInfoIdsMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpaceFilterInfoComponentsMaxSize
int GlobalNamespace::OVRPlugin::_get_SpaceFilterInfoComponentsMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_SpaceFilterInfoComponentsMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "SpaceFilterInfoComponentsMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpaceFilterInfoComponentsMaxSize
void GlobalNamespace::OVRPlugin::_set_SpaceFilterInfoComponentsMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_SpaceFilterInfoComponentsMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "SpaceFilterInfoComponentsMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialEntityMaxQueryResultsPerEvent
int GlobalNamespace::OVRPlugin::_get_SpatialEntityMaxQueryResultsPerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_SpatialEntityMaxQueryResultsPerEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "SpatialEntityMaxQueryResultsPerEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialEntityMaxQueryResultsPerEvent
void GlobalNamespace::OVRPlugin::_set_SpatialEntityMaxQueryResultsPerEvent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_SpatialEntityMaxQueryResultsPerEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "SpatialEntityMaxQueryResultsPerEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<OVRPlugin/XrApi> _nativeXrApi
::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi> GlobalNamespace::OVRPlugin::_get__nativeXrApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeXrApi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi>>("", "OVRPlugin", "_nativeXrApi"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<OVRPlugin/XrApi> _nativeXrApi
void GlobalNamespace::OVRPlugin::_set__nativeXrApi(::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeXrApi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeXrApi", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/GUID _nativeAudioOutGuid
::GlobalNamespace::OVRPlugin::GUID* GlobalNamespace::OVRPlugin::_get__nativeAudioOutGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeAudioOutGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::GUID*>("", "OVRPlugin", "_nativeAudioOutGuid"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/GUID _nativeAudioOutGuid
void GlobalNamespace::OVRPlugin::_set__nativeAudioOutGuid(::GlobalNamespace::OVRPlugin::GUID* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeAudioOutGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeAudioOutGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Guid _cachedAudioOutGuid
::System::Guid GlobalNamespace::OVRPlugin::_get__cachedAudioOutGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioOutGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("", "OVRPlugin", "_cachedAudioOutGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.Guid _cachedAudioOutGuid
void GlobalNamespace::OVRPlugin::_set__cachedAudioOutGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioOutGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioOutGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _cachedAudioOutString
::StringW GlobalNamespace::OVRPlugin::_get__cachedAudioOutString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioOutString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "_cachedAudioOutString"));
}
// Autogenerated static field setter
// Set static field: static private System.String _cachedAudioOutString
void GlobalNamespace::OVRPlugin::_set__cachedAudioOutString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioOutString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioOutString", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/GUID _nativeAudioInGuid
::GlobalNamespace::OVRPlugin::GUID* GlobalNamespace::OVRPlugin::_get__nativeAudioInGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeAudioInGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::GUID*>("", "OVRPlugin", "_nativeAudioInGuid"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/GUID _nativeAudioInGuid
void GlobalNamespace::OVRPlugin::_set__nativeAudioInGuid(::GlobalNamespace::OVRPlugin::GUID* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeAudioInGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeAudioInGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Guid _cachedAudioInGuid
::System::Guid GlobalNamespace::OVRPlugin::_get__cachedAudioInGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioInGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("", "OVRPlugin", "_cachedAudioInGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.Guid _cachedAudioInGuid
void GlobalNamespace::OVRPlugin::_set__cachedAudioInGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioInGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioInGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _cachedAudioInString
::StringW GlobalNamespace::OVRPlugin::_get__cachedAudioInString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioInString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "_cachedAudioInString"));
}
// Autogenerated static field setter
// Set static field: static private System.String _cachedAudioInString
void GlobalNamespace::OVRPlugin::_set__cachedAudioInString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioInString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioInString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean perfStatWarningPrinted
bool GlobalNamespace::OVRPlugin::_get_perfStatWarningPrinted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_perfStatWarningPrinted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "perfStatWarningPrinted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean perfStatWarningPrinted
void GlobalNamespace::OVRPlugin::_set_perfStatWarningPrinted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_perfStatWarningPrinted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "perfStatWarningPrinted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean resetPerfStatWarningPrinted
bool GlobalNamespace::OVRPlugin::_get_resetPerfStatWarningPrinted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_resetPerfStatWarningPrinted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "resetPerfStatWarningPrinted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean resetPerfStatWarningPrinted
void GlobalNamespace::OVRPlugin::_set_resetPerfStatWarningPrinted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_resetPerfStatWarningPrinted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "resetPerfStatWarningPrinted", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer _nativeSystemDisplayFrequenciesAvailable
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRPlugin::_get__nativeSystemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeSystemDisplayFrequenciesAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRPlugin", "_nativeSystemDisplayFrequenciesAvailable"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer _nativeSystemDisplayFrequenciesAvailable
void GlobalNamespace::OVRPlugin::_set__nativeSystemDisplayFrequenciesAvailable(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeSystemDisplayFrequenciesAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeSystemDisplayFrequenciesAvailable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] _cachedSystemDisplayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRPlugin::_get__cachedSystemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedSystemDisplayFrequenciesAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRPlugin", "_cachedSystemDisplayFrequenciesAvailable"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] _cachedSystemDisplayFrequenciesAvailable
void GlobalNamespace::OVRPlugin::_set__cachedSystemDisplayFrequenciesAvailable(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedSystemDisplayFrequenciesAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedSystemDisplayFrequenciesAvailable", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/HandStateInternal cachedHandState
::GlobalNamespace::OVRPlugin::HandStateInternal GlobalNamespace::OVRPlugin::_get_cachedHandState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedHandState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStateInternal>("", "OVRPlugin", "cachedHandState"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/HandStateInternal cachedHandState
void GlobalNamespace::OVRPlugin::_set_cachedHandState(::GlobalNamespace::OVRPlugin::HandStateInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedHandState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedHandState", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Skeleton cachedSkeleton
::GlobalNamespace::OVRPlugin::Skeleton GlobalNamespace::OVRPlugin::_get_cachedSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton>("", "OVRPlugin", "cachedSkeleton"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Skeleton cachedSkeleton
void GlobalNamespace::OVRPlugin::_set_cachedSkeleton(::GlobalNamespace::OVRPlugin::Skeleton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Skeleton2Internal cachedSkeleton2
::GlobalNamespace::OVRPlugin::Skeleton2Internal GlobalNamespace::OVRPlugin::_get_cachedSkeleton2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedSkeleton2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton2Internal>("", "OVRPlugin", "cachedSkeleton2"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Skeleton2Internal cachedSkeleton2
void GlobalNamespace::OVRPlugin::_set_cachedSkeleton2(::GlobalNamespace::OVRPlugin::Skeleton2Internal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedSkeleton2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedSkeleton2", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/GetBoneSkeleton2Delegate[] Skeleton2GetBone
::ArrayW<::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*> GlobalNamespace::OVRPlugin::_get_Skeleton2GetBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_Skeleton2GetBone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*>>("", "OVRPlugin", "Skeleton2GetBone"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/GetBoneSkeleton2Delegate[] Skeleton2GetBone
void GlobalNamespace::OVRPlugin::_set_Skeleton2GetBone(::ArrayW<::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_Skeleton2GetBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "Skeleton2GetBone", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/FaceStateInternal cachedFaceState
::GlobalNamespace::OVRPlugin::FaceStateInternal GlobalNamespace::OVRPlugin::_get_cachedFaceState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedFaceState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceStateInternal>("", "OVRPlugin", "cachedFaceState"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/FaceStateInternal cachedFaceState
void GlobalNamespace::OVRPlugin::_set_cachedFaceState(::GlobalNamespace::OVRPlugin::FaceStateInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedFaceState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedFaceState", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/EyeGazesStateInternal cachedEyeGazesState
::GlobalNamespace::OVRPlugin::EyeGazesStateInternal GlobalNamespace::OVRPlugin::_get_cachedEyeGazesState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedEyeGazesState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeGazesStateInternal>("", "OVRPlugin", "cachedEyeGazesState"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/EyeGazesStateInternal cachedEyeGazesState
void GlobalNamespace::OVRPlugin::_set_cachedEyeGazesState(::GlobalNamespace::OVRPlugin::EyeGazesStateInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedEyeGazesState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedEyeGazesState", value));
}
// Autogenerated static field getter
// Get static field: static private System.String pluginName
::StringW GlobalNamespace::OVRPlugin::_get_pluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_pluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "pluginName"));
}
// Autogenerated static field setter
// Set static field: static private System.String pluginName
void GlobalNamespace::OVRPlugin::_set_pluginName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_pluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "pluginName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _versionZero
::System::Version* GlobalNamespace::OVRPlugin::_get__versionZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__versionZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_versionZero"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _versionZero
void GlobalNamespace::OVRPlugin::_set__versionZero(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__versionZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_versionZero", value));
}
// Autogenerated method: OVRPlugin.get_version
::System::Version* GlobalNamespace::OVRPlugin::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_nativeSDKVersion
::System::Version* GlobalNamespace::OVRPlugin::get_nativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_nativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_nativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsSuccess
bool GlobalNamespace::OVRPlugin::IsSuccess(::GlobalNamespace::OVRPlugin::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result);
}
// Autogenerated method: OVRPlugin.SetLogCallback2
void GlobalNamespace::OVRPlugin::SetLogCallback2(::GlobalNamespace::OVRPlugin::LogCallback2DelegateType* logCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetLogCallback2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetLogCallback2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCallback);
}
// Autogenerated method: OVRPlugin.IsPassthroughShape
bool GlobalNamespace::OVRPlugin::IsPassthroughShape(::GlobalNamespace::OVRPlugin::OverlayShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsPassthroughShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsPassthroughShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape);
}
// Autogenerated method: OVRPlugin.IsPositionValid
bool GlobalNamespace::OVRPlugin::IsPositionValid(::GlobalNamespace::OVRPlugin::SpaceLocationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsPositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsPositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.IsOrientationValid
bool GlobalNamespace::OVRPlugin::IsOrientationValid(::GlobalNamespace::OVRPlugin::SpaceLocationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.IsPositionTracked
bool GlobalNamespace::OVRPlugin::IsPositionTracked(::GlobalNamespace::OVRPlugin::SpaceLocationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.IsOrientationTracked
bool GlobalNamespace::OVRPlugin::IsOrientationTracked(::GlobalNamespace::OVRPlugin::SpaceLocationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.GuidToUuidString
::StringW GlobalNamespace::OVRPlugin::GuidToUuidString(::System::Guid guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GuidToUuidString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GuidToUuidString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid);
}
// Autogenerated method: OVRPlugin.get_initialized
bool GlobalNamespace::OVRPlugin::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_nativeXrApi
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::get_nativeXrApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_nativeXrApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_nativeXrApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::XrApi, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_chromatic
bool GlobalNamespace::OVRPlugin::get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_chromatic
void GlobalNamespace::OVRPlugin::set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_monoscopic
bool GlobalNamespace::OVRPlugin::get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_monoscopic
void GlobalNamespace::OVRPlugin::set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_rotation
bool GlobalNamespace::OVRPlugin::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_rotation
void GlobalNamespace::OVRPlugin::set_rotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_position
bool GlobalNamespace::OVRPlugin::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_position
void GlobalNamespace::OVRPlugin::set_position(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_useIPDInPositionTracking
bool GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_useIPDInPositionTracking
void GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_positionSupported
bool GlobalNamespace::OVRPlugin::get_positionSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_positionSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_positionSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_positionTracked
bool GlobalNamespace::OVRPlugin::get_positionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_positionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_positionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_powerSaving
bool GlobalNamespace::OVRPlugin::get_powerSaving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_powerSaving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_powerSaving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hmdPresent
bool GlobalNamespace::OVRPlugin::get_hmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_userPresent
bool GlobalNamespace::OVRPlugin::get_userPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_userPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_userPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_headphonesPresent
bool GlobalNamespace::OVRPlugin::get_headphonesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_headphonesPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_headphonesPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_recommendedMSAALevel
int GlobalNamespace::OVRPlugin::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemRegion
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::get_systemRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemRegion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_audioOutId
::StringW GlobalNamespace::OVRPlugin::get_audioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_audioOutId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_audioOutId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_audioInId
::StringW GlobalNamespace::OVRPlugin::get_audioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_audioInId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_audioInId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hasVrFocus
bool GlobalNamespace::OVRPlugin::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hasInputFocus
bool GlobalNamespace::OVRPlugin::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_shouldQuit
bool GlobalNamespace::OVRPlugin::get_shouldQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_shouldQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_shouldQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_shouldRecenter
bool GlobalNamespace::OVRPlugin::get_shouldRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_shouldRecenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_shouldRecenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_productName
::StringW GlobalNamespace::OVRPlugin::get_productName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_productName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_productName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_latency
::StringW GlobalNamespace::OVRPlugin::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_eyeDepth
float GlobalNamespace::OVRPlugin::get_eyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeDepth
void GlobalNamespace::OVRPlugin::set_eyeDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_eyeHeight
float GlobalNamespace::OVRPlugin::get_eyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeHeight
void GlobalNamespace::OVRPlugin::set_eyeHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_batteryLevel
float GlobalNamespace::OVRPlugin::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_batteryTemperature
float GlobalNamespace::OVRPlugin::get_batteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_suggestedCpuPerfLevel
::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_suggestedCpuPerfLevel
void GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_suggestedCpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_suggestedGpuPerfLevel
::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_suggestedGpuPerfLevel
void GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_suggestedGpuPerfLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_cpuLevel
int GlobalNamespace::OVRPlugin::get_cpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_cpuLevel
void GlobalNamespace::OVRPlugin::set_cpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_gpuLevel
int GlobalNamespace::OVRPlugin::get_gpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_gpuLevel
void GlobalNamespace::OVRPlugin::set_gpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_vsyncCount
int GlobalNamespace::OVRPlugin::get_vsyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_vsyncCount
void GlobalNamespace::OVRPlugin::set_vsyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_systemVolume
float GlobalNamespace::OVRPlugin::get_systemVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_ipd
float GlobalNamespace::OVRPlugin::get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_ipd
void GlobalNamespace::OVRPlugin::set_ipd(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_occlusionMesh
bool GlobalNamespace::OVRPlugin::get_occlusionMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_occlusionMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_occlusionMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_occlusionMesh
void GlobalNamespace::OVRPlugin::set_occlusionMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_occlusionMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_occlusionMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_batteryStatus
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BatteryStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetEyeFrustum
::GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::GetEyeFrustum(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin.GetEyeTextureSize
::GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::GetEyeTextureSize(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Sizei, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin.GetTrackerPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackerPose(::GlobalNamespace::OVRPlugin::Tracker trackerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackerId);
}
// Autogenerated method: OVRPlugin.GetTrackerFrustum
::GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::GetTrackerFrustum(::GlobalNamespace::OVRPlugin::Tracker trackerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackerFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackerFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackerId);
}
// Autogenerated method: OVRPlugin.ShowUI
bool GlobalNamespace::OVRPlugin::ShowUI(::GlobalNamespace::OVRPlugin::PlatformUI ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShowUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShowUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ui);
}
// Autogenerated method: OVRPlugin.EnqueueSubmitLayer
bool GlobalNamespace::OVRPlugin::EnqueueSubmitLayer(bool onTop, bool headLocked, bool noDepthBufferTesting, ::System::IntPtr leftTexture, ::System::IntPtr rightTexture, int layerId, int frameIndex, ::GlobalNamespace::OVRPlugin::Posef pose, ::GlobalNamespace::OVRPlugin::Vector3f scale, int layerIndex, ::GlobalNamespace::OVRPlugin::OverlayShape shape, bool overrideTextureRectMatrix, ::GlobalNamespace::OVRPlugin::TextureRectMatrixf textureRectMatrix, bool overridePerLayerColorScaleAndOffset, ::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool expensiveSuperSample, bool bicubic, bool efficientSuperSample, bool efficientSharpen, bool expensiveSharpen, bool hidden, bool secureContent, bool automaticFiltering) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueSubmitLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueSubmitLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onTop), ::il2cpp_utils::ExtractType(headLocked), ::il2cpp_utils::ExtractType(noDepthBufferTesting), ::il2cpp_utils::ExtractType(leftTexture), ::il2cpp_utils::ExtractType(rightTexture), ::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(overrideTextureRectMatrix), ::il2cpp_utils::ExtractType(textureRectMatrix), ::il2cpp_utils::ExtractType(overridePerLayerColorScaleAndOffset), ::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(expensiveSuperSample), ::il2cpp_utils::ExtractType(bicubic), ::il2cpp_utils::ExtractType(efficientSuperSample), ::il2cpp_utils::ExtractType(efficientSharpen), ::il2cpp_utils::ExtractType(expensiveSharpen), ::il2cpp_utils::ExtractType(hidden), ::il2cpp_utils::ExtractType(secureContent), ::il2cpp_utils::ExtractType(automaticFiltering)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onTop, headLocked, noDepthBufferTesting, leftTexture, rightTexture, layerId, frameIndex, pose, scale, layerIndex, shape, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset, expensiveSuperSample, bicubic, efficientSuperSample, efficientSharpen, expensiveSharpen, hidden, secureContent, automaticFiltering);
}
// Autogenerated method: OVRPlugin.CalculateLayerDesc
::GlobalNamespace::OVRPlugin::LayerDesc GlobalNamespace::OVRPlugin::CalculateLayerDesc(::GlobalNamespace::OVRPlugin::OverlayShape shape, ::GlobalNamespace::OVRPlugin::LayerLayout layout, ::GlobalNamespace::OVRPlugin::Sizei textureSize, int mipLevels, int sampleCount, ::GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CalculateLayerDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CalculateLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(layout), ::il2cpp_utils::ExtractType(textureSize), ::il2cpp_utils::ExtractType(mipLevels), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(layerFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::LayerDesc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags);
}
// Autogenerated method: OVRPlugin.EnqueueSetupLayer
bool GlobalNamespace::OVRPlugin::EnqueueSetupLayer(::GlobalNamespace::OVRPlugin::LayerDesc desc, int compositionDepth, ::System::IntPtr layerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueSetupLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueSetupLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(compositionDepth), ::il2cpp_utils::ExtractType(layerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, desc, compositionDepth, layerID);
}
// Autogenerated method: OVRPlugin.EnqueueDestroyLayer
bool GlobalNamespace::OVRPlugin::EnqueueDestroyLayer(::System::IntPtr layerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueDestroyLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueDestroyLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerID);
}
// Autogenerated method: OVRPlugin.GetLayerTexture
::System::IntPtr GlobalNamespace::OVRPlugin::GetLayerTexture(int layerId, int stage, ::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(stage), ::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, stage, eyeId);
}
// Autogenerated method: OVRPlugin.GetLayerTextureStageCount
int GlobalNamespace::OVRPlugin::GetLayerTextureStageCount(int layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerTextureStageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerTextureStageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin.GetLayerAndroidSurfaceObject
::System::IntPtr GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject(int layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin.UpdateNodePhysicsPoses
bool GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses(int frameIndex, double predictionSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateNodePhysicsPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(predictionSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameIndex, predictionSeconds);
}
// Autogenerated method: OVRPlugin.GetNodePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetNodePose(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeVelocity
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeVelocity(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAngularVelocity
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularVelocity(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAcceleration
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAngularAcceleration
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodePresent
bool GlobalNamespace::OVRPlugin::GetNodePresent(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodeOrientationTracked
bool GlobalNamespace::OVRPlugin::GetNodeOrientationTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodeOrientationValid
bool GlobalNamespace::OVRPlugin::GetNodeOrientationValid(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePositionTracked
bool GlobalNamespace::OVRPlugin::GetNodePositionTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePositionValid
bool GlobalNamespace::OVRPlugin::GetNodePositionValid(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePoseStateRaw
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateRaw(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePoseStateRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePoseStateRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodePoseStateAtTime
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime(double time, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePoseStateAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePoseStateImmediate
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePoseStateImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.AreHandPosesGeneratedByControllerData
bool GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, nodeId);
}
// Autogenerated method: OVRPlugin.SetSimultaneousHandsAndControllersEnabled
bool GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetSimultaneousHandsAndControllersEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin.GetControllerIsInHand
bool GlobalNamespace::OVRPlugin::GetControllerIsInHand(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerIsInHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerIsInHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, nodeId);
}
// Autogenerated method: OVRPlugin.GetCurrentTrackingTransformPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetTrackingTransformRawPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetTrackingTransformRelativePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose(::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingOrigin);
}
// Autogenerated method: OVRPlugin.GetControllerState
::GlobalNamespace::OVRPlugin::ControllerState GlobalNamespace::OVRPlugin::GetControllerState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState2
::GlobalNamespace::OVRPlugin::ControllerState2 GlobalNamespace::OVRPlugin::GetControllerState2(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState4
::GlobalNamespace::OVRPlugin::ControllerState4 GlobalNamespace::OVRPlugin::GetControllerState4(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState5
::GlobalNamespace::OVRPlugin::ControllerState5 GlobalNamespace::OVRPlugin::GetControllerState5(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState5, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState6
::GlobalNamespace::OVRPlugin::ControllerState6 GlobalNamespace::OVRPlugin::GetControllerState6(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState6, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetCurrentInteractionProfile
::GlobalNamespace::OVRPlugin::InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile(::GlobalNamespace::OVRPlugin::Hand hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetCurrentInteractionProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::InteractionProfile, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRPlugin.GetCurrentDetachedInteractionProfile
::GlobalNamespace::OVRPlugin::InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile(::GlobalNamespace::OVRPlugin::Hand hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::InteractionProfile, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRPlugin.SetControllerVibration
bool GlobalNamespace::OVRPlugin::SetControllerVibration(uint controllerMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin.SetControllerLocalizedVibration
bool GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsLocation hapticsLocationMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerLocalizedVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsLocationMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin.SetControllerHapticsAmplitudeEnvelope
bool GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsAmplitudeEnvelopeVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsVibration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsVibration);
}
// Autogenerated method: OVRPlugin.SetControllerHapticsPcm
bool GlobalNamespace::OVRPlugin::SetControllerHapticsPcm(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsPcmVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerHapticsPcm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerHapticsPcm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsVibration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsVibration);
}
// Autogenerated method: OVRPlugin.GetControllerSampleRateHz
bool GlobalNamespace::OVRPlugin::GetControllerSampleRateHz(::GlobalNamespace::OVRPlugin::Controller controllerMask, ByRef<float> sampleRateHz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerSampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerSampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, byref(sampleRateHz));
}
// Autogenerated method: OVRPlugin.GetControllerHapticsDesc
::GlobalNamespace::OVRPlugin::HapticsDesc GlobalNamespace::OVRPlugin::GetControllerHapticsDesc(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerHapticsDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerHapticsDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsDesc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerHapticsState
::GlobalNamespace::OVRPlugin::HapticsState GlobalNamespace::OVRPlugin::GetControllerHapticsState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerHapticsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerHapticsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.SetControllerHaptics
bool GlobalNamespace::OVRPlugin::SetControllerHaptics(uint controllerMask, ::GlobalNamespace::OVRPlugin::HapticsBuffer hapticsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsBuffer);
}
// Autogenerated method: OVRPlugin.GetEyeRecommendedResolutionScale
float GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetAppCpuStartToGpuEndTime
float GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetBoundaryConfigured
bool GlobalNamespace::OVRPlugin::GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.TestBoundaryNode
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryNode(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TestBoundaryNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TestBoundaryNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, boundaryType);
}
// Autogenerated method: OVRPlugin.TestBoundaryPoint
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryPoint(::GlobalNamespace::OVRPlugin::Vector3f point, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TestBoundaryPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TestBoundaryPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryGeometry
::GlobalNamespace::OVRPlugin::BoundaryGeometry GlobalNamespace::OVRPlugin::GetBoundaryGeometry(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryGeometry, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryGeometry2
bool GlobalNamespace::OVRPlugin::GetBoundaryGeometry2(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType, ::System::IntPtr points, ByRef<int> pointsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryGeometry2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryGeometry2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(pointsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, points, byref(pointsCount));
}
// Autogenerated method: OVRPlugin.GetAppPerfStats
::GlobalNamespace::OVRPlugin::AppPerfStats GlobalNamespace::OVRPlugin::GetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::AppPerfStats, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ResetAppPerfStats
bool GlobalNamespace::OVRPlugin::ResetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ResetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetAppFramerate
float GlobalNamespace::OVRPlugin::GetAppFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetHandNodePoseStateLatency
bool GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency(double latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latencyInSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, latencyInSeconds);
}
// Autogenerated method: OVRPlugin.GetHandNodePoseStateLatency
double GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetControllerDrivenHandPoses
bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses(bool controllerDrivenHandPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerDrivenHandPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerDrivenHandPoses)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerDrivenHandPoses);
}
// Autogenerated method: OVRPlugin.SetControllerDrivenHandPosesAreNatural
bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural(bool controllerDrivenHandPosesAreNatural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerDrivenHandPosesAreNatural", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerDrivenHandPosesAreNatural)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerDrivenHandPosesAreNatural);
}
// Autogenerated method: OVRPlugin.IsControllerDrivenHandPosesEnabled
bool GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.AreControllerDrivenHandPosesNatural
bool GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetDesiredEyeTextureFormat
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::EyeTextureFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetDesiredEyeTextureFormat
bool GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.InitializeMixedReality
bool GlobalNamespace::OVRPlugin::InitializeMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InitializeMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "InitializeMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ShutdownMixedReality
bool GlobalNamespace::OVRPlugin::ShutdownMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShutdownMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsMixedRealityInitialized
bool GlobalNamespace::OVRPlugin::IsMixedRealityInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsMixedRealityInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetExternalCameraCount
int GlobalNamespace::OVRPlugin::GetExternalCameraCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetExternalCameraCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetExternalCameraCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.UpdateExternalCamera
bool GlobalNamespace::OVRPlugin::UpdateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetMixedRealityCameraInfo
bool GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetMixedRealityCameraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraExtrinsics&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraIntrinsics&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(cameraExtrinsics), byref(cameraIntrinsics));
}
// Autogenerated method: OVRPlugin.OverrideExternalCameraFov
bool GlobalNamespace::OVRPlugin::OverrideExternalCameraFov(int cameraId, bool useOverriddenFov, ::GlobalNamespace::OVRPlugin::Fovf fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverrideExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "OverrideExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenFov), ::il2cpp_utils::ExtractType(fov)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenFov, fov);
}
// Autogenerated method: OVRPlugin.GetUseOverriddenExternalCameraFov
bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov(int cameraId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId);
}
// Autogenerated method: OVRPlugin.OverrideExternalCameraStaticPose
bool GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose(int cameraId, bool useOverriddenPose, ::GlobalNamespace::OVRPlugin::Posef poseInStageOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenPose), ::il2cpp_utils::ExtractType(poseInStageOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenPose, poseInStageOrigin);
}
// Autogenerated method: OVRPlugin.GetUseOverriddenExternalCameraStaticPose
bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose(int cameraId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId);
}
// Autogenerated method: OVRPlugin.ResetDefaultExternalCamera
bool GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetDefaultExternalCamera
bool GlobalNamespace::OVRPlugin::SetDefaultExternalCamera(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin.SetExternalCameraProperties
bool GlobalNamespace::OVRPlugin::SetExternalCameraProperties(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetExternalCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetExternalCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin.SetMultimodalHandsControllersSupported
bool GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.IsMultimodalHandsControllersSupported
bool GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsInsightPassthroughSupported
bool GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsInsightPassthroughSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.InitializeInsightPassthrough
bool GlobalNamespace::OVRPlugin::InitializeInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InitializeInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ShutdownInsightPassthrough
bool GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsInsightPassthroughInitialized
bool GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetInsightPassthroughInitializationState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.CreateInsightTriangleMesh
bool GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh(int layerId, ::ArrayW<::UnityEngine::Vector3> vertices, ::ArrayW<int> triangles, ByRef<uint64_t> meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, vertices, triangles, byref(meshHandle));
}
// Autogenerated method: OVRPlugin.DestroyInsightTriangleMesh
bool GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh(uint64_t meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshHandle);
}
// Autogenerated method: OVRPlugin.AddInsightPassthroughSurfaceGeometry
bool GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry(int layerId, uint64_t meshHandle, ::UnityEngine::Matrix4x4 T_world_model, ByRef<uint64_t> geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(meshHandle), ::il2cpp_utils::ExtractType(T_world_model), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, meshHandle, T_world_model, byref(geometryInstanceHandle));
}
// Autogenerated method: OVRPlugin.DestroyInsightPassthroughGeometryInstance
bool GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance(uint64_t geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyInsightPassthroughGeometryInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle);
}
// Autogenerated method: OVRPlugin.UpdateInsightPassthroughGeometryTransform
bool GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform(uint64_t geometryInstanceHandle, ::UnityEngine::Matrix4x4 transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle, transform);
}
// Autogenerated method: OVRPlugin.SetInsightPassthroughStyle
bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2 style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, style);
}
// Autogenerated method: OVRPlugin.SetInsightPassthroughStyle
bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, style);
}
// Autogenerated method: OVRPlugin.CreatePassthroughColorLut
bool GlobalNamespace::OVRPlugin::CreatePassthroughColorLut(::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels channels, uint resolution, ::GlobalNamespace::OVRPlugin::PassthroughColorLutData data, ByRef<uint64_t> colorLut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreatePassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreatePassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(resolution), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels, resolution, data, byref(colorLut));
}
// Autogenerated method: OVRPlugin.DestroyPassthroughColorLut
bool GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut(uint64_t colorLut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyPassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorLut)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorLut);
}
// Autogenerated method: OVRPlugin.UpdatePassthroughColorLut
bool GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut(uint64_t colorLut, ::GlobalNamespace::OVRPlugin::PassthroughColorLutData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdatePassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorLut), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorLut, data);
}
// Autogenerated method: OVRPlugin.SetInsightPassthroughKeyboardHandsIntensity
bool GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughKeyboardHandsIntensity intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(intensity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, intensity);
}
// Autogenerated method: OVRPlugin.GetPassthroughCapabilityFlags
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetPassthroughCapabilities
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetPassthroughCapabilities(ByRef<::GlobalNamespace::OVRPlugin::PassthroughCapabilities> outCapabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPassthroughCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPassthroughCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outCapabilities)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(outCapabilities));
}
// Autogenerated method: OVRPlugin.GetBoundaryDimensions
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetBoundaryDimensions(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryVisible
bool GlobalNamespace::OVRPlugin::GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetBoundaryVisible
bool GlobalNamespace::OVRPlugin::SetBoundaryVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.GetSystemHeadsetType
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::GetSystemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSystemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemHeadset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetActiveController
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetConnectedControllers
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ToBool
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::ToBool(bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ToBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ToBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: OVRPlugin.GetTrackingOriginType
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::GetTrackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TrackingOrigin, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetTrackingOriginType
bool GlobalNamespace::OVRPlugin::SetTrackingOriginType(::GlobalNamespace::OVRPlugin::TrackingOrigin originType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originType);
}
// Autogenerated method: OVRPlugin.GetTrackingCalibratedOrigin
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetTrackingCalibratedOrigin
bool GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.RecenterTrackingOrigin
bool GlobalNamespace::OVRPlugin::RecenterTrackingOrigin(::GlobalNamespace::OVRPlugin::RecenterFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterTrackingOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "RecenterTrackingOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: OVRPlugin.get_foveatedRenderingSupported
bool GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_foveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_eyeTrackedFoveatedRenderingSupported
bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeTrackedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_eyeTrackedFoveatedRenderingEnabled
bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeTrackedFoveatedRenderingEnabled
void GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeTrackedFoveatedRenderingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_foveatedRenderingLevel
::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_foveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_foveatedRenderingLevel
void GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel(::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_foveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_fixedFoveatedRenderingLevel
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_useDynamicFoveatedRendering
bool GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_useDynamicFoveatedRendering
void GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_useDynamicFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_useDynamicFixedFoveatedRendering
bool GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_useDynamicFixedFoveatedRendering
void GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_tiledMultiResSupported
bool GlobalNamespace::OVRPlugin::get_tiledMultiResSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_tiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_tiledMultiResLevel
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::get_tiledMultiResLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TiledMultiResLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_tiledMultiResLevel
void GlobalNamespace::OVRPlugin::set_tiledMultiResLevel(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_gpuUtilSupported
bool GlobalNamespace::OVRPlugin::get_gpuUtilSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuUtilSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuUtilSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_gpuUtilLevel
float GlobalNamespace::OVRPlugin::get_gpuUtilLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuUtilLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuUtilLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemDisplayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemDisplayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemDisplayFrequency
float GlobalNamespace::OVRPlugin::get_systemDisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_systemDisplayFrequency
void GlobalNamespace::OVRPlugin::set_systemDisplayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_systemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_systemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_eyeFovPremultipliedAlphaModeEnabled
bool GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeFovPremultipliedAlphaModeEnabled
void GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.GetNodeFrustum2
bool GlobalNamespace::OVRPlugin::GetNodeFrustum2(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Frustumf2> frustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeFrustum2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeFrustum2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Frustumf2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(frustum));
}
// Autogenerated method: OVRPlugin.get_AsymmetricFovEnabled
bool GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_AsymmetricFovEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_EyeTextureArrayEnabled
bool GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_EyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_localDimmingSupported
bool GlobalNamespace::OVRPlugin::get_localDimmingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_localDimmingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_localDimmingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_localDimming
bool GlobalNamespace::OVRPlugin::get_localDimming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_localDimming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_localDimming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_localDimming
void GlobalNamespace::OVRPlugin::set_localDimming(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_localDimming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_localDimming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.GetDominantHand
::GlobalNamespace::OVRPlugin::Handedness GlobalNamespace::OVRPlugin::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SendEvent
bool GlobalNamespace::OVRPlugin::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: OVRPlugin.SetHeadPoseModifier
bool GlobalNamespace::OVRPlugin::SetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeRotation), ::il2cpp_utils::ExtractType(relativeTranslation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin.GetHeadPoseModifier
bool GlobalNamespace::OVRPlugin::GetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Quatf&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Vector3f&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin.IsPerfMetricsSupported
bool GlobalNamespace::OVRPlugin::IsPerfMetricsSupported(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsPerfMetricsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsPerfMetricsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetPerfMetricsFloat
::System::Nullable_1<float> GlobalNamespace::OVRPlugin::GetPerfMetricsFloat(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPerfMetricsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPerfMetricsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetPerfMetricsInt
::System::Nullable_1<int> GlobalNamespace::OVRPlugin::GetPerfMetricsInt(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPerfMetricsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPerfMetricsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetTimeInSeconds
double GlobalNamespace::OVRPlugin::GetTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTimeInSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTimeInSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetColorScaleAndOffset
bool GlobalNamespace::OVRPlugin::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(applyToAllLayers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRPlugin.AddCustomMetadata
bool GlobalNamespace::OVRPlugin::AddCustomMetadata(::StringW name, ::StringW param) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AddCustomMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AddCustomMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin.SetDeveloperMode
bool GlobalNamespace::OVRPlugin::SetDeveloperMode(::GlobalNamespace::OVRPlugin::Bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDeveloperMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, active);
}
// Autogenerated method: OVRPlugin.GetAdaptiveGPUPerformanceScale
float GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAdaptiveGPUPerformanceScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetHandTrackingEnabled
bool GlobalNamespace::OVRPlugin::GetHandTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetHandState
bool GlobalNamespace::OVRPlugin::GetHandState(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Hand hand, ByRef<::GlobalNamespace::OVRPlugin::HandState> handState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(handState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, hand, byref(handState));
}
// Autogenerated method: OVRPlugin.IsValidBone
bool GlobalNamespace::OVRPlugin::IsValidBone(::GlobalNamespace::OVRPlugin::BoneId bone, ::GlobalNamespace::OVRPlugin::SkeletonType skeletonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsValidBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsValidBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(skeletonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bone, skeletonType);
}
// Autogenerated method: OVRPlugin.GetSkeleton
bool GlobalNamespace::OVRPlugin::GetSkeleton(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Skeleton&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin.GetSkeleton2
bool GlobalNamespace::OVRPlugin::GetSkeleton2(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton2> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSkeleton2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSkeleton2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractType(skeleton)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin.get_bodyTrackingSupported
bool GlobalNamespace::OVRPlugin::get_bodyTrackingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_bodyTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_bodyTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_bodyTrackingEnabled
bool GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_bodyTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetBodyState
bool GlobalNamespace::OVRPlugin::GetBodyState(::GlobalNamespace::OVRPlugin::Step stepId, ByRef<::GlobalNamespace::OVRPlugin::BodyState> bodyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBodyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBodyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(bodyState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, byref(bodyState));
}
// Autogenerated method: OVRPlugin.GetMesh
bool GlobalNamespace::OVRPlugin::GetMesh(::GlobalNamespace::OVRPlugin::MeshType meshType, ByRef<::GlobalNamespace::OVRPlugin::Mesh*> mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Mesh*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshType, byref(mesh));
}
// Autogenerated method: OVRPlugin.StartKeyboardTracking
bool GlobalNamespace::OVRPlugin::StartKeyboardTracking(uint64_t trackedKeyboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StartKeyboardTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StartKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackedKeyboardId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackedKeyboardId);
}
// Autogenerated method: OVRPlugin.StopKeyboardTracking
bool GlobalNamespace::OVRPlugin::StopKeyboardTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StopKeyboardTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StopKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetKeyboardState
bool GlobalNamespace::OVRPlugin::GetKeyboardState(::GlobalNamespace::OVRPlugin::Step stepId, ByRef<::GlobalNamespace::OVRPlugin::KeyboardState> keyboardState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetKeyboardState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetKeyboardState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::KeyboardState&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, byref(keyboardState));
}
// Autogenerated method: OVRPlugin.GetSystemKeyboardDescription
bool GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags keyboardQueryFlags, ByRef<::GlobalNamespace::OVRPlugin::KeyboardDescription> keyboardDescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSystemKeyboardDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardQueryFlags), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::KeyboardDescription&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyboardQueryFlags, byref(keyboardDescription));
}
// Autogenerated method: OVRPlugin.CreateVirtualKeyboard
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboard(::GlobalNamespace::OVRPlugin::VirtualKeyboardCreateInfo createInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateVirtualKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createInfo);
}
// Autogenerated method: OVRPlugin.DestroyVirtualKeyboard
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SendVirtualKeyboardInput
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputInfo inputInfo, ByRef<::GlobalNamespace::OVRPlugin::Posef> interactorRootPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SendVirtualKeyboardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputInfo), ::il2cpp_utils::ExtractType(interactorRootPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputInfo, byref(interactorRootPose));
}
// Autogenerated method: OVRPlugin.ChangeVirtualKeyboardTextContext
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext(::StringW textContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ChangeVirtualKeyboardTextContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textContext);
}
// Autogenerated method: OVRPlugin.CreateVirtualKeyboardSpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace(::GlobalNamespace::OVRPlugin::VirtualKeyboardSpaceCreateInfo createInfo, ByRef<uint64_t> keyboardSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createInfo, byref(keyboardSpace));
}
// Autogenerated method: OVRPlugin.SuggestVirtualKeyboardLocation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation(::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationInfo locationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locationInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locationInfo);
}
// Autogenerated method: OVRPlugin.GetVirtualKeyboardScale
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale(ByRef<float> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetVirtualKeyboardScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(scale));
}
// Autogenerated method: OVRPlugin.GetVirtualKeyboardModelAnimationStates
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStates> animationStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStates&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(animationStates));
}
// Autogenerated method: OVRPlugin.GetVirtualKeyboardDirtyTextures
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureIds> textureIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureIds&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(textureIds));
}
// Autogenerated method: OVRPlugin.GetVirtualKeyboardTextureData
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData(uint64_t textureId, ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureData> textureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(textureData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textureId, byref(textureData));
}
// Autogenerated method: OVRPlugin.SetVirtualKeyboardModelVisibility
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility> visibility) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visibility)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(visibility));
}
// Autogenerated method: OVRPlugin.get_faceTrackingEnabled
bool GlobalNamespace::OVRPlugin::get_faceTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_faceTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_faceTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_faceTrackingSupported
bool GlobalNamespace::OVRPlugin::get_faceTrackingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_faceTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_faceTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetFaceStateInternal
bool GlobalNamespace::OVRPlugin::GetFaceStateInternal(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::FaceState> faceState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetFaceStateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetFaceStateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(faceState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(faceState));
}
// Autogenerated method: OVRPlugin.GetFaceState
bool GlobalNamespace::OVRPlugin::GetFaceState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::FaceState> faceState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetFaceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetFaceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(faceState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(faceState));
}
// Autogenerated method: OVRPlugin.get_eyeTrackingEnabled
bool GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_eyeTrackingSupported
bool GlobalNamespace::OVRPlugin::get_eyeTrackingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetEyeGazesState
bool GlobalNamespace::OVRPlugin::GetEyeGazesState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::EyeGazesState> eyeGazesState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeGazesState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeGazesState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(eyeGazesState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(eyeGazesState));
}
// Autogenerated method: OVRPlugin.StartEyeTracking
bool GlobalNamespace::OVRPlugin::StartEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StartEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StartEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.StopEyeTracking
bool GlobalNamespace::OVRPlugin::StopEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StopEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StopEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.StartFaceTracking
bool GlobalNamespace::OVRPlugin::StartFaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StartFaceTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StartFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.StopFaceTracking
bool GlobalNamespace::OVRPlugin::StopFaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StopFaceTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StopFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.StartBodyTracking
bool GlobalNamespace::OVRPlugin::StartBodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StartBodyTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StartBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.StopBodyTracking
bool GlobalNamespace::OVRPlugin::StopBodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::StopBodyTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "StopBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetLocalTrackingSpaceRecenterCount
int GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetSystemHmd3DofModeEnabled
bool GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetClientColorDesc
bool GlobalNamespace::OVRPlugin::SetClientColorDesc(::GlobalNamespace::OVRPlugin::ColorSpace colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetClientColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetClientColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: OVRPlugin.GetHmdColorDesc
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::GetHmdColorDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHmdColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHmdColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ColorSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.PollEvent
bool GlobalNamespace::OVRPlugin::PollEvent(ByRef<::GlobalNamespace::OVRPlugin::EventDataBuffer> eventDataBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PollEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "PollEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDataBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventDataBuffer));
}
// Autogenerated method: OVRPlugin.GetNativeOpenXRInstance
uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNativeOpenXRInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetNativeOpenXRSession
uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNativeOpenXRSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNativeOpenXRSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetKeyboardOverlayUV
bool GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV(::GlobalNamespace::OVRPlugin::Vector2f uv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetKeyboardOverlayUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uv)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uv);
}
// Autogenerated method: OVRPlugin.CreateSpatialAnchor
bool GlobalNamespace::OVRPlugin::CreateSpatialAnchor(::GlobalNamespace::OVRPlugin::SpatialAnchorCreateInfo createInfo, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateSpatialAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateSpatialAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createInfo, byref(requestId));
}
// Autogenerated method: OVRPlugin.SetSpaceComponentStatus
bool GlobalNamespace::OVRPlugin::SetSpaceComponentStatus(uint64_t space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, bool enable, double timeout, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetSpaceComponentStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetSpaceComponentStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, componentType, enable, timeout, byref(requestId));
}
// Autogenerated method: OVRPlugin.GetSpaceComponentStatus
bool GlobalNamespace::OVRPlugin::GetSpaceComponentStatus(uint64_t space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ByRef<bool> enabled, ByRef<bool> changePending) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceComponentStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceComponentStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, componentType, byref(enabled), byref(changePending));
}
// Autogenerated method: OVRPlugin.GetSpaceComponentStatusInternal
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal(uint64_t space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ByRef<bool> enabled, ByRef<bool> changePending) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceComponentStatusInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, componentType, byref(enabled), byref(changePending));
}
// Autogenerated method: OVRPlugin.EnumerateSpaceSupportedComponents
bool GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents(uint64_t space, ByRef<uint> numSupportedComponents, ::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> supportedComponents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(supportedComponents)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(numSupportedComponents), supportedComponents);
}
// Autogenerated method: OVRPlugin.SaveSpace
bool GlobalNamespace::OVRPlugin::SaveSpace(uint64_t space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode mode, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SaveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SaveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, location, mode, byref(requestId));
}
// Autogenerated method: OVRPlugin.EraseSpace
bool GlobalNamespace::OVRPlugin::EraseSpace(uint64_t space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EraseSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EraseSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, location, byref(requestId));
}
// Autogenerated method: OVRPlugin.GetSpaceUuid
bool GlobalNamespace::OVRPlugin::GetSpaceUuid(uint64_t space, ByRef<::System::Guid> uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(uuid));
}
// Autogenerated method: OVRPlugin.QuerySpaces
bool GlobalNamespace::OVRPlugin::QuerySpaces(::GlobalNamespace::OVRPlugin::SpaceQueryInfo queryInfo, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::QuerySpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "QuerySpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queryInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, queryInfo, byref(requestId));
}
// Autogenerated method: OVRPlugin.RetrieveSpaceQueryResults
bool GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t requestId, ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::OVRPlugin::SpaceQueryResult>> results, ::Unity::Collections::Allocator allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::GlobalNamespace::OVRPlugin::SpaceQueryResult>&>(), ::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, byref(results), allocator);
}
// Autogenerated method: OVRPlugin.RetrieveSpaceQueryResults
bool GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t requestId, ByRef<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceQueryResult>> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceQueryResult>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, byref(results));
}
// Autogenerated method: OVRPlugin.SaveSpaceList
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::SaveSpaceList(::Unity::Collections::NativeArray_1<uint64_t> spaces, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SaveSpaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SaveSpaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaces), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaces, location, byref(requestId));
}
// Autogenerated method: OVRPlugin.GetSpaceUserId
bool GlobalNamespace::OVRPlugin::GetSpaceUserId(uint64_t spaceUserHandle, ByRef<uint64_t> spaceUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceUserHandle), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaceUserHandle, byref(spaceUserId));
}
// Autogenerated method: OVRPlugin.CreateSpaceUser
bool GlobalNamespace::OVRPlugin::CreateSpaceUser(uint64_t spaceUserId, ByRef<uint64_t> spaceUserHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateSpaceUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateSpaceUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceUserId), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaceUserId, byref(spaceUserHandle));
}
// Autogenerated method: OVRPlugin.DestroySpaceUser
bool GlobalNamespace::OVRPlugin::DestroySpaceUser(uint64_t spaceUserHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroySpaceUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroySpaceUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceUserHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaceUserHandle);
}
// Autogenerated method: OVRPlugin.ShareSpaces
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::ShareSpaces(::Unity::Collections::NativeArray_1<uint64_t> spaces, ::Unity::Collections::NativeArray_1<uint64_t> userHandles, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShareSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShareSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaces), ::il2cpp_utils::ExtractType(userHandles), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaces, userHandles, byref(requestId));
}
// Autogenerated method: OVRPlugin.TryLocateSpace
bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t space, ::GlobalNamespace::OVRPlugin::TrackingOrigin baseOrigin, ByRef<::GlobalNamespace::OVRPlugin::Posef> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TryLocateSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TryLocateSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(baseOrigin), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Posef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, baseOrigin, byref(pose));
}
// Autogenerated method: OVRPlugin.LocateSpace
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::LocateSpace(uint64_t space, ::GlobalNamespace::OVRPlugin::TrackingOrigin baseOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LocateSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "LocateSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(baseOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, baseOrigin);
}
// Autogenerated method: OVRPlugin.TryLocateSpace
bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t space, ::GlobalNamespace::OVRPlugin::TrackingOrigin baseOrigin, ByRef<::GlobalNamespace::OVRPlugin::Posef> pose, ByRef<::GlobalNamespace::OVRPlugin::SpaceLocationFlags> locationFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TryLocateSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TryLocateSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(baseOrigin), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Posef&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::SpaceLocationFlags&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, baseOrigin, byref(pose), byref(locationFlags));
}
// Autogenerated method: OVRPlugin.DestroySpace
bool GlobalNamespace::OVRPlugin::DestroySpace(uint64_t space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroySpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroySpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space);
}
// Autogenerated method: OVRPlugin.GetSpaceContainer
bool GlobalNamespace::OVRPlugin::GetSpaceContainer(uint64_t space, ByRef<::ArrayW<::System::Guid>> containerUuids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::System::Guid>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(containerUuids));
}
// Autogenerated method: OVRPlugin.GetSpaceBoundingBox2D
bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D(uint64_t space, ByRef<::GlobalNamespace::OVRPlugin::Rectf> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Rectf&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(rect));
}
// Autogenerated method: OVRPlugin.GetSpaceBoundingBox3D
bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D(uint64_t space, ByRef<::GlobalNamespace::OVRPlugin::Boundsf> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Boundsf&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(bounds));
}
// Autogenerated method: OVRPlugin.GetSpaceSemanticLabels
bool GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels(uint64_t space, ByRef<::StringW> labels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceSemanticLabels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(labels));
}
// Autogenerated method: OVRPlugin.GetSpaceRoomLayout
bool GlobalNamespace::OVRPlugin::GetSpaceRoomLayout(uint64_t space, ByRef<::GlobalNamespace::OVRPlugin::RoomLayout> roomLayout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceRoomLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceRoomLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::RoomLayout&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(roomLayout));
}
// Autogenerated method: OVRPlugin.GetSpaceBoundary2DCount
bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount(uint64_t space, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundary2DCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(count));
}
// Autogenerated method: OVRPlugin.GetSpaceBoundary2D
bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundary2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(boundary)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, boundary);
}
// Autogenerated method: OVRPlugin.GetSpaceBoundary2D
bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundary, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundary2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(boundary), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, boundary, byref(count));
}
// Autogenerated method: OVRPlugin.GetSpaceBoundary2D
::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ::Unity::Collections::Allocator allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundary2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, allocator);
}
// Autogenerated method: OVRPlugin.GetSpaceBoundary2D
bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t space, ByRef<::ArrayW<::UnityEngine::Vector2>> boundary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceBoundary2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::Vector2>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(boundary));
}
// Autogenerated method: OVRPlugin.RequestSceneCapture
bool GlobalNamespace::OVRPlugin::RequestSceneCapture(::StringW requestString, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestString), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestString, byref(requestId));
}
// Autogenerated method: OVRPlugin.GetSpaceTriangleMeshCounts
bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts(uint64_t space, ByRef<int> vertexCount, ByRef<int> triangleCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceTriangleMeshCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(vertexCount), byref(triangleCount));
}
// Autogenerated method: OVRPlugin.GetSpaceTriangleMesh
bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh(uint64_t space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> vertices, ::Unity::Collections::NativeArray_1<int> triangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSpaceTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, vertices, triangles);
}
// Autogenerated method: OVRPlugin.GetLayerRecommendedResolution
bool GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution(int layerId, ByRef<::GlobalNamespace::OVRPlugin::Sizei> recommendedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerRecommendedResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Sizei&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, byref(recommendedSize));
}
// Autogenerated method: OVRPlugin.GetEyeLayerRecommendedResolution
bool GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::OVRPlugin::Sizei> recommendedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Sizei&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(recommendedSize));
}
// Autogenerated method: OVRPlugin.GetRenderModelPaths
::ArrayW<::StringW> GlobalNamespace::OVRPlugin::GetRenderModelPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetRenderModelPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetRenderModelPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetRenderModelProperties
bool GlobalNamespace::OVRPlugin::GetRenderModelProperties(::StringW modelPath, ByRef<::GlobalNamespace::OVRPlugin::RenderModelProperties> modelProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetRenderModelProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetRenderModelProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(modelProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, modelPath, byref(modelProperties));
}
// Autogenerated method: OVRPlugin.LoadRenderModel
::ArrayW<uint8_t> GlobalNamespace::OVRPlugin::LoadRenderModel(uint64_t modelKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LoadRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "LoadRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modelKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, modelKey);
}
// Autogenerated method: OVRPlugin.OnEditorShutdown
void GlobalNamespace::OVRPlugin::OnEditorShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OnEditorShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "OnEditorShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetPassthroughPreferences
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetPassthroughPreferences(ByRef<::GlobalNamespace::OVRPlugin::PassthroughPreferences> preferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPassthroughPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPassthroughPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::PassthroughPreferences&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(preferences));
}
// Autogenerated method: OVRPlugin.SetEyeBufferSharpenType
bool GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType(::GlobalNamespace::OVRPlugin::LayerSharpenType sharpenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetEyeBufferSharpenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sharpenType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sharpenType);
}
// Autogenerated method: OVRPlugin..cctor
void GlobalNamespace::OVRPlugin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/GUID
#include "GlobalNamespace/OVRPlugin_GUID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 a
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::GUID::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 b
[[deprecated("Use field access instead!")]] int16_t& GlobalNamespace::OVRPlugin::GUID::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 c
[[deprecated("Use field access instead!")]] int16_t& GlobalNamespace::OVRPlugin::GUID::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d0
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d1
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d2
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d3
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d4
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d5
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d6
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d7
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Bool False
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::Bool::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/Bool", "False"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Bool False
void GlobalNamespace::OVRPlugin::Bool::_set_False(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Bool", "False", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Bool True
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::Bool::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/Bool", "True"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Bool True
void GlobalNamespace::OVRPlugin::Bool::_set_True(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Bool", "True", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Bool::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success
void GlobalNamespace::OVRPlugin::Result::_set_Success(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success_EventUnavailable
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success_EventUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success_EventUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success_EventUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success_EventUnavailable
void GlobalNamespace::OVRPlugin::Result::_set_Success_EventUnavailable(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success_EventUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success_EventUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success_Pending
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success_Pending"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success_Pending
void GlobalNamespace::OVRPlugin::Result::_set_Success_Pending(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success_Pending", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure
void GlobalNamespace::OVRPlugin::Result::_set_Failure(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InvalidParameter
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InvalidParameter
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidParameter(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_NotInitialized
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_NotInitialized
void GlobalNamespace::OVRPlugin::Result::_set_Failure_NotInitialized(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InvalidOperation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InvalidOperation
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidOperation(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_Unsupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_Unsupported
void GlobalNamespace::OVRPlugin::Result::_set_Failure_Unsupported(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_NotYetImplemented
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_NotYetImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_NotYetImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_NotYetImplemented"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_NotYetImplemented
void GlobalNamespace::OVRPlugin::Result::_set_Failure_NotYetImplemented(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_NotYetImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_NotYetImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_OperationFailed
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_OperationFailed
void GlobalNamespace::OVRPlugin::Result::_set_Failure_OperationFailed(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InsufficientSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InsufficientSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InsufficientSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InsufficientSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InsufficientSize
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InsufficientSize(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InsufficientSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InsufficientSize", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_DataIsInvalid
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_DataIsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_DataIsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_DataIsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_DataIsInvalid
void GlobalNamespace::OVRPlugin::Result::_set_Failure_DataIsInvalid(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_DataIsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_DataIsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_DeprecatedOperation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_DeprecatedOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_DeprecatedOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_DeprecatedOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_DeprecatedOperation
void GlobalNamespace::OVRPlugin::Result::_set_Failure_DeprecatedOperation(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_DeprecatedOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_DeprecatedOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_ErrorLimitReached
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_ErrorLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_ErrorLimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_ErrorLimitReached"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_ErrorLimitReached
void GlobalNamespace::OVRPlugin::Result::_set_Failure_ErrorLimitReached(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_ErrorLimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_ErrorLimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_ErrorInitializationFailed
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_ErrorInitializationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_ErrorInitializationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_ErrorInitializationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_ErrorInitializationFailed
void GlobalNamespace::OVRPlugin::Result::_set_Failure_ErrorInitializationFailed(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_ErrorInitializationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_ErrorInitializationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_SpaceCloudStorageDisabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceCloudStorageDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceCloudStorageDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_SpaceCloudStorageDisabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_SpaceCloudStorageDisabled
void GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceCloudStorageDisabled(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceCloudStorageDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_SpaceCloudStorageDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_SpaceMappingInsufficient
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceMappingInsufficient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceMappingInsufficient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_SpaceMappingInsufficient"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_SpaceMappingInsufficient
void GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceMappingInsufficient(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceMappingInsufficient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_SpaceMappingInsufficient", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_SpaceLocalizationFailed
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceLocalizationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceLocalizationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_SpaceLocalizationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_SpaceLocalizationFailed
void GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceLocalizationFailed(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceLocalizationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_SpaceLocalizationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_SpaceNetworkTimeout
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceNetworkTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceNetworkTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_SpaceNetworkTimeout"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_SpaceNetworkTimeout
void GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceNetworkTimeout(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceNetworkTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_SpaceNetworkTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_SpaceNetworkRequestFailed
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceNetworkRequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_SpaceNetworkRequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_SpaceNetworkRequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_SpaceNetworkRequestFailed
void GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceNetworkRequestFailed(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_SpaceNetworkRequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_SpaceNetworkRequestFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/LogLevel
#include "GlobalNamespace/OVRPlugin_LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LogLevel Debug
::GlobalNamespace::OVRPlugin::LogLevel GlobalNamespace::OVRPlugin::LogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LogLevel>("", "OVRPlugin/LogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LogLevel Debug
void GlobalNamespace::OVRPlugin::LogLevel::_set_Debug(::GlobalNamespace::OVRPlugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LogLevel Info
::GlobalNamespace::OVRPlugin::LogLevel GlobalNamespace::OVRPlugin::LogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LogLevel>("", "OVRPlugin/LogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LogLevel Info
void GlobalNamespace::OVRPlugin::LogLevel::_set_Info(::GlobalNamespace::OVRPlugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LogLevel Error
::GlobalNamespace::OVRPlugin::LogLevel GlobalNamespace::OVRPlugin::LogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LogLevel>("", "OVRPlugin/LogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LogLevel Error
void GlobalNamespace::OVRPlugin::LogLevel::_set_Error(::GlobalNamespace::OVRPlugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LogLevel", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::LogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/LogCallback2DelegateType
#include "GlobalNamespace/OVRPlugin_LogCallback2DelegateType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: OVRPlugin/LogLevel
#include "GlobalNamespace/OVRPlugin_LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPlugin/LogCallback2DelegateType.Invoke
void GlobalNamespace::OVRPlugin::LogCallback2DelegateType::Invoke(::GlobalNamespace::OVRPlugin::LogLevel logLevel, ::System::IntPtr message, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogCallback2DelegateType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::LogCallback2DelegateType*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logLevel, message, size);
}
// Autogenerated method: OVRPlugin/LogCallback2DelegateType.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRPlugin::LogCallback2DelegateType::BeginInvoke(::GlobalNamespace::OVRPlugin::LogLevel logLevel, ::System::IntPtr message, int size, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogCallback2DelegateType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::LogCallback2DelegateType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, logLevel, message, size, callback, object);
}
// Autogenerated method: OVRPlugin/LogCallback2DelegateType.EndInvoke
void GlobalNamespace::OVRPlugin::LogCallback2DelegateType::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LogCallback2DelegateType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::LogCallback2DelegateType*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraStatus
#include "GlobalNamespace/OVRPlugin_CameraStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_None
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_None
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_None(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Connected
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Connected"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Connected
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Connected(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Connected", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrating
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrating"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrating
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrating(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrating", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_CalibrationFailed
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_CalibrationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_CalibrationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_CalibrationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_CalibrationFailed
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_CalibrationFailed(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_CalibrationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_CalibrationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrated
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrated
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrated(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_ThirdPerson
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_ThirdPerson
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_ThirdPerson(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_ThirdPerson", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_EnumSize
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_EnumSize
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_EnumSize(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::CameraStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_PreDefined
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_PreDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_PreDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_PreDefined"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_PreDefined
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_PreDefined(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_PreDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_PreDefined", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Custom
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Custom
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Custom(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Custom", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Count
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Count
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Count(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Count", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_EnumSize
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_EnumSize
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_EnumSize(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::CameraAnchorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/XrApi
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi Unknown
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi Unknown
void GlobalNamespace::OVRPlugin::XrApi::_set_Unknown(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi CAPI
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi CAPI
void GlobalNamespace::OVRPlugin::XrApi::_set_CAPI(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi VRAPI
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi VRAPI
void GlobalNamespace::OVRPlugin::XrApi::_set_VRAPI(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi OpenXR
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi OpenXR
void GlobalNamespace::OVRPlugin::XrApi::_set_OpenXR(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "OpenXR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi EnumSize
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi EnumSize
void GlobalNamespace::OVRPlugin::XrApi::_set_EnumSize(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::XrApi::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye None
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye None
void GlobalNamespace::OVRPlugin::Eye::_set_None(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Left
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Left
void GlobalNamespace::OVRPlugin::Eye::_set_Left(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Right
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Right
void GlobalNamespace::OVRPlugin::Eye::_set_Right(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Count
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Count
void GlobalNamespace::OVRPlugin::Eye::_set_Count(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Eye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
