// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass19_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0.<DoesParameterSynchronizeTypeExist>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::$DoesParameterSynchronizeTypeExist$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::<DoesParameterSynchronizeTypeExist>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoesParameterSynchronizeTypeExist>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass22_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0.<GetLayerSynchronizeType>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::$GetLayerSynchronizeType$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::<GetLayerSynchronizeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLayerSynchronizeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass23_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0.<GetParameterSynchronizeType>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::$GetParameterSynchronizeType$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::<GetParameterSynchronizeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParameterSynchronizeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass24_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0.<SetLayerSynchronized>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::$SetLayerSynchronized$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::<SetLayerSynchronized>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetLayerSynchronized>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass25_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0.<SetParameterSynchronized>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::$SetParameterSynchronized$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::<SetParameterSynchronized>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetParameterSynchronized>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonRigidbody2DView
#include "Photon/Pun/PhotonRigidbody2DView.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D m_Body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& Photon::Pun::PhotonRigidbody2DView::dyn_m_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NetworkRotation
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeAngularVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.Awake
void Photon::Pun::PhotonRigidbody2DView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.FixedUpdate
void Photon::Pun::PhotonRigidbody2DView::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.OnPhotonSerializeView
void Photon::Pun::PhotonRigidbody2DView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonRigidbody2DView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonRigidbodyView
#include "Photon/Pun/PhotonRigidbodyView.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_Body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Photon::Pun::PhotonRigidbodyView::dyn_m_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeAngularVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.Awake
void Photon::Pun::PhotonRigidbodyView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.FixedUpdate
void Photon::Pun::PhotonRigidbodyView::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.OnPhotonSerializeView
void Photon::Pun::PhotonRigidbodyView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonRigidbodyView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformView
#include "Photon/Pun/PhotonTransformView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_StoredPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_StoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_StoredPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StoredPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonTransformView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizePosition
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeRotation
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeScale
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_UseLocal
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_UseLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_UseLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_firstTake
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_firstTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_firstTake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Awake
void Photon::Pun::PhotonTransformView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Reset
void Photon::Pun::PhotonTransformView::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.OnEnable
void Photon::Pun::PhotonTransformView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Update
void Photon::Pun::PhotonTransformView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.IsValid
bool Photon::Pun::PhotonTransformView::IsValid(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, v);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.IsValid
bool Photon::Pun::PhotonTransformView::IsValid(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, q);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.OnPhotonSerializeView
void Photon::Pun::PhotonTransformView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonTransformView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.GTAddition_DoTeleport
void Photon::Pun::PhotonTransformView::GTAddition_DoTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::GTAddition_DoTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GTAddition_DoTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewClassic
#include "Photon/Pun/PhotonTransformViewClassic.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionControl
#include "Photon/Pun/PhotonTransformViewPositionControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationControl
#include "Photon/Pun/PhotonTransformViewRotationControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleControl
#include "Photon/Pun/PhotonTransformViewScaleControl.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel m_PositionModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewRotationModel m_RotationModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewScaleModel m_ScaleModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewPositionControl m_PositionControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewRotationControl m_RotationControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewScaleControl m_ScaleControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView m_PhotonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PhotonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PhotonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PhotonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReceivedNetworkUpdate
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewClassic::dyn_m_ReceivedNetworkUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ReceivedNetworkUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReceivedNetworkUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_firstTake
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewClassic::dyn_m_firstTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_firstTake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.Awake
void Photon::Pun::PhotonTransformViewClassic::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.OnEnable
void Photon::Pun::PhotonTransformViewClassic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.Update
void Photon::Pun::PhotonTransformViewClassic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdatePosition
void Photon::Pun::PhotonTransformViewClassic::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdateRotation
void Photon::Pun::PhotonTransformViewClassic::UpdateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdateRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdateScale
void Photon::Pun::PhotonTransformViewClassic::UpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.SetSynchronizedValues
void Photon::Pun::PhotonTransformViewClassic::SetSynchronizedValues(::UnityEngine::Vector3 speed, float turnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::SetSynchronizedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSynchronizedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(turnSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed, turnSpeed);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewClassic::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonTransformViewClassic*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateMoveTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateMoveTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateMoveTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateMoveTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions ExtrapolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExtrapolateSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExtrapolateIncludingRoundTripTime
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateIncludingRoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateIncludingRoundTripTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateIncludingRoundTripTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ExtrapolateNumberOfStoredPositions
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateNumberOfStoredPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateNumberOfStoredPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateNumberOfStoredPositions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions FixedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_FixedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_FixedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "FixedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions FixedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_FixedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_FixedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "FixedSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions EstimatedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_EstimatedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_EstimatedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "EstimatedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions EstimatedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_EstimatedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_EstimatedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "EstimatedSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions SynchronizeValues
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_SynchronizeValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_SynchronizeValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "SynchronizeValues"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions SynchronizeValues
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_SynchronizeValues(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_SynchronizeValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "SynchronizeValues", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions Disabled
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions Disabled
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions SynchronizeValues
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_SynchronizeValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_SynchronizeValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "SynchronizeValues"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions SynchronizeValues
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_SynchronizeValues(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_SynchronizeValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "SynchronizeValues", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions EstimateSpeedAndTurn
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_EstimateSpeedAndTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_EstimateSpeedAndTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "EstimateSpeedAndTurn"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions EstimateSpeedAndTurn
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_EstimateSpeedAndTurn(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_EstimateSpeedAndTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "EstimateSpeedAndTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions FixedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_FixedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_FixedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "FixedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions FixedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_FixedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_FixedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "FixedSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionControl
#include "Photon/Pun/PhotonTransformViewPositionControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewPositionModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel*& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_CurrentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_CurrentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastSerializeTime
[[deprecated("Use field access instead!")]] double& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_LastSerializeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_LastSerializeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastSerializeTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_SynchronizedSpeed
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizedSpeed"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SynchronizedTurnSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedTurnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedTurnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizedTurnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<UnityEngine.Vector3> m_OldNetworkPositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>*& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_OldNetworkPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_OldNetworkPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OldNetworkPositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdatedPositionAfterOnSerialize
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_UpdatedPositionAfterOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_UpdatedPositionAfterOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatedPositionAfterOnSerialize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetOldestStoredNetworkPosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOldestStoredNetworkPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.SetSynchronizedValues
void Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues(::UnityEngine::Vector3 speed, float turnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSynchronizedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(turnSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed, turnSpeed);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.UpdatePosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition(::UnityEngine::Vector3 currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentPosition);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetNetworkPosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetExtrapolatedPositionOffset
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtrapolatedPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPosition, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.SerializeData
void Photon::Pun::PhotonTransformViewPositionControl::SerializeData(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::SerializeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPosition, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.DeserializeData
void Photon::Pun::PhotonTransformViewPositionControl::DeserializeData(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::DeserializeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewRotationModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateRotateTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateRotateTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateRotateTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateRotateTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions RotateTowards
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_RotateTowards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_RotateTowards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "RotateTowards"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions RotateTowards
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_RotateTowards(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_RotateTowards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "RotateTowards", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationControl
#include "Photon/Pun/PhotonTransformViewRotationControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewRotationModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel*& Photon::Pun::PhotonTransformViewRotationControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonTransformViewRotationControl::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.GetNetworkRotation
::UnityEngine::Quaternion Photon::Pun::PhotonTransformViewRotationControl::GetNetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::GetNetworkRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.GetRotation
::UnityEngine::Quaternion Photon::Pun::PhotonTransformViewRotationControl::GetRotation(::UnityEngine::Quaternion currentRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentRotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, currentRotation);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewRotationControl::OnPhotonSerializeView(::UnityEngine::Quaternion currentRotation, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentRotation), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentRotation, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewScaleModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateMoveTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateMoveTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateMoveTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateMoveTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions MoveTowards
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_MoveTowards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_MoveTowards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "MoveTowards"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions MoveTowards
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_MoveTowards(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_MoveTowards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "MoveTowards", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleControl
#include "Photon/Pun/PhotonTransformViewScaleControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewScaleModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel*& Photon::Pun::PhotonTransformViewScaleControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewScaleControl::dyn_m_NetworkScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::dyn_m_NetworkScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.GetNetworkScale
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewScaleControl::GetNetworkScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::GetNetworkScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.GetScale
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewScaleControl::GetScale(::UnityEngine::Vector3 currentScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::GetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentScale);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewScaleControl::OnPhotonSerializeView(::UnityEngine::Vector3 currentScale, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentScale), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentScale, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CullArea
#include "Photon/Pun/UtilityScripts/CullArea.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTree
#include "Photon/Pun/UtilityScripts/CellTree.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_NUMBER_OF_ALLOWED_CELLS
int Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_ALLOWED_CELLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_ALLOWED_CELLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_ALLOWED_CELLS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_NUMBER_OF_ALLOWED_CELLS
void Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_ALLOWED_CELLS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_ALLOWED_CELLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_ALLOWED_CELLS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_NUMBER_OF_SUBDIVISIONS
int Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_SUBDIVISIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_SUBDIVISIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_SUBDIVISIONS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_NUMBER_OF_SUBDIVISIONS
void Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_SUBDIVISIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_SUBDIVISIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_SUBDIVISIONS", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte FIRST_GROUP_ID
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CullArea::dyn_FIRST_GROUP_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_FIRST_GROUP_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FIRST_GROUP_ID"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_FIRST_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_FIRST_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_FIRST_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_FIRST_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_SECOND_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_SECOND_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_SECOND_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_SECOND_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_THIRD_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_THIRD_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_THIRD_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_THIRD_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::UtilityScripts::CullArea::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::UtilityScripts::CullArea::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] Subdivisions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Photon::Pun::UtilityScripts::CullArea::dyn_Subdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Subdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Subdivisions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumberOfSubdivisions
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullArea::dyn_NumberOfSubdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_NumberOfSubdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfSubdivisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CellCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullArea::dyn_$CellCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$CellCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CellCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CellTree <CellTree>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTree*& Photon::Pun::UtilityScripts::CullArea::dyn_$CellTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$CellTree$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CellTree>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.GameObject> <Map>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::CullArea::dyn_$Map$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$Map$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Map>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean YIsUpAxis
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CullArea::dyn_YIsUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_YIsUpAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "YIsUpAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RecreateCellHierarchy
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CullArea::dyn_RecreateCellHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_RecreateCellHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecreateCellHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte idCounter
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CullArea::dyn_idCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_idCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idCounter"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_CellCount
int Photon::Pun::UtilityScripts::CullArea::get_CellCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_CellCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CellCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_CellCount
void Photon::Pun::UtilityScripts::CullArea::set_CellCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_CellCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CellCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_CellTree
::Photon::Pun::UtilityScripts::CellTree* Photon::Pun::UtilityScripts::CullArea::get_CellTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_CellTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CellTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::CellTree*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_CellTree
void Photon::Pun::UtilityScripts::CullArea::set_CellTree(::Photon::Pun::UtilityScripts::CellTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_CellTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CellTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_Map
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>* Photon::Pun::UtilityScripts::CullArea::get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_Map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_Map
void Photon::Pun::UtilityScripts::CullArea::set_Map(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_Map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.Awake
void Photon::Pun::UtilityScripts::CullArea::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.OnDrawGizmos
void Photon::Pun::UtilityScripts::CullArea::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.CreateCellHierarchy
void Photon::Pun::UtilityScripts::CullArea::CreateCellHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::CreateCellHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCellHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.CreateChildCells
void Photon::Pun::UtilityScripts::CullArea::CreateChildCells(::Photon::Pun::UtilityScripts::CellTreeNode* parent, int cellLevelInHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::CreateChildCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(cellLevelInHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, cellLevelInHierarchy);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.DrawCells
void Photon::Pun::UtilityScripts::CullArea::DrawCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::DrawCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.IsCellCountAllowed
bool Photon::Pun::UtilityScripts::CullArea::IsCellCountAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::IsCellCountAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCellCountAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.GetActiveCells
::System::Collections::Generic::List_1<uint8_t>* Photon::Pun::UtilityScripts::CullArea::GetActiveCells(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::GetActiveCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<uint8_t>*, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTree
#include "Photon/Pun/UtilityScripts/CellTree.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CellTreeNode <RootNode>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode*& Photon::Pun::UtilityScripts::CellTree::dyn_$RootNode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::dyn_$RootNode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RootNode>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTree.get_RootNode
::Photon::Pun::UtilityScripts::CellTreeNode* Photon::Pun::UtilityScripts::CellTree::get_RootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::get_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::CellTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTree.set_RootNode
void Photon::Pun::UtilityScripts::CellTree::set_RootNode(::Photon::Pun::UtilityScripts::CellTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::set_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Id
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 TopLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_TopLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TopLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 BottomRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_BottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType NodeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType& Photon::Pun::UtilityScripts::CellTreeNode::dyn_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_NodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NodeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.CellTreeNode Parent
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode*& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parent"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.CellTreeNode> Childs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::CellTreeNode*>*& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Childs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Childs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Childs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::CellTreeNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxDistance
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CellTreeNode::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.AddChild
void Photon::Pun::UtilityScripts::CellTreeNode::AddChild(::Photon::Pun::UtilityScripts::CellTreeNode* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.Draw
void Photon::Pun::UtilityScripts::CellTreeNode::Draw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.GetActiveCells
void Photon::Pun::UtilityScripts::CellTreeNode::GetActiveCells(::System::Collections::Generic::List_1<uint8_t>* activeCells, bool yIsUpAxis, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::GetActiveCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeCells), ::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeCells, yIsUpAxis, position);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.IsPointInsideCell
bool Photon::Pun::UtilityScripts::CellTreeNode::IsPointInsideCell(bool yIsUpAxis, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::IsPointInsideCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointInsideCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, yIsUpAxis, point);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.IsPointNearCell
bool Photon::Pun::UtilityScripts::CellTreeNode::IsPointNearCell(bool yIsUpAxis, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::IsPointNearCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointNearCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, yIsUpAxis, point);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTreeNode/ENodeType
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Root
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Root
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Root(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Node
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Node"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Node
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Node(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Leaf
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Leaf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Leaf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Leaf"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Leaf
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Leaf(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Leaf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Leaf", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ByteComparer
#include "Photon/Pun/UtilityScripts/ByteComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.ByteComparer.Compare
int Photon::Pun::UtilityScripts::ByteComparer::Compare(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ByteComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ByteComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CullingHandler
#include "Photon/Pun/UtilityScripts/CullingHandler.hpp"
// Including type: Photon.Pun.UtilityScripts.CullArea
#include "Photon/Pun/UtilityScripts/CullArea.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 orderIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullingHandler::dyn_orderIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_orderIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orderIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CullArea cullArea
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CullArea*& Photon::Pun::UtilityScripts::CullingHandler::dyn_cullArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_cullArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cullArea"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CullArea**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte> previousActiveCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& Photon::Pun::UtilityScripts::CullingHandler::dyn_previousActiveCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_previousActiveCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousActiveCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte> activeCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& Photon::Pun::UtilityScripts::CullingHandler::dyn_activeCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_activeCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView pView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::UtilityScripts::CullingHandler::dyn_pView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_pView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CullingHandler::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CullingHandler::dyn_currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeSinceUpdate
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CullingHandler::dyn_timeSinceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_timeSinceUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSinceUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeBetweenUpdatesMin
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CullingHandler::dyn_timeBetweenUpdatesMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_timeBetweenUpdatesMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeBetweenUpdatesMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnEnable
void Photon::Pun::UtilityScripts::CullingHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.Start
void Photon::Pun::UtilityScripts::CullingHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.Update
void Photon::Pun::UtilityScripts::CullingHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnGUI
void Photon::Pun::UtilityScripts::CullingHandler::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.HaveActiveCellsChanged
bool Photon::Pun::UtilityScripts::CullingHandler::HaveActiveCellsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::HaveActiveCellsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HaveActiveCellsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.UpdateInterestGroups
void Photon::Pun::UtilityScripts::CullingHandler::UpdateInterestGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::UpdateInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnPhotonSerializeView
void Photon::Pun::UtilityScripts::CullingHandler::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CullingHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonLagSimulationGui
#include "Photon/Pun/UtilityScripts/PhotonLagSimulationGui.hpp"
// Including type: ExitGames.Client.Photon.PhotonPeer
#include "ExitGames/Client/Photon/PhotonPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect WindowRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Visible
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.PhotonPeer <Peer>k__BackingField
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::PhotonPeer*& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_$Peer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_$Peer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Peer>k__BackingField"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::PhotonPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.get_Peer
::ExitGames::Client::Photon::PhotonPeer* Photon::Pun::UtilityScripts::PhotonLagSimulationGui::get_Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::get_Peer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Peer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::PhotonPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.set_Peer
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::set_Peer(::ExitGames::Client::Photon::PhotonPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::set_Peer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Peer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.Start
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.OnGUI
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.NetSimHasNoPeerWindow
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimHasNoPeerWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimHasNoPeerWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimHasNoPeerWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.NetSimWindow
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonStatsGui
#include "Photon/Pun/UtilityScripts/PhotonStatsGui.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean statsWindowOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsWindowOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsWindowOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsWindowOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean statsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean healthStatsVisible
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_healthStatsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_healthStatsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healthStatsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean trafficStatsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_trafficStatsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_trafficStatsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trafficStatsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean buttonsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_buttonsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_buttonsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect statsRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_WindowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_WindowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean turnOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_turnOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_turnOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.Start
void Photon::Pun::UtilityScripts::PhotonStatsGui::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.Update
void Photon::Pun::UtilityScripts::PhotonStatsGui::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.OnGUI
void Photon::Pun::UtilityScripts::PhotonStatsGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.TrafficStatsWindow
void Photon::Pun::UtilityScripts::PhotonStatsGui::TrafficStatsWindow(int windowID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::TrafficStatsWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrafficStatsWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowID);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo
#include "Photon/Pun/UtilityScripts/PointedAtGameObjectInfo.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*>("Photon.Pun.UtilityScripts", "PointedAtGameObjectInfo", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_set_Instance(::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PointedAtGameObjectInfo", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform focus
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_focus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_focus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focus"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.Start
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.SetFocus
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus(::Photon::Pun::PhotonView* pv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pv);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.RemoveFocus
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus(::Photon::Pun::PhotonView* pv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pv);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.LateUpdate
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.StatesGui
#include "Photon/Pun/UtilityScripts/StatesGui.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.StatesGui Instance
::Photon::Pun::UtilityScripts::StatesGui* Photon::Pun::UtilityScripts::StatesGui::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::StatesGui*>("Photon.Pun.UtilityScripts", "StatesGui", "Instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.StatesGui Instance
void Photon::Pun::UtilityScripts::StatesGui::_set_Instance(::Photon::Pun::UtilityScripts::StatesGui* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "StatesGui", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect GuiOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::StatesGui::dyn_GuiOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_GuiOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GuiOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DontDestroy
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_DontDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_DontDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DontDestroy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ServerTimestamp
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_ServerTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerTimestamp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DetailedConnection
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_DetailedConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_DetailedConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DetailedConnection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Server
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Server"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AppVersion
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_AppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppVersion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UserId
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Room
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RoomProps
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_RoomProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_RoomProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomProps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EventsIn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_EventsIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_EventsIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventsIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LocalPlayer
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_LocalPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PlayerProps
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_PlayerProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_PlayerProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerProps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Others
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Others");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Others"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Buttons
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buttons"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExpectedUsers
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect GuiRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::StatesGui::dyn_GuiRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_GuiRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GuiRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single native_width
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::StatesGui::dyn_native_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_native_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single native_height
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::StatesGui::dyn_native_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_native_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.Awake
void Photon::Pun::UtilityScripts::StatesGui::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.OnDisable
void Photon::Pun::UtilityScripts::StatesGui::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.OnGUI
void Photon::Pun::UtilityScripts::StatesGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.PlayerToString
::StringW Photon::Pun::UtilityScripts::StatesGui::PlayerToString(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::PlayerToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::UtilityScripts::PhotonTeam::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Code
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::PhotonTeam::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeam.ToString
::StringW Photon::Pun::UtilityScripts::PhotonTeam::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonTeamsManager
#include "Photon/Pun/UtilityScripts/PhotonTeamsManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String TeamPlayerProp
::StringW Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_TeamPlayerProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_TeamPlayerProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "TeamPlayerProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String TeamPlayerProp
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_TeamPlayerProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_TeamPlayerProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "TeamPlayerProp", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerJoinedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerJoinedTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerJoinedTeam")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerJoinedTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerJoinedTeam", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerLeftTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerLeftTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerLeftTeam")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerLeftTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerLeftTeam", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
::Photon::Pun::UtilityScripts::PhotonTeamsManager* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PhotonTeamsManager*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_instance(::Photon::Pun::UtilityScripts::PhotonTeamsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.PhotonTeam> teamsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Byte,Photon.Pun.UtilityScripts.PhotonTeam> teamsByCode
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsByCode"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,Photon.Pun.UtilityScripts.PhotonTeam> teamsByName
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsByName"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Byte,System.Collections.Generic.HashSet`1<Photon.Realtime.Player>> playersPerTeam
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_playersPerTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_playersPerTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersPerTeam"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.add_PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "add_PlayerJoinedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.remove_PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "remove_PlayerJoinedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.add_PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "add_PlayerLeftTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.remove_PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "remove_PlayerLeftTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.get_Instance
::Photon::Pun::UtilityScripts::PhotonTeamsManager* Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PhotonTeamsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Awake
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.OnEnable
void Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.OnDisable
void Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Init
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnPreLeavingRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.UpdateTeams
void Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.ClearTeams
void Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamByCode
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode(uint8_t code, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamByCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractIndependentType<::Photon::Pun::UtilityScripts::PhotonTeam*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, byref(team));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamByName
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName(::StringW teamName, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teamName), ::il2cpp_utils::ExtractIndependentType<::Photon::Pun::UtilityScripts::PhotonTeam*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, teamName, byref(team));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetAvailableTeams
::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*> Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailableTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(uint8_t code, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(::StringW teamName, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teamName), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, teamName, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(::Photon::Pun::UtilityScripts::PhotonTeam* team, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(team), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, team, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMatesOfPlayer
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMatesOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, byref(teamMates));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, code);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonTeamExtensions
#include "Photon/Pun/UtilityScripts/PhotonTeamExtensions.hpp"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.GetPhotonTeam
::Photon::Pun::UtilityScripts::PhotonTeam* Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "GetPhotonTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PhotonTeam*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, uint8_t teamCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamCode);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, ::StringW teamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamName);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, uint8_t teamCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamCode);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, ::StringW teamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamName);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.LeaveCurrentTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "LeaveCurrentTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.TryGetTeamMates
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "TryGetTeamMates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, byref(teamMates));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering
#include "Photon/Pun/UtilityScripts/PlayerNumbering.hpp"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged
#include "Photon/Pun/UtilityScripts/PlayerNumbering_PlayerNumberingChanged.hpp"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/<>c
#include "Photon/Pun/UtilityScripts/PlayerNumbering_--c.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PlayerNumbering instance
::Photon::Pun::UtilityScripts::PlayerNumbering* Photon::Pun::UtilityScripts::PlayerNumbering::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering*>("Photon.Pun.UtilityScripts", "PlayerNumbering", "instance"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PlayerNumbering instance
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_instance(::Photon::Pun::UtilityScripts::PlayerNumbering* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.Player[] SortedPlayers
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::UtilityScripts::PlayerNumbering::_get_SortedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_SortedPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Photon::Realtime::Player*>>("Photon.Pun.UtilityScripts", "PlayerNumbering", "SortedPlayers"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.Player[] SortedPlayers
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_SortedPlayers(::ArrayW<::Photon::Realtime::Player*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_SortedPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "SortedPlayers", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged OnPlayerNumberingChanged
::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* Photon::Pun::UtilityScripts::PlayerNumbering::_get_OnPlayerNumberingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_OnPlayerNumberingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*>("Photon.Pun.UtilityScripts", "PlayerNumbering", "OnPlayerNumberingChanged"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_OnPlayerNumberingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "OnPlayerNumberingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.String RoomPlayerIndexedProp
::StringW Photon::Pun::UtilityScripts::PlayerNumbering::_get_RoomPlayerIndexedProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_RoomPlayerIndexedProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PlayerNumbering", "RoomPlayerIndexedProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String RoomPlayerIndexedProp
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_RoomPlayerIndexedProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_RoomPlayerIndexedProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "RoomPlayerIndexedProp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dontDestroyOnLoad
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PlayerNumbering::dyn_dontDestroyOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::dyn_dontDestroyOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dontDestroyOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.add_OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::add_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::add_OnPlayerNumberingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering", "add_OnPlayerNumberingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.remove_OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::remove_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::remove_OnPlayerNumberingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering", "remove_OnPlayerNumberingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.Awake
void Photon::Pun::UtilityScripts::PlayerNumbering::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.RefreshData
void Photon::Pun::UtilityScripts::PlayerNumbering::RefreshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::RefreshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnJoinedRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnLeftRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged
#include "Photon/Pun/UtilityScripts/PlayerNumbering_PlayerNumberingChanged.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.Invoke
void Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.BeginInvoke
::System::IAsyncResult* Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.EndInvoke
void Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/<>c
#include "Photon/Pun/UtilityScripts/PlayerNumbering_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.UtilityScripts.PlayerNumbering/<>c <>9
::Photon::Pun::UtilityScripts::PlayerNumbering::$$c* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering::$$c*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.UtilityScripts.PlayerNumbering/<>c <>9
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9(::Photon::Pun::UtilityScripts::PlayerNumbering::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_0
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_1
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_1
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_1(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_2
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_2
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_2(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_2", value)));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c..cctor
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_0
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_0(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_1
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_1(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_2
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_2(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumberingExtensions
#include "Photon/Pun/UtilityScripts/PlayerNumberingExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumberingExtensions.GetPlayerNumber
int Photon::Pun::UtilityScripts::PlayerNumberingExtensions::GetPlayerNumber(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumberingExtensions::GetPlayerNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumberingExtensions", "GetPlayerNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumberingExtensions.SetPlayerNumber
void Photon::Pun::UtilityScripts::PlayerNumberingExtensions::SetPlayerNumber(::Photon::Realtime::Player* player, int playerNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumberingExtensions::SetPlayerNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumberingExtensions", "SetPlayerNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(playerNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, playerNumber);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunPlayerScores
#include "Photon/Pun/UtilityScripts/PunPlayerScores.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String PlayerScoreProp
::StringW Photon::Pun::UtilityScripts::PunPlayerScores::_get_PlayerScoreProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunPlayerScores::_get_PlayerScoreProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PunPlayerScores", "PlayerScoreProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String PlayerScoreProp
void Photon::Pun::UtilityScripts::PunPlayerScores::_set_PlayerScoreProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunPlayerScores::_set_PlayerScoreProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunPlayerScores", "PlayerScoreProp", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ScoreExtensions
#include "Photon/Pun/UtilityScripts/ScoreExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.SetScore
void Photon::Pun::UtilityScripts::ScoreExtensions::SetScore(::Photon::Realtime::Player* player, int newScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::SetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "SetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(newScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, newScore);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.AddScore
void Photon::Pun::UtilityScripts::ScoreExtensions::AddScore(::Photon::Realtime::Player* player, int scoreToAddToCurrent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(scoreToAddToCurrent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, scoreToAddToCurrent);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.GetScore
int Photon::Pun::UtilityScripts::ScoreExtensions::GetScore(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunTeams
#include "Photon/Pun/UtilityScripts/PunTeams.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* Photon::Pun::UtilityScripts::PunTeams::_get_PlayersPerTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_get_PlayersPerTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>*>("Photon.Pun.UtilityScripts", "PunTeams", "PlayersPerTeam")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
void Photon::Pun::UtilityScripts::PunTeams::_set_PlayersPerTeam(::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_set_PlayersPerTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams", "PlayersPerTeam", value));
}
// Autogenerated static field getter
// Get static field: static public System.String TeamPlayerProp
::StringW Photon::Pun::UtilityScripts::PunTeams::_get_TeamPlayerProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_get_TeamPlayerProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PunTeams", "TeamPlayerProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String TeamPlayerProp
void Photon::Pun::UtilityScripts::PunTeams::_set_TeamPlayerProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_set_TeamPlayerProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams", "TeamPlayerProp", value));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.Start
void Photon::Pun::UtilityScripts::PunTeams::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.UpdateTeams
void Photon::Pun::UtilityScripts::PunTeams::UpdateTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::UpdateTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnDisable
void Photon::Pun::UtilityScripts::PunTeams::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnJoinedRoom
void Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnLeftRoom
void Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunTeams/Team
#include "Photon/Pun/UtilityScripts/PunTeams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team none
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "none"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team none
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_none(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "none", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team red
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "red"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team red
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_red(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "red", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team blue
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_blue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "blue"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team blue
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_blue(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_blue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "blue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::PunTeams::Team::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TeamExtensions
#include "Photon/Pun/UtilityScripts/TeamExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.TeamExtensions.GetTeam
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::TeamExtensions::GetTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TeamExtensions::GetTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TeamExtensions", "GetTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PunTeams::Team, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TeamExtensions.SetTeam
void Photon::Pun::UtilityScripts::TeamExtensions::SetTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PunTeams::Team team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TeamExtensions::SetTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TeamExtensions", "SetTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.SmoothSyncMovement
#include "Photon/Pun/UtilityScripts/SmoothSyncMovement.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single SmoothingDelay
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_SmoothingDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_SmoothingDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmoothingDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 correctPlayerPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "correctPlayerPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion correctPlayerRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "correctPlayerRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.Awake
void Photon::Pun::UtilityScripts::SmoothSyncMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.OnPhotonSerializeView
void Photon::Pun::UtilityScripts::SmoothSyncMovement::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::SmoothSyncMovement*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.Update
void Photon::Pun::UtilityScripts::SmoothSyncMovement::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ConnectAndJoinRandom
#include "Photon/Pun/UtilityScripts/ConnectAndJoinRandom.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoConnect
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_AutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_AutoConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoConnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Version
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte MaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_MaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerTTL
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_playerTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_playerTTL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTTL"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.Start
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.ConnectNow
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnConnectedToMaster
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinedLobby
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnDisconnected
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinedRoom
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.MoveByKeys
#include "Photon/Pun/UtilityScripts/MoveByKeys.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single JumpForce
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JumpForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single JumpTimeout
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JumpTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSprite
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::MoveByKeys::dyn_isSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_isSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSprite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single jumpingTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_jumpingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_jumpingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Photon::Pun::UtilityScripts::MoveByKeys::dyn_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D body2d
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& Photon::Pun::UtilityScripts::MoveByKeys::dyn_body2d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_body2d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body2d"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.MoveByKeys.Start
void Photon::Pun::UtilityScripts::MoveByKeys::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.MoveByKeys.FixedUpdate
void Photon::Pun::UtilityScripts::MoveByKeys::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy
#include "Photon/Pun/UtilityScripts/OnClickDestroy.hpp"
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4
#include "Photon/Pun/UtilityScripts/OnClickDestroy_-DestroyRpc-d__4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DestroyByRpc
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_DestroyByRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_DestroyByRpc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestroyByRpc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickDestroy::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy.DestroyRpc
::System::Collections::IEnumerator* Photon::Pun::UtilityScripts::OnClickDestroy::DestroyRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::DestroyRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4
#include "Photon/Pun/UtilityScripts/OnClickDestroy_-DestroyRpc-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnClickDestroy <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickDestroy*& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickDestroy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.IDisposable.Dispose
void Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.MoveNext
bool Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.IEnumerator.Reset
void Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickInstantiate
#include "Photon/Pun/UtilityScripts/OnClickInstantiate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption InstantiateType
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_InstantiateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_InstantiateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstantiateType"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickInstantiate.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickInstantiate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption
#include "Photon/Pun/UtilityScripts/OnClickInstantiate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Mine
::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Mine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Mine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption>("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Mine"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Mine
void Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Mine(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Mine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Mine", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Scene
::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption>("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Scene"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Scene
void Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Scene(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Scene", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickRpc
#include "Photon/Pun/UtilityScripts/OnClickRpc.hpp"
// Including type: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8
#include "Photon/Pun/UtilityScripts/OnClickRpc_-ClickFlash-d__8.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickRpc::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickRpc::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.RpcTarget Target
[[deprecated("Use field access instead!")]] ::Photon::Pun::RpcTarget& Photon::Pun::UtilityScripts::OnClickRpc::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::Photon::Pun::RpcTarget*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material originalMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color originalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isFlashing
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickRpc::dyn_isFlashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_isFlashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFlashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickRpc::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.ClickRpc
void Photon::Pun::UtilityScripts::OnClickRpc::ClickRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::ClickRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.ClickFlash
::System::Collections::IEnumerator* Photon::Pun::UtilityScripts::OnClickRpc::ClickFlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::ClickFlash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickFlash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8
#include "Photon/Pun/UtilityScripts/OnClickRpc_-ClickFlash-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnClickRpc <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickRpc*& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickRpc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <wasEmissive>5__2
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$wasEmissive$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$wasEmissive$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wasEmissive>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <f>5__3
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$f$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$f$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<f>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.IDisposable.Dispose
void Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.MoveNext
bool Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.IEnumerator.Reset
void Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnEscapeQuit
#include "Photon/Pun/UtilityScripts/OnEscapeQuit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnEscapeQuit.Update
void Photon::Pun::UtilityScripts::OnEscapeQuit::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnEscapeQuit::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnJoinedInstantiate
#include "Photon/Pun/UtilityScripts/OnJoinedInstantiate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform SpawnPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Sequence
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_Sequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sequence"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Transform> SpawnPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseRandomOffset
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_UseRandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_UseRandomOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseRandomOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RandomOffset
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_RandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_RandomOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RandomOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ClampY
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_ClampY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_ClampY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClampY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> PrefabsToInstantiate
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_PrefabsToInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_PrefabsToInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrefabsToInstantiate"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoSpawnObjects
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_AutoSpawnObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_AutoSpawnObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoSpawnObjects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<UnityEngine.GameObject> SpawnedObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnedObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 spawnedAsActorId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_spawnedAsActorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_spawnedAsActorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnedAsActorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 lastUsedSpawnPointIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_lastUsedSpawnPointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_lastUsedSpawnPointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUsedSpawnPointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnEnable
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnDisable
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinedRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.SpawnObjects
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.DespawnObjects
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects(bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localOnly);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnFriendListUpdate
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnCreatedRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnCreateRoomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinRoomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnLeftRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnPreLeavingRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetSpawnPoint
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint(ByRef<::UnityEngine::Vector3> spawnPos, ByRef<::UnityEngine::Quaternion> spawnRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(spawnPos), byref(spawnRot));
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetSpawnPoint
::UnityEngine::Transform* Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetRandomOffset
::UnityEngine::Vector3 Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence
#include "Photon/Pun/UtilityScripts/OnJoinedInstantiate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Connection
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Connection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Connection"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Connection
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Connection(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Connection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Connection", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Random
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Random"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Random
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Random(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence RoundRobin
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_RoundRobin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_RoundRobin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "RoundRobin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence RoundRobin
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_RoundRobin(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_RoundRobin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "RoundRobin", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnStartDelete
#include "Photon/Pun/UtilityScripts/OnStartDelete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnStartDelete.Start
void Photon::Pun::UtilityScripts::OnStartDelete::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnStartDelete::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CountdownTimer
#include "Photon/Pun/UtilityScripts/CountdownTimer.hpp"
// Including type: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired
#include "Photon/Pun/UtilityScripts/CountdownTimer_CountdownTimerHasExpired.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String CountdownStartTime
::StringW Photon::Pun::UtilityScripts::CountdownTimer::_get_CountdownStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_get_CountdownStartTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "CountdownTimer", "CountdownStartTime"));
}
// Autogenerated static field setter
// Set static field: static public System.String CountdownStartTime
void Photon::Pun::UtilityScripts::CountdownTimer::_set_CountdownStartTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_set_CountdownStartTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CountdownTimer", "CountdownStartTime", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired OnCountdownTimerHasExpired
::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* Photon::Pun::UtilityScripts::CountdownTimer::_get_OnCountdownTimerHasExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_get_OnCountdownTimerHasExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*>("Photon.Pun.UtilityScripts", "CountdownTimer", "OnCountdownTimerHasExpired"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::_set_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_set_OnCountdownTimerHasExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CountdownTimer", "OnCountdownTimerHasExpired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single Countdown
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CountdownTimer::dyn_Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_Countdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Countdown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isTimerRunning
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CountdownTimer::dyn_isTimerRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_isTimerRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTimerRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startTime
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CountdownTimer::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text Text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::CountdownTimer::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.add_OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::add_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::add_OnCountdownTimerHasExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "add_OnCountdownTimerHasExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.remove_OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::remove_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::remove_OnCountdownTimerHasExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "remove_OnCountdownTimerHasExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Start
void Photon::Pun::UtilityScripts::CountdownTimer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Update
void Photon::Pun::UtilityScripts::CountdownTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnTimerRuns
void Photon::Pun::UtilityScripts::CountdownTimer::OnTimerRuns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnTimerRuns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimerRuns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnTimerEnds
void Photon::Pun::UtilityScripts::CountdownTimer::OnTimerEnds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnTimerEnds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimerEnds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Initialize
void Photon::Pun::UtilityScripts::CountdownTimer::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.TimeRemaining
float Photon::Pun::UtilityScripts::CountdownTimer::TimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::TimeRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.TryGetStartTime
bool Photon::Pun::UtilityScripts::CountdownTimer::TryGetStartTime(ByRef<int> startTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::TryGetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "TryGetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(startTimestamp));
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.SetStartTime
void Photon::Pun::UtilityScripts::CountdownTimer::SetStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnEnable
void Photon::Pun::UtilityScripts::CountdownTimer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnDisable
void Photon::Pun::UtilityScripts::CountdownTimer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::CountdownTimer::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired
#include "Photon/Pun/UtilityScripts/CountdownTimer_CountdownTimerHasExpired.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.Invoke
void Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.BeginInvoke
::System::IAsyncResult* Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.EndInvoke
void Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PunTurnManager
#include "Photon/Pun/UtilityScripts/PunTurnManager.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks
#include "Photon/Pun/UtilityScripts/IPunTurnManagerCallbacks.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte TurnManagerEventOffset
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_TurnManagerEventOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_TurnManagerEventOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "TurnManagerEventOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte TurnManagerEventOffset
void Photon::Pun::UtilityScripts::PunTurnManager::_set_TurnManagerEventOffset(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_TurnManagerEventOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "TurnManagerEventOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EvMove
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_EvMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_EvMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "EvMove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EvMove
void Photon::Pun::UtilityScripts::PunTurnManager::_set_EvMove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_EvMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "EvMove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EvFinalMove
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_EvFinalMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_EvFinalMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "EvFinalMove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EvFinalMove
void Photon::Pun::UtilityScripts::PunTurnManager::_set_EvFinalMove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_EvFinalMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "EvFinalMove", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player sender
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TurnDuration
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks TurnManagerListener
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnManagerListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnManagerListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnManagerListener"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Photon.Realtime.Player> finishedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_finishedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_finishedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOverCallProcessed
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PunTurnManager::dyn__isOverCallProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn__isOverCallProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOverCallProcessed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_Turn
int Photon::Pun::UtilityScripts::PunTurnManager::get_Turn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.set_Turn
void Photon::Pun::UtilityScripts::PunTurnManager::set_Turn(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::set_Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_ElapsedTimeInTurn
float Photon::Pun::UtilityScripts::PunTurnManager::get_ElapsedTimeInTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_ElapsedTimeInTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTimeInTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_RemainingSecondsInTurn
float Photon::Pun::UtilityScripts::PunTurnManager::get_RemainingSecondsInTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_RemainingSecondsInTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemainingSecondsInTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsCompletedByAll
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsCompletedByAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsCompletedByAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompletedByAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsFinishedByMe
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsFinishedByMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsFinishedByMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFinishedByMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsOver
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.Start
void Photon::Pun::UtilityScripts::PunTurnManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.Update
void Photon::Pun::UtilityScripts::PunTurnManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.BeginTurn
void Photon::Pun::UtilityScripts::PunTurnManager::BeginTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::BeginTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.SendMove
void Photon::Pun::UtilityScripts::PunTurnManager::SendMove(::Il2CppObject* move, bool finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::SendMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move), ::il2cpp_utils::ExtractType(finished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, move, finished);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.GetPlayerFinishedTurn
bool Photon::Pun::UtilityScripts::PunTurnManager::GetPlayerFinishedTurn(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::GetPlayerFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.ProcessOnEvent
void Photon::Pun::UtilityScripts::PunTurnManager::ProcessOnEvent(uint8_t eventCode, ::Il2CppObject* content, int senderId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::ProcessOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(senderId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCode, content, senderId);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.OnEvent
void Photon::Pun::UtilityScripts::PunTurnManager::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PunTurnManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::PunTurnManager::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks
#include "Photon/Pun/UtilityScripts/IPunTurnManagerCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnBegins
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnBegins(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnBegins");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnCompleted
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnCompleted(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnPlayerMove
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerMove(::Photon::Realtime::Player* player, int turn, ::Il2CppObject* move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, turn, move);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnPlayerFinished
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerFinished(::Photon::Realtime::Player* player, int turn, ::Il2CppObject* move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerFinished");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, turn, move);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnTimeEnds
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnTimeEnds(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnTimeEnds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TurnExtensions
#include "Photon/Pun/UtilityScripts/TurnExtensions.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String TurnPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TurnPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnPropKey", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String TurnStartPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnStartPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnStartPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnStartPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TurnStartPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnStartPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnStartPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnStartPropKey", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String FinishedTurnPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_FinishedTurnPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_FinishedTurnPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "FinishedTurnPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String FinishedTurnPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_FinishedTurnPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_FinishedTurnPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "FinishedTurnPropKey", value));
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.SetTurn
void Photon::Pun::UtilityScripts::TurnExtensions::SetTurn(::Photon::Realtime::Room* room, int turn, bool setStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::SetTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "SetTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(turn), ::il2cpp_utils::ExtractType(setStartTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room, turn, setStartTime);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetTurn
int Photon::Pun::UtilityScripts::TurnExtensions::GetTurn(::Photon::Realtime::RoomInfo* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetTurnStart
int Photon::Pun::UtilityScripts::TurnExtensions::GetTurnStart(::Photon::Realtime::RoomInfo* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetTurnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetTurnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetFinishedTurn
int Photon::Pun::UtilityScripts::TurnExtensions::GetFinishedTurn(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.SetFinishedTurn
void Photon::Pun::UtilityScripts::TurnExtensions::SetFinishedTurn(::Photon::Realtime::Player* player, int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::SetFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "SetFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(turn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions..cctor
void Photon::Pun::UtilityScripts::TurnExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ButtonInsideScrollList
#include "Photon/Pun/UtilityScripts/ButtonInsideScrollList.hpp"
// Including type: UnityEngine.UI.ScrollRect
#include "UnityEngine/UI/ScrollRect.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect scrollRect
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect*& Photon::Pun::UtilityScripts::ButtonInsideScrollList::dyn_scrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::dyn_scrollRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollRect"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.Start
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine_EventSystems_IPointerDownHandler_OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ButtonInsideScrollList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine_EventSystems_IPointerUpHandler_OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ButtonInsideScrollList*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.EventSystemSpawner
#include "Photon/Pun/UtilityScripts/EventSystemSpawner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.EventSystemSpawner.OnEnable
void Photon::Pun::UtilityScripts::EventSystemSpawner::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::EventSystemSpawner::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition
#include "Photon/Pun/UtilityScripts/GraphicToggleIsOnTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic _graphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn__graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn__graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHover
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_isHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_isHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnPointerExit
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnEnable
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnDisable
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnValueChanged
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnPointerOverTooltip
#include "Photon/Pun/UtilityScripts/OnPointerOverTooltip.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.OnDestroy
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine_EventSystems_IPointerExitHandler_OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnPointerOverTooltip*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine_EventSystems_IPointerEnterHandler_OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnPointerOverTooltip*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager
#include "Photon/Pun/UtilityScripts/TabViewManager.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent
#include "Photon/Pun/UtilityScripts/TabViewManager_TabChangeEvent.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0
#include "Photon/Pun/UtilityScripts/TabViewManager_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ToggleGroup ToggleGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ToggleGroup*& Photon::Pun::UtilityScripts::TabViewManager::dyn_ToggleGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_ToggleGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToggleGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ToggleGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/Tab[] Tabs
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Pun::UtilityScripts::TabViewManager::Tab*>& Photon::Pun::UtilityScripts::TabViewManager::dyn_Tabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_Tabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tabs"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Pun::UtilityScripts::TabViewManager::Tab*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent OnTabChanged
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::TabChangeEvent*& Photon::Pun::UtilityScripts::TabViewManager::dyn_OnTabChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_OnTabChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTabChanged"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::TabChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Pun.UtilityScripts.TabViewManager/Tab CurrentTab
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::Tab*& Photon::Pun::UtilityScripts::TabViewManager::dyn_CurrentTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_CurrentTab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentTab"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::Tab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.UI.Toggle,Photon.Pun.UtilityScripts.TabViewManager/Tab> Tab_lut
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UI::Toggle*, ::Photon::Pun::UtilityScripts::TabViewManager::Tab*>*& Photon::Pun::UtilityScripts::TabViewManager::dyn_Tab_lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_Tab_lut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tab_lut"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::UI::Toggle*, ::Photon::Pun::UtilityScripts::TabViewManager::Tab*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.Start
void Photon::Pun::UtilityScripts::TabViewManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.SelectTab
void Photon::Pun::UtilityScripts::TabViewManager::SelectTab(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::SelectTab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectTab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.OnTabSelected
void Photon::Pun::UtilityScripts::TabViewManager::OnTabSelected(::Photon::Pun::UtilityScripts::TabViewManager::Tab* tab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::OnTabSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTabSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tab);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent
#include "Photon/Pun/UtilityScripts/TabViewManager_TabChangeEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle Toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_Toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform View
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_View() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_View");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "View"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0
#include "Photon/Pun/UtilityScripts/TabViewManager_--c__DisplayClass7_0.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/Tab _tab
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::Tab*& Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn__tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn__tab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tab"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::Tab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager*& Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0.<Start>b__0
void Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::$Start$b__0(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::<Start>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TextButtonTransition
#include "Photon/Pun/UtilityScripts/TextButtonTransition.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::TextButtonTransition::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Selectable Selectable
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_Selectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_Selectable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selectable"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_NormalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_HoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.Awake
void Photon::Pun::UtilityScripts::TextButtonTransition::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnEnable
void Photon::Pun::UtilityScripts::TextButtonTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnDisable
void Photon::Pun::UtilityScripts::TextButtonTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextButtonTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnPointerExit
void Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextButtonTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TextToggleIsOnTransition
#include "Photon/Pun/UtilityScripts/TextToggleIsOnTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHover
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_isHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_isHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnEnable
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnDisable
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnValueChanged
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextToggleIsOnTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnPointerExit
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextToggleIsOnTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusLib
#include "POpusCodec/OpusLib.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: POpusCodec.OpusLib.get_Version
::StringW POpusCodec::OpusLib::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusLib::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "OpusLib", "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusEncoder
#include "POpusCodec/OpusEncoder.hpp"
// Including type: POpusCodec.Enums.Bandwidth
#include "POpusCodec/Enums/Bandwidth.hpp"
// Including type: POpusCodec.Enums.Complexity
#include "POpusCodec/Enums/Complexity.hpp"
// Including type: POpusCodec.Enums.SignalHint
#include "POpusCodec/Enums/SignalHint.hpp"
// Including type: POpusCodec.Enums.ForceChannels
#include "POpusCodec/Enums/ForceChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BitrateMax
int POpusCodec::OpusEncoder::_get_BitrateMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_BitrateMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("POpusCodec", "OpusEncoder", "BitrateMax"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BitrateMax
void POpusCodec::OpusEncoder::_set_BitrateMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_BitrateMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "BitrateMax", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RecommendedMaxPacketSize
int POpusCodec::OpusEncoder::_get_RecommendedMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_RecommendedMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("POpusCodec", "OpusEncoder", "RecommendedMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RecommendedMaxPacketSize
void POpusCodec::OpusEncoder::_set_RecommendedMaxPacketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_RecommendedMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "RecommendedMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.ArraySegment`1<System.Byte> EmptyBuffer
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::_get_EmptyBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_EmptyBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ArraySegment_1<uint8_t>>("POpusCodec", "OpusEncoder", "EmptyBuffer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.ArraySegment`1<System.Byte> EmptyBuffer
void POpusCodec::OpusEncoder::_set_EmptyBuffer(::System::ArraySegment_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_EmptyBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "EmptyBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& POpusCodec::OpusEncoder::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameSizePerChannel
[[deprecated("Use field access instead!")]] int& POpusCodec::OpusEncoder::dyn__frameSizePerChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__frameSizePerChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameSizePerChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.SamplingRate _inputSamplingRate
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::SamplingRate& POpusCodec::OpusEncoder::dyn__inputSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__inputSamplingRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSamplingRate"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::SamplingRate*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.Channels _inputChannels
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::Channels& POpusCodec::OpusEncoder::dyn__inputChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__inputChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputChannels"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::Channels*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] writePacket
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& POpusCodec::OpusEncoder::dyn_writePacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn_writePacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePacket"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.Delay _encoderDelay
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::Delay& POpusCodec::OpusEncoder::dyn__encoderDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__encoderDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoderDelay"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::Delay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_InputSamplingRate
::POpusCodec::Enums::SamplingRate POpusCodec::OpusEncoder::get_InputSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_InputSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_InputChannels
::POpusCodec::Enums::Channels POpusCodec::OpusEncoder::get_InputChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_InputChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Channels, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_EncoderDelay
void POpusCodec::OpusEncoder::set_EncoderDelay(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_EncoderDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncoderDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_EncoderDelay
::POpusCodec::Enums::Delay POpusCodec::OpusEncoder::get_EncoderDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_EncoderDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncoderDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Delay, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_FrameSizePerChannel
int POpusCodec::OpusEncoder::get_FrameSizePerChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_FrameSizePerChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameSizePerChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_Bitrate
int POpusCodec::OpusEncoder::get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_Bitrate
void POpusCodec::OpusEncoder::set_Bitrate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_MaxBandwidth
::POpusCodec::Enums::Bandwidth POpusCodec::OpusEncoder::get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_MaxBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Bandwidth, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_MaxBandwidth
void POpusCodec::OpusEncoder::set_MaxBandwidth(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_MaxBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_Complexity
::POpusCodec::Enums::Complexity POpusCodec::OpusEncoder::get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_Complexity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Complexity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Complexity, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_Complexity
void POpusCodec::OpusEncoder::set_Complexity(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_Complexity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Complexity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_ExpectedPacketLossPercentage
int POpusCodec::OpusEncoder::get_ExpectedPacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_ExpectedPacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedPacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_ExpectedPacketLossPercentage
void POpusCodec::OpusEncoder::set_ExpectedPacketLossPercentage(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_ExpectedPacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedPacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_SignalHint
::POpusCodec::Enums::SignalHint POpusCodec::OpusEncoder::get_SignalHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_SignalHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignalHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SignalHint, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_SignalHint
void POpusCodec::OpusEncoder::set_SignalHint(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_SignalHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SignalHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_ForceChannels
::POpusCodec::Enums::ForceChannels POpusCodec::OpusEncoder::get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_ForceChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::ForceChannels, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_ForceChannels
void POpusCodec::OpusEncoder::set_ForceChannels(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_ForceChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForceChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_UseInbandFEC
bool POpusCodec::OpusEncoder::get_UseInbandFEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_UseInbandFEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInbandFEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_UseInbandFEC
void POpusCodec::OpusEncoder::set_UseInbandFEC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_UseInbandFEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInbandFEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_PacketLossPercentage
int POpusCodec::OpusEncoder::get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_PacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_PacketLossPercentage
void POpusCodec::OpusEncoder::set_PacketLossPercentage(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_PacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_UseUnconstrainedVBR
bool POpusCodec::OpusEncoder::get_UseUnconstrainedVBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_UseUnconstrainedVBR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseUnconstrainedVBR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_UseUnconstrainedVBR
void POpusCodec::OpusEncoder::set_UseUnconstrainedVBR(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_UseUnconstrainedVBR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseUnconstrainedVBR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_DtxEnabled
bool POpusCodec::OpusEncoder::get_DtxEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_DtxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_DtxEnabled
void POpusCodec::OpusEncoder::set_DtxEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_DtxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.Encode
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::Encode(::ArrayW<float> pcmSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, pcmSamples);
}
// Autogenerated method: POpusCodec.OpusEncoder.Encode
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::Encode(::ArrayW<int16_t> pcmSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, pcmSamples);
}
// Autogenerated method: POpusCodec.OpusEncoder.Dispose
void POpusCodec::OpusEncoder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::POpusCodec::OpusEncoder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder..cctor
void POpusCodec::OpusEncoder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "OpusEncoder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusException
#include "POpusCodec/OpusException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.OpusStatusCode _statusCode
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::OpusStatusCode& POpusCodec::OpusException::dyn__statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusException::dyn__statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statusCode"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::OpusStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: POpusCodec.OpusException.get_StatusCode
::POpusCodec::Enums::OpusStatusCode POpusCodec::OpusException::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusException::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: POpusCodec.Wrapper
#include "POpusCodec/Wrapper.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: POpusCodec.Enums.Channels
#include "POpusCodec/Enums/Channels.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: POpusCodec.Enums.SamplingRate
#include "POpusCodec/Enums/SamplingRate.hpp"
// Including type: POpusCodec.Enums.OpusApplicationType
#include "POpusCodec/Enums/OpusApplicationType.hpp"
// Including type: POpusCodec.Enums.OpusCtlSetRequest
#include "POpusCodec/Enums/OpusCtlSetRequest.hpp"
// Including type: POpusCodec.Enums.OpusCtlGetRequest
#include "POpusCodec/Enums/OpusCtlGetRequest.hpp"
// Including type: Photon.Voice.FrameBuffer
#include "Photon/Voice/FrameBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String lib_name
::StringW POpusCodec::Wrapper::_get_lib_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_lib_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "lib_name"));
}
// Autogenerated static field setter
// Set static field: static private System.String lib_name
void POpusCodec::Wrapper::_set_lib_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_lib_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "lib_name", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ctl_entry_point_set
::StringW POpusCodec::Wrapper::_get_ctl_entry_point_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_ctl_entry_point_set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "ctl_entry_point_set"));
}
// Autogenerated static field setter
// Set static field: static private System.String ctl_entry_point_set
void POpusCodec::Wrapper::_set_ctl_entry_point_set(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_ctl_entry_point_set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "ctl_entry_point_set", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ctl_entry_point_get
::StringW POpusCodec::Wrapper::_get_ctl_entry_point_get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_ctl_entry_point_get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "ctl_entry_point_get"));
}
// Autogenerated static field setter
// Set static field: static private System.String ctl_entry_point_get
void POpusCodec::Wrapper::_set_ctl_entry_point_get(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_ctl_entry_point_get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "ctl_entry_point_get", value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_get_size
int POpusCodec::Wrapper::opus_encoder_get_size(::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_init
::POpusCodec::Enums::OpusStatusCode POpusCodec::Wrapper::opus_encoder_init(::System::IntPtr st, ::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels, ::POpusCodec::Enums::OpusApplicationType application) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(application)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, Fs, channels, application);
}
// Autogenerated method: POpusCodec.Wrapper.opus_get_version_string
::System::IntPtr POpusCodec::Wrapper::opus_get_version_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_get_version_string");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_get_version_string", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<int16_t> pcm, int frame_size, ::ArrayW<uint8_t> data, int max_data_bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(max_data_bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data, max_data_bytes);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode_float
int POpusCodec::Wrapper::opus_encode_float(::System::IntPtr st, ::ArrayW<float> pcm, int frame_size, ::ArrayW<uint8_t> data, int max_data_bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode_float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode_float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(max_data_bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data, max_data_bytes);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_ctl_set
int POpusCodec::Wrapper::opus_encoder_ctl_set(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_ctl_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_ctl_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_ctl_get
int POpusCodec::Wrapper::opus_encoder_ctl_get(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_ctl_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_ctl_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, byref(value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_ctl_set
int POpusCodec::Wrapper::opus_decoder_ctl_set(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_ctl_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_ctl_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_ctl_get
int POpusCodec::Wrapper::opus_decoder_ctl_get(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_ctl_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_ctl_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, byref(value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_get_size
int POpusCodec::Wrapper::opus_decoder_get_size(::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_init
::POpusCodec::Enums::OpusStatusCode POpusCodec::Wrapper::opus_decoder_init(::System::IntPtr st, ::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, Fs, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::System::IntPtr data, int len, ::ArrayW<int16_t> pcm, int frame_size, int decode_fec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(decode_fec)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, len, pcm, frame_size, decode_fec);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode_float
int POpusCodec::Wrapper::opus_decode_float(::System::IntPtr st, ::System::IntPtr data, int len, ::ArrayW<float> pcm, int frame_size, int decode_fec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode_float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode_float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(decode_fec)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, len, pcm, frame_size, decode_fec);
}
// Autogenerated method: POpusCodec.Wrapper.opus_packet_get_bandwidth
int POpusCodec::Wrapper::opus_packet_get_bandwidth(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_packet_get_bandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_packet_get_bandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_packet_get_nb_channels
int POpusCodec::Wrapper::opus_packet_get_nb_channels(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_packet_get_nb_channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_packet_get_nb_channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_strerror
::System::IntPtr POpusCodec::Wrapper::opus_strerror(::POpusCodec::Enums::OpusStatusCode error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_strerror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_strerror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_create
::System::IntPtr POpusCodec::Wrapper::opus_encoder_create(::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels, ::POpusCodec::Enums::OpusApplicationType application) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(application)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Fs, channels, application);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<int16_t> pcm, int frame_size, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<float> pcm, int frame_size, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_destroy
void POpusCodec::Wrapper::opus_encoder_destroy(::System::IntPtr st) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st);
}
// Autogenerated method: POpusCodec.Wrapper.get_opus_encoder_ctl
int POpusCodec::Wrapper::get_opus_encoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::get_opus_encoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "get_opus_encoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request);
}
// Autogenerated method: POpusCodec.Wrapper.set_opus_encoder_ctl
void POpusCodec::Wrapper::set_opus_encoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::set_opus_encoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "set_opus_encoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.get_opus_decoder_ctl
int POpusCodec::Wrapper::get_opus_decoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::get_opus_decoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "get_opus_decoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request);
}
// Autogenerated method: POpusCodec.Wrapper.set_opus_decoder_ctl
void POpusCodec::Wrapper::set_opus_decoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::set_opus_decoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "set_opus_decoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_create
::System::IntPtr POpusCodec::Wrapper::opus_decoder_create(::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Fs, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_destroy
void POpusCodec::Wrapper::opus_decoder_destroy(::System::IntPtr st) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::Photon::Voice::FrameBuffer data, ::ArrayW<int16_t> pcm, int decode_fec, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(decode_fec), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, pcm, decode_fec, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::Photon::Voice::FrameBuffer data, ::ArrayW<float> pcm, int decode_fec, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(decode_fec), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, pcm, decode_fec, channels);
}
// Autogenerated method: POpusCodec.Wrapper.HandleStatusCode
void POpusCodec::Wrapper::HandleStatusCode(::POpusCodec::Enums::OpusStatusCode statusCode, ::ArrayW<::Il2CppObject*> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::HandleStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "HandleStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, statusCode, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Bandwidth
#include "POpusCodec/Enums/Bandwidth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Narrowband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Narrowband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Narrowband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Narrowband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Narrowband
void POpusCodec::Enums::Bandwidth::_set_Narrowband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Narrowband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Narrowband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Mediumband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Mediumband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Mediumband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Mediumband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Mediumband
void POpusCodec::Enums::Bandwidth::_set_Mediumband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Mediumband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Mediumband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Wideband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Wideband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Wideband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Wideband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Wideband
void POpusCodec::Enums::Bandwidth::_set_Wideband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Wideband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Wideband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth SuperWideband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_SuperWideband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_SuperWideband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "SuperWideband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth SuperWideband
void POpusCodec::Enums::Bandwidth::_set_SuperWideband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_SuperWideband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "SuperWideband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Fullband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Fullband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Fullband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Fullband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Fullband
void POpusCodec::Enums::Bandwidth::_set_Fullband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Fullband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Fullband", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Bandwidth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Channels
#include "POpusCodec/Enums/Channels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Channels Mono
::POpusCodec::Enums::Channels POpusCodec::Enums::Channels::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Channels>("POpusCodec.Enums", "Channels", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Channels Mono
void POpusCodec::Enums::Channels::_set_Mono(::POpusCodec::Enums::Channels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Channels", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Channels Stereo
::POpusCodec::Enums::Channels POpusCodec::Enums::Channels::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Channels>("POpusCodec.Enums", "Channels", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Channels Stereo
void POpusCodec::Enums::Channels::_set_Stereo(::POpusCodec::Enums::Channels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Channels", "Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Channels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Complexity
#include "POpusCodec/Enums/Complexity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity0
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity0"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity0
void POpusCodec::Enums::Complexity::_set_Complexity0(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity0", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity1
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity1"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity1
void POpusCodec::Enums::Complexity::_set_Complexity1(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity1", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity2
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity2"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity2
void POpusCodec::Enums::Complexity::_set_Complexity2(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity2", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity3
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity3"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity3
void POpusCodec::Enums::Complexity::_set_Complexity3(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity3", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity4
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity4"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity4
void POpusCodec::Enums::Complexity::_set_Complexity4(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity4", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity5
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity5"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity5
void POpusCodec::Enums::Complexity::_set_Complexity5(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity5", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity6
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity6"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity6
void POpusCodec::Enums::Complexity::_set_Complexity6(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity6", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity7
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity7"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity7
void POpusCodec::Enums::Complexity::_set_Complexity7(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity7", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity8
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity8"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity8
void POpusCodec::Enums::Complexity::_set_Complexity8(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity8", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity9
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity9"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity9
void POpusCodec::Enums::Complexity::_set_Complexity9(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity9", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity10
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity10"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity10
void POpusCodec::Enums::Complexity::_set_Complexity10(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity10", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Complexity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Delay
#include "POpusCodec/Enums/Delay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay2dot5ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay2dot5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay2dot5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay2dot5ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay2dot5ms
void POpusCodec::Enums::Delay::_set_Delay2dot5ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay2dot5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay2dot5ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay5ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay5ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay5ms
void POpusCodec::Enums::Delay::_set_Delay5ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay5ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay10ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay10ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay10ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay10ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay10ms
void POpusCodec::Enums::Delay::_set_Delay10ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay10ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay10ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay20ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay20ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay20ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay20ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay20ms
void POpusCodec::Enums::Delay::_set_Delay20ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay20ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay20ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay40ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay40ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay40ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay40ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay40ms
void POpusCodec::Enums::Delay::_set_Delay40ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay40ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay40ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay60ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay60ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay60ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay60ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay60ms
void POpusCodec::Enums::Delay::_set_Delay60ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay60ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay60ms", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Delay::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.ForceChannels
#include "POpusCodec/Enums/ForceChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels NoForce
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_NoForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_NoForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "NoForce"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels NoForce
void POpusCodec::Enums::ForceChannels::_set_NoForce(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_NoForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "NoForce", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels Mono
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels Mono
void POpusCodec::Enums::ForceChannels::_set_Mono(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels Stereo
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels Stereo
void POpusCodec::Enums::ForceChannels::_set_Stereo(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::ForceChannels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusApplicationType
#include "POpusCodec/Enums/OpusApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType Voip
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_Voip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_Voip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "Voip"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType Voip
void POpusCodec::Enums::OpusApplicationType::_set_Voip(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_Voip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "Voip", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType Audio
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_Audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_Audio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "Audio"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType Audio
void POpusCodec::Enums::OpusApplicationType::_set_Audio(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_Audio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "Audio", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType RestrictedLowDelay
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_RestrictedLowDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_RestrictedLowDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "RestrictedLowDelay"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType RestrictedLowDelay
void POpusCodec::Enums::OpusApplicationType::_set_RestrictedLowDelay(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_RestrictedLowDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "RestrictedLowDelay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusCtlGetRequest
#include "POpusCodec/Enums/OpusCtlGetRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Application
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Application"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Application
void POpusCodec::Enums::OpusCtlGetRequest::_set_Application(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Bitrate
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Bitrate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Bitrate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Bitrate
void POpusCodec::Enums::OpusCtlGetRequest::_set_Bitrate(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Bitrate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Bitrate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest MaxBandwidth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_MaxBandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "MaxBandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest MaxBandwidth
void POpusCodec::Enums::OpusCtlGetRequest::_set_MaxBandwidth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_MaxBandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "MaxBandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest VBR
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_VBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_VBR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "VBR"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest VBR
void POpusCodec::Enums::OpusCtlGetRequest::_set_VBR(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_VBR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "VBR", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Bandwidth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Bandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Bandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Bandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Bandwidth
void POpusCodec::Enums::OpusCtlGetRequest::_set_Bandwidth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Bandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Bandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Complexity
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Complexity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Complexity"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Complexity
void POpusCodec::Enums::OpusCtlGetRequest::_set_Complexity(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Complexity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Complexity", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest InbandFec
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_InbandFec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_InbandFec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "InbandFec"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest InbandFec
void POpusCodec::Enums::OpusCtlGetRequest::_set_InbandFec(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_InbandFec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "InbandFec", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest PacketLossPercentage
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_PacketLossPercentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "PacketLossPercentage"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest PacketLossPercentage
void POpusCodec::Enums::OpusCtlGetRequest::_set_PacketLossPercentage(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_PacketLossPercentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "PacketLossPercentage", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Dtx
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Dtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Dtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Dtx"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Dtx
void POpusCodec::Enums::OpusCtlGetRequest::_set_Dtx(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Dtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Dtx", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest VBRConstraint
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_VBRConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_VBRConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "VBRConstraint"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest VBRConstraint
void POpusCodec::Enums::OpusCtlGetRequest::_set_VBRConstraint(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_VBRConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "VBRConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest ForceChannels
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_ForceChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "ForceChannels"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest ForceChannels
void POpusCodec::Enums::OpusCtlGetRequest::_set_ForceChannels(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_ForceChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "ForceChannels", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Signal
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Signal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Signal"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Signal
void POpusCodec::Enums::OpusCtlGetRequest::_set_Signal(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Signal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Signal", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LookAhead
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LookAhead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LookAhead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LookAhead"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LookAhead
void POpusCodec::Enums::OpusCtlGetRequest::_set_LookAhead(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LookAhead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LookAhead", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest SampleRate
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_SampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "SampleRate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest SampleRate
void POpusCodec::Enums::OpusCtlGetRequest::_set_SampleRate(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_SampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "SampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest FinalRange
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_FinalRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_FinalRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "FinalRange"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest FinalRange
void POpusCodec::Enums::OpusCtlGetRequest::_set_FinalRange(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_FinalRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "FinalRange", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Pitch
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Pitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Pitch"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Pitch
void POpusCodec::Enums::OpusCtlGetRequest::_set_Pitch(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Pitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Pitch", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Gain
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Gain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Gain"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Gain
void POpusCodec::Enums::OpusCtlGetRequest::_set_Gain(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Gain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Gain", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LsbDepth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LsbDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LsbDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LsbDepth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LsbDepth
void POpusCodec::Enums::OpusCtlGetRequest::_set_LsbDepth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LsbDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LsbDepth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LastPacketDurationRequest
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LastPacketDurationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LastPacketDurationRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LastPacketDurationRequest"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LastPacketDurationRequest
void POpusCodec::Enums::OpusCtlGetRequest::_set_LastPacketDurationRequest(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LastPacketDurationRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LastPacketDurationRequest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusCtlGetRequest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusCtlSetRequest
#include "POpusCodec/Enums/OpusCtlSetRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Application
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Application"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Application
void POpusCodec::Enums::OpusCtlSetRequest::_set_Application(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Bitrate
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Bitrate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Bitrate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Bitrate
void POpusCodec::Enums::OpusCtlSetRequest::_set_Bitrate(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Bitrate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Bitrate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest MaxBandwidth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_MaxBandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "MaxBandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest MaxBandwidth
void POpusCodec::Enums::OpusCtlSetRequest::_set_MaxBandwidth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_MaxBandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "MaxBandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest VBR
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_VBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_VBR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "VBR"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest VBR
void POpusCodec::Enums::OpusCtlSetRequest::_set_VBR(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_VBR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "VBR", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Bandwidth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Bandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Bandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Bandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Bandwidth
void POpusCodec::Enums::OpusCtlSetRequest::_set_Bandwidth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Bandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Bandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Complexity
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Complexity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Complexity"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Complexity
void POpusCodec::Enums::OpusCtlSetRequest::_set_Complexity(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Complexity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Complexity", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest InbandFec
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_InbandFec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_InbandFec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "InbandFec"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest InbandFec
void POpusCodec::Enums::OpusCtlSetRequest::_set_InbandFec(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_InbandFec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "InbandFec", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest PacketLossPercentage
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_PacketLossPercentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "PacketLossPercentage"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest PacketLossPercentage
void POpusCodec::Enums::OpusCtlSetRequest::_set_PacketLossPercentage(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_PacketLossPercentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "PacketLossPercentage", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Dtx
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Dtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Dtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Dtx"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Dtx
void POpusCodec::Enums::OpusCtlSetRequest::_set_Dtx(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Dtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Dtx", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest VBRConstraint
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_VBRConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_VBRConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "VBRConstraint"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest VBRConstraint
void POpusCodec::Enums::OpusCtlSetRequest::_set_VBRConstraint(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_VBRConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "VBRConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest ForceChannels
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_ForceChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "ForceChannels"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest ForceChannels
void POpusCodec::Enums::OpusCtlSetRequest::_set_ForceChannels(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_ForceChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "ForceChannels", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Signal
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Signal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Signal"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Signal
void POpusCodec::Enums::OpusCtlSetRequest::_set_Signal(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Signal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Signal", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Gain
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Gain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Gain"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Gain
void POpusCodec::Enums::OpusCtlSetRequest::_set_Gain(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Gain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Gain", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest LsbDepth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_LsbDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_LsbDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "LsbDepth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest LsbDepth
void POpusCodec::Enums::OpusCtlSetRequest::_set_LsbDepth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_LsbDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "LsbDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusCtlSetRequest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusStatusCode
#include "POpusCodec/Enums/OpusStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode OK
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "OK"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode OK
void POpusCodec::Enums::OpusStatusCode::_set_OK(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode BadArguments
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_BadArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_BadArguments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "BadArguments"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode BadArguments
void POpusCodec::Enums::OpusStatusCode::_set_BadArguments(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_BadArguments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "BadArguments", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode BufferTooSmall
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode BufferTooSmall
void POpusCodec::Enums::OpusStatusCode::_set_BufferTooSmall(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InternalError
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InternalError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InternalError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InternalError"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InternalError
void POpusCodec::Enums::OpusStatusCode::_set_InternalError(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InternalError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InternalError", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InvalidPacket
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InvalidPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InvalidPacket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InvalidPacket"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InvalidPacket
void POpusCodec::Enums::OpusStatusCode::_set_InvalidPacket(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InvalidPacket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InvalidPacket", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode Unimplemented
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_Unimplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_Unimplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "Unimplemented"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode Unimplemented
void POpusCodec::Enums::OpusStatusCode::_set_Unimplemented(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_Unimplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "Unimplemented", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InvalidState
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InvalidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InvalidState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InvalidState"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InvalidState
void POpusCodec::Enums::OpusStatusCode::_set_InvalidState(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InvalidState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InvalidState", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode AllocFail
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_AllocFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_AllocFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "AllocFail"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode AllocFail
void POpusCodec::Enums::OpusStatusCode::_set_AllocFail(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_AllocFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "AllocFail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusStatusCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.SamplingRate
#include "POpusCodec/Enums/SamplingRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling08000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling08000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling08000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling08000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling08000
void POpusCodec::Enums::SamplingRate::_set_Sampling08000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling08000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling08000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling12000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling12000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling12000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling12000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling12000
void POpusCodec::Enums::SamplingRate::_set_Sampling12000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling12000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling12000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling16000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling16000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling16000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling16000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling16000
void POpusCodec::Enums::SamplingRate::_set_Sampling16000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling16000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling16000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling24000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling24000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling24000
void POpusCodec::Enums::SamplingRate::_set_Sampling24000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling24000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling48000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling48000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling48000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling48000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling48000
void POpusCodec::Enums::SamplingRate::_set_Sampling48000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling48000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling48000", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::SamplingRate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.SignalHint
#include "POpusCodec/Enums/SignalHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Auto
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Auto
void POpusCodec::Enums::SignalHint::_set_Auto(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Voice
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Voice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Voice"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Voice
void POpusCodec::Enums::SignalHint::_set_Voice(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Voice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Voice", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Music
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Music() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Music");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Music"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Music
void POpusCodec::Enums::SignalHint::_set_Music(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Music");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Music", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::SignalHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil
#include "Photon/Voice/AudioUtil.hpp"
// Including type: Photon.Voice.AudioUtil/ToneAudioReader`1
#include "Photon/Voice/AudioUtil_ToneAudioReader_1.hpp"
// Including type: Photon.Voice.AudioUtil/ToneAudioPusher`1
#include "Photon/Voice/AudioUtil_ToneAudioPusher_1.hpp"
// Including type: Photon.Voice.AudioUtil/TempoUp`1
#include "Photon/Voice/AudioUtil_TempoUp_1.hpp"
// Including type: Photon.Voice.AudioUtil/Resampler`1
#include "Photon/Voice/AudioUtil_Resampler_1.hpp"
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterDummy
#include "Photon/Voice/AudioUtil_LevelMeterDummy.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeter`1
#include "Photon/Voice/AudioUtil_LevelMeter_1.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterFloat
#include "Photon/Voice/AudioUtil_LevelMeterFloat.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterShort
#include "Photon/Voice/AudioUtil_LevelMeterShort.hpp"
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorCalibration`1
#include "Photon/Voice/AudioUtil_VoiceDetectorCalibration_1.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorDummy
#include "Photon/Voice/AudioUtil_VoiceDetectorDummy.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetector`1
#include "Photon/Voice/AudioUtil_VoiceDetector_1.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorFloat
#include "Photon/Voice/AudioUtil_VoiceDetectorFloat.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorShort
#include "Photon/Voice/AudioUtil_VoiceDetectorShort.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceLevelDetectCalibrate`1
#include "Photon/Voice/AudioUtil_VoiceLevelDetectCalibrate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil.ResampleAndConvert
void Photon::Voice::AudioUtil::ResampleAndConvert(::ArrayW<int16_t> src, ::ArrayW<float> dst, int dstCount, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ResampleAndConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "ResampleAndConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount, channels);
}
// Autogenerated method: Photon.Voice.AudioUtil.ResampleAndConvert
void Photon::Voice::AudioUtil::ResampleAndConvert(::ArrayW<float> src, ::ArrayW<int16_t> dst, int dstCount, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ResampleAndConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "ResampleAndConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount, channels);
}
// Autogenerated method: Photon.Voice.AudioUtil.Convert
void Photon::Voice::AudioUtil::Convert(::ArrayW<float> src, ::ArrayW<int16_t> dst, int dstCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount);
}
// Autogenerated method: Photon.Voice.AudioUtil.Convert
void Photon::Voice::AudioUtil::Convert(::ArrayW<int16_t> src, ::ArrayW<float> dst, int dstCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_CurrentAvgAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_CurrentAvgAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_CurrentAvgAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_CurrentPeakAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_CurrentPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_CurrentPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_AccumAvgPeakAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_AccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_AccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.ResetAccumAvgPeakAmp
void Photon::Voice::AudioUtil::ILevelMeter::ResetAccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::ResetAccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterDummy
#include "Photon/Voice/AudioUtil_LevelMeterDummy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_CurrentAvgAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_CurrentPeakAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_AccumAvgPeakAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.ResetAccumAvgPeakAmp
void Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterFloat
#include "Photon/Voice/AudioUtil_LevelMeterFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterFloat.Process
::ArrayW<float> Photon::Voice::AudioUtil::LevelMeterFloat::Process(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterFloat::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterFloat*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterShort
#include "Photon/Voice/AudioUtil_LevelMeterShort.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterShort.Process
::ArrayW<int16_t> Photon::Voice::AudioUtil::LevelMeterShort::Process(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterShort::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterShort*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buf);
}
