// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.MatchMethod
#include "Meta/WitAi/CallbackHandlers/MatchMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod None
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod None
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_None(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod Text
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "Text"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod Text
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_Text(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod RegularExpression
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_RegularExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_RegularExpression");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "RegularExpression"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod RegularExpression
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_RegularExpression(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_RegularExpression");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "RegularExpression", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod IntegerComparison
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_IntegerComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_IntegerComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "IntegerComparison"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod IntegerComparison
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_IntegerComparison(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_IntegerComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "IntegerComparison", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod FloatComparison
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_FloatComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_FloatComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "FloatComparison"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod FloatComparison
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_FloatComparison(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_FloatComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "FloatComparison", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.MatchMethod DoubleComparison
::Meta::WitAi::CallbackHandlers::MatchMethod Meta::WitAi::CallbackHandlers::MatchMethod::_get_DoubleComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_get_DoubleComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::MatchMethod>("Meta.WitAi.CallbackHandlers", "MatchMethod", "DoubleComparison"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.MatchMethod DoubleComparison
void Meta::WitAi::CallbackHandlers::MatchMethod::_set_DoubleComparison(::Meta::WitAi::CallbackHandlers::MatchMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::_set_DoubleComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "MatchMethod", "DoubleComparison", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::CallbackHandlers::MatchMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::MatchMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitUtteranceMatcher
#include "Meta/WitAi/CallbackHandlers/WitUtteranceMatcher.hpp"
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String searchText
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_searchText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_searchText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean exactMatch
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_exactMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_exactMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useRegex
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_useRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_useRegex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRegex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.StringEvent onUtteranceMatched
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_onUtteranceMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_onUtteranceMatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onUtteranceMatched"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.Regex regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::dyn_regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitUtteranceMatcher.IsMatch
bool Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::IsMatch(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitUtteranceMatcher.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitUtteranceMatcher.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitUtteranceMatcher.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitUtteranceMatcher::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Attributes.TooltipBoxAttribute
#include "Meta/WitAi/Attributes/TooltipBoxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Attributes::TooltipBoxAttribute::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Attributes::TooltipBoxAttribute::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Attributes.TooltipBoxAttribute.get_Text
::StringW Meta::WitAi::Attributes::TooltipBoxAttribute::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Attributes::TooltipBoxAttribute::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Attributes.TooltipBoxAttribute.set_Text
void Meta::WitAi::Attributes::TooltipBoxAttribute::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Attributes::TooltipBoxAttribute::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.IVoiceRequestOptions
#include "Meta/Voice/IVoiceRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.IVoiceRequestOptions.get_RequestId
::StringW Meta::Voice::IVoiceRequestOptions::get_RequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestOptions::get_RequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestOptions*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.IVoiceRequestResults
#include "Meta/Voice/IVoiceRequestResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.IVoiceRequestResults.get_Message
::StringW Meta::Voice::IVoiceRequestResults::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::IVoiceRequestResults::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::IVoiceRequestResults*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.NLPRequestResponseEvent
#include "Meta/Voice/NLPRequestResponseEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.INLPRequestResults
#include "Meta/Voice/INLPRequestResults.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.INLPRequestResults.get_ResponseData
::Meta::WitAi::Json::WitResponseNode* Meta::Voice::INLPRequestResults::get_ResponseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::INLPRequestResults::get_ResponseData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::INLPRequestResults*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.INLPTextRequestOptions
#include "Meta/Voice/INLPTextRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.INLPTextRequestOptions.get_Text
::StringW Meta::Voice::INLPTextRequestOptions::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::INLPTextRequestOptions::get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::INLPTextRequestOptions*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.INLPTextRequestOptions.set_Text
void Meta::Voice::INLPTextRequestOptions::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::INLPTextRequestOptions::set_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::INLPTextRequestOptions*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.NLPRequestInputType
#include "Meta/Voice/NLPRequestInputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.Voice.NLPRequestInputType Text
::Meta::Voice::NLPRequestInputType Meta::Voice::NLPRequestInputType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequestInputType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::NLPRequestInputType>("Meta.Voice", "NLPRequestInputType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.NLPRequestInputType Text
void Meta::Voice::NLPRequestInputType::_set_Text(::Meta::Voice::NLPRequestInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequestInputType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "NLPRequestInputType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.NLPRequestInputType Audio
::Meta::Voice::NLPRequestInputType Meta::Voice::NLPRequestInputType::_get_Audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequestInputType::_get_Audio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::NLPRequestInputType>("Meta.Voice", "NLPRequestInputType", "Audio"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.NLPRequestInputType Audio
void Meta::Voice::NLPRequestInputType::_set_Audio(::Meta::Voice::NLPRequestInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequestInputType::_set_Audio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "NLPRequestInputType", "Audio", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::Voice::NLPRequestInputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::NLPRequestInputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.TranscriptionRequestEvent
#include "Meta/Voice/TranscriptionRequestEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.ITranscriptionRequestOptions
#include "Meta/Voice/ITranscriptionRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.ITranscriptionRequestOptions.get_AudioThreshold
float Meta::Voice::ITranscriptionRequestOptions::get_AudioThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequestOptions::get_AudioThreshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequestOptions*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.ITranscriptionRequestResults
#include "Meta/Voice/ITranscriptionRequestResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.ITranscriptionRequestResults.get_Transcription
::StringW Meta::Voice::ITranscriptionRequestResults::get_Transcription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequestResults::get_Transcription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequestResults*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.ITranscriptionRequestResults.get_IsFinalTranscription
bool Meta::Voice::ITranscriptionRequestResults::get_IsFinalTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequestResults::get_IsFinalTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequestResults*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.ITranscriptionRequestResults.get_FinalTranscriptions
::ArrayW<::StringW> Meta::Voice::ITranscriptionRequestResults::get_FinalTranscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::ITranscriptionRequestResults::get_FinalTranscriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::ITranscriptionRequestResults*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.VoiceAudioInputState
#include "Meta/Voice/VoiceAudioInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceAudioInputState Off
::Meta::Voice::VoiceAudioInputState Meta::Voice::VoiceAudioInputState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceAudioInputState>("Meta.Voice", "VoiceAudioInputState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceAudioInputState Off
void Meta::Voice::VoiceAudioInputState::_set_Off(::Meta::Voice::VoiceAudioInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceAudioInputState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceAudioInputState Activating
::Meta::Voice::VoiceAudioInputState Meta::Voice::VoiceAudioInputState::_get_Activating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_get_Activating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceAudioInputState>("Meta.Voice", "VoiceAudioInputState", "Activating"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceAudioInputState Activating
void Meta::Voice::VoiceAudioInputState::_set_Activating(::Meta::Voice::VoiceAudioInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_set_Activating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceAudioInputState", "Activating", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceAudioInputState On
::Meta::Voice::VoiceAudioInputState Meta::Voice::VoiceAudioInputState::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceAudioInputState>("Meta.Voice", "VoiceAudioInputState", "On"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceAudioInputState On
void Meta::Voice::VoiceAudioInputState::_set_On(::Meta::Voice::VoiceAudioInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceAudioInputState", "On", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceAudioInputState Deactivating
::Meta::Voice::VoiceAudioInputState Meta::Voice::VoiceAudioInputState::_get_Deactivating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_get_Deactivating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceAudioInputState>("Meta.Voice", "VoiceAudioInputState", "Deactivating"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceAudioInputState Deactivating
void Meta::Voice::VoiceAudioInputState::_set_Deactivating(::Meta::Voice::VoiceAudioInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::_set_Deactivating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceAudioInputState", "Deactivating", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::Voice::VoiceAudioInputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceAudioInputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.VoiceRequestState
#include "Meta/Voice/VoiceRequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceRequestState Initialized
::Meta::Voice::VoiceRequestState Meta::Voice::VoiceRequestState::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceRequestState>("Meta.Voice", "VoiceRequestState", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceRequestState Initialized
void Meta::Voice::VoiceRequestState::_set_Initialized(::Meta::Voice::VoiceRequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceRequestState", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceRequestState Transmitting
::Meta::Voice::VoiceRequestState Meta::Voice::VoiceRequestState::_get_Transmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_get_Transmitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceRequestState>("Meta.Voice", "VoiceRequestState", "Transmitting"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceRequestState Transmitting
void Meta::Voice::VoiceRequestState::_set_Transmitting(::Meta::Voice::VoiceRequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_set_Transmitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceRequestState", "Transmitting", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceRequestState Canceled
::Meta::Voice::VoiceRequestState Meta::Voice::VoiceRequestState::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceRequestState>("Meta.Voice", "VoiceRequestState", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceRequestState Canceled
void Meta::Voice::VoiceRequestState::_set_Canceled(::Meta::Voice::VoiceRequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceRequestState", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceRequestState Failed
::Meta::Voice::VoiceRequestState Meta::Voice::VoiceRequestState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceRequestState>("Meta.Voice", "VoiceRequestState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceRequestState Failed
void Meta::Voice::VoiceRequestState::_set_Failed(::Meta::Voice::VoiceRequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceRequestState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.Voice.VoiceRequestState Successful
::Meta::Voice::VoiceRequestState Meta::Voice::VoiceRequestState::_get_Successful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_get_Successful");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Voice::VoiceRequestState>("Meta.Voice", "VoiceRequestState", "Successful"));
}
// Autogenerated static field setter
// Set static field: static public Meta.Voice.VoiceRequestState Successful
void Meta::Voice::VoiceRequestState::_set_Successful(::Meta::Voice::VoiceRequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::_set_Successful");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice", "VoiceRequestState", "Successful", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::Voice::VoiceRequestState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::VoiceRequestState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.AudioClipStream
#include "Meta/Voice/Audio/AudioClipStream.hpp"
// Including type: Meta.Voice.Audio.AudioClipStreamDelegate
#include "Meta/Voice/Audio/AudioClipStreamDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsReady>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Audio::AudioClipStream::dyn_$IsReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$IsReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsComplete>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Audio::AudioClipStream::dyn_$IsComplete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$IsComplete$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsComplete>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Channels>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::AudioClipStream::dyn_$Channels$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$Channels$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Channels>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SampleRate>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::AudioClipStream::dyn_$SampleRate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$SampleRate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SampleRate>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <AddedSamples>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::AudioClipStream::dyn_$AddedSamples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$AddedSamples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AddedSamples>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <TotalSamples>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::AudioClipStream::dyn_$TotalSamples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$TotalSamples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TotalSamples>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <StreamReadyLength>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::Voice::Audio::AudioClipStream::dyn_$StreamReadyLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$StreamReadyLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StreamReadyLength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Audio.AudioClipStreamDelegate <OnStreamReady>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::AudioClipStreamDelegate*& Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnStreamReady>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::AudioClipStreamDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Audio.AudioClipStreamDelegate <OnStreamUpdated>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::AudioClipStreamDelegate*& Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamUpdated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamUpdated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnStreamUpdated>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::AudioClipStreamDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Audio.AudioClipStreamDelegate <OnStreamComplete>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::AudioClipStreamDelegate*& Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamComplete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::dyn_$OnStreamComplete$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnStreamComplete>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::AudioClipStreamDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_IsReady
bool Meta::Voice::Audio::AudioClipStream::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_IsReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_IsReady
void Meta::Voice::Audio::AudioClipStream::set_IsReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_IsComplete
bool Meta::Voice::Audio::AudioClipStream::get_IsComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_IsComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_IsComplete
void Meta::Voice::Audio::AudioClipStream::set_IsComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_IsComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_Channels
int Meta::Voice::Audio::AudioClipStream::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_Channels
void Meta::Voice::Audio::AudioClipStream::set_Channels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_SampleRate
int Meta::Voice::Audio::AudioClipStream::get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_SampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_SampleRate
void Meta::Voice::Audio::AudioClipStream::set_SampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_AddedSamples
int Meta::Voice::Audio::AudioClipStream::get_AddedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_AddedSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_AddedSamples
void Meta::Voice::Audio::AudioClipStream::set_AddedSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_AddedSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddedSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_TotalSamples
int Meta::Voice::Audio::AudioClipStream::get_TotalSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_TotalSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_TotalSamples
void Meta::Voice::Audio::AudioClipStream::set_TotalSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_TotalSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_Length
float Meta::Voice::Audio::AudioClipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_StreamReadyLength
float Meta::Voice::Audio::AudioClipStream::get_StreamReadyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_StreamReadyLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_StreamReadyLength
void Meta::Voice::Audio::AudioClipStream::set_StreamReadyLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_StreamReadyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StreamReadyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_OnStreamReady
::Meta::Voice::Audio::AudioClipStreamDelegate* Meta::Voice::Audio::AudioClipStream::get_OnStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_OnStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::AudioClipStreamDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_OnStreamReady
void Meta::Voice::Audio::AudioClipStream::set_OnStreamReady(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_OnStreamReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_OnStreamUpdated
::Meta::Voice::Audio::AudioClipStreamDelegate* Meta::Voice::Audio::AudioClipStream::get_OnStreamUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_OnStreamUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStreamUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::AudioClipStreamDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_OnStreamUpdated
void Meta::Voice::Audio::AudioClipStream::set_OnStreamUpdated(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_OnStreamUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.get_OnStreamComplete
::Meta::Voice::Audio::AudioClipStreamDelegate* Meta::Voice::Audio::AudioClipStream::get_OnStreamComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::get_OnStreamComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStreamComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::AudioClipStreamDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.set_OnStreamComplete
void Meta::Voice::Audio::AudioClipStream::set_OnStreamComplete(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::set_OnStreamComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.AddSamples
void Meta::Voice::Audio::AudioClipStream::AddSamples(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::AddSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.SetTotalSamples
void Meta::Voice::Audio::AudioClipStream::SetTotalSamples(int totalSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::SetTotalSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalSamples);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.UpdateState
void Meta::Voice::Audio::AudioClipStream::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::UpdateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.HandleStreamReady
void Meta::Voice::Audio::AudioClipStream::HandleStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::HandleStreamReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.HandleStreamUpdated
void Meta::Voice::Audio::AudioClipStream::HandleStreamUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::HandleStreamUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.HandleStreamComplete
void Meta::Voice::Audio::AudioClipStream::HandleStreamComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::HandleStreamComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.Unload
void Meta::Voice::Audio::AudioClipStream::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::Unload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.GetSampleLength
float Meta::Voice::Audio::AudioClipStream::GetSampleLength(int totalSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::GetSampleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, totalSamples);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStream.GetLength
float Meta::Voice::Audio::AudioClipStream::GetLength(int totalSamples, int channels, int samplesPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStream::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "AudioClipStream", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(samplesPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, totalSamples, channels, samplesPerSecond);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.AudioPlayer
#include "Meta/Voice/Audio/AudioPlayer.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Audio.IAudioClipStream <ClipStream>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioClipStream*& Meta::Voice::Audio::AudioPlayer::dyn_$ClipStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::dyn_$ClipStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClipStream>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::IAudioClipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.get_ClipStream
::Meta::Voice::Audio::IAudioClipStream* Meta::Voice::Audio::AudioPlayer::get_ClipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::get_ClipStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioClipStream*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.set_ClipStream
void Meta::Voice::Audio::AudioPlayer::set_ClipStream(::Meta::Voice::Audio::IAudioClipStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::set_ClipStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClipStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.get_IsPlaying
bool Meta::Voice::Audio::AudioPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::get_IsPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.get_ElapsedSamples
int Meta::Voice::Audio::AudioPlayer::get_ElapsedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::get_ElapsedSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Init
void Meta::Voice::Audio::AudioPlayer::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.GetPlaybackErrors
::StringW Meta::Voice::Audio::AudioPlayer::GetPlaybackErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::GetPlaybackErrors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Play
void Meta::Voice::Audio::AudioPlayer::Play(::Meta::Voice::Audio::IAudioClipStream* clipStream, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipStream, offsetSamples);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Play
void Meta::Voice::Audio::AudioPlayer::Play(int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offsetSamples);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Pause
void Meta::Voice::Audio::AudioPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Pause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Resume
void Meta::Voice::Audio::AudioPlayer::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Resume");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.AudioPlayer.Stop
void Meta::Voice::Audio::AudioPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioPlayer::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.IAudioClipProvider
#include "Meta/Voice/Audio/IAudioClipProvider.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.IAudioClipProvider.get_Clip
::UnityEngine::AudioClip* Meta::Voice::Audio::IAudioClipProvider::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipProvider::get_Clip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Voice.Audio.AudioClipStreamDelegate
#include "Meta/Voice/Audio/AudioClipStreamDelegate.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.AudioClipStreamDelegate.Invoke
void Meta::Voice::Audio::AudioClipStreamDelegate::Invoke(::Meta::Voice::Audio::IAudioClipStream* clipStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStreamDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStreamDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipStream);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStreamDelegate.BeginInvoke
::System::IAsyncResult* Meta::Voice::Audio::AudioClipStreamDelegate::BeginInvoke(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStreamDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStreamDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, clipStream, callback, object);
}
// Autogenerated method: Meta.Voice.Audio.AudioClipStreamDelegate.EndInvoke
void Meta::Voice::Audio::AudioClipStreamDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::AudioClipStreamDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStreamDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: Meta.Voice.Audio.AudioClipStreamDelegate
#include "Meta/Voice/Audio/AudioClipStreamDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_IsReady
bool Meta::Voice::Audio::IAudioClipStream::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_IsReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_IsComplete
bool Meta::Voice::Audio::IAudioClipStream::get_IsComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_IsComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_Channels
int Meta::Voice::Audio::IAudioClipStream::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_SampleRate
int Meta::Voice::Audio::IAudioClipStream::get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_SampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_AddedSamples
int Meta::Voice::Audio::IAudioClipStream::get_AddedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_AddedSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_TotalSamples
int Meta::Voice::Audio::IAudioClipStream::get_TotalSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_TotalSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_Length
float Meta::Voice::Audio::IAudioClipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.get_StreamReadyLength
float Meta::Voice::Audio::IAudioClipStream::get_StreamReadyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::get_StreamReadyLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.set_OnStreamReady
void Meta::Voice::Audio::IAudioClipStream::set_OnStreamReady(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::set_OnStreamReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.set_OnStreamUpdated
void Meta::Voice::Audio::IAudioClipStream::set_OnStreamUpdated(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::set_OnStreamUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.set_OnStreamComplete
void Meta::Voice::Audio::IAudioClipStream::set_OnStreamComplete(::Meta::Voice::Audio::AudioClipStreamDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::set_OnStreamComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.AddSamples
void Meta::Voice::Audio::IAudioClipStream::AddSamples(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::AddSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.SetTotalSamples
void Meta::Voice::Audio::IAudioClipStream::SetTotalSamples(int totalSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::SetTotalSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalSamples);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.UpdateState
void Meta::Voice::Audio::IAudioClipStream::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::UpdateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioClipStream.Unload
void Meta::Voice::Audio::IAudioClipStream::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioClipStream::Unload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioClipStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.IAudioPlayer
#include "Meta/Voice/Audio/IAudioPlayer.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.get_ClipStream
::Meta::Voice::Audio::IAudioClipStream* Meta::Voice::Audio::IAudioPlayer::get_ClipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::get_ClipStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioClipStream*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.get_IsPlaying
bool Meta::Voice::Audio::IAudioPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::get_IsPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.get_ElapsedSamples
int Meta::Voice::Audio::IAudioPlayer::get_ElapsedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::get_ElapsedSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.Init
void Meta::Voice::Audio::IAudioPlayer::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.GetPlaybackErrors
::StringW Meta::Voice::Audio::IAudioPlayer::GetPlaybackErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::GetPlaybackErrors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.Play
void Meta::Voice::Audio::IAudioPlayer::Play(::Meta::Voice::Audio::IAudioClipStream* clipStream, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipStream, offsetSamples);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.Pause
void Meta::Voice::Audio::IAudioPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::Pause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.Resume
void Meta::Voice::Audio::IAudioPlayer::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::Resume");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.IAudioPlayer.Stop
void Meta::Voice::Audio::IAudioPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioPlayer::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioPlayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.IAudioSourceProvider
#include "Meta/Voice/Audio/IAudioSourceProvider.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.IAudioSourceProvider.get_AudioSource
::UnityEngine::AudioSource* Meta::Voice::Audio::IAudioSourceProvider::get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioSourceProvider::get_AudioSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioSourceProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.IAudioSystem
#include "Meta/Voice/Audio/IAudioSystem.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: Meta.Voice.Audio.IAudioPlayer
#include "Meta/Voice/Audio/IAudioPlayer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Voice.Audio.IAudioSystem.GetAudioClipStream
::Meta::Voice::Audio::IAudioClipStream* Meta::Voice::Audio::IAudioSystem::GetAudioClipStream(int channels, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioSystem::GetAudioClipStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioSystem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioClipStream*, false>(this, ___internal__method, channels, sampleRate);
}
// Autogenerated method: Meta.Voice.Audio.IAudioSystem.GetAudioPlayer
::Meta::Voice::Audio::IAudioPlayer* Meta::Voice::Audio::IAudioSystem::GetAudioPlayer(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::IAudioSystem::GetAudioPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::IAudioSystem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioPlayer*, false>(this, ___internal__method, root);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.UnityAudioClipStream
#include "Meta/Voice/Audio/UnityAudioClipStream.hpp"
// Including type: Meta.Voice.Audio.UnityAudioClipStream/<>c__DisplayClass18_0
#include "Meta/Voice/Audio/UnityAudioClipStream_--c__DisplayClass18_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single DEFAULT_CHUNK_LENGTH
float Meta::Voice::Audio::UnityAudioClipStream::_get_DEFAULT_CHUNK_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_get_DEFAULT_CHUNK_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Meta.Voice.Audio", "UnityAudioClipStream", "DEFAULT_CHUNK_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static public System.Single DEFAULT_CHUNK_LENGTH
void Meta::Voice::Audio::UnityAudioClipStream::_set_DEFAULT_CHUNK_LENGTH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_set_DEFAULT_CHUNK_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Audio", "UnityAudioClipStream", "DEFAULT_CHUNK_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ClipsGenerated
int Meta::Voice::Audio::UnityAudioClipStream::_get_ClipsGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_get_ClipsGenerated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.Voice.Audio", "UnityAudioClipStream", "ClipsGenerated"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ClipsGenerated
void Meta::Voice::Audio::UnityAudioClipStream::_set_ClipsGenerated(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_set_ClipsGenerated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Audio", "UnityAudioClipStream", "ClipsGenerated", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.AudioClip> Clips
::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>* Meta::Voice::Audio::UnityAudioClipStream::_get_Clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_get_Clips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>*>("Meta.Voice.Audio", "UnityAudioClipStream", "Clips"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.AudioClip> Clips
void Meta::Voice::Audio::UnityAudioClipStream::_set_Clips(::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::_set_Clips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Audio", "UnityAudioClipStream", "Clips", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip <Clip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Meta::Voice::Audio::UnityAudioClipStream::dyn_$Clip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::dyn_$Clip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _streamable
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Audio::UnityAudioClipStream::dyn__streamable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::dyn__streamable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _chunkSize
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::UnityAudioClipStream::dyn__chunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::dyn__chunkSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chunkSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.get_Clip
::UnityEngine::AudioClip* Meta::Voice::Audio::UnityAudioClipStream::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::get_Clip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::UnityAudioClipStream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.set_Clip
void Meta::Voice::Audio::UnityAudioClipStream::set_Clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::set_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.UpdateClip
void Meta::Voice::Audio::UnityAudioClipStream::UpdateClip(int samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::UpdateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.PreloadCachedClips
void Meta::Voice::Audio::UnityAudioClipStream::PreloadCachedClips(int total, int lengthSamples, int channels, int frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::PreloadCachedClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "PreloadCachedClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(total), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, total, lengthSamples, channels, frequency);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.GenerateCacheClip
void Meta::Voice::Audio::UnityAudioClipStream::GenerateCacheClip(int lengthSamples, int channels, int frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::GenerateCacheClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "GenerateCacheClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lengthSamples, channels, frequency);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.GetCachedClip
::UnityEngine::AudioClip* Meta::Voice::Audio::UnityAudioClipStream::GetCachedClip(int lengthSamples, int channels, int frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::GetCachedClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "GetCachedClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lengthSamples, channels, frequency);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.DoesClipMatch
bool Meta::Voice::Audio::UnityAudioClipStream::DoesClipMatch(::UnityEngine::AudioClip* clip, int lengthSamples, int channels, int frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::DoesClipMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "DoesClipMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, lengthSamples, channels, frequency);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.ReuseCachedClip
void Meta::Voice::Audio::UnityAudioClipStream::ReuseCachedClip(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::ReuseCachedClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "ReuseCachedClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.DestroyCachedClips
void Meta::Voice::Audio::UnityAudioClipStream::DestroyCachedClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::DestroyCachedClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", "DestroyCachedClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream..cctor
void Meta::Voice::Audio::UnityAudioClipStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Audio", "UnityAudioClipStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.AddSamples
void Meta::Voice::Audio::UnityAudioClipStream::AddSamples(::ArrayW<float> newSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::AddSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSamples);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.SetTotalSamples
void Meta::Voice::Audio::UnityAudioClipStream::SetTotalSamples(int totalSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::SetTotalSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalSamples);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream.Unload
void Meta::Voice::Audio::UnityAudioClipStream::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::Unload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioClipStream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.UnityAudioClipStream/<>c__DisplayClass18_0
#include "Meta/Voice/Audio/UnityAudioClipStream_--c__DisplayClass18_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 lengthSamples
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_lengthSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_lengthSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lengthSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 channels
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frequency
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioClipStream/<>c__DisplayClass18_0.<GetCachedClip>b__0
bool Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::$GetCachedClip$b__0(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioClipStream::$$c__DisplayClass18_0::<GetCachedClip>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCachedClip>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.UnityAudioPlayer
#include "Meta/Voice/Audio/UnityAudioPlayer.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Meta::Voice::Audio::UnityAudioPlayer::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cloneAudioSource
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Audio::UnityAudioPlayer::dyn__cloneAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::dyn__cloneAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cloneAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.get_AudioSource
::UnityEngine::AudioSource* Meta::Voice::Audio::UnityAudioPlayer::get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::get_AudioSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::UnityAudioPlayer*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.get_CloneAudioSource
bool Meta::Voice::Audio::UnityAudioPlayer::get_CloneAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::get_CloneAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloneAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.Init
void Meta::Voice::Audio::UnityAudioPlayer::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.GetPlaybackErrors
::StringW Meta::Voice::Audio::UnityAudioPlayer::GetPlaybackErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::GetPlaybackErrors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.Play
void Meta::Voice::Audio::UnityAudioPlayer::Play(int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offsetSamples);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.get_IsPlaying
bool Meta::Voice::Audio::UnityAudioPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::get_IsPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.get_ElapsedSamples
int Meta::Voice::Audio::UnityAudioPlayer::get_ElapsedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::get_ElapsedSamples");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.Pause
void Meta::Voice::Audio::UnityAudioPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::Pause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.Resume
void Meta::Voice::Audio::UnityAudioPlayer::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::Resume");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioPlayer.Stop
void Meta::Voice::Audio::UnityAudioPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioPlayer::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::AudioPlayer*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Audio.UnityAudioSystem
#include "Meta/Voice/Audio/UnityAudioSystem.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: Meta.Voice.Audio.IAudioPlayer
#include "Meta/Voice/Audio/IAudioPlayer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single ChunkBufferLength
[[deprecated("Use field access instead!")]] float& Meta::Voice::Audio::UnityAudioSystem::dyn_ChunkBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::dyn_ChunkBufferLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChunkBufferLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AudioClipReadyLength
[[deprecated("Use field access instead!")]] float& Meta::Voice::Audio::UnityAudioSystem::dyn_AudioClipReadyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::dyn_AudioClipReadyLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AudioClipReadyLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AudioClipPreloadCount
[[deprecated("Use field access instead!")]] int& Meta::Voice::Audio::UnityAudioSystem::dyn_AudioClipPreloadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::dyn_AudioClipPreloadCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AudioClipPreloadCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioSystem.Awake
void Meta::Voice::Audio::UnityAudioSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioSystem.OnDestroy
void Meta::Voice::Audio::UnityAudioSystem::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioSystem.GetAudioClipStream
::Meta::Voice::Audio::IAudioClipStream* Meta::Voice::Audio::UnityAudioSystem::GetAudioClipStream(int channels, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::GetAudioClipStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::UnityAudioSystem*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioClipStream*, false>(this, ___internal__method, channels, sampleRate);
}
// Autogenerated method: Meta.Voice.Audio.UnityAudioSystem.GetAudioPlayer
::Meta::Voice::Audio::IAudioPlayer* Meta::Voice::Audio::UnityAudioSystem::GetAudioPlayer(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Audio::UnityAudioSystem::GetAudioPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Audio::UnityAudioSystem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioPlayer*, false>(this, ___internal__method, root);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IWitRequestEndpointInfo
#include "Meta/WitAi/IWitRequestEndpointInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_UriScheme
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_UriScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_UriScheme");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Authority
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Authority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Port
int Meta::WitAi::IWitRequestEndpointInfo::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_WitApiVersion
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_WitApiVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_WitApiVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Message
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Speech
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Speech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Speech");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Dictation
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Dictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Dictation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Synthesize
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Synthesize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Synthesize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Event
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Event");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestEndpointInfo.get_Converse
::StringW Meta::WitAi::IWitRequestEndpointInfo::get_Converse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestEndpointInfo::get_Converse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestEndpointInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IWitRequestConfiguration
#include "Meta/WitAi/IWitRequestConfiguration.hpp"
// Including type: Meta.WitAi.Data.Info.WitAppInfo
#include "Meta/WitAi/Data/Info/WitAppInfo.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfigurationAssetData
#include "Meta/WitAi/Data/Configuration/WitConfigurationAssetData.hpp"
// Including type: Meta.WitAi.IWitRequestEndpointInfo
#include "Meta/WitAi/IWitRequestEndpointInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetConfigurationId
::StringW Meta::WitAi::IWitRequestConfiguration::GetConfigurationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetConfigurationId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetApplicationId
::StringW Meta::WitAi::IWitRequestConfiguration::GetApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetApplicationId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetApplicationInfo
::Meta::WitAi::Data::Info::WitAppInfo Meta::WitAi::IWitRequestConfiguration::GetApplicationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetApplicationInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Info::WitAppInfo, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetConfigData
::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*> Meta::WitAi::IWitRequestConfiguration::GetConfigData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetConfigData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetEndpointInfo
::Meta::WitAi::IWitRequestEndpointInfo* Meta::WitAi::IWitRequestConfiguration::GetEndpointInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetEndpointInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::IWitRequestEndpointInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.GetClientAccessToken
::StringW Meta::WitAi::IWitRequestConfiguration::GetClientAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::GetClientAccessToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IWitRequestConfiguration.UpdateDataAssets
void Meta::WitAi::IWitRequestConfiguration::UpdateDataAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRequestConfiguration::UpdateDataAssets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRequestConfiguration*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ComponentExtensions
#include "Meta/WitAi/ComponentExtensions.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,Meta.WitAi.ComponentExtensions/ComponentCopyData> _data
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Meta::WitAi::ComponentExtensions::ComponentCopyData>* Meta::WitAi::ComponentExtensions::_get__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ComponentExtensions::_get__data");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Meta::WitAi::ComponentExtensions::ComponentCopyData>*>("Meta.WitAi", "ComponentExtensions", "_data")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,Meta.WitAi.ComponentExtensions/ComponentCopyData> _data
void Meta::WitAi::ComponentExtensions::_set__data(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Meta::WitAi::ComponentExtensions::ComponentCopyData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ComponentExtensions::_set__data");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "ComponentExtensions", "_data", value));
}
// Autogenerated method: Meta.WitAi.ComponentExtensions.IsObsolete
bool Meta::WitAi::ComponentExtensions::IsObsolete(::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeData*>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ComponentExtensions::IsObsolete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "ComponentExtensions", "IsObsolete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributes);
}
// Autogenerated method: Meta.WitAi.ComponentExtensions..cctor
void Meta::WitAi::ComponentExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ComponentExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "ComponentExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CoroutineUtility
#include "Meta/WitAi/CoroutineUtility.hpp"
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.CoroutineUtility.StartCoroutine
::Meta::WitAi::CoroutineUtility::CoroutinePerformer* Meta::WitAi::CoroutineUtility::StartCoroutine(::System::Collections::IEnumerator* asyncMethod, bool useUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "CoroutineUtility", "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncMethod), ::il2cpp_utils::ExtractType(useUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::CoroutineUtility::CoroutinePerformer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncMethod, useUpdate);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility.GetPerformer
::Meta::WitAi::CoroutineUtility::CoroutinePerformer* Meta::WitAi::CoroutineUtility::GetPerformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::GetPerformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "CoroutineUtility", "GetPerformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::CoroutineUtility::CoroutinePerformer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer.hpp"
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer_-CoroutineIterateEnumerator-d__9.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn_$IsRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn_$IsRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useUpdate
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__useUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__useUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator _method
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_method"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.get_IsRunning
bool Meta::WitAi::CoroutineUtility::CoroutinePerformer::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.set_IsRunning
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::set_IsRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::set_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.Awake
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineBegin
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineBegin(::System::Collections::IEnumerator* asyncMethod, bool useUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncMethod), ::il2cpp_utils::ExtractType(useUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncMethod, useUpdate);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineIterateEnumerator
::System::Collections::IEnumerator* Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineIterateEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineIterateEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineIterateEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.Update
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineIterateUpdate
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineIterateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineIterateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineIterateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.MoveNext
bool Meta::WitAi::CoroutineUtility::CoroutinePerformer::MoveNext(::System::Collections::IEnumerator* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.OnDestroy
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineCancel
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineComplete
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer.CoroutineUnload
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::CoroutineUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoroutineUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer_-CoroutineIterateEnumerator-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CoroutineUtility/CoroutinePerformer <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CoroutineUtility::CoroutinePerformer*& Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CoroutineUtility::CoroutinePerformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9.System.IDisposable.Dispose
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9.MoveNext
bool Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9.System.Collections.IEnumerator.Reset
void Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CoroutineUtility/CoroutinePerformer/<CoroutineIterateEnumerator>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CoroutineUtility::CoroutinePerformer::$CoroutineIterateEnumerator$d__9*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.EnumerableExtensions
#include "Meta/WitAi/EnumerableExtensions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ThreadUtility
#include "Meta/WitAi/ThreadUtility.hpp"
// Including type: Meta.WitAi.ThreadUtility/ThreadPerformer`1
#include "Meta/WitAi/ThreadUtility_ThreadPerformer_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single THREAD_DEFAULT_TIMEOUT
float Meta::WitAi::ThreadUtility::_get_THREAD_DEFAULT_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ThreadUtility::_get_THREAD_DEFAULT_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Meta.WitAi", "ThreadUtility", "THREAD_DEFAULT_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public System.Single THREAD_DEFAULT_TIMEOUT
void Meta::WitAi::ThreadUtility::_set_THREAD_DEFAULT_TIMEOUT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ThreadUtility::_set_THREAD_DEFAULT_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "ThreadUtility", "THREAD_DEFAULT_TIMEOUT", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.TypeExtensions
#include "Meta/WitAi/TypeExtensions.hpp"
// Including type: Meta.WitAi.TypeExtensions/<>c__DisplayClass1_0
#include "Meta/WitAi/TypeExtensions_--c__DisplayClass1_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.TypeExtensions.GetTypes
::System::Collections::Generic::List_1<::System::Type*>* Meta::WitAi::TypeExtensions::GetTypes(::System::Func_2<::System::Type*, bool>* isValid, bool firstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TypeExtensions::GetTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "TypeExtensions", "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValid), ::il2cpp_utils::ExtractType(firstOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Type*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isValid, firstOnly);
}
// Autogenerated method: Meta.WitAi.TypeExtensions.GetSubclassTypes
::System::Collections::Generic::List_1<::System::Type*>* Meta::WitAi::TypeExtensions::GetSubclassTypes(::System::Type* baseType, bool firstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TypeExtensions::GetSubclassTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "TypeExtensions", "GetSubclassTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(firstOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Type*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseType, firstOnly);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.TypeExtensions/<>c__DisplayClass1_0
#include "Meta/WitAi/TypeExtensions_--c__DisplayClass1_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type baseType
[[deprecated("Use field access instead!")]] ::System::Type*& Meta::WitAi::TypeExtensions::$$c__DisplayClass1_0::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TypeExtensions::$$c__DisplayClass1_0::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.TypeExtensions/<>c__DisplayClass1_0.<GetSubclassTypes>b__0
bool Meta::WitAi::TypeExtensions::$$c__DisplayClass1_0::$GetSubclassTypes$b__0(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::TypeExtensions::$$c__DisplayClass1_0::<GetSubclassTypes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSubclassTypes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.UnityObjectExtensions
#include "Meta/WitAi/UnityObjectExtensions.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.UnityObjectExtensions.DestroySafely
void Meta::WitAi::UnityObjectExtensions::DestroySafely(::UnityEngine::Object* unityObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::UnityObjectExtensions::DestroySafely");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "UnityObjectExtensions", "DestroySafely", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unityObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unityObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.VLogLevel
#include "Meta/WitAi/VLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.VLogLevel Error
::Meta::WitAi::VLogLevel Meta::WitAi::VLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::VLogLevel>("Meta.WitAi", "VLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.VLogLevel Error
void Meta::WitAi::VLogLevel::_set_Error(::Meta::WitAi::VLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.VLogLevel Warning
::Meta::WitAi::VLogLevel Meta::WitAi::VLogLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::VLogLevel>("Meta.WitAi", "VLogLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.VLogLevel Warning
void Meta::WitAi::VLogLevel::_set_Warning(::Meta::WitAi::VLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLogLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.VLogLevel Log
::Meta::WitAi::VLogLevel Meta::WitAi::VLogLevel::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::VLogLevel>("Meta.WitAi", "VLogLevel", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.VLogLevel Log
void Meta::WitAi::VLogLevel::_set_Log(::Meta::WitAi::VLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLogLevel", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.VLogLevel Info
::Meta::WitAi::VLogLevel Meta::WitAi::VLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::VLogLevel>("Meta.WitAi", "VLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.VLogLevel Info
void Meta::WitAi::VLogLevel::_set_Info(::Meta::WitAi::VLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLogLevel", "Info", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::VLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.VLog
#include "Meta/WitAi/VLog.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean <SuppressLogs>k__BackingField
bool Meta::WitAi::VLog::_get_$SuppressLogs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::_get_$SuppressLogs$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Meta.WitAi", "VLog", "<SuppressLogs>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <SuppressLogs>k__BackingField
void Meta::WitAi::VLog::_set_$SuppressLogs$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::_set_$SuppressLogs$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLog", "<SuppressLogs>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`3<System.Text.StringBuilder,System.String,Meta.WitAi.VLogLevel> OnPreLog
::System::Action_3<::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::VLogLevel>* Meta::WitAi::VLog::_get_OnPreLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::_get_OnPreLog");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::VLogLevel>*>("Meta.WitAi", "VLog", "OnPreLog")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<System.Text.StringBuilder,System.String,Meta.WitAi.VLogLevel> OnPreLog
void Meta::WitAi::VLog::_set_OnPreLog(::System::Action_3<::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::VLogLevel>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::_set_OnPreLog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "VLog", "OnPreLog", value));
}
// Autogenerated method: Meta.WitAi.VLog.get_SuppressLogs
bool Meta::WitAi::VLog::get_SuppressLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::get_SuppressLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "get_SuppressLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.VLog.set_SuppressLogs
void Meta::WitAi::VLog::set_SuppressLogs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::set_SuppressLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "set_SuppressLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VLog.add_OnPreLog
void Meta::WitAi::VLog::add_OnPreLog(::System::Action_3<::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::VLogLevel>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::add_OnPreLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "add_OnPreLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VLog.remove_OnPreLog
void Meta::WitAi::VLog::remove_OnPreLog(::System::Action_3<::System::Text::StringBuilder*, ::StringW, ::Meta::WitAi::VLogLevel>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::remove_OnPreLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "remove_OnPreLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VLog.I
void Meta::WitAi::VLog::I(::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::I");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "I", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, log);
}
// Autogenerated method: Meta.WitAi.VLog.I
void Meta::WitAi::VLog::I(::StringW logCategory, ::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::I");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "I", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCategory), ::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCategory, log);
}
// Autogenerated method: Meta.WitAi.VLog.D
void Meta::WitAi::VLog::D(::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, log);
}
// Autogenerated method: Meta.WitAi.VLog.D
void Meta::WitAi::VLog::D(::StringW logCategory, ::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCategory), ::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCategory, log);
}
// Autogenerated method: Meta.WitAi.VLog.W
void Meta::WitAi::VLog::W(::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::W");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "W", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, log);
}
// Autogenerated method: Meta.WitAi.VLog.W
void Meta::WitAi::VLog::W(::StringW logCategory, ::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::W");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "W", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCategory), ::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCategory, log);
}
// Autogenerated method: Meta.WitAi.VLog.E
void Meta::WitAi::VLog::E(::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::E");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "E", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, log);
}
// Autogenerated method: Meta.WitAi.VLog.E
void Meta::WitAi::VLog::E(::StringW logCategory, ::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::E");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "E", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCategory), ::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCategory, log);
}
// Autogenerated method: Meta.WitAi.VLog.Log
void Meta::WitAi::VLog::Log(::Meta::WitAi::VLogLevel logType, ::StringW logCategory, ::Il2CppObject* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(logCategory), ::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logType, logCategory, log);
}
// Autogenerated method: Meta.WitAi.VLog.GetCallingCategory
::StringW Meta::WitAi::VLog::GetCallingCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::GetCallingCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "GetCallingCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.VLog.WrapWithCallingLink
void Meta::WitAi::VLog::WrapWithCallingLink(::System::Text::StringBuilder* builder, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::WrapWithCallingLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "WrapWithCallingLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, startIndex);
}
// Autogenerated method: Meta.WitAi.VLog.WrapWithLogColor
void Meta::WitAi::VLog::WrapWithLogColor(::System::Text::StringBuilder* builder, int startIndex, ::Meta::WitAi::VLogLevel logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VLog::WrapWithLogColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "VLog", "WrapWithLogColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(logType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, startIndex, logType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitConstants
#include "Meta/WitAi/WitConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String API_VERSION
::StringW Meta::WitAi::WitConstants::_get_API_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_API_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "API_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String API_VERSION
void Meta::WitAi::WitConstants::_set_API_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_API_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "API_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SDK_VERSION
::StringW Meta::WitAi::WitConstants::_get_SDK_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_SDK_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "SDK_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_VERSION
void Meta::WitAi::WitConstants::_set_SDK_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_SDK_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "SDK_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String CLIENT_NAME
::StringW Meta::WitAi::WitConstants::_get_CLIENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_CLIENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "CLIENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String CLIENT_NAME
void Meta::WitAi::WitConstants::_set_CLIENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_CLIENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "CLIENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.String URI_SCHEME
::StringW Meta::WitAi::WitConstants::_get_URI_SCHEME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_URI_SCHEME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "URI_SCHEME"));
}
// Autogenerated static field setter
// Set static field: static public System.String URI_SCHEME
void Meta::WitAi::WitConstants::_set_URI_SCHEME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_URI_SCHEME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "URI_SCHEME", value));
}
// Autogenerated static field getter
// Get static field: static public System.String URI_AUTHORITY
::StringW Meta::WitAi::WitConstants::_get_URI_AUTHORITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_URI_AUTHORITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "URI_AUTHORITY"));
}
// Autogenerated static field setter
// Set static field: static public System.String URI_AUTHORITY
void Meta::WitAi::WitConstants::_set_URI_AUTHORITY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_URI_AUTHORITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "URI_AUTHORITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 URI_DEFAULT_PORT
int Meta::WitAi::WitConstants::_get_URI_DEFAULT_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_URI_DEFAULT_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "URI_DEFAULT_PORT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 URI_DEFAULT_PORT
void Meta::WitAi::WitConstants::_set_URI_DEFAULT_PORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_URI_DEFAULT_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "URI_DEFAULT_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_REQUEST_ID
::StringW Meta::WitAi::WitConstants::_get_HEADER_REQUEST_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_REQUEST_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_REQUEST_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_REQUEST_ID
void Meta::WitAi::WitConstants::_set_HEADER_REQUEST_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_REQUEST_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_REQUEST_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_AUTH
::StringW Meta::WitAi::WitConstants::_get_HEADER_AUTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_AUTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_AUTH"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_AUTH
void Meta::WitAi::WitConstants::_set_HEADER_AUTH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_AUTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_AUTH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_USERAGENT
::StringW Meta::WitAi::WitConstants::_get_HEADER_USERAGENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_USERAGENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_USERAGENT"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_USERAGENT
void Meta::WitAi::WitConstants::_set_HEADER_USERAGENT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_USERAGENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_USERAGENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_USERAGENT_CONFID_MISSING
::StringW Meta::WitAi::WitConstants::_get_HEADER_USERAGENT_CONFID_MISSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_USERAGENT_CONFID_MISSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_USERAGENT_CONFID_MISSING"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_USERAGENT_CONFID_MISSING
void Meta::WitAi::WitConstants::_set_HEADER_USERAGENT_CONFID_MISSING(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_USERAGENT_CONFID_MISSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_USERAGENT_CONFID_MISSING", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_POST_CONTENT
::StringW Meta::WitAi::WitConstants::_get_HEADER_POST_CONTENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_POST_CONTENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_POST_CONTENT"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_POST_CONTENT
void Meta::WitAi::WitConstants::_set_HEADER_POST_CONTENT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_POST_CONTENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_POST_CONTENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HEADER_GET_CONTENT
::StringW Meta::WitAi::WitConstants::_get_HEADER_GET_CONTENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_HEADER_GET_CONTENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "HEADER_GET_CONTENT"));
}
// Autogenerated static field setter
// Set static field: static public System.String HEADER_GET_CONTENT
void Meta::WitAi::WitConstants::_set_HEADER_GET_CONTENT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_HEADER_GET_CONTENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "HEADER_GET_CONTENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_SPEECH
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_SPEECH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_SPEECH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_SPEECH"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_SPEECH
void Meta::WitAi::WitConstants::_set_ENDPOINT_SPEECH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_SPEECH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_SPEECH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_MESSAGE
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_MESSAGE
void Meta::WitAi::WitConstants::_set_ENDPOINT_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_MESSAGE_PARAM
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_MESSAGE_PARAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_MESSAGE_PARAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_MESSAGE_PARAM"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_MESSAGE_PARAM
void Meta::WitAi::WitConstants::_set_ENDPOINT_MESSAGE_PARAM(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_MESSAGE_PARAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_MESSAGE_PARAM", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_JSON_DELIMITER
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_JSON_DELIMITER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_JSON_DELIMITER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_JSON_DELIMITER"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_JSON_DELIMITER
void Meta::WitAi::WitConstants::_set_ENDPOINT_JSON_DELIMITER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_JSON_DELIMITER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_JSON_DELIMITER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_ERROR_PARAM
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_ERROR_PARAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_ERROR_PARAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_ERROR_PARAM"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_ERROR_PARAM
void Meta::WitAi::WitConstants::_set_ENDPOINT_ERROR_PARAM(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_ERROR_PARAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_ERROR_PARAM", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_TTS
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_TTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_TTS
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_TTS_PARAM
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_PARAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_PARAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_PARAM"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_TTS_PARAM
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_PARAM(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_PARAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_PARAM", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_TTS_NO_TEXT
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_NO_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_NO_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_NO_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_TTS_NO_TEXT
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_NO_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_NO_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_NO_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ENDPOINT_TTS_CHANNELS
int Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ENDPOINT_TTS_CHANNELS
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ENDPOINT_TTS_SAMPLE_RATE
int Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_SAMPLE_RATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_SAMPLE_RATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_SAMPLE_RATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ENDPOINT_TTS_SAMPLE_RATE
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_SAMPLE_RATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_SAMPLE_RATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_SAMPLE_RATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ENDPOINT_TTS_TIMEOUT
int Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ENDPOINT_TTS_TIMEOUT
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_TIMEOUT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_TIMEOUT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ENDPOINT_TTS_MAX_TEXT_LENGTH
int Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_MAX_TEXT_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_TTS_MAX_TEXT_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_MAX_TEXT_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ENDPOINT_TTS_MAX_TEXT_LENGTH
void Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_MAX_TEXT_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_TTS_MAX_TEXT_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_TTS_MAX_TEXT_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ERROR_TTS_CACHE_DOWNLOAD
::StringW Meta::WitAi::WitConstants::_get_ERROR_TTS_CACHE_DOWNLOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_TTS_CACHE_DOWNLOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ERROR_TTS_CACHE_DOWNLOAD"));
}
// Autogenerated static field setter
// Set static field: static public System.String ERROR_TTS_CACHE_DOWNLOAD
void Meta::WitAi::WitConstants::_set_ERROR_TTS_CACHE_DOWNLOAD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_TTS_CACHE_DOWNLOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_TTS_CACHE_DOWNLOAD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_DICTATION
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_DICTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_DICTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_DICTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_DICTATION
void Meta::WitAi::WitConstants::_set_ENDPOINT_DICTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_DICTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_DICTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_COMPOSER_SPEECH
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_COMPOSER_SPEECH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_COMPOSER_SPEECH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_COMPOSER_SPEECH"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_COMPOSER_SPEECH
void Meta::WitAi::WitConstants::_set_ENDPOINT_COMPOSER_SPEECH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_COMPOSER_SPEECH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_COMPOSER_SPEECH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENDPOINT_COMPOSER_MESSAGE
::StringW Meta::WitAi::WitConstants::_get_ENDPOINT_COMPOSER_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ENDPOINT_COMPOSER_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "ENDPOINT_COMPOSER_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENDPOINT_COMPOSER_MESSAGE
void Meta::WitAi::WitConstants::_set_ENDPOINT_COMPOSER_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ENDPOINT_COMPOSER_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ENDPOINT_COMPOSER_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String CANCEL_ERROR
::StringW Meta::WitAi::WitConstants::_get_CANCEL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_CANCEL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "CANCEL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.String CANCEL_ERROR
void Meta::WitAi::WitConstants::_set_CANCEL_ERROR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_CANCEL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "CANCEL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String CANCEL_MESSAGE_DEFAULT
::StringW Meta::WitAi::WitConstants::_get_CANCEL_MESSAGE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_CANCEL_MESSAGE_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "CANCEL_MESSAGE_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.String CANCEL_MESSAGE_DEFAULT
void Meta::WitAi::WitConstants::_set_CANCEL_MESSAGE_DEFAULT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_CANCEL_MESSAGE_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "CANCEL_MESSAGE_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String CANCEL_MESSAGE_PRE_SEND
::StringW Meta::WitAi::WitConstants::_get_CANCEL_MESSAGE_PRE_SEND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_CANCEL_MESSAGE_PRE_SEND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitConstants", "CANCEL_MESSAGE_PRE_SEND"));
}
// Autogenerated static field setter
// Set static field: static public System.String CANCEL_MESSAGE_PRE_SEND
void Meta::WitAi::WitConstants::_set_CANCEL_MESSAGE_PRE_SEND(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_CANCEL_MESSAGE_PRE_SEND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "CANCEL_MESSAGE_PRE_SEND", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_GENERAL
int Meta::WitAi::WitConstants::_get_ERROR_CODE_GENERAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_GENERAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_GENERAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_GENERAL
void Meta::WitAi::WitConstants::_set_ERROR_CODE_GENERAL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_GENERAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_GENERAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_NO_CONFIGURATION
int Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_CONFIGURATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_CONFIGURATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_CONFIGURATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_NO_CONFIGURATION
void Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_CONFIGURATION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_CONFIGURATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_CONFIGURATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_NO_CLIENT_TOKEN
int Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_CLIENT_TOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_CLIENT_TOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_CLIENT_TOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_NO_CLIENT_TOKEN
void Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_CLIENT_TOKEN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_CLIENT_TOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_CLIENT_TOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_NO_DATA_FROM_SERVER
int Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_DATA_FROM_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_NO_DATA_FROM_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_DATA_FROM_SERVER"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_NO_DATA_FROM_SERVER
void Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_DATA_FROM_SERVER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_NO_DATA_FROM_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_NO_DATA_FROM_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_INVALID_DATA_FROM_SERVER
int Meta::WitAi::WitConstants::_get_ERROR_CODE_INVALID_DATA_FROM_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_INVALID_DATA_FROM_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_INVALID_DATA_FROM_SERVER"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_INVALID_DATA_FROM_SERVER
void Meta::WitAi::WitConstants::_set_ERROR_CODE_INVALID_DATA_FROM_SERVER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_INVALID_DATA_FROM_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_INVALID_DATA_FROM_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_ABORTED
int Meta::WitAi::WitConstants::_get_ERROR_CODE_ABORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_ABORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_ABORTED"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_ABORTED
void Meta::WitAi::WitConstants::_set_ERROR_CODE_ABORTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_ABORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_ABORTED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ERROR_CODE_TIMEOUT
int Meta::WitAi::WitConstants::_get_ERROR_CODE_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_get_ERROR_CODE_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi", "WitConstants", "ERROR_CODE_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ERROR_CODE_TIMEOUT
void Meta::WitAi::WitConstants::_set_ERROR_CODE_TIMEOUT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConstants::_set_ERROR_CODE_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitConstants", "ERROR_CODE_TIMEOUT", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Speech.ISpeechEventProvider
#include "Meta/WitAi/Speech/ISpeechEventProvider.hpp"
// Including type: Meta.WitAi.Speech.VoiceSpeechEvents
#include "Meta/WitAi/Speech/VoiceSpeechEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Speech.ISpeechEventProvider.get_SpeechEvents
::Meta::WitAi::Speech::VoiceSpeechEvents* Meta::WitAi::Speech::ISpeechEventProvider::get_SpeechEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::ISpeechEventProvider::get_SpeechEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Speech::ISpeechEventProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Speech::VoiceSpeechEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Speech.VoiceTextEvent
#include "Meta/WitAi/Speech/VoiceTextEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Speech.VoiceAudioEvent
#include "Meta/WitAi/Speech/VoiceAudioEvent.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Speech.VoiceSpeechEvents
#include "Meta/WitAi/Speech/VoiceSpeechEvents.hpp"
// Including type: Meta.WitAi.Speech.VoiceTextEvent
#include "Meta/WitAi/Speech/VoiceTextEvent.hpp"
// Including type: Meta.WitAi.Speech.VoiceAudioEvent
#include "Meta/WitAi/Speech/VoiceAudioEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceTextEvent OnTextPlaybackStart
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceTextEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTextPlaybackStart"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceTextEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceTextEvent OnTextPlaybackCancelled
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceTextEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackCancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTextPlaybackCancelled"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceTextEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceTextEvent OnTextPlaybackFinished
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceTextEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnTextPlaybackFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTextPlaybackFinished"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceTextEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceAudioEvent OnAudioClipPlaybackReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceAudioEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioClipPlaybackReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceAudioEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceAudioEvent OnAudioClipPlaybackStart
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceAudioEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioClipPlaybackStart"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceAudioEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceAudioEvent OnAudioClipPlaybackCancelled
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceAudioEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackCancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioClipPlaybackCancelled"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceAudioEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Speech.VoiceAudioEvent OnAudioClipPlaybackFinished
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Speech::VoiceAudioEvent*& Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Speech::VoiceSpeechEvents::dyn_OnAudioClipPlaybackFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioClipPlaybackFinished"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Speech::VoiceAudioEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.AudioStreamDecodeType
#include "Meta/WitAi/Requests/AudioStreamDecodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType PCM16
::Meta::WitAi::Requests::AudioStreamDecodeType Meta::WitAi::Requests::AudioStreamDecodeType::_get_PCM16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_get_PCM16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::AudioStreamDecodeType>("Meta.WitAi.Requests", "AudioStreamDecodeType", "PCM16"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType PCM16
void Meta::WitAi::Requests::AudioStreamDecodeType::_set_PCM16(::Meta::WitAi::Requests::AudioStreamDecodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_set_PCM16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "AudioStreamDecodeType", "PCM16", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType MP3
::Meta::WitAi::Requests::AudioStreamDecodeType Meta::WitAi::Requests::AudioStreamDecodeType::_get_MP3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_get_MP3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::AudioStreamDecodeType>("Meta.WitAi.Requests", "AudioStreamDecodeType", "MP3"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType MP3
void Meta::WitAi::Requests::AudioStreamDecodeType::_set_MP3(::Meta::WitAi::Requests::AudioStreamDecodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_set_MP3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "AudioStreamDecodeType", "MP3", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.AudioStreamDecodeType WAV
::Meta::WitAi::Requests::AudioStreamDecodeType Meta::WitAi::Requests::AudioStreamDecodeType::_get_WAV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_get_WAV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::AudioStreamDecodeType>("Meta.WitAi.Requests", "AudioStreamDecodeType", "WAV"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.AudioStreamDecodeType WAV
void Meta::WitAi::Requests::AudioStreamDecodeType::_set_WAV(::Meta::WitAi::Requests::AudioStreamDecodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::_set_WAV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "AudioStreamDecodeType", "WAV", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamDecodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamDecodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.AudioStreamHandler
#include "Meta/WitAi/Requests/AudioStreamHandler.hpp"
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass24_0
#include "Meta/WitAi/Requests/AudioStreamHandler_--c__DisplayClass24_0.hpp"
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass36_0
#include "Meta/WitAi/Requests/AudioStreamHandler_--c__DisplayClass36_0.hpp"
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31
#include "Meta/WitAi/Requests/AudioStreamHandler_-FinalWait-d__31.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Audio.IAudioClipStream <ClipStream>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioClipStream*& Meta::WitAi::Requests::AudioStreamHandler::dyn_$ClipStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn_$ClipStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClipStream>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::IAudioClipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.AudioStreamDecodeType <DecodeType>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::AudioStreamDecodeType& Meta::WitAi::Requests::AudioStreamHandler::dyn_$DecodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn_$DecodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DecodeType>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::AudioStreamDecodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsStreamReady>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::AudioStreamHandler::dyn_$IsStreamReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn_$IsStreamReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsStreamReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsStreamComplete>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::AudioStreamHandler::dyn_$IsStreamComplete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn_$IsStreamComplete$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsStreamComplete>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasLeftover
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::AudioStreamHandler::dyn__hasLeftover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__hasLeftover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasLeftover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _leftovers
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Requests::AudioStreamHandler::dyn__leftovers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__leftovers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftovers"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _decodingChunks
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::dyn__decodingChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__decodingChunks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decodingChunks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requestComplete
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::AudioStreamHandler::dyn__requestComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__requestComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _errorDecoded
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::dyn__errorDecoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__errorDecoded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_errorDecoded"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _errorBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Requests::AudioStreamHandler::dyn__errorBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::dyn__errorBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_errorBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.get_ClipStream
::Meta::Voice::Audio::IAudioClipStream* Meta::WitAi::Requests::AudioStreamHandler::get_ClipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::get_ClipStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClipStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Voice::Audio::IAudioClipStream*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.set_ClipStream
void Meta::WitAi::Requests::AudioStreamHandler::set_ClipStream(::Meta::Voice::Audio::IAudioClipStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::set_ClipStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClipStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.get_DecodeType
::Meta::WitAi::Requests::AudioStreamDecodeType Meta::WitAi::Requests::AudioStreamHandler::get_DecodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::get_DecodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DecodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::AudioStreamDecodeType, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.set_DecodeType
void Meta::WitAi::Requests::AudioStreamHandler::set_DecodeType(::Meta::WitAi::Requests::AudioStreamDecodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::set_DecodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DecodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.get_IsStreamReady
bool Meta::WitAi::Requests::AudioStreamHandler::get_IsStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::get_IsStreamReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.set_IsStreamReady
void Meta::WitAi::Requests::AudioStreamHandler::set_IsStreamReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::set_IsStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.get_IsStreamComplete
bool Meta::WitAi::Requests::AudioStreamHandler::get_IsStreamComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::get_IsStreamComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.set_IsStreamComplete
void Meta::WitAi::Requests::AudioStreamHandler::set_IsStreamComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::set_IsStreamComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsStreamComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.DecodeData
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::DecodeData(::ArrayW<uint8_t> receiveData, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::DecodeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiveData), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, receiveData, dataLength);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.OnDecodeComplete
void Meta::WitAi::Requests::AudioStreamHandler::OnDecodeComplete(::ArrayW<float> newSamples, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::OnDecodeComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDecodeComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSamples), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSamples, error);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.TryToFinalize
void Meta::WitAi::Requests::AudioStreamHandler::TryToFinalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::TryToFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.FinalWait
::System::Collections::IEnumerator* Meta::WitAi::Requests::AudioStreamHandler::FinalWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::FinalWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.CleanUp
void Meta::WitAi::Requests::AudioStreamHandler::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetDecodeType
::Meta::WitAi::Requests::AudioStreamDecodeType Meta::WitAi::Requests::AudioStreamHandler::GetDecodeType(::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetDecodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "GetDecodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::AudioStreamDecodeType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioType);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.CanDecodeType
bool Meta::WitAi::Requests::AudioStreamHandler::CanDecodeType(::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::CanDecodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "CanDecodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioType);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetClipFromRawData
::UnityEngine::AudioClip* Meta::WitAi::Requests::AudioStreamHandler::GetClipFromRawData(::ArrayW<uint8_t> rawData, ::Meta::WitAi::Requests::AudioStreamDecodeType decodeType, ::StringW clipName, int channels, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetClipFromRawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "GetClipFromRawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(decodeType), ::il2cpp_utils::ExtractType(clipName), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, decodeType, clipName, channels, sampleRate);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetClipFromRawDataAsync
void Meta::WitAi::Requests::AudioStreamHandler::GetClipFromRawDataAsync(::ArrayW<uint8_t> rawData, ::Meta::WitAi::Requests::AudioStreamDecodeType decodeType, ::StringW clipName, int channels, int sampleRate, ::System::Action_2<::UnityEngine::AudioClip*, ::StringW>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetClipFromRawDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "GetClipFromRawDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(decodeType), ::il2cpp_utils::ExtractType(clipName), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, decodeType, clipName, channels, sampleRate, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.DecodeAudio
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::DecodeAudio(::ArrayW<uint8_t> rawData, ::Meta::WitAi::Requests::AudioStreamDecodeType decodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::DecodeAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "DecodeAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(decodeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, decodeType);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetClipFromSamples
::UnityEngine::AudioClip* Meta::WitAi::Requests::AudioStreamHandler::GetClipFromSamples(::ArrayW<float> samples, ::StringW clipName, int channels, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetClipFromSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "GetClipFromSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(clipName), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samples, clipName, channels, sampleRate);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetClipSamplesFromContentLength
int Meta::WitAi::Requests::AudioStreamHandler::GetClipSamplesFromContentLength(uint64_t contentLength, ::Meta::WitAi::Requests::AudioStreamDecodeType decodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetClipSamplesFromContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "GetClipSamplesFromContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentLength), ::il2cpp_utils::ExtractType(decodeType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contentLength, decodeType);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.DecodePCM16
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::DecodePCM16(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::DecodePCM16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "DecodePCM16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.DecodeChunkPCM16
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::DecodeChunkPCM16(::ArrayW<uint8_t> chunkData, int chunkLength, ByRef<bool> hasLeftover, ByRef<::ArrayW<uint8_t>> leftovers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::DecodeChunkPCM16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "DecodeChunkPCM16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunkData), ::il2cpp_utils::ExtractType(chunkLength), ::il2cpp_utils::ExtractType(hasLeftover), ::il2cpp_utils::ExtractType(leftovers)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chunkData, chunkLength, byref(hasLeftover), byref(leftovers));
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.DecodeSamplePCM16
float Meta::WitAi::Requests::AudioStreamHandler::DecodeSamplePCM16(::ArrayW<uint8_t> rawData, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::DecodeSamplePCM16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "AudioStreamHandler", "DecodeSamplePCM16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, index);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.ReceiveContentLengthHeader
void Meta::WitAi::Requests::AudioStreamHandler::ReceiveContentLengthHeader(uint64_t contentLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::ReceiveContentLengthHeader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contentLength);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.ReceiveData
bool Meta::WitAi::Requests::AudioStreamHandler::ReceiveData(::ArrayW<uint8_t> receiveData, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::ReceiveData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, receiveData, dataLength);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetText
::StringW Meta::WitAi::Requests::AudioStreamHandler::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.GetProgress
float Meta::WitAi::Requests::AudioStreamHandler::GetProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::GetProgress");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler.CompleteContent
void Meta::WitAi::Requests::AudioStreamHandler::CompleteContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::CompleteContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass24_0
#include "Meta/WitAi/Requests/AudioStreamHandler_--c__DisplayClass24_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.AudioStreamHandler <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::AudioStreamHandler*& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::AudioStreamHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] receiveData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_receiveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_receiveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dataLength
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_dataLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::dyn_dataLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass24_0.<ReceiveData>b__0
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::$ReceiveData$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass24_0::<ReceiveData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReceiveData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass36_0
#include "Meta/WitAi/Requests/AudioStreamHandler_--c__DisplayClass36_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] rawData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_rawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_rawData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.AudioStreamDecodeType decodeType
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::AudioStreamDecodeType& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_decodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_decodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decodeType"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::AudioStreamDecodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<UnityEngine.AudioClip,System.String> onComplete
[[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::AudioClip*, ::StringW>*& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::AudioClip*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String clipName
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_clipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_clipName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 channels
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sampleRate
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::dyn_sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass36_0.<GetClipFromRawDataAsync>b__0
::ArrayW<float> Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::$GetClipFromRawDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::<GetClipFromRawDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetClipFromRawDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<>c__DisplayClass36_0.<GetClipFromRawDataAsync>b__1
void Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::$GetClipFromRawDataAsync$b__1(::ArrayW<float> samples, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$$c__DisplayClass36_0::<GetClipFromRawDataAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetClipFromRawDataAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31
#include "Meta/WitAi/Requests/AudioStreamHandler_-FinalWait-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.AudioStreamHandler <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::AudioStreamHandler*& Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::AudioStreamHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31.System.IDisposable.Dispose
void Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31.MoveNext
bool Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31.System.Collections.IEnumerator.Reset
void Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.AudioStreamHandler/<FinalWait>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::AudioStreamHandler::$FinalWait$d__31*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.IVRequestStreamable
#include "Meta/WitAi/Requests/IVRequestStreamable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Requests.IVRequestStreamable.get_IsStreamReady
bool Meta::WitAi::Requests::IVRequestStreamable::get_IsStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::IVRequestStreamable::get_IsStreamReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::IVRequestStreamable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.IVRequestStreamable.get_IsStreamComplete
bool Meta::WitAi::Requests::IVRequestStreamable::get_IsStreamComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::IVRequestStreamable::get_IsStreamComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::IVRequestStreamable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest
#include "Meta/WitAi/Requests/VRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestProgressDelegate
#include "Meta/WitAi/Requests/VRequest_RequestProgressDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate
#include "Meta/WitAi/Requests/VRequest_RequestFirstResponseDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass45_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass45_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass46_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass46_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass47_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass47_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass48_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass48_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass49_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass49_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass50_0`1
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass50_0_1.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass50_1`1
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass50_1_1.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass56_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass56_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38
#include "Meta/WitAi/Requests/VRequest_-PerformUpdate-d__38.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxConcurrentRequests
int Meta::WitAi::Requests::VRequest::_get_MaxConcurrentRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::_get_MaxConcurrentRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Requests", "VRequest", "MaxConcurrentRequests"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxConcurrentRequests
void Meta::WitAi::Requests::VRequest::_set_MaxConcurrentRequests(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::_set_MaxConcurrentRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "VRequest", "MaxConcurrentRequests", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _requestCount
int Meta::WitAi::Requests::VRequest::_get__requestCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::_get__requestCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Requests", "VRequest", "_requestCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _requestCount
void Meta::WitAi::Requests::VRequest::_set__requestCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::_set__requestCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "VRequest", "_requestCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Timeout>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VRequest::dyn_$Timeout$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$Timeout$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timeout>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPerforming>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::VRequest::dyn_$IsPerforming$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$IsPerforming$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPerforming>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsComplete>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::VRequest::dyn_$IsComplete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$IsComplete$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsComplete>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ResponseCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VRequest::dyn_$ResponseCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$ResponseCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResponseCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <UploadProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Requests::VRequest::dyn_$UploadProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$UploadProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UploadProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <DownloadProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Requests::VRequest::dyn_$DownloadProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn_$DownloadProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DownloadProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest _request
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Meta::WitAi::Requests::VRequest::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VRequest/RequestProgressDelegate _onDownloadProgress
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestProgressDelegate*& Meta::WitAi::Requests::VRequest::dyn__onDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn__onDownloadProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onDownloadProgress"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestProgressDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate _onFirstResponse
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate*& Meta::WitAi::Requests::VRequest::dyn__onFirstResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn__onFirstResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFirstResponse"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<UnityEngine.Networking.UnityWebRequest> _onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::UnityEngine::Networking::UnityWebRequest*>*& Meta::WitAi::Requests::VRequest::dyn__onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn__onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::UnityEngine::Networking::UnityWebRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.CoroutineUtility/CoroutinePerformer _coroutine
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CoroutineUtility::CoroutinePerformer*& Meta::WitAi::Requests::VRequest::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CoroutineUtility::CoroutinePerformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_Timeout
int Meta::WitAi::Requests::VRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_Timeout
void Meta::WitAi::Requests::VRequest::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_IsPerforming
bool Meta::WitAi::Requests::VRequest::get_IsPerforming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_IsPerforming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPerforming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_IsPerforming
void Meta::WitAi::Requests::VRequest::set_IsPerforming(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_IsPerforming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPerforming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_IsComplete
bool Meta::WitAi::Requests::VRequest::get_IsComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_IsComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_IsComplete
void Meta::WitAi::Requests::VRequest::set_IsComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_IsComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_ResponseCode
int Meta::WitAi::Requests::VRequest::get_ResponseCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_ResponseCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_ResponseCode
void Meta::WitAi::Requests::VRequest::set_ResponseCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_ResponseCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResponseCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_UploadProgress
float Meta::WitAi::Requests::VRequest::get_UploadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_UploadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UploadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_UploadProgress
void Meta::WitAi::Requests::VRequest::set_UploadProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_UploadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UploadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.get_DownloadProgress
float Meta::WitAi::Requests::VRequest::get_DownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::get_DownloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DownloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.set_DownloadProgress
void Meta::WitAi::Requests::VRequest::set_DownloadProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::set_DownloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DownloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.Request
bool Meta::WitAi::Requests::VRequest::Request(::UnityEngine::Networking::UnityWebRequest* unityRequest, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::UnityEngine::Networking::UnityWebRequest*>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::Request");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unityRequest, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.CleanUrl
::StringW Meta::WitAi::Requests::VRequest::CleanUrl(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::CleanUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, url);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.GetHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::VRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::GetHeaders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.PerformUpdate
::System::Collections::IEnumerator* Meta::WitAi::Requests::VRequest::PerformUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::PerformUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.Begin
void Meta::WitAi::Requests::VRequest::Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::Begin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.IsRequestComplete
bool Meta::WitAi::Requests::VRequest::IsRequestComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::IsRequestComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.Complete
void Meta::WitAi::Requests::VRequest::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::Complete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.Cancel
void Meta::WitAi::Requests::VRequest::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.Unload
void Meta::WitAi::Requests::VRequest::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::Unload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.GetSpecificRequestError
::StringW Meta::WitAi::Requests::VRequest::GetSpecificRequestError(::UnityEngine::Networking::UnityWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::GetSpecificRequestError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "VRequest", "GetSpecificRequestError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestFileHeaders
bool Meta::WitAi::Requests::VRequest::RequestFileHeaders(::System::Uri* uri, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFileHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestFileHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestFile
bool Meta::WitAi::Requests::VRequest::RequestFile(::System::Uri* uri, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::ArrayW<uint8_t>>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestFileDownload
bool Meta::WitAi::Requests::VRequest::RequestFileDownload(::StringW downloadPath, ::UnityEngine::Networking::UnityWebRequest* unityRequest, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFileDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestFileDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(downloadPath), ::il2cpp_utils::ExtractType(unityRequest), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, downloadPath, unityRequest, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestFileExists
bool Meta::WitAi::Requests::VRequest::RequestFileExists(::StringW checkPath, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFileExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestFileExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkPath), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, checkPath, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestText
bool Meta::WitAi::Requests::VRequest::RequestText(::UnityEngine::Networking::UnityWebRequest* unityRequest, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::StringW>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unityRequest), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unityRequest, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestAudioStream
bool Meta::WitAi::Requests::VRequest::RequestAudioStream(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::UnityEngine::Networking::UnityWebRequest* unityRequest, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>* onClipStreamReady, ::UnityEngine::AudioType audioType, bool audioStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipStream), ::il2cpp_utils::ExtractType(unityRequest), ::il2cpp_utils::ExtractType(onClipStreamReady), ::il2cpp_utils::ExtractType(audioType), ::il2cpp_utils::ExtractType(audioStream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipStream, unityRequest, onClipStreamReady, audioType, audioStream);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.OnRequestAudioReady
void Meta::WitAi::Requests::VRequest::OnRequestAudioReady(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::UnityEngine::AudioType audioType, ::UnityEngine::Networking::UnityWebRequest* request, ::StringW error, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>* onClipStreamReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::OnRequestAudioReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestAudioReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipStream), ::il2cpp_utils::ExtractType(audioType), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(onClipStreamReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipStream, audioType, request, error, onClipStreamReady);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest.RequestAudioStream
bool Meta::WitAi::Requests::VRequest::RequestAudioStream(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::System::Uri* uri, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>* onClipReady, ::UnityEngine::AudioType audioType, bool audioStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipStream), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(onClipReady), ::il2cpp_utils::ExtractType(audioType), ::il2cpp_utils::ExtractType(audioStream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipStream, uri, onClipReady, audioType, audioStream);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest..cctor
void Meta::WitAi::Requests::VRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "VRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Requests.VRequest/RequestProgressDelegate
#include "Meta/WitAi/Requests/VRequest_RequestProgressDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestProgressDelegate.Invoke
void Meta::WitAi::Requests::VRequest::RequestProgressDelegate::Invoke(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestProgressDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestProgressDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestProgressDelegate.BeginInvoke
::System::IAsyncResult* Meta::WitAi::Requests::VRequest::RequestProgressDelegate::BeginInvoke(float progress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestProgressDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestProgressDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, progress, callback, object);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestProgressDelegate.EndInvoke
void Meta::WitAi::Requests::VRequest::RequestProgressDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestProgressDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestProgressDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate
#include "Meta/WitAi/Requests/VRequest_RequestFirstResponseDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate.Invoke
void Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate.BeginInvoke
::System::IAsyncResult* Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate.EndInvoke
void Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::RequestFirstResponseDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass45_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass45_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.Collections.Generic.Dictionary`2<System.String,System.String>> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass45_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass45_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass45_0.<RequestFileHeaders>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass45_0::$RequestFileHeaders$b__0(::UnityEngine::Networking::UnityWebRequest* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass45_0::<RequestFileHeaders>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFileHeaders>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass46_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass46_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.Byte[]> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::ArrayW<uint8_t>>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass46_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass46_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass46_0.<RequestFile>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass46_0::$RequestFile$b__0(::UnityEngine::Networking::UnityWebRequest* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass46_0::<RequestFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass47_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass47_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String tempDownloadPath
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_tempDownloadPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_tempDownloadPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempDownloadPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String downloadPath
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_downloadPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_downloadPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.Boolean> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass47_0.<RequestFileDownload>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::$RequestFileDownload$b__0(::UnityEngine::Networking::UnityWebRequest* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass47_0::<RequestFileDownload>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFileDownload>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass48_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass48_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.Boolean> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass48_0.<RequestFileExists>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::$RequestFileExists$b__0(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* headers, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::<RequestFileExists>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFileExists>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headers, error);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass48_0.<RequestFileExists>b__1
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::$RequestFileExists$b__1(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::<RequestFileExists>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFileExists>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass48_0.<RequestFileExists>b__2
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::$RequestFileExists$b__2(::ArrayW<uint8_t> response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass48_0::<RequestFileExists>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestFileExists>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass49_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass49_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.String> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::StringW>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass49_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass49_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass49_0.<RequestText>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass49_0::$RequestText$b__0(::UnityEngine::Networking::UnityWebRequest* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass49_0::<RequestText>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestText>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VRequest/<>c__DisplayClass56_0
#include "Meta/WitAi/Requests/VRequest_--c__DisplayClass56_0.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.Voice.Audio.IAudioClipStream clipStream
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioClipStream*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_clipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_clipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipStream"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::IAudioClipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioType audioType
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioType& Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_audioType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_audioType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioType"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<Meta.Voice.Audio.IAudioClipStream> onClipStreamReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>*& Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_onClipStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::dyn_onClipStreamReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onClipStreamReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<>c__DisplayClass56_0.<RequestAudioStream>b__0
void Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::$RequestAudioStream$b__0(::UnityEngine::Networking::UnityWebRequest* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$$c__DisplayClass56_0::<RequestAudioStream>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestAudioStream>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38
#include "Meta/WitAi/Requests/VRequest_-PerformUpdate-d__38.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest*& Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38.System.IDisposable.Dispose
void Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38.MoveNext
bool Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38.System.Collections.IEnumerator.Reset
void Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VRequest/<PerformUpdate>d__38.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest::$PerformUpdate$d__38*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitMessageVRequest
#include "Meta/WitAi/Requests/WitMessageVRequest.hpp"
// Including type: Meta.WitAi.IWitRequestConfiguration
#include "Meta/WitAi/IWitRequestConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestProgressDelegate
#include "Meta/WitAi/Requests/VRequest_RequestProgressDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate
#include "Meta/WitAi/Requests/VRequest_RequestFirstResponseDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Requests.WitMessageVRequest.MessageRequest
bool Meta::WitAi::Requests::WitMessageVRequest::MessageRequest(::StringW text, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* queryParams, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::WitAi::Json::WitResponseNode*>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitMessageVRequest::MessageRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MessageRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(queryParams), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, queryParams, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.WitMessageVRequest.MessageRequest
bool Meta::WitAi::Requests::WitMessageVRequest::MessageRequest(::StringW endpoint, bool post, ::StringW text, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* queryParams, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::WitAi::Json::WitResponseNode*>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitMessageVRequest::MessageRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MessageRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endpoint), ::il2cpp_utils::ExtractType(post), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(queryParams), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endpoint, post, text, queryParams, onComplete);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.TTSWitAudioType
#include "Meta/WitAi/Requests/TTSWitAudioType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.TTSWitAudioType PCM
::Meta::WitAi::Requests::TTSWitAudioType Meta::WitAi::Requests::TTSWitAudioType::_get_PCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_get_PCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::TTSWitAudioType>("Meta.WitAi.Requests", "TTSWitAudioType", "PCM"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.TTSWitAudioType PCM
void Meta::WitAi::Requests::TTSWitAudioType::_set_PCM(::Meta::WitAi::Requests::TTSWitAudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_set_PCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "TTSWitAudioType", "PCM", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.TTSWitAudioType MPEG
::Meta::WitAi::Requests::TTSWitAudioType Meta::WitAi::Requests::TTSWitAudioType::_get_MPEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_get_MPEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::TTSWitAudioType>("Meta.WitAi.Requests", "TTSWitAudioType", "MPEG"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.TTSWitAudioType MPEG
void Meta::WitAi::Requests::TTSWitAudioType::_set_MPEG(::Meta::WitAi::Requests::TTSWitAudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_set_MPEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "TTSWitAudioType", "MPEG", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Requests.TTSWitAudioType WAV
::Meta::WitAi::Requests::TTSWitAudioType Meta::WitAi::Requests::TTSWitAudioType::_get_WAV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_get_WAV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Requests::TTSWitAudioType>("Meta.WitAi.Requests", "TTSWitAudioType", "WAV"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Requests.TTSWitAudioType WAV
void Meta::WitAi::Requests::TTSWitAudioType::_set_WAV(::Meta::WitAi::Requests::TTSWitAudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::_set_WAV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "TTSWitAudioType", "WAV", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::TTSWitAudioType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::TTSWitAudioType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitTTSVRequest
#include "Meta/WitAi/Requests/WitTTSVRequest.hpp"
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass14_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass14_0.hpp"
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass15_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass15_0.hpp"
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass16_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.WitAi.IWitRequestConfiguration
#include "Meta/WitAi/IWitRequestConfiguration.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestProgressDelegate
#include "Meta/WitAi/Requests/VRequest_RequestProgressDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate
#include "Meta/WitAi/Requests/VRequest_RequestFirstResponseDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <TextToSpeak>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::WitTTSVRequest::dyn_$TextToSpeak$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::dyn_$TextToSpeak$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TextToSpeak>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> <TtsData>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::WitAi::Requests::WitTTSVRequest::dyn_$TtsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::dyn_$TtsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TtsData>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Requests.TTSWitAudioType <FileType>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::TTSWitAudioType& Meta::WitAi::Requests::WitTTSVRequest::dyn_$FileType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::dyn_$FileType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FileType>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::TTSWitAudioType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Stream>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::WitTTSVRequest::dyn_$Stream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::dyn_$Stream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Stream>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.get_TextToSpeak
::StringW Meta::WitAi::Requests::WitTTSVRequest::get_TextToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::get_TextToSpeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextToSpeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.get_TtsData
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::WitTTSVRequest::get_TtsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::get_TtsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TtsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.get_FileType
::Meta::WitAi::Requests::TTSWitAudioType Meta::WitAi::Requests::WitTTSVRequest::get_FileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::get_FileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::TTSWitAudioType, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.get_Stream
bool Meta::WitAi::Requests::WitTTSVRequest::get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::get_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.RequestStream
bool Meta::WitAi::Requests::WitTTSVRequest::RequestStream(::Meta::Voice::Audio::IAudioClipStream* clipStream, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>* onClipReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::RequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipStream), ::il2cpp_utils::ExtractType(onClipReady)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipStream, onClipReady);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.RequestDownload
bool Meta::WitAi::Requests::WitTTSVRequest::RequestDownload(::StringW downloadPath, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::RequestDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(downloadPath), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, downloadPath, onComplete);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.EncodePostBytesAsync
void Meta::WitAi::Requests::WitTTSVRequest::EncodePostBytesAsync(::StringW textToSpeak, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* ttsData, ::System::Action_1<::ArrayW<uint8_t>>* onEncoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::EncodePostBytesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodePostBytesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textToSpeak), ::il2cpp_utils::ExtractType(ttsData), ::il2cpp_utils::ExtractType(onEncoded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textToSpeak, ttsData, onEncoded);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.EncodePostData
::ArrayW<uint8_t> Meta::WitAi::Requests::WitTTSVRequest::EncodePostData(::StringW textToSpeak, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* ttsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::EncodePostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodePostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textToSpeak), ::il2cpp_utils::ExtractType(ttsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, textToSpeak, ttsData);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetUnityRequest
::UnityEngine::Networking::UnityWebRequest* Meta::WitAi::Requests::WitTTSVRequest::GetUnityRequest(::Meta::WitAi::Requests::TTSWitAudioType audioType, ::ArrayW<uint8_t> postData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetUnityRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnityRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioType), ::il2cpp_utils::ExtractType(postData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, audioType, postData);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetAudioType
::UnityEngine::AudioType Meta::WitAi::Requests::WitTTSVRequest::GetAudioType(::Meta::WitAi::Requests::TTSWitAudioType witAudioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetAudioType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitTTSVRequest", "GetAudioType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witAudioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witAudioType);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetAudioMimeType
::StringW Meta::WitAi::Requests::WitTTSVRequest::GetAudioMimeType(::Meta::WitAi::Requests::TTSWitAudioType witAudioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetAudioMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitTTSVRequest", "GetAudioMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witAudioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witAudioType);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetAudioExtension
::StringW Meta::WitAi::Requests::WitTTSVRequest::GetAudioExtension(::Meta::WitAi::Requests::TTSWitAudioType witAudioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetAudioExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitTTSVRequest", "GetAudioExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witAudioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witAudioType);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetAudioExtension
::StringW Meta::WitAi::Requests::WitTTSVRequest::GetAudioExtension(::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetAudioExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitTTSVRequest", "GetAudioExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioType);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.CanStreamAudio
bool Meta::WitAi::Requests::WitTTSVRequest::CanStreamAudio(::Meta::WitAi::Requests::TTSWitAudioType witAudioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::CanStreamAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitTTSVRequest", "CanStreamAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witAudioType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witAudioType);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest.GetHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::WitTTSVRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::GetHeaders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::WitVRequest*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass14_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass14_0.hpp"
// Including type: Meta.Voice.Audio.IAudioClipStream
#include "Meta/Voice/Audio/IAudioClipStream.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.WitTTSVRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitTTSVRequest*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::WitTTSVRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.Voice.Audio.IAudioClipStream clipStream
[[deprecated("Use field access instead!")]] ::Meta::Voice::Audio::IAudioClipStream*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_clipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_clipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipStream"))->offset;
  return *reinterpret_cast<::Meta::Voice::Audio::IAudioClipStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<Meta.Voice.Audio.IAudioClipStream> onClipReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_onClipReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::dyn_onClipReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onClipReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::Meta::Voice::Audio::IAudioClipStream*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass14_0.<RequestStream>b__0
void Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::$RequestStream$b__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass14_0::<RequestStream>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestStream>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass15_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass15_0.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.WitTTSVRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitTTSVRequest*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::WitTTSVRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String downloadPath
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_downloadPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_downloadPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1<System.Boolean> onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass15_0.<RequestDownload>b__0
void Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::$RequestDownload$b__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass15_0::<RequestDownload>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestDownload>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0
#include "Meta/WitAi/Requests/WitTTSVRequest_--c__DisplayClass16_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.WitTTSVRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitTTSVRequest*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::WitTTSVRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String textToSpeak
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_textToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_textToSpeak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textToSpeak"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> ttsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_ttsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_ttsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ttsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Byte[]> onEncoded
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<uint8_t>>*& Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_onEncoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::dyn_onEncoded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onEncoded"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0.<EncodePostBytesAsync>b__0
::ArrayW<uint8_t> Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::<EncodePostBytesAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EncodePostBytesAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitTTSVRequest/<>c__DisplayClass16_0.<EncodePostBytesAsync>b__1
void Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::$EncodePostBytesAsync$b__1(::ArrayW<uint8_t> bytes, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitTTSVRequest::$$c__DisplayClass16_0::<EncodePostBytesAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EncodePostBytesAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitVRequest
#include "Meta/WitAi/Requests/WitVRequest.hpp"
// Including type: Meta.WitAi.IWitRequestConfiguration
#include "Meta/WitAi/IWitRequestConfiguration.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestProgressDelegate
#include "Meta/WitAi/Requests/VRequest_RequestProgressDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestFirstResponseDelegate
#include "Meta/WitAi/Requests/VRequest_RequestFirstResponseDelegate.hpp"
// Including type: Meta.WitAi.Requests.VRequest/RequestCompleteDelegate`1
#include "Meta/WitAi/Requests/VRequest_RequestCompleteDelegate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.UriBuilder,System.UriBuilder> OnProvideCustomUri
::System::Func_2<::System::UriBuilder*, ::System::UriBuilder*>* Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomUri");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::UriBuilder*, ::System::UriBuilder*>*>("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomUri")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.UriBuilder,System.UriBuilder> OnProvideCustomUri
void Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomUri(::System::Func_2<::System::UriBuilder*, ::System::UriBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomUri", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.String>> OnProvideCustomHeaders
::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomHeaders");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomHeaders")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.String>> OnProvideCustomHeaders
void Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomHeaders(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomHeaders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomHeaders", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Text.StringBuilder> OnProvideCustomUserAgent
::System::Action_1<::System::Text::StringBuilder*>* Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomUserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get_OnProvideCustomUserAgent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Text::StringBuilder*>*>("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomUserAgent"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Text.StringBuilder> OnProvideCustomUserAgent
void Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomUserAgent(::System::Action_1<::System::Text::StringBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set_OnProvideCustomUserAgent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "OnProvideCustomUserAgent", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _operatingSystem
::StringW Meta::WitAi::Requests::WitVRequest::_get__operatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get__operatingSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Requests", "WitVRequest", "_operatingSystem"));
}
// Autogenerated static field setter
// Set static field: static private System.String _operatingSystem
void Meta::WitAi::Requests::WitVRequest::_set__operatingSystem(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set__operatingSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "_operatingSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _deviceModel
::StringW Meta::WitAi::Requests::WitVRequest::_get__deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get__deviceModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Requests", "WitVRequest", "_deviceModel"));
}
// Autogenerated static field setter
// Set static field: static private System.String _deviceModel
void Meta::WitAi::Requests::WitVRequest::_set__deviceModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set__deviceModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "_deviceModel", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _appIdentifier
::StringW Meta::WitAi::Requests::WitVRequest::_get__appIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get__appIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Requests", "WitVRequest", "_appIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String _appIdentifier
void Meta::WitAi::Requests::WitVRequest::_set__appIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set__appIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "_appIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _unityVersion
::StringW Meta::WitAi::Requests::WitVRequest::_get__unityVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_get__unityVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Requests", "WitVRequest", "_unityVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String _unityVersion
void Meta::WitAi::Requests::WitVRequest::_set__unityVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::_set__unityVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Requests", "WitVRequest", "_unityVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <RequestId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::WitVRequest::dyn_$RequestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::dyn_$RequestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IWitRequestConfiguration <Configuration>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IWitRequestConfiguration*& Meta::WitAi::Requests::WitVRequest::dyn_$Configuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::dyn_$Configuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Configuration>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IWitRequestConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useServerToken
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::WitVRequest::dyn__useServerToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::dyn__useServerToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useServerToken"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.add_OnProvideCustomUri
void Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomUri(::System::Func_2<::System::UriBuilder*, ::System::UriBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "add_OnProvideCustomUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.remove_OnProvideCustomUri
void Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomUri(::System::Func_2<::System::UriBuilder*, ::System::UriBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "remove_OnProvideCustomUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.add_OnProvideCustomHeaders
void Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomHeaders(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "add_OnProvideCustomHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.remove_OnProvideCustomHeaders
void Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomHeaders(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "remove_OnProvideCustomHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.add_OnProvideCustomUserAgent
void Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomUserAgent(::System::Action_1<::System::Text::StringBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::add_OnProvideCustomUserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "add_OnProvideCustomUserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.remove_OnProvideCustomUserAgent
void Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomUserAgent(::System::Action_1<::System::Text::StringBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::remove_OnProvideCustomUserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "remove_OnProvideCustomUserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.get_RequestId
::StringW Meta::WitAi::Requests::WitVRequest::get_RequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::get_RequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.set_RequestId
void Meta::WitAi::Requests::WitVRequest::set_RequestId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::set_RequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.get_Configuration
::Meta::WitAi::IWitRequestConfiguration* Meta::WitAi::Requests::WitVRequest::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::get_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::IWitRequestConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.set_Configuration
void Meta::WitAi::Requests::WitVRequest::set_Configuration(::Meta::WitAi::IWitRequestConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::set_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetUri
::System::Uri* Meta::WitAi::Requests::WitVRequest::GetUri(::StringW path, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* queryParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(queryParams)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, path, queryParams);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetWitUri
::System::Uri* Meta::WitAi::Requests::WitVRequest::GetWitUri(::Meta::WitAi::IWitRequestConfiguration* configuration, ::StringW path, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* queryParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetWitUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "GetWitUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(queryParams)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, path, queryParams);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetWitHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::WitVRequest::GetWitHeaders(::Meta::WitAi::IWitRequestConfiguration* configuration, ::StringW requestId, bool useServerToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetWitHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "GetWitHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(useServerToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, requestId, useServerToken);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetAuthorizationHeader
::StringW Meta::WitAi::Requests::WitVRequest::GetAuthorizationHeader(::Meta::WitAi::IWitRequestConfiguration* configuration, bool useServerToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetAuthorizationHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "GetAuthorizationHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(useServerToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, useServerToken);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetUserAgentHeader
::StringW Meta::WitAi::Requests::WitVRequest::GetUserAgentHeader(::Meta::WitAi::IWitRequestConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetUserAgentHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "WitVRequest", "GetUserAgentHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.GetHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::WitVRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::GetHeaders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitVRequest.Request
bool Meta::WitAi::Requests::WitVRequest::Request(::UnityEngine::Networking::UnityWebRequest* unityRequest, ::Meta::WitAi::Requests::VRequest::RequestCompleteDelegate_1<::UnityEngine::Networking::UnityWebRequest*>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitVRequest::Request");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unityRequest, onComplete);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Json.ColorConverter
#include "Meta/WitAi/Json/ColorConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Json.ColorConverter.get_CanRead
bool Meta::WitAi::Json::ColorConverter::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::ColorConverter::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Json.ColorConverter.get_CanWrite
bool Meta::WitAi::Json::ColorConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::ColorConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Json.ColorConverter.CanConvert
bool Meta::WitAi::Json::ColorConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::ColorConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Meta.WitAi.Json.ColorConverter.ReadJson
::Il2CppObject* Meta::WitAi::Json::ColorConverter::ReadJson(::Meta::WitAi::Json::WitResponseNode* serializer, ::System::Type* objectType, ::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::ColorConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, serializer, objectType, existingValue);
}
// Autogenerated method: Meta.WitAi.Json.ColorConverter.WriteJson
::Meta::WitAi::Json::WitResponseNode* Meta::WitAi::Json::ColorConverter::WriteJson(::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::ColorConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(this, ___internal__method, existingValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Json.DateTimeConverter
#include "Meta/WitAi/Json/DateTimeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Json.DateTimeConverter.get_CanRead
bool Meta::WitAi::Json::DateTimeConverter::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::DateTimeConverter::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Json.DateTimeConverter.get_CanWrite
bool Meta::WitAi::Json::DateTimeConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::DateTimeConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Json.DateTimeConverter.CanConvert
bool Meta::WitAi::Json::DateTimeConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::DateTimeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Meta.WitAi.Json.DateTimeConverter.ReadJson
::Il2CppObject* Meta::WitAi::Json::DateTimeConverter::ReadJson(::Meta::WitAi::Json::WitResponseNode* serializer, ::System::Type* objectType, ::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::DateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, serializer, objectType, existingValue);
}
// Autogenerated method: Meta.WitAi.Json.DateTimeConverter.WriteJson
::Meta::WitAi::Json::WitResponseNode* Meta::WitAi::Json::DateTimeConverter::WriteJson(::Il2CppObject* existingValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::DateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(this, ___internal__method, existingValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Json.IJsonDeserializer
#include "Meta/WitAi/Json/IJsonDeserializer.hpp"
// Including type: Meta.WitAi.Json.WitResponseClass
#include "Meta/WitAi/Json/WitResponseClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Json.IJsonDeserializer.DeserializeObject
bool Meta::WitAi::Json::IJsonDeserializer::DeserializeObject(::Meta::WitAi::Json::WitResponseClass* jsonObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Json::IJsonDeserializer::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Json::IJsonDeserializer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, jsonObject);
}
