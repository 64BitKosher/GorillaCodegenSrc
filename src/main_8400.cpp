// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSpace
#include "GlobalNamespace/OVRSpace.hpp"
// Including type: OVRSpace/StorageLocation
#include "GlobalNamespace/OVRSpace_StorageLocation.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSpace::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpace.get_Handle
uint64_t GlobalNamespace::OVRSpace::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpace.TryGetUuid
bool GlobalNamespace::OVRSpace::TryGetUuid(ByRef<::System::Guid> uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::TryGetUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(uuid));
}
// Autogenerated method: OVRSpace.get_Valid
bool GlobalNamespace::OVRSpace::get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::get_Valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpace..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRSpace::OVRSpace(uint64_t handle)
// Autogenerated method: OVRSpace.Equals
bool GlobalNamespace::OVRSpace::Equals(::GlobalNamespace::OVRSpace other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSpace), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRSpace.ToString
::StringW GlobalNamespace::OVRSpace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpace.Equals
bool GlobalNamespace::OVRSpace::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSpace.GetHashCode
int GlobalNamespace::OVRSpace::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpace.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRSpace& lhs, const ::GlobalNamespace::OVRSpace& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpace", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRSpace.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRSpace& lhs, const ::GlobalNamespace::OVRSpace& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpace", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpace/StorageLocation
#include "GlobalNamespace/OVRSpace_StorageLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSpace/StorageLocation Local
::GlobalNamespace::OVRSpace::StorageLocation GlobalNamespace::OVRSpace::StorageLocation::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::StorageLocation::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpace::StorageLocation>("", "OVRSpace/StorageLocation", "Local"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpace/StorageLocation Local
void GlobalNamespace::OVRSpace::StorageLocation::_set_Local(::GlobalNamespace::OVRSpace::StorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::StorageLocation::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpace/StorageLocation", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpace/StorageLocation Cloud
::GlobalNamespace::OVRSpace::StorageLocation GlobalNamespace::OVRSpace::StorageLocation::_get_Cloud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::StorageLocation::_get_Cloud");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpace::StorageLocation>("", "OVRSpace/StorageLocation", "Cloud"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpace/StorageLocation Cloud
void GlobalNamespace::OVRSpace::StorageLocation::_set_Cloud(::GlobalNamespace::OVRSpace::StorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::StorageLocation::_set_Cloud");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpace/StorageLocation", "Cloud", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSpace::StorageLocation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpace::StorageLocation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpaceQuery/Options
#include "GlobalNamespace/OVRSpaceQuery_Options.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: OVRPlugin/SpaceQueryInfo
#include "GlobalNamespace/OVRPlugin_SpaceQueryInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxUuidCount
int GlobalNamespace::OVRSpaceQuery::Options::_get_MaxUuidCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_get_MaxUuidCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRSpaceQuery/Options", "MaxUuidCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxUuidCount
void GlobalNamespace::OVRSpaceQuery::Options::_set_MaxUuidCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_set_MaxUuidCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpaceQuery/Options", "MaxUuidCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] Ids
::ArrayW<::System::Guid> GlobalNamespace::OVRSpaceQuery::Options::_get_Ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_get_Ids");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("", "OVRSpaceQuery/Options", "Ids"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] Ids
void GlobalNamespace::OVRSpaceQuery::Options::_set_Ids(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_set_Ids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpaceQuery/Options", "Ids", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRPlugin/SpaceComponentType[] ComponentTypes
::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> GlobalNamespace::OVRSpaceQuery::Options::_get_ComponentTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_get_ComponentTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>>("", "OVRSpaceQuery/Options", "ComponentTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRPlugin/SpaceComponentType[] ComponentTypes
void GlobalNamespace::OVRSpaceQuery::Options::_set_ComponentTypes(::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::_set_ComponentTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpaceQuery/Options", "ComponentTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxResults>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSpaceQuery::Options::dyn_$MaxResults$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn_$MaxResults$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxResults>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <Timeout>k__BackingField
[[deprecated("Use field access instead!")]] double& GlobalNamespace::OVRSpaceQuery::Options::dyn_$Timeout$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn_$Timeout$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timeout>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSpace/StorageLocation <Location>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace::StorageLocation& GlobalNamespace::OVRSpaceQuery::Options::dyn_$Location$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn_$Location$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Location>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace::StorageLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/SpaceQueryType <QueryType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::SpaceQueryType& GlobalNamespace::OVRSpaceQuery::Options::dyn_$QueryType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn_$QueryType$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QueryType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::SpaceQueryType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/SpaceQueryActionType <ActionType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::SpaceQueryActionType& GlobalNamespace::OVRSpaceQuery::Options::dyn_$ActionType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn_$ActionType$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ActionType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::SpaceQueryActionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/SpaceComponentType _componentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::SpaceComponentType& GlobalNamespace::OVRSpaceQuery::Options::dyn__componentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn__componentType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_componentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::SpaceComponentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<System.Guid> _uuidFilter
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::System::Guid>*& GlobalNamespace::OVRSpaceQuery::Options::dyn__uuidFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::dyn__uuidFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uuidFilter"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Guid>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpaceQuery/Options.get_MaxResults
int GlobalNamespace::OVRSpaceQuery::Options::get_MaxResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_MaxResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_MaxResults
void GlobalNamespace::OVRSpaceQuery::Options::set_MaxResults(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_MaxResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MaxResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_Timeout
double GlobalNamespace::OVRSpaceQuery::Options::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_Timeout
void GlobalNamespace::OVRSpaceQuery::Options::set_Timeout(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_Location
::GlobalNamespace::OVRSpace::StorageLocation GlobalNamespace::OVRSpaceQuery::Options::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSpace::StorageLocation, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_Location
void GlobalNamespace::OVRSpaceQuery::Options::set_Location(::GlobalNamespace::OVRSpace::StorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_QueryType
::GlobalNamespace::OVRPlugin::SpaceQueryType GlobalNamespace::OVRSpaceQuery::Options::get_QueryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_QueryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_QueryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceQueryType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_QueryType
void GlobalNamespace::OVRSpaceQuery::Options::set_QueryType(::GlobalNamespace::OVRPlugin::SpaceQueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_QueryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_QueryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_ActionType
::GlobalNamespace::OVRPlugin::SpaceQueryActionType GlobalNamespace::OVRSpaceQuery::Options::get_ActionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_ActionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ActionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceQueryActionType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_ActionType
void GlobalNamespace::OVRSpaceQuery::Options::set_ActionType(::GlobalNamespace::OVRPlugin::SpaceQueryActionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_ActionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ActionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_ComponentFilter
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRSpaceQuery::Options::get_ComponentFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_ComponentFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ComponentFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_ComponentFilter
void GlobalNamespace::OVRSpaceQuery::Options::set_ComponentFilter(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_ComponentFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ComponentFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options.get_UuidFilter
::System::Collections::Generic::IEnumerable_1<::System::Guid>* GlobalNamespace::OVRSpaceQuery::Options::get_UuidFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::get_UuidFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UuidFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Guid>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.set_UuidFilter
void GlobalNamespace::OVRSpaceQuery::Options::set_UuidFilter(::System::Collections::Generic::IEnumerable_1<::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::set_UuidFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UuidFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpaceQuery/Options..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRSpaceQuery::Options::Options(::GlobalNamespace::OVRSpaceQuery::Options other)
// Autogenerated method: OVRSpaceQuery/Options.ToQueryInfo
::GlobalNamespace::OVRPlugin::SpaceQueryInfo GlobalNamespace::OVRSpaceQuery::Options::ToQueryInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::ToQueryInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToQueryInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceQueryInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceQuery/Options.TryQuerySpaces
bool GlobalNamespace::OVRSpaceQuery::Options::TryQuerySpaces(ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::TryQuerySpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryQuerySpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(requestId));
}
// Autogenerated method: OVRSpaceQuery/Options.ValidateSingleFilter
void GlobalNamespace::OVRSpaceQuery::Options::ValidateSingleFilter(::System::Collections::Generic::IEnumerable_1<::System::Guid>* uuidFilter, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::ValidateSingleFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpaceQuery/Options", "ValidateSingleFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuidFilter), ::il2cpp_utils::ExtractType(componentFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuidFilter, componentFilter);
}
// Autogenerated method: OVRSpaceQuery/Options..cctor
void GlobalNamespace::OVRSpaceQuery::Options::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceQuery::Options::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpaceQuery/Options", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor
#include "GlobalNamespace/OVRSpatialAnchor.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: OVRSpatialAnchor/LoadOptions
#include "GlobalNamespace/OVRSpatialAnchor_LoadOptions.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: OVRSpatialAnchor/MultiAnchorActionType
#include "GlobalNamespace/OVRSpatialAnchor_MultiAnchorActionType.hpp"
// Including type: OVRSpatialAnchor/Development
#include "GlobalNamespace/OVRSpatialAnchor_Development.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRSpatialAnchor/InvertedCapture`2
#include "GlobalNamespace/OVRSpatialAnchor_InvertedCapture_2.hpp"
// Including type: OVRSpatialAnchor/<>c
#include "GlobalNamespace/OVRSpatialAnchor_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSpatialAnchor> SpatialAnchors
::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSpatialAnchor*>* GlobalNamespace::OVRSpatialAnchor::_get_SpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_SpatialAnchors");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSpatialAnchor*>*>("", "OVRSpatialAnchor", "SpatialAnchors")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSpatialAnchor> SpatialAnchors
void GlobalNamespace::OVRSpatialAnchor::_set_SpatialAnchors(::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSpatialAnchor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_SpatialAnchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "SpatialAnchors", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.UInt64,OVRSpatialAnchor> CreationRequests
::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor*>* GlobalNamespace::OVRSpatialAnchor::_get_CreationRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_CreationRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor*>*>("", "OVRSpatialAnchor", "CreationRequests")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.UInt64,OVRSpatialAnchor> CreationRequests
void GlobalNamespace::OVRSpatialAnchor::_set_CreationRequests(::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_CreationRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "CreationRequests", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpace/StorageLocation,System.Collections.Generic.List`1<OVRSpatialAnchor>> SaveRequests
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace::StorageLocation, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>* GlobalNamespace::OVRSpatialAnchor::_get_SaveRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_SaveRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace::StorageLocation, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>*>("", "OVRSpatialAnchor", "SaveRequests")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpace/StorageLocation,System.Collections.Generic.List`1<OVRSpatialAnchor>> SaveRequests
void GlobalNamespace::OVRSpatialAnchor::_set_SaveRequests(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace::StorageLocation, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_SaveRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "SaveRequests", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpatialAnchor,System.Guid> AsyncRequestTaskIds
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpatialAnchor*, ::System::Guid>* GlobalNamespace::OVRSpatialAnchor::_get_AsyncRequestTaskIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_AsyncRequestTaskIds");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpatialAnchor*, ::System::Guid>*>("", "OVRSpatialAnchor", "AsyncRequestTaskIds")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpatialAnchor,System.Guid> AsyncRequestTaskIds
void GlobalNamespace::OVRSpatialAnchor::_set_AsyncRequestTaskIds(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpatialAnchor*, ::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_AsyncRequestTaskIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "AsyncRequestTaskIds", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<System.ValueTuple`2<System.Collections.Generic.List`1<OVRSpaceUser>,System.Collections.Generic.List`1<OVRSpatialAnchor>>> ShareRequests
::System::Collections::Generic::List_1<::System::ValueTuple_2<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>>* GlobalNamespace::OVRSpatialAnchor::_get_ShareRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_ShareRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::ValueTuple_2<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>>*>("", "OVRSpatialAnchor", "ShareRequests")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<System.ValueTuple`2<System.Collections.Generic.List`1<OVRSpaceUser>,System.Collections.Generic.List`1<OVRSpatialAnchor>>> ShareRequests
void GlobalNamespace::OVRSpatialAnchor::_set_ShareRequests(::System::Collections::Generic::List_1<::System::ValueTuple_2<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_ShareRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "ShareRequests", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.UInt64,OVRSpatialAnchor/MultiAnchorDelegatePair> MultiAnchorCompletionDelegates
::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::MultiAnchorDelegatePair>* GlobalNamespace::OVRSpatialAnchor::_get_MultiAnchorCompletionDelegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_MultiAnchorCompletionDelegates");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::MultiAnchorDelegatePair>*>("", "OVRSpatialAnchor", "MultiAnchorCompletionDelegates")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.UInt64,OVRSpatialAnchor/MultiAnchorDelegatePair> MultiAnchorCompletionDelegates
void GlobalNamespace::OVRSpatialAnchor::_set_MultiAnchorCompletionDelegates(::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OVRSpatialAnchor::MultiAnchorDelegatePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_MultiAnchorCompletionDelegates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "MultiAnchorCompletionDelegates", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<OVRSpatialAnchor/UnboundAnchor> UnboundAnchorBuffer
::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>* GlobalNamespace::OVRSpatialAnchor::_get_UnboundAnchorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_UnboundAnchorBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>*>("", "OVRSpatialAnchor", "UnboundAnchorBuffer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<OVRSpatialAnchor/UnboundAnchor> UnboundAnchorBuffer
void GlobalNamespace::OVRSpatialAnchor::_set_UnboundAnchorBuffer(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_UnboundAnchorBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "UnboundAnchorBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRPlugin/SpaceComponentType[] ComponentTypeBuffer
::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> GlobalNamespace::OVRSpatialAnchor::_get_ComponentTypeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_get_ComponentTypeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>>("", "OVRSpatialAnchor", "ComponentTypeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRPlugin/SpaceComponentType[] ComponentTypeBuffer
void GlobalNamespace::OVRSpatialAnchor::_set_ComponentTypeBuffer(::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::_set_ComponentTypeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor", "ComponentTypeBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startCalled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSpatialAnchor::dyn__startCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn__startCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 _requestId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSpatialAnchor::dyn__requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn__requestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRSpatialAnchor/SaveOptions _defaultSaveOptions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpatialAnchor::SaveOptions& GlobalNamespace::OVRSpatialAnchor::dyn__defaultSaveOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn__defaultSaveOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSaveOptions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpatialAnchor::SaveOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRSpatialAnchor/EraseOptions _defaultEraseOptions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpatialAnchor::EraseOptions& GlobalNamespace::OVRSpatialAnchor::dyn__defaultEraseOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn__defaultEraseOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultEraseOptions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpatialAnchor::EraseOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRSpatialAnchor/OperationResult> OnLocalize
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>*& GlobalNamespace::OVRSpatialAnchor::dyn_OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn_OnLocalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLocalize"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSpace <Space>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRSpatialAnchor::dyn_$Space$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn_$Space$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Space>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid <Uuid>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::OVRSpatialAnchor::dyn_$Uuid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::dyn_$Uuid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Uuid>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpatialAnchor.add_OnLocalize
void GlobalNamespace::OVRSpatialAnchor::add_OnLocalize(::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::add_OnLocalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor.remove_OnLocalize
void GlobalNamespace::OVRSpatialAnchor::remove_OnLocalize(::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::remove_OnLocalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor.get_Space
::GlobalNamespace::OVRSpace GlobalNamespace::OVRSpatialAnchor::get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::get_Space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSpace, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.set_Space
void GlobalNamespace::OVRSpatialAnchor::set_Space(::GlobalNamespace::OVRSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::set_Space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor.get_Uuid
::System::Guid GlobalNamespace::OVRSpatialAnchor::get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::get_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.set_Uuid
void GlobalNamespace::OVRSpatialAnchor::set_Uuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::set_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor.get_Created
bool GlobalNamespace::OVRSpatialAnchor::get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::get_Created");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Created", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.get_PendingCreation
bool GlobalNamespace::OVRSpatialAnchor::get_PendingCreation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::get_PendingCreation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PendingCreation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.get_Localized
bool GlobalNamespace::OVRSpatialAnchor::get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::get_Localized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Localized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.InitializeFromExisting
void GlobalNamespace::OVRSpatialAnchor::InitializeFromExisting(::GlobalNamespace::OVRSpace space, ::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::InitializeFromExisting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFromExisting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, space, uuid);
}
// Autogenerated method: OVRSpatialAnchor.Save
void GlobalNamespace::OVRSpatialAnchor::Save(::System::Action_2<::GlobalNamespace::OVRSpatialAnchor*, bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ToNativeArray
::Unity::Collections::NativeArray_1<uint64_t> GlobalNamespace::OVRSpatialAnchor::ToNativeArray(::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpatialAnchor*>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ToNativeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "ToNativeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Collections::NativeArray_1<uint64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors);
}
// Autogenerated method: OVRSpatialAnchor.Save
void GlobalNamespace::OVRSpatialAnchor::Save(::GlobalNamespace::OVRSpatialAnchor::SaveOptions saveOptions, ::System::Action_2<::GlobalNamespace::OVRSpatialAnchor*, bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveOptions), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saveOptions, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.SaveAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSpatialAnchor::SaveAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::SaveAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.SaveAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSpatialAnchor::SaveAsync(::GlobalNamespace::OVRSpatialAnchor::SaveOptions saveOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::SaveAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, saveOptions);
}
// Autogenerated method: OVRSpatialAnchor.Save
void GlobalNamespace::OVRSpatialAnchor::Save(::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpatialAnchor*>* anchors, ::GlobalNamespace::OVRSpatialAnchor::SaveOptions saveOptions, ::System::Action_2<::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpatialAnchor*>*, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(saveOptions), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors, saveOptions, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.CopyAnchorListIntoListFromPool
::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>* GlobalNamespace::OVRSpatialAnchor::CopyAnchorListIntoListFromPool(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpatialAnchor*>* anchorList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::CopyAnchorListIntoListFromPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "CopyAnchorListIntoListFromPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorList);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::GlobalNamespace::OVRSpaceUser user, ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsync(::GlobalNamespace::OVRSpaceUser user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, user);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2, ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user1, user2, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsync(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, user1, user2);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2, ::GlobalNamespace::OVRSpaceUser user3, ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2), ::il2cpp_utils::ExtractType(user3), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user1, user2, user3, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsync(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2, ::GlobalNamespace::OVRSpaceUser user3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2), ::il2cpp_utils::ExtractType(user3)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, user1, user2, user3);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2, ::GlobalNamespace::OVRSpaceUser user3, ::GlobalNamespace::OVRSpaceUser user4, ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2), ::il2cpp_utils::ExtractType(user3), ::il2cpp_utils::ExtractType(user4), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user1, user2, user3, user4, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsync(::GlobalNamespace::OVRSpaceUser user1, ::GlobalNamespace::OVRSpaceUser user2, ::GlobalNamespace::OVRSpaceUser user3, ::GlobalNamespace::OVRSpaceUser user4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user1), ::il2cpp_utils::ExtractType(user2), ::il2cpp_utils::ExtractType(user3), ::il2cpp_utils::ExtractType(user4)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, user1, user2, user3, user4);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>* users, ::System::Action_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, users, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsync(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, users);
}
// Autogenerated method: OVRSpatialAnchor.Share
void GlobalNamespace::OVRSpatialAnchor::Share(::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpatialAnchor*>* anchors, ::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpaceUser>* users, ::System::Action_2<::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpatialAnchor*>*, ::GlobalNamespace::OVRSpatialAnchor::OperationResult>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Share");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "Share", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(users), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors, users, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.ShareAsyncInternal
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult> GlobalNamespace::OVRSpatialAnchor::ShareAsyncInternal(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRSpatialAnchor::OperationResult>, false>(this, ___internal__method, users);
}
// Autogenerated method: OVRSpatialAnchor.GetListToStoreTheShareRequest
::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>* GlobalNamespace::OVRSpatialAnchor::GetListToStoreTheShareRequest(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::GetListToStoreTheShareRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetListToStoreTheShareRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpatialAnchor*>*, false>(this, ___internal__method, users);
}
// Autogenerated method: OVRSpatialAnchor.AreSortedUserListsEqual
bool GlobalNamespace::OVRSpatialAnchor::AreSortedUserListsEqual(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>* sortedList1, ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>* sortedList2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::AreSortedUserListsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "AreSortedUserListsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortedList1), ::il2cpp_utils::ExtractType(sortedList2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sortedList1, sortedList2);
}
// Autogenerated method: OVRSpatialAnchor.Erase
void GlobalNamespace::OVRSpatialAnchor::Erase(::System::Action_2<::GlobalNamespace::OVRSpatialAnchor*, bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Erase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Erase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.Erase
void GlobalNamespace::OVRSpatialAnchor::Erase(::GlobalNamespace::OVRSpatialAnchor::EraseOptions eraseOptions, ::System::Action_2<::GlobalNamespace::OVRSpatialAnchor*, bool>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Erase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Erase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eraseOptions), ::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eraseOptions, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.EraseAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSpatialAnchor::EraseAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::EraseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EraseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.EraseAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSpatialAnchor::EraseAsync(::GlobalNamespace::OVRSpatialAnchor::EraseOptions eraseOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::EraseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EraseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eraseOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, eraseOptions);
}
// Autogenerated method: OVRSpatialAnchor.ThrowIfBound
void GlobalNamespace::OVRSpatialAnchor::ThrowIfBound(::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ThrowIfBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "ThrowIfBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: OVRSpatialAnchor.InitializeUnchecked
void GlobalNamespace::OVRSpatialAnchor::InitializeUnchecked(::GlobalNamespace::OVRSpace space, ::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::InitializeUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, space, uuid);
}
// Autogenerated method: OVRSpatialAnchor.Start
void GlobalNamespace::OVRSpatialAnchor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.Update
void GlobalNamespace::OVRSpatialAnchor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.LateUpdate
void GlobalNamespace::OVRSpatialAnchor::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.SaveBatchAnchors
void GlobalNamespace::OVRSpatialAnchor::SaveBatchAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::SaveBatchAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "SaveBatchAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.ShareBatchAnchors
void GlobalNamespace::OVRSpatialAnchor::ShareBatchAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::ShareBatchAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "ShareBatchAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.OnDestroy
void GlobalNamespace::OVRSpatialAnchor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.GetTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRSpatialAnchor::GetTrackingSpacePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::GetTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.CreateSpatialAnchor
void GlobalNamespace::OVRSpatialAnchor::CreateSpatialAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::CreateSpatialAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSpatialAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.TryGetPose
bool GlobalNamespace::OVRSpatialAnchor::TryGetPose(::GlobalNamespace::OVRSpace space, ByRef<::GlobalNamespace::OVRPose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::TryGetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "TryGetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, byref(pose));
}
// Autogenerated method: OVRSpatialAnchor.UpdateTransform
void GlobalNamespace::OVRSpatialAnchor::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.InitializeOnLoad
void GlobalNamespace::OVRSpatialAnchor::InitializeOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::InitializeOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "InitializeOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor..cctor
void GlobalNamespace::OVRSpatialAnchor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor.InvokeMultiAnchorDelegate
void GlobalNamespace::OVRSpatialAnchor::InvokeMultiAnchorDelegate(uint64_t requestId, ::GlobalNamespace::OVRSpatialAnchor::OperationResult result, ::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType actionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::InvokeMultiAnchorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "InvokeMultiAnchorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(actionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result, actionType);
}
// Autogenerated method: OVRSpatialAnchor.OnSpatialAnchorCreateComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpatialAnchorCreateComplete(uint64_t requestId, bool success, ::GlobalNamespace::OVRSpace space, ::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpatialAnchorCreateComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpatialAnchorCreateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, success, space, uuid);
}
// Autogenerated method: OVRSpatialAnchor.OnSpaceSaveComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpaceSaveComplete(uint64_t requestId, ::GlobalNamespace::OVRSpace space, bool result, ::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpaceSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpaceSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, space, result, uuid);
}
// Autogenerated method: OVRSpatialAnchor.OnSpaceEraseComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpaceEraseComplete(uint64_t requestId, bool result, ::System::Guid uuid, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpaceEraseComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpaceEraseComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(location)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result, uuid, location);
}
// Autogenerated method: OVRSpatialAnchor.LoadUnboundAnchors
bool GlobalNamespace::OVRSpatialAnchor::LoadUnboundAnchors(::GlobalNamespace::OVRSpatialAnchor::LoadOptions options, ::System::Action_1<::ArrayW<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadUnboundAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "LoadUnboundAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(onComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options, onComplete);
}
// Autogenerated method: OVRSpatialAnchor.LoadUnboundAnchorsAsync
::GlobalNamespace::OVRTask_1<::ArrayW<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>> GlobalNamespace::OVRSpatialAnchor::LoadUnboundAnchorsAsync(::GlobalNamespace::OVRSpatialAnchor::LoadOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadUnboundAnchorsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "LoadUnboundAnchorsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::ArrayW<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor>>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: OVRSpatialAnchor.OnSpaceQueryComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpaceQueryComplete(uint64_t requestId, bool queryResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpaceQueryComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpaceQueryComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(queryResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, queryResult);
}
// Autogenerated method: OVRSpatialAnchor.PopulateUnbound
void GlobalNamespace::OVRSpatialAnchor::PopulateUnbound(::System::Guid uuid, uint64_t space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::PopulateUnbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "PopulateUnbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(space)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid, space);
}
// Autogenerated method: OVRSpatialAnchor.OnSpaceSetComponentStatusComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpaceSetComponentStatusComplete(uint64_t requestId, bool result, ::GlobalNamespace::OVRSpace space, ::System::Guid uuid, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpaceSetComponentStatusComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpaceSetComponentStatusComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(uuid), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result, space, uuid, componentType, enabled);
}
// Autogenerated method: OVRSpatialAnchor.OnSpaceListSaveComplete
void GlobalNamespace::OVRSpatialAnchor::OnSpaceListSaveComplete(uint64_t requestId, ::GlobalNamespace::OVRSpatialAnchor::OperationResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnSpaceListSaveComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnSpaceListSaveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result);
}
// Autogenerated method: OVRSpatialAnchor.OnShareSpacesComplete
void GlobalNamespace::OVRSpatialAnchor::OnShareSpacesComplete(uint64_t requestId, ::GlobalNamespace::OVRSpatialAnchor::OperationResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OnShareSpacesComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor", "OnShareSpacesComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/LoadOptions
#include "GlobalNamespace/OVRSpatialAnchor_LoadOptions.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: OVRSpaceQuery/Options
#include "GlobalNamespace/OVRSpaceQuery_Options.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxSupported
int GlobalNamespace::OVRSpatialAnchor::LoadOptions::_get_MaxSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::_get_MaxSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRSpatialAnchor/LoadOptions", "MaxSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxSupported
void GlobalNamespace::OVRSpatialAnchor::LoadOptions::_set_MaxSupported(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::_set_MaxSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/LoadOptions", "MaxSupported", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSpace/StorageLocation <StorageLocation>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace::StorageLocation& GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$StorageLocation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$StorageLocation$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StorageLocation>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace::StorageLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxAnchorCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$MaxAnchorCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$MaxAnchorCount$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAnchorCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <Timeout>k__BackingField
[[deprecated("Use field access instead!")]] double& GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$Timeout$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn_$Timeout$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timeout>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Guid> _uuids
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::System::Guid>*& GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn__uuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::dyn__uuids");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uuids"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::System::Guid>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.get_StorageLocation
::GlobalNamespace::OVRSpace::StorageLocation GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_StorageLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_StorageLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StorageLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSpace::StorageLocation, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.set_StorageLocation
void GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_StorageLocation(::GlobalNamespace::OVRSpace::StorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_StorageLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StorageLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.get_MaxAnchorCount
int GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_MaxAnchorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_MaxAnchorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxAnchorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.set_MaxAnchorCount
void GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_MaxAnchorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_MaxAnchorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MaxAnchorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.get_Timeout
double GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.set_Timeout
void GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_Timeout(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.get_Uuids
::System::Collections::Generic::IReadOnlyList_1<::System::Guid>* GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_Uuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::get_Uuids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Uuids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Guid>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.set_Uuids
void GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_Uuids(::System::Collections::Generic::IReadOnlyList_1<::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::set_Uuids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Uuids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSpatialAnchor/LoadOptions.ToQueryOptions
::GlobalNamespace::OVRSpaceQuery::Options GlobalNamespace::OVRSpatialAnchor::LoadOptions::ToQueryOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::LoadOptions::ToQueryOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToQueryOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSpaceQuery::Options, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/UnboundAnchor
#include "GlobalNamespace/OVRSpatialAnchor.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly OVRSpace _space
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::dyn__space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::dyn__space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_space"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Guid <Uuid>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::dyn_$Uuid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::dyn_$Uuid$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Uuid>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.get_Uuid
::System::Guid GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.get_Localized
bool GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Localized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Localized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.get_Localizing
bool GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Localizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Localizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Localizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.get_Pose
::UnityEngine::Pose GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::get_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.Localize
void GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::Localize(::System::Action_2<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor, bool>* onComplete, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::Localize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Localize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onComplete), ::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onComplete, timeout);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.ValidateLocalization
void GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::ValidateLocalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::ValidateLocalization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidateLocalization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.LocalizeAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::LocalizeAsync(double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::LocalizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "LocalizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.AddStorableAndShareableComponents
void GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::AddStorableAndShareableComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::AddStorableAndShareableComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddStorableAndShareableComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor.BindTo
void GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::BindTo(::GlobalNamespace::OVRSpatialAnchor* spatialAnchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::BindTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BindTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spatialAnchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spatialAnchor);
}
// Autogenerated method: OVRSpatialAnchor/UnboundAnchor..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRSpatialAnchor::UnboundAnchor::UnboundAnchor(::GlobalNamespace::OVRSpace space, ::System::Guid uuid)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/MultiAnchorActionType
#include "GlobalNamespace/OVRSpatialAnchor_MultiAnchorActionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/MultiAnchorActionType Save
::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_get_Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_get_Save");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType>("", "OVRSpatialAnchor/MultiAnchorActionType", "Save"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/MultiAnchorActionType Save
void GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_set_Save(::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_set_Save");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/MultiAnchorActionType", "Save", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/MultiAnchorActionType Share
::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_get_Share() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_get_Share");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType>("", "OVRSpatialAnchor/MultiAnchorActionType", "Share"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/MultiAnchorActionType Share
void GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_set_Share(::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::_set_Share");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/MultiAnchorActionType", "Share", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::MultiAnchorActionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/Development
#include "GlobalNamespace/OVRSpatialAnchor_Development.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSpatialAnchor/Development.Log
void GlobalNamespace::OVRSpatialAnchor::Development::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Development::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/Development", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRSpatialAnchor/Development.LogWarning
void GlobalNamespace::OVRSpatialAnchor::Development::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Development::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/Development", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRSpatialAnchor/Development.LogError
void GlobalNamespace::OVRSpatialAnchor::Development::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Development::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/Development", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRSpatialAnchor/Development.LogRequest
void GlobalNamespace::OVRSpatialAnchor::Development::LogRequest(uint64_t requestId, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Development::LogRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/Development", "LogRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, message);
}
// Autogenerated method: OVRSpatialAnchor/Development.LogRequestResult
void GlobalNamespace::OVRSpatialAnchor::Development::LogRequestResult(uint64_t requestId, bool result, ::StringW successMessage, ::StringW failureMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::Development::LogRequestResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/Development", "LogRequestResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(successMessage), ::il2cpp_utils::ExtractType(failureMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestId, result, successMessage, failureMessage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/OperationResult
#include "GlobalNamespace/OVRSpatialAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Success
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Success
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Success(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceCloudStorageDisabled
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceCloudStorageDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceCloudStorageDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceCloudStorageDisabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceCloudStorageDisabled
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceCloudStorageDisabled(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceCloudStorageDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceCloudStorageDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceMappingInsufficient
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceMappingInsufficient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceMappingInsufficient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceMappingInsufficient"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceMappingInsufficient
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceMappingInsufficient(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceMappingInsufficient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceMappingInsufficient", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceLocalizationFailed
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceLocalizationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceLocalizationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceLocalizationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceLocalizationFailed
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceLocalizationFailed(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceLocalizationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceLocalizationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceNetworkTimeout
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceNetworkTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceNetworkTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceNetworkTimeout"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceNetworkTimeout
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceNetworkTimeout(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceNetworkTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceNetworkTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceNetworkRequestFailed
::GlobalNamespace::OVRSpatialAnchor::OperationResult GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceNetworkRequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_get_Failure_SpaceNetworkRequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::OperationResult>("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceNetworkRequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRSpatialAnchor/OperationResult Failure_SpaceNetworkRequestFailed
void GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceNetworkRequestFailed(::GlobalNamespace::OVRSpatialAnchor::OperationResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::_set_Failure_SpaceNetworkRequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/OperationResult", "Failure_SpaceNetworkRequestFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSpatialAnchor::OperationResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::OperationResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpatialAnchor/<>c
#include "GlobalNamespace/OVRSpatialAnchor_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRSpatialAnchor/<>c <>9
::GlobalNamespace::OVRSpatialAnchor::$$c* GlobalNamespace::OVRSpatialAnchor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSpatialAnchor::$$c*>("", "OVRSpatialAnchor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRSpatialAnchor/<>c <>9
void GlobalNamespace::OVRSpatialAnchor::$$c::_set_$$9(::GlobalNamespace::OVRSpatialAnchor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<OVRSpaceUser> <>9__41_0
::System::Comparison_1<::GlobalNamespace::OVRSpaceUser>* GlobalNamespace::OVRSpatialAnchor::$$c::_get_$$9__41_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::_get_$$9__41_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::GlobalNamespace::OVRSpaceUser>*>("", "OVRSpatialAnchor/<>c", "<>9__41_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<OVRSpaceUser> <>9__41_0
void GlobalNamespace::OVRSpatialAnchor::$$c::_set_$$9__41_0(::System::Comparison_1<::GlobalNamespace::OVRSpaceUser>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::_set_$$9__41_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRSpatialAnchor/<>c", "<>9__41_0", value)));
}
// Autogenerated method: OVRSpatialAnchor/<>c..cctor
void GlobalNamespace::OVRSpatialAnchor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSpatialAnchor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSpatialAnchor/<>c.<GetListToStoreTheShareRequest>b__41_0
int GlobalNamespace::OVRSpatialAnchor::$$c::$GetListToStoreTheShareRequest$b__41_0(::GlobalNamespace::OVRSpaceUser x, ::GlobalNamespace::OVRSpaceUser y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpatialAnchor::$$c::<GetListToStoreTheShareRequest>b__41_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetListToStoreTheShareRequest>b__41_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OperationResultExtensions
#include "GlobalNamespace/OperationResultExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OperationResultExtensions.IsSuccess
bool GlobalNamespace::OperationResultExtensions::IsSuccess(::GlobalNamespace::OVRSpatialAnchor::OperationResult res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OperationResultExtensions::IsSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OperationResultExtensions", "IsSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res);
}
// Autogenerated method: OperationResultExtensions.IsError
bool GlobalNamespace::OperationResultExtensions::IsError(::GlobalNamespace::OVRSpatialAnchor::OperationResult res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OperationResultExtensions::IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OperationResultExtensions", "IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res);
}
// Autogenerated method: OperationResultExtensions.IsWarning
bool GlobalNamespace::OperationResultExtensions::IsWarning(::GlobalNamespace::OVRSpatialAnchor::OperationResult res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OperationResultExtensions::IsWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OperationResultExtensions", "IsWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSpaceUser
#include "GlobalNamespace/OVRSpaceUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt64 _handle
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSpaceUser::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceUser::dyn__handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSpaceUser.get_Valid
bool GlobalNamespace::OVRSpaceUser::get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceUser::get_Valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceUser..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRSpaceUser::OVRSpaceUser(uint64_t spaceUserId)
// Autogenerated method: OVRSpaceUser.get_Id
uint64_t GlobalNamespace::OVRSpaceUser::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceUser::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSpaceUser.Dispose
void GlobalNamespace::OVRSpaceUser::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSpaceUser::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSpaceUser), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetry
#include "GlobalNamespace/OVRTelemetry.hpp"
// Including type: OVRTelemetry/MarkerPoint
#include "GlobalNamespace/OVRTelemetry_MarkerPoint.hpp"
// Including type: OVRTelemetry/TelemetryClient
#include "GlobalNamespace/OVRTelemetry_TelemetryClient.hpp"
// Including type: OVRTelemetry/NullTelemetryClient
#include "GlobalNamespace/OVRTelemetry_NullTelemetryClient.hpp"
// Including type: OVRTelemetry/QPLTelemetryClient
#include "GlobalNamespace/OVRTelemetry_QPLTelemetryClient.hpp"
// Including type: OVRTelemetryMarker
#include "GlobalNamespace/OVRTelemetryMarker.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly OVRTelemetry/TelemetryClient InactiveClient
::GlobalNamespace::OVRTelemetry::TelemetryClient* GlobalNamespace::OVRTelemetry::_get_InactiveClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_get_InactiveClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTelemetry::TelemetryClient*>("", "OVRTelemetry", "InactiveClient"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRTelemetry/TelemetryClient InactiveClient
void GlobalNamespace::OVRTelemetry::_set_InactiveClient(::GlobalNamespace::OVRTelemetry::TelemetryClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_set_InactiveClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetry", "InactiveClient", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRTelemetry/TelemetryClient ActiveClient
::GlobalNamespace::OVRTelemetry::TelemetryClient* GlobalNamespace::OVRTelemetry::_get_ActiveClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_get_ActiveClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTelemetry::TelemetryClient*>("", "OVRTelemetry", "ActiveClient"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTelemetry/TelemetryClient ActiveClient
void GlobalNamespace::OVRTelemetry::_set_ActiveClient(::GlobalNamespace::OVRTelemetry::TelemetryClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_set_ActiveClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetry", "ActiveClient", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _sdkVersionString
::StringW GlobalNamespace::OVRTelemetry::_get__sdkVersionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_get__sdkVersionString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetry", "_sdkVersionString"));
}
// Autogenerated static field setter
// Set static field: static private System.String _sdkVersionString
void GlobalNamespace::OVRTelemetry::_set__sdkVersionString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::_set__sdkVersionString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetry", "_sdkVersionString", value));
}
// Autogenerated method: OVRTelemetry.get_IsActive
bool GlobalNamespace::OVRTelemetry::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTelemetry.get_Client
::GlobalNamespace::OVRTelemetry::TelemetryClient* GlobalNamespace::OVRTelemetry::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetry::TelemetryClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTelemetry.Start
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetry::Start(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry.SendEvent
void GlobalNamespace::OVRTelemetry::SendEvent(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, result);
}
// Autogenerated method: OVRTelemetry.AddSDKVersionAnnotation
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetry::AddSDKVersionAnnotation(::GlobalNamespace::OVRTelemetryMarker marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::AddSDKVersionAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", "AddSDKVersionAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, marker);
}
// Autogenerated method: OVRTelemetry..cctor
void GlobalNamespace::OVRTelemetry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetry/MarkerPoint
#include "GlobalNamespace/OVRTelemetry_MarkerPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <NameHandle>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTelemetry::MarkerPoint::dyn_$NameHandle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::MarkerPoint::dyn_$NameHandle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NameHandle>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTelemetry/MarkerPoint.get_NameHandle
int GlobalNamespace::OVRTelemetry::MarkerPoint::get_NameHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::MarkerPoint::get_NameHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NameHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetry/MarkerPoint..ctor
GlobalNamespace::OVRTelemetry::MarkerPoint::MarkerPoint(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::MarkerPoint::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: OVRTelemetry/MarkerPoint.Dispose
void GlobalNamespace::OVRTelemetry::MarkerPoint::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::MarkerPoint::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTelemetry::MarkerPoint), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetry/TelemetryClient
#include "GlobalNamespace/OVRTelemetry_TelemetryClient.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTelemetry/TelemetryClient.MarkerStart
void GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerStart(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/TelemetryClient.MarkerPointCached
void GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerPointCached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, nameHandle, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/TelemetryClient.MarkerAnnotation
void GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, annotationKey, annotationValue, instanceKey);
}
// Autogenerated method: OVRTelemetry/TelemetryClient.MarkerEnd
void GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::MarkerEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, resultTypeId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/TelemetryClient.CreateMarkerHandle
bool GlobalNamespace::OVRTelemetry::TelemetryClient::CreateMarkerHandle(::StringW name, ByRef<int> nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::CreateMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(nameHandle));
}
// Autogenerated method: OVRTelemetry/TelemetryClient.DestroyMarkerHandle
bool GlobalNamespace::OVRTelemetry::TelemetryClient::DestroyMarkerHandle(int nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::TelemetryClient::DestroyMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameHandle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetry/NullTelemetryClient
#include "GlobalNamespace/OVRTelemetry_NullTelemetryClient.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTelemetry/NullTelemetryClient.MarkerStart
void GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerStart(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/NullTelemetryClient.MarkerPointCached
void GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerPointCached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, nameHandle, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/NullTelemetryClient.MarkerAnnotation
void GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, annotationKey, annotationValue, instanceKey);
}
// Autogenerated method: OVRTelemetry/NullTelemetryClient.MarkerEnd
void GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::MarkerEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, resultTypeId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/NullTelemetryClient.CreateMarkerHandle
bool GlobalNamespace::OVRTelemetry::NullTelemetryClient::CreateMarkerHandle(::StringW name, ByRef<int> nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::CreateMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(nameHandle));
}
// Autogenerated method: OVRTelemetry/NullTelemetryClient.DestroyMarkerHandle
bool GlobalNamespace::OVRTelemetry::NullTelemetryClient::DestroyMarkerHandle(int nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::NullTelemetryClient::DestroyMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameHandle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetry/QPLTelemetryClient
#include "GlobalNamespace/OVRTelemetry_QPLTelemetryClient.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.MarkerStart
void GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerStart(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.MarkerPointCached
void GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerPointCached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, nameHandle, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.MarkerAnnotation
void GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, annotationKey, annotationValue, instanceKey);
}
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.MarkerEnd
void GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::MarkerEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, resultTypeId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.CreateMarkerHandle
bool GlobalNamespace::OVRTelemetry::QPLTelemetryClient::CreateMarkerHandle(::StringW name, ByRef<int> nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::CreateMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(nameHandle));
}
// Autogenerated method: OVRTelemetry/QPLTelemetryClient.DestroyMarkerHandle
bool GlobalNamespace::OVRTelemetry::QPLTelemetryClient::DestroyMarkerHandle(int nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetry::QPLTelemetryClient::DestroyMarkerHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTelemetry::TelemetryClient*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameHandle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/OVRManager
#include "GlobalNamespace/OVRTelemetryConstants_OVRManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTelemetry/MarkerPoint InitializeInsightPassthrough
::GlobalNamespace::OVRTelemetry::MarkerPoint GlobalNamespace::OVRTelemetryConstants::OVRManager::_get_InitializeInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::OVRManager::_get_InitializeInsightPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTelemetry::MarkerPoint>("", "OVRTelemetryConstants/OVRManager", "InitializeInsightPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTelemetry/MarkerPoint InitializeInsightPassthrough
void GlobalNamespace::OVRTelemetryConstants::OVRManager::_set_InitializeInsightPassthrough(::GlobalNamespace::OVRTelemetry::MarkerPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::OVRManager::_set_InitializeInsightPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager", "InitializeInsightPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRTelemetry/MarkerPoint InitPermissionRequest
::GlobalNamespace::OVRTelemetry::MarkerPoint GlobalNamespace::OVRTelemetryConstants::OVRManager::_get_InitPermissionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::OVRManager::_get_InitPermissionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTelemetry::MarkerPoint>("", "OVRTelemetryConstants/OVRManager", "InitPermissionRequest"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTelemetry/MarkerPoint InitPermissionRequest
void GlobalNamespace::OVRTelemetryConstants::OVRManager::_set_InitPermissionRequest(::GlobalNamespace::OVRTelemetry::MarkerPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::OVRManager::_set_InitPermissionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager", "InitPermissionRequest", value));
}
// Autogenerated method: OVRTelemetryConstants/OVRManager..cctor
void GlobalNamespace::OVRTelemetryConstants::OVRManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::OVRManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTelemetryConstants/OVRManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/Scene/MarkerId
#include "GlobalNamespace/OVRTelemetryConstants_Scene_MarkerId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialAnchorSetComponentStatus
int GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorSetComponentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorSetComponentStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorSetComponentStatus"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialAnchorSetComponentStatus
void GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorSetComponentStatus(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorSetComponentStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorSetComponentStatus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialAnchorSave
int GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorSave"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialAnchorSave
void GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorSave(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorSave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialAnchorQuery
int GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialAnchorQuery
void GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorQuery(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialAnchorErase
int GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorErase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorErase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorErase"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialAnchorErase
void GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorErase(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorErase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorErase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SpatialAnchorCreate
int GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_get_SpatialAnchorCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorCreate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SpatialAnchorCreate
void GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorCreate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Scene::MarkerId::_set_SpatialAnchorCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Scene/MarkerId", "SpatialAnchorCreate", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/Editor
#include "GlobalNamespace/OVRTelemetryConstants_Editor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Start
int GlobalNamespace::OVRTelemetryConstants::Editor::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Editor::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/Editor", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Start
void GlobalNamespace::OVRTelemetryConstants::Editor::_set_Start(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::Editor::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/Editor", "Start", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/BB/MarkerId
#include "GlobalNamespace/OVRTelemetryConstants_BB_MarkerId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OpenWindow
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_OpenWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_OpenWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "OpenWindow"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OpenWindow
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_OpenWindow(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_OpenWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "OpenWindow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AddBlock
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_AddBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_AddBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "AddBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AddBlock
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_AddBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_AddBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "AddBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 UpdateBlock
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_UpdateBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_UpdateBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "UpdateBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UpdateBlock
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_UpdateBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_UpdateBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "UpdateBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RunBlock
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_RunBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_RunBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "RunBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RunBlock
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_RunBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_RunBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "RunBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InstallSDK
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_InstallSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_InstallSDK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "InstallSDK"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InstallSDK
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_InstallSDK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_InstallSDK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "InstallSDK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RemoveSDK
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_RemoveSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_RemoveSDK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "RemoveSDK"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RemoveSDK
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_RemoveSDK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_RemoveSDK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "RemoveSDK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InstallBlockData
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_InstallBlockData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_InstallBlockData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "InstallBlockData"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InstallBlockData
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_InstallBlockData(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_InstallBlockData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "InstallBlockData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OpenSceneWithBlock
int GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_OpenSceneWithBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_get_OpenSceneWithBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/BB/MarkerId", "OpenSceneWithBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OpenSceneWithBlock
void GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_OpenSceneWithBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::MarkerId::_set_OpenSceneWithBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/MarkerId", "OpenSceneWithBlock", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/BB/AnnotationType
#include "GlobalNamespace/OVRTelemetryConstants_BB_AnnotationType.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String BlockId
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_BlockId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_BlockId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "BlockId"));
}
// Autogenerated static field setter
// Set static field: static public System.String BlockId
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_BlockId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_BlockId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "BlockId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String BlockName
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_BlockName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_BlockName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "BlockName"));
}
// Autogenerated static field setter
// Set static field: static public System.String BlockName
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_BlockName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_BlockName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "BlockName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String InstanceId
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_InstanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_InstanceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "InstanceId"));
}
// Autogenerated static field setter
// Set static field: static public System.String InstanceId
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_InstanceId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_InstanceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "InstanceId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Version
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String Version
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ActionTrigger
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_ActionTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_ActionTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "ActionTrigger"));
}
// Autogenerated static field setter
// Set static field: static public System.String ActionTrigger
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_ActionTrigger(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_ActionTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "ActionTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Error
::StringW GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/BB/AnnotationType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.String Error
void GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryConstants::BB::AnnotationType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/BB/AnnotationType", "Error", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryMarker
#include "GlobalNamespace/OVRTelemetryMarker.hpp"
// Including type: OVRTelemetry/TelemetryClient
#include "GlobalNamespace/OVRTelemetry_TelemetryClient.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
// Including type: OVRTelemetry/MarkerPoint
#include "GlobalNamespace/OVRTelemetry_MarkerPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRTelemetryMarker/OVRTelemetryMarkerState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState& GlobalNamespace::OVRTelemetryMarker::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::dyn_$State$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <MarkerId>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTelemetryMarker::dyn_$MarkerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::dyn_$MarkerId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MarkerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <InstanceKey>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTelemetryMarker::dyn_$InstanceKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::dyn_$InstanceKey$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InstanceKey>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRTelemetry/TelemetryClient _client
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTelemetry::TelemetryClient*& GlobalNamespace::OVRTelemetryMarker::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::dyn__client");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTelemetry::TelemetryClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTelemetryMarker.get_State
::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState GlobalNamespace::OVRTelemetryMarker::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker.set_State
void GlobalNamespace::OVRTelemetryMarker::set_State(::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTelemetryMarker.get_Sent
bool GlobalNamespace::OVRTelemetryMarker::get_Sent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::get_Sent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Sent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker.get_Result
::GlobalNamespace::OVRPlugin::Qpl::ResultType GlobalNamespace::OVRTelemetryMarker::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Qpl::ResultType, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker.get_MarkerId
int GlobalNamespace::OVRTelemetryMarker::get_MarkerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::get_MarkerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MarkerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker.get_InstanceKey
int GlobalNamespace::OVRTelemetryMarker::get_InstanceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::get_InstanceKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InstanceKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker..ctor
GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarker(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetryMarker..ctor
GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarker(::GlobalNamespace::OVRTelemetry::TelemetryClient* client, int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRTelemetryMarker.SetResult
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::SetResult(::GlobalNamespace::OVRPlugin::Qpl::ResultType result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method, result);
}
// Autogenerated method: OVRTelemetryMarker.AddAnnotation
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::AddAnnotation(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::AddAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotationKey), ::il2cpp_utils::ExtractType(annotationValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated method: OVRTelemetryMarker.AddAnnotationIfNotNullOrEmpty
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::AddAnnotationIfNotNullOrEmpty(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::AddAnnotationIfNotNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddAnnotationIfNotNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotationKey), ::il2cpp_utils::ExtractType(annotationValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated method: OVRTelemetryMarker.Send
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker.SendIf
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::SendIf(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::SendIf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SendIf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method, condition);
}
// Autogenerated method: OVRTelemetryMarker.AddPoint
::GlobalNamespace::OVRTelemetryMarker GlobalNamespace::OVRTelemetryMarker::AddPoint(::GlobalNamespace::OVRTelemetry::MarkerPoint point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::AddPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTelemetryMarker, false>(this, ___internal__method, point);
}
// Autogenerated method: OVRTelemetryMarker.Dispose
void GlobalNamespace::OVRTelemetryMarker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTelemetryMarker), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryMarker/OVRTelemetryMarkerState
#include "GlobalNamespace/OVRTelemetryMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Sent>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::dyn_$Sent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::dyn_$Sent$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sent>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Qpl/ResultType <Result>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Qpl::ResultType& GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::dyn_$Result$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::dyn_$Result$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Result>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Qpl::ResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTelemetryMarker/OVRTelemetryMarkerState.get_Sent
bool GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::get_Sent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::get_Sent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Sent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker/OVRTelemetryMarkerState.set_Sent
void GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::set_Sent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::set_Sent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Sent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTelemetryMarker/OVRTelemetryMarkerState.get_Result
::GlobalNamespace::OVRPlugin::Qpl::ResultType GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Qpl::ResultType, false>(this, ___internal__method);
}
// Autogenerated method: OVRTelemetryMarker/OVRTelemetryMarkerState.set_Result
void GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::set_Result(::GlobalNamespace::OVRPlugin::Qpl::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::set_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTelemetryMarker/OVRTelemetryMarkerState..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRTelemetryMarker::OVRTelemetryMarkerState::OVRTelemetryMarkerState(bool sent, ::GlobalNamespace::OVRPlugin::Qpl::ResultType result)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRKeyboard
#include "GlobalNamespace/OVRKeyboard.hpp"
// Including type: OVRKeyboard/TrackedKeyboardState
#include "GlobalNamespace/OVRKeyboard_TrackedKeyboardState.hpp"
// Including type: OVRKeyboard/TrackedKeyboardInfo
#include "GlobalNamespace/OVRKeyboard_TrackedKeyboardInfo.hpp"
// Including type: OVRPlugin/TrackedKeyboardQueryFlags
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardQueryFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRKeyboard.GetKeyboardState
::GlobalNamespace::OVRKeyboard::TrackedKeyboardState GlobalNamespace::OVRKeyboard::GetKeyboardState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKeyboard::GetKeyboardState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRKeyboard", "GetKeyboardState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRKeyboard::TrackedKeyboardState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRKeyboard.GetSystemKeyboardInfo
bool GlobalNamespace::OVRKeyboard::GetSystemKeyboardInfo(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags keyboardQueryFlags, ByRef<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo> keyboardInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKeyboard::GetSystemKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRKeyboard", "GetSystemKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardQueryFlags), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyboardQueryFlags, byref(keyboardInfo));
}
// Autogenerated method: OVRKeyboard.StopKeyboardTracking
bool GlobalNamespace::OVRKeyboard::StopKeyboardTracking(::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo keyboardInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRKeyboard::StopKeyboardTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRKeyboard", "StopKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyboardInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: OVRTrackedKeyboard/<>c
#include "GlobalNamespace/OVRTrackedKeyboard_--c.hpp"
// Including type: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86
#include "GlobalNamespace/OVRTrackedKeyboard_-InitializeHandPresenceData-d__86.hpp"
// Including type: OVRTrackedKeyboard/<Start>d__85
#include "GlobalNamespace/OVRTrackedKeyboard_-Start-d__85.hpp"
// Including type: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93
#include "GlobalNamespace/OVRTrackedKeyboard_-StartKeyboardTrackingCoroutine-d__93.hpp"
// Including type: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95
#include "GlobalNamespace/OVRTrackedKeyboard_-UpdateKeyboardPose-d__95.hpp"
// Including type: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92
#include "GlobalNamespace/OVRTrackedKeyboard_-UpdateTrackingStateCoroutine-d__92.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single underlayScaleMultX_
float GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleMultX_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleMultX_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "underlayScaleMultX_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single underlayScaleMultX_
void GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleMultX_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleMultX_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "underlayScaleMultX_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single underlayScaleConstY_
float GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleConstY_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleConstY_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "underlayScaleConstY_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single underlayScaleConstY_
void GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleConstY_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleConstY_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "underlayScaleConstY_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single underlayScaleMultZ_
float GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleMultZ_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_underlayScaleMultZ_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "underlayScaleMultZ_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single underlayScaleMultZ_
void GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleMultZ_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_underlayScaleMultZ_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "underlayScaleMultZ_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 underlayOffset_
::UnityEngine::Vector3 GlobalNamespace::OVRTrackedKeyboard::_get_underlayOffset_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_underlayOffset_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTrackedKeyboard", "underlayOffset_"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 underlayOffset_
void GlobalNamespace::OVRTrackedKeyboard::_set_underlayOffset_(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_underlayOffset_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "underlayOffset_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single boundingBoxAboveKeyboardY_
float GlobalNamespace::OVRTrackedKeyboard::_get_boundingBoxAboveKeyboardY_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_boundingBoxAboveKeyboardY_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "boundingBoxAboveKeyboardY_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single boundingBoxAboveKeyboardY_
void GlobalNamespace::OVRTrackedKeyboard::_set_boundingBoxAboveKeyboardY_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_boundingBoxAboveKeyboardY_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "boundingBoxAboveKeyboardY_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single initialHorizontalDistanceKeyboard_
float GlobalNamespace::OVRTrackedKeyboard::_get_initialHorizontalDistanceKeyboard_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_initialHorizontalDistanceKeyboard_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "initialHorizontalDistanceKeyboard_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single initialHorizontalDistanceKeyboard_
void GlobalNamespace::OVRTrackedKeyboard::_set_initialHorizontalDistanceKeyboard_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_initialHorizontalDistanceKeyboard_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "initialHorizontalDistanceKeyboard_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single initialVerticalDistanceKeyboard_
float GlobalNamespace::OVRTrackedKeyboard::_get_initialVerticalDistanceKeyboard_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_initialVerticalDistanceKeyboard_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "initialVerticalDistanceKeyboard_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single initialVerticalDistanceKeyboard_
void GlobalNamespace::OVRTrackedKeyboard::_set_initialVerticalDistanceKeyboard_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_initialVerticalDistanceKeyboard_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "initialVerticalDistanceKeyboard_", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single STALE_TIMEOUT
float GlobalNamespace::OVRTrackedKeyboard::_get_STALE_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_STALE_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "STALE_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single STALE_TIMEOUT
void GlobalNamespace::OVRTrackedKeyboard::_set_STALE_TIMEOUT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_STALE_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "STALE_TIMEOUT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single FILTERED_POSE_TIMEOUT
float GlobalNamespace::OVRTrackedKeyboard::_get_FILTERED_POSE_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_get_FILTERED_POSE_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboard", "FILTERED_POSE_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FILTERED_POSE_TIMEOUT
void GlobalNamespace::OVRTrackedKeyboard::_set_FILTERED_POSE_TIMEOUT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::_set_FILTERED_POSE_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard", "FILTERED_POSE_TIMEOUT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <CurrentKeyboardAngleFromUp>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_$CurrentKeyboardAngleFromUp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_$CurrentKeyboardAngleFromUp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentKeyboardAngleFromUp>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTrackedKeyboard/TrackedKeyboardState <TrackingState>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState& GlobalNamespace::OVRTrackedKeyboard::dyn_$TrackingState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_$TrackingState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackingState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRKeyboard/TrackedKeyboardInfo <ActiveKeyboardInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo& GlobalNamespace::OVRTrackedKeyboard::dyn_$ActiveKeyboardInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_$ActiveKeyboardInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ActiveKeyboardInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRKeyboard/TrackedKeyboardInfo <SystemKeyboardInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo& GlobalNamespace::OVRTrackedKeyboard::dyn_$SystemKeyboardInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_$SystemKeyboardInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SystemKeyboardInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trackingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::dyn_trackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_trackingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean connectionRequired
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::dyn_connectionRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_connectionRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showUntracked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::dyn_showUntracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_showUntracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showUntracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/TrackedKeyboardQueryFlags keyboardQueryFlags
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags& GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardQueryFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardQueryFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardQueryFlags"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTrackedKeyboard/KeyboardPresentation presentation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation& GlobalNamespace::OVRTrackedKeyboard::dyn_presentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_presentation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "presentation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTextureQualityFiltering textureFiltering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTextureQualityFiltering& GlobalNamespace::OVRTrackedKeyboard::dyn_textureFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_textureFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureFiltering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTextureQualityFiltering*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mipmapBias
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_mipmapBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_mipmapBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mipmapBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PassthroughBorderMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_PassthroughBorderMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_PassthroughBorderMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PassthroughBorderMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader keyboardModelShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardModelShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardModelShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardModelShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader keyboardModelAlphaBlendShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardModelAlphaBlendShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardModelAlphaBlendShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardModelAlphaBlendShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/TrackedKeyboardPresentationStyles currentKeyboardPresentationStyles
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::TrackedKeyboardPresentationStyles& GlobalNamespace::OVRTrackedKeyboard::dyn_currentKeyboardPresentationStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_currentKeyboardPresentationStyles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentKeyboardPresentationStyles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::TrackedKeyboardPresentationStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay projectedPassthroughOpaque_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughOpaque_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughOpaque_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectedPassthroughOpaque_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] activeKeyboardRenderers_
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardRenderers_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardRenderers_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeKeyboardRenderers_"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject activeKeyboardMesh_
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardMesh_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardMesh_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeKeyboardMesh_"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer activeKeyboardMeshRenderer_
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardMeshRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_activeKeyboardMeshRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeKeyboardMeshRenderer_"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject passthroughQuad_
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboard::dyn_passthroughQuad_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_passthroughQuad_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughQuad_"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D dynamicQualityTexture_
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OVRTrackedKeyboard::dyn_dynamicQualityTexture_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_dynamicQualityTexture_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicQualityTexture_"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 untrackedPosition_
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRTrackedKeyboard::dyn_untrackedPosition_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_untrackedPosition_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "untrackedPosition_"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader PassthroughShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRTrackedKeyboard::dyn_PassthroughShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_PassthroughShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PassthroughShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform projectedPassthroughRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectedPassthroughRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter projectedPassthroughMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_projectedPassthroughMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectedPassthroughMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPassthroughLayer ProjectedPassthroughMR
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::OVRTrackedKeyboard::dyn_ProjectedPassthroughMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_ProjectedPassthroughMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProjectedPassthroughMR"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent> TrackedKeyboardActiveChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>*& GlobalNamespace::OVRTrackedKeyboard::dyn_TrackedKeyboardActiveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_TrackedKeyboardActiveChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackedKeyboardActiveChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent> TrackedKeyboardVisibilityChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>*& GlobalNamespace::OVRTrackedKeyboard::dyn_TrackedKeyboardVisibilityChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_TrackedKeyboardVisibilityChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackedKeyboardVisibilityChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform ActiveKeyboardTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRTrackedKeyboard::dyn_ActiveKeyboardTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_ActiveKeyboardTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveKeyboardTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HandsOverKeyboard
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::dyn_HandsOverKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_HandsOverKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandsOverKeyboard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig cameraRig_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRTrackedKeyboard::dyn_cameraRig_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_cameraRig_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine updateKeyboardRoutine_
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::OVRTrackedKeyboard::dyn_updateKeyboardRoutine_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_updateKeyboardRoutine_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateKeyboardRoutine_"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.BoxCollider keyboardBoundingBox_
[[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardBoundingBox_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_keyboardBoundingBox_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardBoundingBox_"))->offset;
  return *reinterpret_cast<::UnityEngine::BoxCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single staleTimeoutCounter_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_staleTimeoutCounter_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_staleTimeoutCounter_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staleTimeoutCounter_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reacquisitionTimer_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_reacquisitionTimer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_reacquisitionTimer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reacquisitionTimer_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sendFilteredPoseEventTimer_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_sendFilteredPoseEventTimer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_sendFilteredPoseEventTimer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendFilteredPoseEventTimer_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 skippedPoseCount_
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::dyn_skippedPoseCount_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_skippedPoseCount_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skippedPoseCount_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Vector3> EWAPosition
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& GlobalNamespace::OVRTrackedKeyboard::dyn_EWAPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_EWAPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EWAPosition"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Quaternion> EWARotation
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& GlobalNamespace::OVRTrackedKeyboard::dyn_EWARotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_EWARotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EWARotation"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single HAND_HEIGHT_TUNING
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRTrackedKeyboard::dyn_HAND_HEIGHT_TUNING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_HAND_HEIGHT_TUNING");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HAND_HEIGHT_TUNING"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseHeuristicRollback
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::dyn_UseHeuristicRollback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::dyn_UseHeuristicRollback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseHeuristicRollback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard.get_CurrentKeyboardAngleFromUp
float GlobalNamespace::OVRTrackedKeyboard::get_CurrentKeyboardAngleFromUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_CurrentKeyboardAngleFromUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentKeyboardAngleFromUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_CurrentKeyboardAngleFromUp
void GlobalNamespace::OVRTrackedKeyboard::set_CurrentKeyboardAngleFromUp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_CurrentKeyboardAngleFromUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentKeyboardAngleFromUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_TrackingState
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::get_TrackingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_TrackingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_TrackingState
void GlobalNamespace::OVRTrackedKeyboard::set_TrackingState(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_TrackingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_ActiveKeyboardInfo
::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo GlobalNamespace::OVRTrackedKeyboard::get_ActiveKeyboardInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_ActiveKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_ActiveKeyboardInfo
void GlobalNamespace::OVRTrackedKeyboard::set_ActiveKeyboardInfo(::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_ActiveKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ActiveKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_SystemKeyboardInfo
::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo GlobalNamespace::OVRTrackedKeyboard::get_SystemKeyboardInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_SystemKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_SystemKeyboardInfo
void GlobalNamespace::OVRTrackedKeyboard::set_SystemKeyboardInfo(::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_SystemKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SystemKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_Presentation
::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation GlobalNamespace::OVRTrackedKeyboard::get_Presentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_Presentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Presentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_Presentation
void GlobalNamespace::OVRTrackedKeyboard::set_Presentation(::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_Presentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Presentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_TrackingEnabled
bool GlobalNamespace::OVRTrackedKeyboard::get_TrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_TrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_TrackingEnabled
void GlobalNamespace::OVRTrackedKeyboard::set_TrackingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_TrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_ConnectionRequired
bool GlobalNamespace::OVRTrackedKeyboard::get_ConnectionRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_ConnectionRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_ConnectionRequired
void GlobalNamespace::OVRTrackedKeyboard::set_ConnectionRequired(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_ConnectionRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_ShowUntracked
bool GlobalNamespace::OVRTrackedKeyboard::get_ShowUntracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_ShowUntracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowUntracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_ShowUntracked
void GlobalNamespace::OVRTrackedKeyboard::set_ShowUntracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_ShowUntracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowUntracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_RemoteKeyboard
bool GlobalNamespace::OVRTrackedKeyboard::get_RemoteKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_RemoteKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_RemoteKeyboard
void GlobalNamespace::OVRTrackedKeyboard::set_RemoteKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_RemoteKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemoteKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_KeyboardQueryFlags
::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags GlobalNamespace::OVRTrackedKeyboard::get_KeyboardQueryFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_KeyboardQueryFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyboardQueryFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_KeyboardQueryFlags
void GlobalNamespace::OVRTrackedKeyboard::set_KeyboardQueryFlags(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_KeyboardQueryFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyboardQueryFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.get_PassthroughOverlay
::GlobalNamespace::OVROverlay* GlobalNamespace::OVRTrackedKeyboard::get_PassthroughOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::get_PassthroughOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PassthroughOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.set_PassthroughOverlay
void GlobalNamespace::OVRTrackedKeyboard::set_PassthroughOverlay(::GlobalNamespace::OVROverlay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::set_PassthroughOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PassthroughOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboard.Start
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboard::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.InitializeHandPresenceData
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboard::InitializeHandPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::InitializeHandPresenceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeHandPresenceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.RegisterPassthroughMeshToSDK
void GlobalNamespace::OVRTrackedKeyboard::RegisterPassthroughMeshToSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::RegisterPassthroughMeshToSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterPassthroughMeshToSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.GetDistanceToKeyboard
float GlobalNamespace::OVRTrackedKeyboard::GetDistanceToKeyboard(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::GetDistanceToKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceToKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, point);
}
// Autogenerated method: OVRTrackedKeyboard.LaunchLocalKeyboardSelectionDialog
void GlobalNamespace::OVRTrackedKeyboard::LaunchLocalKeyboardSelectionDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::LaunchLocalKeyboardSelectionDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchLocalKeyboardSelectionDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.LaunchRemoteKeyboardSelectionDialog
void GlobalNamespace::OVRTrackedKeyboard::LaunchRemoteKeyboardSelectionDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::LaunchRemoteKeyboardSelectionDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchRemoteKeyboardSelectionDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.KeyboardTrackerIsRunning
bool GlobalNamespace::OVRTrackedKeyboard::KeyboardTrackerIsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardTrackerIsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardTrackerIsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdateTrackingStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboard::UpdateTrackingStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdateTrackingStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrackingStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.StartKeyboardTrackingCoroutine
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboard::StartKeyboardTrackingCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::StartKeyboardTrackingCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartKeyboardTrackingCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.StopKeyboardTrackingInternal
void GlobalNamespace::OVRTrackedKeyboard::StopKeyboardTrackingInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::StopKeyboardTrackingInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopKeyboardTrackingInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdateKeyboardPose
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboard::UpdateKeyboardPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdateKeyboardPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeyboardPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdateSkippedPoseTimer
void GlobalNamespace::OVRTrackedKeyboard::UpdateSkippedPoseTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdateSkippedPoseTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkippedPoseTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.LoadKeyboardMesh
void GlobalNamespace::OVRTrackedKeyboard::LoadKeyboardMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::LoadKeyboardMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadKeyboardMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdateTextureQuality
void GlobalNamespace::OVRTrackedKeyboard::UpdateTextureQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdateTextureQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextureQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdatePresentation
void GlobalNamespace::OVRTrackedKeyboard::UpdatePresentation(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdatePresentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePresentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isVisible);
}
// Autogenerated method: OVRTrackedKeyboard.LoadRuntimeKeyboardMesh
::UnityEngine::GameObject* GlobalNamespace::OVRTrackedKeyboard::LoadRuntimeKeyboardMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::LoadRuntimeKeyboardMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRuntimeKeyboardMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.UpdateKeyboardVisibility
void GlobalNamespace::OVRTrackedKeyboard::UpdateKeyboardVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::UpdateKeyboardVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeyboardVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.SetKeyboardState
void GlobalNamespace::OVRTrackedKeyboard::SetKeyboardState(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::SetKeyboardState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: OVRTrackedKeyboard.GetKeyboardVisibility
bool GlobalNamespace::OVRTrackedKeyboard::GetKeyboardVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::GetKeyboardVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyboardVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.InitializeKeyboardInfo
void GlobalNamespace::OVRTrackedKeyboard::InitializeKeyboardInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::InitializeKeyboardInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeKeyboardInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.LaunchOverlayIntent
void GlobalNamespace::OVRTrackedKeyboard::LaunchOverlayIntent(::StringW dataUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::LaunchOverlayIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchOverlayIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataUri);
}
// Autogenerated method: OVRTrackedKeyboard.Dispose
void GlobalNamespace::OVRTrackedKeyboard::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard.DispatchVisibilityEvent
void GlobalNamespace::OVRTrackedKeyboard::DispatchVisibilityEvent(bool timeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::DispatchVisibilityEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchVisibilityEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeOut);
}
// Autogenerated method: OVRTrackedKeyboard..cctor
void GlobalNamespace::OVRTrackedKeyboard::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTrackedKeyboard", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard/TrackedKeyboardState
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState Uninitialized
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState Uninitialized
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Uninitialized(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState NoTrackableKeyboard
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_NoTrackableKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_NoTrackableKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "NoTrackableKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState NoTrackableKeyboard
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_NoTrackableKeyboard(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_NoTrackableKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "NoTrackableKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState Offline
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState Offline
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Offline(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState StartedNotTracked
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_StartedNotTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_StartedNotTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "StartedNotTracked"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState StartedNotTracked
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_StartedNotTracked(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_StartedNotTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "StartedNotTracked", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState Stale
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Stale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Stale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "Stale"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState Stale
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Stale(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Stale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "Stale", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState Valid
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Valid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "Valid"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState Valid
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Valid(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Valid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "Valid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState Error
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState Error
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Error(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/TrackedKeyboardState ErrorExtensionFailed
::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_ErrorExtensionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_get_ErrorExtensionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState>("", "OVRTrackedKeyboard/TrackedKeyboardState", "ErrorExtensionFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/TrackedKeyboardState ErrorExtensionFailed
void GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_ErrorExtensionFailed(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::_set_ErrorExtensionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/TrackedKeyboardState", "ErrorExtensionFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard/KeyboardPresentation
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/KeyboardPresentation PreferOpaque
::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_get_PreferOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_get_PreferOpaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation>("", "OVRTrackedKeyboard/KeyboardPresentation", "PreferOpaque"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/KeyboardPresentation PreferOpaque
void GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_set_PreferOpaque(::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_set_PreferOpaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/KeyboardPresentation", "PreferOpaque", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTrackedKeyboard/KeyboardPresentation PreferMR
::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_get_PreferMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_get_PreferMR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation>("", "OVRTrackedKeyboard/KeyboardPresentation", "PreferMR"));
}
// Autogenerated static field setter
// Set static field: static public OVRTrackedKeyboard/KeyboardPresentation PreferMR
void GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_set_PreferMR(::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::_set_PreferMR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/KeyboardPresentation", "PreferMR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::KeyboardPresentation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ActiveKeyboardName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_ActiveKeyboardName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_ActiveKeyboardName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveKeyboardName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OVRTrackedKeyboard/TrackedKeyboardState State
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState& GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_State");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean TrackingTimeout
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_TrackingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::dyn_TrackingTimeout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingTimeout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent::TrackedKeyboardVisibilityChangedEvent(::StringW keyboardModel, ::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardState state, bool timeout)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent::dyn_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent::dyn_IsEnabled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent::TrackedKeyboardSetActiveEvent(bool isEnabled)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboard/<>c
#include "GlobalNamespace/OVRTrackedKeyboard_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTrackedKeyboard/<>c <>9
::GlobalNamespace::OVRTrackedKeyboard::$$c* GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTrackedKeyboard::$$c*>("", "OVRTrackedKeyboard/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTrackedKeyboard/<>c <>9
void GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9(::GlobalNamespace::OVRTrackedKeyboard::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent> <>9__110_0
::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>* GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9__110_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9__110_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>*>("", "OVRTrackedKeyboard/<>c", "<>9__110_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardSetActiveEvent> <>9__110_0
void GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9__110_0(::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9__110_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/<>c", "<>9__110_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent> <>9__110_1
::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>* GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9__110_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_get_$$9__110_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>*>("", "OVRTrackedKeyboard/<>c", "<>9__110_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<OVRTrackedKeyboard/TrackedKeyboardVisibilityChangedEvent> <>9__110_1
void GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9__110_1(::System::Action_1<::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::_set_$$9__110_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboard/<>c", "<>9__110_1", value)));
}
// Autogenerated method: OVRTrackedKeyboard/<>c..cctor
void GlobalNamespace::OVRTrackedKeyboard::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTrackedKeyboard/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<>c.<.ctor>b__110_0
void GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_0(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::<.ctor>b__110_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__110_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: OVRTrackedKeyboard/<>c.<.ctor>b__110_1
void GlobalNamespace::OVRTrackedKeyboard::$$c::$_ctor$b__110_1(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$$c::<.ctor>b__110_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__110_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86
#include "GlobalNamespace/OVRTrackedKeyboard_-InitializeHandPresenceData-d__86.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86.MoveNext
bool GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<InitializeHandPresenceData>d__86.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$InitializeHandPresenceData$d__86*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboard/<Start>d__85
#include "GlobalNamespace/OVRTrackedKeyboard_-Start-d__85.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/<Start>d__85.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<Start>d__85.MoveNext
bool GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<Start>d__85.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<Start>d__85.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<Start>d__85.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$Start$d__85*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93
#include "GlobalNamespace/OVRTrackedKeyboard_-StartKeyboardTrackingCoroutine-d__93.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93.MoveNext
bool GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<StartKeyboardTrackingCoroutine>d__93.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$StartKeyboardTrackingCoroutine$d__93*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95
#include "GlobalNamespace/OVRTrackedKeyboard_-UpdateKeyboardPose-d__95.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95.MoveNext
bool GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateKeyboardPose>d__95.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateKeyboardPose$d__95*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92
#include "GlobalNamespace/OVRTrackedKeyboard_-UpdateTrackingStateCoroutine-d__92.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRKeyboard/TrackedKeyboardInfo <keyboardInfo>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo& GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$keyboardInfo$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::dyn_$keyboardInfo$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<keyboardInfo>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRKeyboard::TrackedKeyboardInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92.MoveNext
bool GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboard/<UpdateTrackingStateCoroutine>d__92.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboard::$UpdateTrackingStateCoroutine$d__92*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboardHands
#include "GlobalNamespace/OVRTrackedKeyboardHands.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single handInnerAlphaThreshold_
float GlobalNamespace::OVRTrackedKeyboardHands::_get_handInnerAlphaThreshold_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_handInnerAlphaThreshold_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "handInnerAlphaThreshold_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single handInnerAlphaThreshold_
void GlobalNamespace::OVRTrackedKeyboardHands::_set_handInnerAlphaThreshold_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_handInnerAlphaThreshold_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "handInnerAlphaThreshold_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single handOuterAlphaThreshold_
float GlobalNamespace::OVRTrackedKeyboardHands::_get_handOuterAlphaThreshold_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_handOuterAlphaThreshold_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "handOuterAlphaThreshold_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single handOuterAlphaThreshold_
void GlobalNamespace::OVRTrackedKeyboardHands::_set_handOuterAlphaThreshold_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_handOuterAlphaThreshold_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "handOuterAlphaThreshold_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single maximumPassthroughHandsDistance_
float GlobalNamespace::OVRTrackedKeyboardHands::_get_maximumPassthroughHandsDistance_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_maximumPassthroughHandsDistance_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "maximumPassthroughHandsDistance_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single maximumPassthroughHandsDistance_
void GlobalNamespace::OVRTrackedKeyboardHands::_set_maximumPassthroughHandsDistance_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_maximumPassthroughHandsDistance_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "maximumPassthroughHandsDistance_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single minimumModelHandsDistance_
float GlobalNamespace::OVRTrackedKeyboardHands::_get_minimumModelHandsDistance_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_minimumModelHandsDistance_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "minimumModelHandsDistance_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single minimumModelHandsDistance_
void GlobalNamespace::OVRTrackedKeyboardHands::_set_minimumModelHandsDistance_(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_minimumModelHandsDistance_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "minimumModelHandsDistance_", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single XSCALE
float GlobalNamespace::OVRTrackedKeyboardHands::_get_XSCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_XSCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "XSCALE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single XSCALE
void GlobalNamespace::OVRTrackedKeyboardHands::_set_XSCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_XSCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "XSCALE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single YSCALE
float GlobalNamespace::OVRTrackedKeyboardHands::_get_YSCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_YSCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "YSCALE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single YSCALE
void GlobalNamespace::OVRTrackedKeyboardHands::_set_YSCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_YSCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "YSCALE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single FORWARD_OFFSET
float GlobalNamespace::OVRTrackedKeyboardHands::_get_FORWARD_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_get_FORWARD_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTrackedKeyboardHands", "FORWARD_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FORWARD_OFFSET
void GlobalNamespace::OVRTrackedKeyboardHands::_set_FORWARD_OFFSET(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::_set_FORWARD_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTrackedKeyboardHands", "FORWARD_OFFSET", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject LeftHandPresence
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_LeftHandPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_LeftHandPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandPresence"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RightHandPresence
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_RightHandPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_RightHandPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandPresence"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean handPresenceInitialized_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboardHands::dyn_handPresenceInitialized_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_handPresenceInitialized_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handPresenceInitialized_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform leftHandRoot_
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandRoot_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandRoot_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandRoot_"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform rightHandRoot_
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandRoot_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandRoot_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandRoot_"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard KeyboardTracker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_KeyboardTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_KeyboardTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyboardTracker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig cameraRig_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_cameraRig_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_cameraRig_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand leftHand_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHand_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHand_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton leftHandSkeleton_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeleton_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeleton_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSkeleton_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer leftHandSkeletonRenderer_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeletonRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeletonRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeletonRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSkeletonRenderer_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeletonRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject leftHandSkeletonRendererGO_
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeletonRendererGO_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkeletonRendererGO_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSkeletonRendererGO_"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer leftHandSkinnedMeshRenderer_
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkinnedMeshRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandSkinnedMeshRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSkinnedMeshRenderer_"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer leftHandMeshRenderer_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMeshRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandMeshRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_leftHandMeshRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandMeshRenderer_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand rightHand_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHand_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHand_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton rightHandSkeleton_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeleton_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeleton_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSkeleton_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer rightHandSkeletonRenderer_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeletonRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeletonRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeletonRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSkeletonRenderer_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeletonRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject rightHandSkeletonRendererGO_
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeletonRendererGO_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkeletonRendererGO_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSkeletonRendererGO_"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer rightHandMeshRenderer_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMeshRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandMeshRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandMeshRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandMeshRenderer_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer rightHandSkinnedMeshRenderer_
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkinnedMeshRenderer_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_rightHandSkinnedMeshRenderer_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSkinnedMeshRenderer_"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <RightHandOverKeyboard>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboardHands::dyn_$RightHandOverKeyboard$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_$RightHandOverKeyboard$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RightHandOverKeyboard>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <LeftHandOverKeyboard>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboardHands::dyn_$LeftHandOverKeyboard$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_$LeftHandOverKeyboard$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LeftHandOverKeyboard>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<OVRTrackedKeyboardHands/TrackedKeyboardHandsVisibilityChangedEvent> lastVisibilityEvent_
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardHandsVisibilityChangedEvent>& GlobalNamespace::OVRTrackedKeyboardHands::dyn_lastVisibilityEvent_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_lastVisibilityEvent_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastVisibilityEvent_"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardHandsVisibilityChangedEvent>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRTrackedKeyboardHands/HandBoneMapping[] boneMappings_
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRTrackedKeyboardHands::HandBoneMapping>& GlobalNamespace::OVRTrackedKeyboardHands::dyn_boneMappings_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_boneMappings_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMappings_"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRTrackedKeyboardHands::HandBoneMapping>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material HandsMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVRTrackedKeyboardHands::dyn_HandsMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_HandsMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandsMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyboardPositionID_
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardPositionID_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardPositionID_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardPositionID_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyboardRotationID_
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardRotationID_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardRotationID_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardRotationID_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyboardScaleID_
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardScaleID_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::dyn_keyboardScaleID_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardScaleID_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboardHands.get_RightHandOverKeyboard
bool GlobalNamespace::OVRTrackedKeyboardHands::get_RightHandOverKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::get_RightHandOverKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandOverKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.set_RightHandOverKeyboard
void GlobalNamespace::OVRTrackedKeyboardHands::set_RightHandOverKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::set_RightHandOverKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandOverKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboardHands.get_LeftHandOverKeyboard
bool GlobalNamespace::OVRTrackedKeyboardHands::get_LeftHandOverKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::get_LeftHandOverKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandOverKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.set_LeftHandOverKeyboard
void GlobalNamespace::OVRTrackedKeyboardHands::set_LeftHandOverKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::set_LeftHandOverKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandOverKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboardHands.Awake
void GlobalNamespace::OVRTrackedKeyboardHands::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.Start
void GlobalNamespace::OVRTrackedKeyboardHands::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.get_AreControllersActive
bool GlobalNamespace::OVRTrackedKeyboardHands::get_AreControllersActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::get_AreControllersActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AreControllersActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.LateUpdate
void GlobalNamespace::OVRTrackedKeyboardHands::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.ShouldEnablePassthrough
bool GlobalNamespace::OVRTrackedKeyboardHands::ShouldEnablePassthrough(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::ShouldEnablePassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldEnablePassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, distance);
}
// Autogenerated method: OVRTrackedKeyboardHands.ShouldEnableModel
bool GlobalNamespace::OVRTrackedKeyboardHands::ShouldEnableModel(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::ShouldEnableModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldEnableModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, distance);
}
// Autogenerated method: OVRTrackedKeyboardHands.GetHandDistanceToKeyboard
float GlobalNamespace::OVRTrackedKeyboardHands::GetHandDistanceToKeyboard(::GlobalNamespace::OVRSkeleton* handSkeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::GetHandDistanceToKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandDistanceToKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handSkeleton)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, handSkeleton);
}
// Autogenerated method: OVRTrackedKeyboardHands.ComputeOpacity
float GlobalNamespace::OVRTrackedKeyboardHands::ComputeOpacity(float distance, float innerThreshold, float outerThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::ComputeOpacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeOpacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(innerThreshold), ::il2cpp_utils::ExtractType(outerThreshold)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, distance, innerThreshold, outerThreshold);
}
// Autogenerated method: OVRTrackedKeyboardHands.SetHandModelsEnabled
void GlobalNamespace::OVRTrackedKeyboardHands::SetHandModelsEnabled(bool enableLeftModel, bool enableRightModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::SetHandModelsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandModelsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableLeftModel), ::il2cpp_utils::ExtractType(enableRightModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableLeftModel, enableRightModel);
}
// Autogenerated method: OVRTrackedKeyboardHands.RetargetHandTrackingToHandPresence
void GlobalNamespace::OVRTrackedKeyboardHands::RetargetHandTrackingToHandPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::RetargetHandTrackingToHandPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RetargetHandTrackingToHandPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.StopHandPresence
void GlobalNamespace::OVRTrackedKeyboardHands::StopHandPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::StopHandPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopHandPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.DisableHandObjects
void GlobalNamespace::OVRTrackedKeyboardHands::DisableHandObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::DisableHandObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableHandObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardHands.TrackedKeyboardActiveUpdated
void GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardActiveUpdated(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardSetActiveEvent e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardActiveUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackedKeyboardActiveUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: OVRTrackedKeyboardHands.TrackedKeyboardVisibilityChanged
void GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardVisibilityChanged(::GlobalNamespace::OVRTrackedKeyboard::TrackedKeyboardVisibilityChangedEvent e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::TrackedKeyboardVisibilityChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackedKeyboardVisibilityChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: OVRTrackedKeyboardHands..cctor
void GlobalNamespace::OVRTrackedKeyboardHands::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardHands::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTrackedKeyboardHands", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTrackedKeyboardSampleControls
#include "GlobalNamespace/OVRTrackedKeyboardSampleControls.hpp"
// Including type: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19
#include "GlobalNamespace/OVRTrackedKeyboardSampleControls_-SetShaderCoroutine-d__19.hpp"
// Including type: OVRTrackedKeyboard
#include "GlobalNamespace/OVRTrackedKeyboard.hpp"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboard trackedKeyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboard*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_trackedKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_trackedKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedKeyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.InputField StartingFocusField
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_StartingFocusField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_StartingFocusField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartingFocusField"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text NameValue
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_NameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_NameValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameValue"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text ConnectedValue
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ConnectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ConnectedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedValue"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text StateValue
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_StateValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_StateValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateValue"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text SelectKeyboardValue
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_SelectKeyboardValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_SelectKeyboardValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectKeyboardValue"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text TypeValue
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_TypeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_TypeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeValue"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color GoodStateColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_GoodStateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_GoodStateColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoodStateColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BadStateColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_BadStateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_BadStateColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BadStateColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle TrackingToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_TrackingToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_TrackingToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle ConnectionToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ConnectionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ConnectionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle RemoteKeyboardToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_RemoteKeyboardToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_RemoteKeyboardToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteKeyboardToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button[] ShaderButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Button*>& GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ShaderButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::dyn_ShaderButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Button*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.Start
void GlobalNamespace::OVRTrackedKeyboardSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.Update
void GlobalNamespace::OVRTrackedKeyboardSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetPresentationOpaque
void GlobalNamespace::OVRTrackedKeyboardSampleControls::SetPresentationOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetPresentationOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresentationOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetPresentationMR
void GlobalNamespace::OVRTrackedKeyboardSampleControls::SetPresentationMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetPresentationMR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresentationMR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetUnlitShader
void GlobalNamespace::OVRTrackedKeyboardSampleControls::SetUnlitShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetUnlitShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUnlitShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetDiffuseShader
void GlobalNamespace::OVRTrackedKeyboardSampleControls::SetDiffuseShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetDiffuseShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDiffuseShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetShaderCoroutine
::System::Collections::IEnumerator* GlobalNamespace::OVRTrackedKeyboardSampleControls::SetShaderCoroutine(::StringW shaderName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetShaderCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shaderName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, shaderName);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.LaunchKeyboardSelection
void GlobalNamespace::OVRTrackedKeyboardSampleControls::LaunchKeyboardSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::LaunchKeyboardSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchKeyboardSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.SetTrackingEnabled
void GlobalNamespace::OVRTrackedKeyboardSampleControls::SetTrackingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::SetTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls.<SetShaderCoroutine>b__19_0
bool GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::<SetShaderCoroutine>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetShaderCoroutine>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19
#include "GlobalNamespace/OVRTrackedKeyboardSampleControls_-SetShaderCoroutine-d__19.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTrackedKeyboardSampleControls <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTrackedKeyboardSampleControls*& GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTrackedKeyboardSampleControls**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String shaderName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_shaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_shaderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <trackingWasEnabled>5__2
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$trackingWasEnabled$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::dyn_$trackingWasEnabled$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingWasEnabled>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19.System.IDisposable.Dispose
void GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19.MoveNext
bool GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTrackedKeyboardSampleControls/<SetShaderCoroutine>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRTrackedKeyboardSampleControls::$SetShaderCoroutine$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTracker.get_isPresent
bool GlobalNamespace::OVRTracker::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isPositionTracked
bool GlobalNamespace::OVRTracker::get_isPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::get_isPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isEnabled
bool GlobalNamespace::OVRTracker::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.set_isEnabled
void GlobalNamespace::OVRTracker::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTracker.get_count
int GlobalNamespace::OVRTracker::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::get_count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.GetFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRTracker::GetFrustum(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::GetFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRTracker::GetPose(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::GetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPoseValid
bool GlobalNamespace::OVRTracker::GetPoseValid(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::GetPoseValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPresent
bool GlobalNamespace::OVRTracker::GetPresent(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTracker::GetPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard
#include "GlobalNamespace/OVRVirtualKeyboard.hpp"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: OVRVirtualKeyboard/InteractorRootTransformOverride
#include "GlobalNamespace/OVRVirtualKeyboard_InteractorRootTransformOverride.hpp"
// Including type: OVRVirtualKeyboard/InputSource
#include "GlobalNamespace/OVRVirtualKeyboard_InputSource.hpp"
// Including type: OVRVirtualKeyboard/IInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_IInputSource.hpp"
// Including type: OVRVirtualKeyboard/BaseInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_BaseInputSource.hpp"
// Including type: OVRVirtualKeyboard/ControllerInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_ControllerInputSource.hpp"
// Including type: OVRVirtualKeyboard/HandInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_HandInputSource.hpp"
// Including type: OVRVirtualKeyboard/KeyboardEventListener
#include "GlobalNamespace/OVRVirtualKeyboard_KeyboardEventListener.hpp"
// Including type: OVRVirtualKeyboard/CommitTextUnityEvent
#include "GlobalNamespace/OVRVirtualKeyboard_CommitTextUnityEvent.hpp"
// Including type: OVRVirtualKeyboard/<>c
#include "GlobalNamespace/OVRVirtualKeyboard_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: OVRPlugin/VirtualKeyboardLocationInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardLocationInfo.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: OVRPlugin/VirtualKeyboardInputSource
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRVirtualKeyboard singleton_
::GlobalNamespace::OVRVirtualKeyboard* GlobalNamespace::OVRVirtualKeyboard::_get_singleton_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::_get_singleton_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard*>("", "OVRVirtualKeyboard", "singleton_"));
}
// Autogenerated static field setter
// Set static field: static private OVRVirtualKeyboard singleton_
void GlobalNamespace::OVRVirtualKeyboard::_set_singleton_(::GlobalNamespace::OVRVirtualKeyboard* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::_set_singleton_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard", "singleton_", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> CommitText
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::OVRVirtualKeyboard::dyn_CommitText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_CommitText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommitText"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action Backspace
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRVirtualKeyboard::dyn_Backspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_Backspace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Backspace"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action Enter
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRVirtualKeyboard::dyn_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_Enter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enter"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action KeyboardShown
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyboardShown"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action KeyboardHidden
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardHidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyboardHidden"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::OVRVirtualKeyboard::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboard/KeyboardPosition InitialPosition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition& GlobalNamespace::OVRVirtualKeyboard::dyn_InitialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_InitialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.InputField textCommitField
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField*& GlobalNamespace::OVRVirtualKeyboard::dyn_textCommitField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_textCommitField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textCommitField"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftControllerRootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::dyn_leftControllerRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_leftControllerRootTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerRootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftControllerDirectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::dyn_leftControllerDirectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_leftControllerDirectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerDirectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightControllerRootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::dyn_rightControllerRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_rightControllerRootTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerRootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightControllerDirectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::dyn_rightControllerDirectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_rightControllerDirectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerDirectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean controllerDirectInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_controllerDirectInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_controllerDirectInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerDirectInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean controllerRayInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_controllerRayInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_controllerRayInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRayInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRPhysicsRaycaster controllerRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRPhysicsRaycaster*& GlobalNamespace::OVRVirtualKeyboard::dyn_controllerRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_controllerRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRPhysicsRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRHand handLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRVirtualKeyboard::dyn_handLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_handLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRHand handRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRVirtualKeyboard::dyn_handRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_handRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean handDirectInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_handDirectInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_handDirectInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handDirectInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean handRayInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_handRayInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_handRayInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRayInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRPhysicsRaycaster handRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRPhysicsRaycaster*& GlobalNamespace::OVRVirtualKeyboard::dyn_handRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_handRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRPhysicsRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader keyboardModelShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardModelShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardModelShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardModelShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader keyboardModelAlphaBlendShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardModelAlphaBlendShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardModelAlphaBlendShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardModelAlphaBlendShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InputEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_InputEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_InputEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRVirtualKeyboard/CommitTextUnityEvent CommitTextEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::CommitTextUnityEvent*& GlobalNamespace::OVRVirtualKeyboard::dyn_CommitTextEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_CommitTextEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommitTextEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::CommitTextUnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent BackspaceEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::OVRVirtualKeyboard::dyn_BackspaceEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_BackspaceEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackspaceEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent EnterEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::OVRVirtualKeyboard::dyn_EnterEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_EnterEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent KeyboardShownEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardShownEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardShownEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyboardShownEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent KeyboardHiddenEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardHiddenEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_KeyboardHiddenEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyboardHiddenEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeyboardCreated_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_isKeyboardCreated_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_isKeyboardCreated_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeyboardCreated_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 keyboardSpace_
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardSpace_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardSpace_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardSpace_"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt64,System.Collections.Generic.List`1<UnityEngine.Material>> virtualKeyboardTextures_
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<::UnityEngine::Material*>*>*& GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardTextures_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardTextures_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualKeyboardTextures_"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<::UnityEngine::Material*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFScene virtualKeyboardScene_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFScene& GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardScene_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardScene_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualKeyboardScene_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFScene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 virtualKeyboardModelKey_
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardModelKey_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_virtualKeyboardModelKey_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualKeyboardModelKey_"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean modelInitialized_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_modelInitialized_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_modelInitialized_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modelInitialized_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean modelAvailable_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_modelAvailable_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_modelAvailable_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modelAvailable_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keyboardVisible_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardVisible_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardVisible_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardVisible_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboard/InteractorRootTransformOverride _interactorRootTransformOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride*& GlobalNamespace::OVRVirtualKeyboard::dyn__interactorRootTransformOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn__interactorRootTransformOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorRootTransformOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRVirtualKeyboard/IInputSource> _inputSources
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRVirtualKeyboard::IInputSource*>*& GlobalNamespace::OVRVirtualKeyboard::dyn__inputSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn__inputSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSources"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRVirtualKeyboard::IInputSource*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreTextCommmitFieldOnValueChanged_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::dyn_ignoreTextCommmitFieldOnValueChanged_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_ignoreTextCommmitFieldOnValueChanged_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreTextCommmitFieldOnValueChanged_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.InputField runtimeInputField_
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField*& GlobalNamespace::OVRVirtualKeyboard::dyn_runtimeInputField_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_runtimeInputField_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtimeInputField_"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboard/KeyboardEventListener keyboardEventListener_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener*& GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardEventListener_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::dyn_keyboardEventListener_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardEventListener_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard.add_CommitText
void GlobalNamespace::OVRVirtualKeyboard::add_CommitText(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::add_CommitText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CommitText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.remove_CommitText
void GlobalNamespace::OVRVirtualKeyboard::remove_CommitText(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::remove_CommitText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CommitText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.add_Backspace
void GlobalNamespace::OVRVirtualKeyboard::add_Backspace(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::add_Backspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Backspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.remove_Backspace
void GlobalNamespace::OVRVirtualKeyboard::remove_Backspace(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::remove_Backspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Backspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.add_Enter
void GlobalNamespace::OVRVirtualKeyboard::add_Enter(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::add_Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.remove_Enter
void GlobalNamespace::OVRVirtualKeyboard::remove_Enter(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::remove_Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.add_KeyboardShown
void GlobalNamespace::OVRVirtualKeyboard::add_KeyboardShown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::add_KeyboardShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyboardShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.remove_KeyboardShown
void GlobalNamespace::OVRVirtualKeyboard::remove_KeyboardShown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::remove_KeyboardShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyboardShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.add_KeyboardHidden
void GlobalNamespace::OVRVirtualKeyboard::add_KeyboardHidden(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::add_KeyboardHidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyboardHidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.remove_KeyboardHidden
void GlobalNamespace::OVRVirtualKeyboard::remove_KeyboardHidden(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::remove_KeyboardHidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyboardHidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.get_Collider
::UnityEngine::Collider* GlobalNamespace::OVRVirtualKeyboard::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::get_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.set_Collider
void GlobalNamespace::OVRVirtualKeyboard::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.get_TextCommitField
::UnityEngine::UI::InputField* GlobalNamespace::OVRVirtualKeyboard::get_TextCommitField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::get_TextCommitField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextCommitField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::InputField*, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.set_TextCommitField
void GlobalNamespace::OVRVirtualKeyboard::set_TextCommitField(::UnityEngine::UI::InputField* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::set_TextCommitField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextCommitField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboard.Awake
void GlobalNamespace::OVRVirtualKeyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnDestroy
void GlobalNamespace::OVRVirtualKeyboard::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnEnable
void GlobalNamespace::OVRVirtualKeyboard::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnDisable
void GlobalNamespace::OVRVirtualKeyboard::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.UseSuggestedLocation
void GlobalNamespace::OVRVirtualKeyboard::UseSuggestedLocation(::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::UseSuggestedLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseSuggestedLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: OVRVirtualKeyboard.SendVirtualKeyboardRayInput
void GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardRayInput(::UnityEngine::Transform* inputTransform, ::GlobalNamespace::OVRVirtualKeyboard::InputSource source, bool isPressed, bool useRaycastMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardRayInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVirtualKeyboardRayInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputTransform), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(isPressed), ::il2cpp_utils::ExtractType(useRaycastMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputTransform, source, isPressed, useRaycastMask);
}
// Autogenerated method: OVRVirtualKeyboard.SendVirtualKeyboardDirectInput
void GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardDirectInput(::UnityEngine::Vector3 position, ::GlobalNamespace::OVRVirtualKeyboard::InputSource source, bool isPressed, ::UnityEngine::Transform* interactorRootTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardDirectInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVirtualKeyboardDirectInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(isPressed), ::il2cpp_utils::ExtractType(interactorRootTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, source, isPressed, interactorRootTransform);
}
// Autogenerated method: OVRVirtualKeyboard.ChangeTextContext
void GlobalNamespace::OVRVirtualKeyboard::ChangeTextContext(::StringW textContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ChangeTextContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTextContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContext);
}
// Autogenerated method: OVRVirtualKeyboard.LoadRuntimeVirtualKeyboardMesh
bool GlobalNamespace::OVRVirtualKeyboard::LoadRuntimeVirtualKeyboardMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::LoadRuntimeVirtualKeyboardMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRuntimeVirtualKeyboardMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.ApplyHideFlags
void GlobalNamespace::OVRVirtualKeyboard::ApplyHideFlags(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ApplyHideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRVirtualKeyboard", "ApplyHideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: OVRVirtualKeyboard.PopulateCollision
void GlobalNamespace::OVRVirtualKeyboard::PopulateCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::PopulateCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.ShowKeyboard
void GlobalNamespace::OVRVirtualKeyboard::ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ShowKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.SetKeyboardVisibility
void GlobalNamespace::OVRVirtualKeyboard::SetKeyboardVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::SetKeyboardVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: OVRVirtualKeyboard.HideKeyboard
void GlobalNamespace::OVRVirtualKeyboard::HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HideKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.DestroyKeyboard
void GlobalNamespace::OVRVirtualKeyboard::DestroyKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::DestroyKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.MaxElement
float GlobalNamespace::OVRVirtualKeyboard::MaxElement(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::MaxElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, vec);
}
// Autogenerated method: OVRVirtualKeyboard.ComputeLocation
::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationInfo GlobalNamespace::OVRVirtualKeyboard::ComputeLocation(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ComputeLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationInfo, false>(this, ___internal__method, transform);
}
// Autogenerated method: OVRVirtualKeyboard.Update
void GlobalNamespace::OVRVirtualKeyboard::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.LateUpdate
void GlobalNamespace::OVRVirtualKeyboard::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.SendVirtualKeyboardInput
void GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardInput(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource inputSource, ::GlobalNamespace::OVRPose pose, bool isPressed, ::UnityEngine::Transform* interactorRootTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::SendVirtualKeyboardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVirtualKeyboardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputSource), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isPressed), ::il2cpp_utils::ExtractType(interactorRootTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputSource, pose, isPressed, interactorRootTransform);
}
// Autogenerated method: OVRVirtualKeyboard.UpdateInputs
void GlobalNamespace::OVRVirtualKeyboard::UpdateInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::UpdateInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.SyncKeyboardLocation
void GlobalNamespace::OVRVirtualKeyboard::SyncKeyboardLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::SyncKeyboardLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncKeyboardLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.UpdateAnimationState
void GlobalNamespace::OVRVirtualKeyboard::UpdateAnimationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::UpdateAnimationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnimationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnCommitText
void GlobalNamespace::OVRVirtualKeyboard::OnCommitText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnCommitText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCommitText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: OVRVirtualKeyboard.OnTextCommitFieldChange
void GlobalNamespace::OVRVirtualKeyboard::OnTextCommitFieldChange(::StringW textContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnTextCommitFieldChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTextCommitFieldChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContext);
}
// Autogenerated method: OVRVirtualKeyboard.ChangeTextContextInternal
void GlobalNamespace::OVRVirtualKeyboard::ChangeTextContextInternal(::StringW textContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ChangeTextContextInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTextContextInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContext);
}
// Autogenerated method: OVRVirtualKeyboard.OnBackspace
void GlobalNamespace::OVRVirtualKeyboard::OnBackspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnBackspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBackspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnEnter
void GlobalNamespace::OVRVirtualKeyboard::OnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnKeyboardShown
void GlobalNamespace::OVRVirtualKeyboard::OnKeyboardShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnKeyboardShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyboardShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.OnKeyboardHidden
void GlobalNamespace::OVRVirtualKeyboard::OnKeyboardHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::OnKeyboardHidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyboardHidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.UpdateVisibleState
void GlobalNamespace::OVRVirtualKeyboard::UpdateVisibleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::UpdateVisibleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard.<LoadRuntimeVirtualKeyboardMesh>b__75_1
::UnityEngine::Texture2D* GlobalNamespace::OVRVirtualKeyboard::$LoadRuntimeVirtualKeyboardMesh$b__75_1(::StringW rawUri, ::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::<LoadRuntimeVirtualKeyboardMesh>b__75_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadRuntimeVirtualKeyboardMesh>b__75_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawUri), ::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, rawUri, mat);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/KeyboardPosition
#include "GlobalNamespace/OVRVirtualKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/KeyboardPosition Far
::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Far");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition>("", "OVRVirtualKeyboard/KeyboardPosition", "Far"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/KeyboardPosition Far
void GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Far(::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Far");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/KeyboardPosition", "Far", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/KeyboardPosition Near
::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Near");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition>("", "OVRVirtualKeyboard/KeyboardPosition", "Near"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/KeyboardPosition Near
void GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Near(::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Near");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/KeyboardPosition", "Near", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/KeyboardPosition Direct
::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition>("", "OVRVirtualKeyboard/KeyboardPosition", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/KeyboardPosition Direct
void GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Direct(::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/KeyboardPosition", "Direct", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/KeyboardPosition Custom
::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition>("", "OVRVirtualKeyboard/KeyboardPosition", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/KeyboardPosition Custom
void GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Custom(::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/KeyboardPosition", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/InteractorRootTransformOverride
#include "GlobalNamespace/OVRVirtualKeyboard_InteractorRootTransformOverride.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6
#include "GlobalNamespace/OVRVirtualKeyboard_InteractorRootTransformOverride_-RevertInteractorOverrides-d__6.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<OVRVirtualKeyboard/InteractorRootTransformOverride/InteractorRootOverrideData> applyQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::InteractorRootOverrideData>*& GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::dyn_applyQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::dyn_applyQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::InteractorRootOverrideData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<OVRVirtualKeyboard/InteractorRootTransformOverride/InteractorRootOverrideData> revertQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::InteractorRootOverrideData>*& GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::dyn_revertQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::dyn_revertQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "revertQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::InteractorRootOverrideData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride.Enqueue
void GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::Enqueue(::UnityEngine::Transform* interactorRootTransform, ::GlobalNamespace::OVRPlugin::Posef interactorRootPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorRootTransform), ::il2cpp_utils::ExtractType(interactorRootPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorRootTransform, interactorRootPose);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride.LateApply
void GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::LateApply(::UnityEngine::MonoBehaviour* coroutineRunner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::LateApply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateApply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineRunner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coroutineRunner);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride.Reset
void GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride.RevertInteractorOverrides
::System::Collections::IEnumerator* GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::RevertInteractorOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::RevertInteractorOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertInteractorOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride.ApplyOverride
bool GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::ApplyOverride(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::InteractorRootOverrideData interactorOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::ApplyOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRVirtualKeyboard/InteractorRootTransformOverride", "ApplyOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactorOverride);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6
#include "GlobalNamespace/OVRVirtualKeyboard_InteractorRootTransformOverride_-RevertInteractorOverrides-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRVirtualKeyboard/InteractorRootTransformOverride <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride*& GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6.System.IDisposable.Dispose
void GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6.MoveNext
bool GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/InteractorRootTransformOverride/<RevertInteractorOverrides>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::InteractorRootTransformOverride::$RevertInteractorOverrides$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/InputSource
#include "GlobalNamespace/OVRVirtualKeyboard_InputSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/InputSource ControllerLeft
::GlobalNamespace::OVRVirtualKeyboard::InputSource GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_ControllerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_ControllerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::InputSource>("", "OVRVirtualKeyboard/InputSource", "ControllerLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/InputSource ControllerLeft
void GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_ControllerLeft(::GlobalNamespace::OVRVirtualKeyboard::InputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_ControllerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/InputSource", "ControllerLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/InputSource ControllerRight
::GlobalNamespace::OVRVirtualKeyboard::InputSource GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_ControllerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_ControllerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::InputSource>("", "OVRVirtualKeyboard/InputSource", "ControllerRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/InputSource ControllerRight
void GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_ControllerRight(::GlobalNamespace::OVRVirtualKeyboard::InputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_ControllerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/InputSource", "ControllerRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/InputSource HandLeft
::GlobalNamespace::OVRVirtualKeyboard::InputSource GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::InputSource>("", "OVRVirtualKeyboard/InputSource", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/InputSource HandLeft
void GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_HandLeft(::GlobalNamespace::OVRVirtualKeyboard::InputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/InputSource", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRVirtualKeyboard/InputSource HandRight
::GlobalNamespace::OVRVirtualKeyboard::InputSource GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::InputSource>("", "OVRVirtualKeyboard/InputSource", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRVirtualKeyboard/InputSource HandRight
void GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_HandRight(::GlobalNamespace::OVRVirtualKeyboard::InputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/InputSource", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRVirtualKeyboard::InputSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::InputSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/IInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_IInputSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRVirtualKeyboard/IInputSource.Update
void GlobalNamespace::OVRVirtualKeyboard::IInputSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::IInputSource::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::IInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/BaseInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_BaseInputSource.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Boolean _operatingWithoutOVRCameraRig
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::dyn__operatingWithoutOVRCameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::dyn__operatingWithoutOVRCameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_operatingWithoutOVRCameraRig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRCameraRig _rig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::dyn__rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::dyn__rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/BaseInputSource.OnUpdatedAnchors
void GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::OnUpdatedAnchors(::GlobalNamespace::OVRCameraRig* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::OnUpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRVirtualKeyboard/BaseInputSource.Update
void GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/BaseInputSource.UpdateInput
void GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::UpdateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/BaseInputSource.Dispose
void GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/ControllerInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_ControllerInputSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _rootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__rootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__rootTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _directTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__directTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__directTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRVirtualKeyboard/InputSource _inputSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::InputSource& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__inputSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__inputSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::InputSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/Controller _controllerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__controllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__controllerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRVirtualKeyboard _keyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard*& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__keyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__lastFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::dyn__lastFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/ControllerInputSource.get_TriggerIsPressed
bool GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::get_TriggerIsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::get_TriggerIsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TriggerIsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/ControllerInputSource.UpdateInput
void GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::UpdateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::ControllerInputSource::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/HandInputSource
#include "GlobalNamespace/OVRVirtualKeyboard_HandInputSource.hpp"
// Including type: OVRVirtualKeyboard/HandInputSource/<>c
#include "GlobalNamespace/OVRVirtualKeyboard_HandInputSource_--c.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OVRHand _hand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRVirtualKeyboard/InputSource _inputSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard::InputSource& GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__inputSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__inputSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard::InputSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRVirtualKeyboard _keyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard*& GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__keyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRSkeleton _skeleton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__skeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skeleton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__lastFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::dyn__lastFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/HandInputSource.UpdateInput
void GlobalNamespace::OVRVirtualKeyboard::HandInputSource::UpdateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::BaseInputSource*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/HandInputSource/<>c
#include "GlobalNamespace/OVRVirtualKeyboard_HandInputSource_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: OVRBone
#include "GlobalNamespace/OVRBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRVirtualKeyboard/HandInputSource/<>c <>9
::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c* GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c*>("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRVirtualKeyboard/HandInputSource/<>c <>9
void GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9(::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<OVRBone,System.Boolean> <>9__6_0
::System::Func_2<::GlobalNamespace::OVRBone*, bool>* GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::OVRBone*, bool>*>("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<OVRBone,System.Boolean> <>9__6_0
void GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::OVRBone*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<OVRBone,System.Boolean> <>9__6_1
::System::Func_2<::GlobalNamespace::OVRBone*, bool>* GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::OVRBone*, bool>*>("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<OVRBone,System.Boolean> <>9__6_1
void GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9__6_1(::System::Func_2<::GlobalNamespace::OVRBone*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/HandInputSource/<>c", "<>9__6_1", value)));
}
// Autogenerated method: OVRVirtualKeyboard/HandInputSource/<>c..cctor
void GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRVirtualKeyboard/HandInputSource/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/HandInputSource/<>c.<UpdateInput>b__6_0
bool GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::$UpdateInput$b__6_0(::GlobalNamespace::OVRBone* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::<UpdateInput>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateInput>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b);
}
// Autogenerated method: OVRVirtualKeyboard/HandInputSource/<>c.<UpdateInput>b__6_1
bool GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::$UpdateInput$b__6_1(::GlobalNamespace::OVRBone* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::HandInputSource::$$c::<UpdateInput>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateInput>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/KeyboardEventListener
#include "GlobalNamespace/OVRVirtualKeyboard_KeyboardEventListener.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OVRVirtualKeyboard keyboard_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard*& GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener::dyn_keyboard_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener::dyn_keyboard_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboard_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboard/KeyboardEventListener.OnEvent
void GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener::OnEvent(::GlobalNamespace::OVRPlugin::EventDataBuffer eventDataBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRVirtualKeyboard::KeyboardEventListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventDataBuffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/CommitTextUnityEvent
#include "GlobalNamespace/OVRVirtualKeyboard_CommitTextUnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboard/<>c
#include "GlobalNamespace/OVRVirtualKeyboard_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRVirtualKeyboard/<>c <>9
::GlobalNamespace::OVRVirtualKeyboard::$$c* GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRVirtualKeyboard::$$c*>("", "OVRVirtualKeyboard/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRVirtualKeyboard/<>c <>9
void GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9(::GlobalNamespace::OVRVirtualKeyboard::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__75_0
::System::Func_2<::StringW, bool>* GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9__75_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9__75_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("", "OVRVirtualKeyboard/<>c", "<>9__75_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__75_0
void GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9__75_0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9__75_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/<>c", "<>9__75_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.MeshFilter,System.Boolean> <>9__77_0
::System::Func_2<::UnityEngine::MeshFilter*, bool>* GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9__77_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_get_$$9__77_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::MeshFilter*, bool>*>("", "OVRVirtualKeyboard/<>c", "<>9__77_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.MeshFilter,System.Boolean> <>9__77_0
void GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9__77_0(::System::Func_2<::UnityEngine::MeshFilter*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::_set_$$9__77_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboard/<>c", "<>9__77_0", value)));
}
// Autogenerated method: OVRVirtualKeyboard/<>c..cctor
void GlobalNamespace::OVRVirtualKeyboard::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRVirtualKeyboard/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboard/<>c.<LoadRuntimeVirtualKeyboardMesh>b__75_0
bool GlobalNamespace::OVRVirtualKeyboard::$$c::$LoadRuntimeVirtualKeyboardMesh$b__75_0(::StringW p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::<LoadRuntimeVirtualKeyboardMesh>b__75_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadRuntimeVirtualKeyboardMesh>b__75_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: OVRVirtualKeyboard/<>c.<PopulateCollision>b__77_0
bool GlobalNamespace::OVRVirtualKeyboard::$$c::$PopulateCollision$b__77_0(::UnityEngine::MeshFilter* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboard::$$c::<PopulateCollision>b__77_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PopulateCollision>b__77_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mesh);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardControllerInputHandler
#include "GlobalNamespace/OVRVirtualKeyboardControllerInputHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRVirtualKeyboardControllerInputHandler.Awake
void GlobalNamespace::OVRVirtualKeyboardControllerInputHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardControllerInputHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardHandInputHandler
#include "GlobalNamespace/OVRVirtualKeyboardHandInputHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRVirtualKeyboardHandInputHandler.Awake
void GlobalNamespace::OVRVirtualKeyboardHandInputHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardHandInputHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardSampleControls
#include "GlobalNamespace/OVRVirtualKeyboardSampleControls.hpp"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: OVRVirtualKeyboard
#include "GlobalNamespace/OVRVirtualKeyboard.hpp"
// Including type: OVRVirtualKeyboardSampleInputHandler
#include "GlobalNamespace/OVRVirtualKeyboardSampleInputHandler.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single THUMBSTICK_DEADZONE
float GlobalNamespace::OVRVirtualKeyboardSampleControls::_get_THUMBSTICK_DEADZONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::_get_THUMBSTICK_DEADZONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRVirtualKeyboardSampleControls", "THUMBSTICK_DEADZONE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single THUMBSTICK_DEADZONE
void GlobalNamespace::OVRVirtualKeyboardSampleControls::_set_THUMBSTICK_DEADZONE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::_set_THUMBSTICK_DEADZONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboardSampleControls", "THUMBSTICK_DEADZONE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button ShowButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_ShowButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_ShowButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button MoveButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button HideButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_HideButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_HideButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HideButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button MoveNearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveNearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveNearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveNearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button MoveFarButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveFarButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_MoveFarButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveFarButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button DestroyKeyboardButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_DestroyKeyboardButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_DestroyKeyboardButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestroyKeyboardButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboard keyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboardSampleInputHandler inputHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler*& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_inputHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_inputHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isMovingKeyboard_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_isMovingKeyboard_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_isMovingKeyboard_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMovingKeyboard_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isMovingKeyboardFinished_
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_isMovingKeyboardFinished_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_isMovingKeyboardFinished_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMovingKeyboardFinished_"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single keyboardMoveDistance_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardMoveDistance_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardMoveDistance_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardMoveDistance_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single keyboardScale_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardScale_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardScale_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardScale_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRVirtualKeyboardSampleControls/OVRVirtualKeyboardBackup keyboardBackup
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup& GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardBackup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::dyn_keyboardBackup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyboardBackup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.Start
void GlobalNamespace::OVRVirtualKeyboardSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.OnDestroy
void GlobalNamespace::OVRVirtualKeyboardSampleControls::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.ShowKeyboard
void GlobalNamespace::OVRVirtualKeyboardSampleControls::ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::ShowKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.MoveKeyboard
void GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.MoveKeyboardNear
void GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboardNear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboardNear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveKeyboardNear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.MoveKeyboardFar
void GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboardFar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::MoveKeyboardFar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveKeyboardFar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.HideKeyboard
void GlobalNamespace::OVRVirtualKeyboardSampleControls::HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::HideKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.DestroyKeyboard
void GlobalNamespace::OVRVirtualKeyboardSampleControls::DestroyKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::DestroyKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.OnHideKeyboard
void GlobalNamespace::OVRVirtualKeyboardSampleControls::OnHideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OnHideKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHideKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.UpdateButtonInteractable
void GlobalNamespace::OVRVirtualKeyboardSampleControls::UpdateButtonInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::UpdateButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls.Update
void GlobalNamespace::OVRVirtualKeyboardSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardSampleControls/OVRVirtualKeyboardBackup
#include "GlobalNamespace/OVRVirtualKeyboardSampleControls.hpp"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: OVRVirtualKeyboard
#include "GlobalNamespace/OVRVirtualKeyboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UI.InputField _textCommitField
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__textCommitField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__textCommitField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textCommitField"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Quaternion _rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 _scale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _rightControllerDirectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rightControllerDirectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rightControllerDirectTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightControllerDirectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _rightControllerRootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rightControllerRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__rightControllerRootTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightControllerRootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _leftControllerDirectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__leftControllerDirectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__leftControllerDirectTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftControllerDirectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _leftControllerRootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__leftControllerRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__leftControllerRootTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftControllerRootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _controllerRayInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerRayInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerRayInteraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerRayInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _controllerDirectInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerDirectInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerDirectInteraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerDirectInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRHand _handLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRHand _handRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _handRayInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRayInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRayInteraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRayInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _handDirectInteraction
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handDirectInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handDirectInteraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handDirectInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.OVRPhysicsRaycaster _controllerRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRPhysicsRaycaster*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__controllerRaycaster");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRPhysicsRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.OVRPhysicsRaycaster _handRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRPhysicsRaycaster*& GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::dyn__handRaycaster");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRPhysicsRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls/OVRVirtualKeyboardBackup..ctor
GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::OVRVirtualKeyboardBackup(::GlobalNamespace::OVRVirtualKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboard);
}
// Autogenerated method: OVRVirtualKeyboardSampleControls/OVRVirtualKeyboardBackup.RestoreTo
void GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::RestoreTo(::GlobalNamespace::OVRVirtualKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleControls::OVRVirtualKeyboardBackup::RestoreTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RestoreTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboard);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardSampleInputHandler
#include "GlobalNamespace/OVRVirtualKeyboardSampleInputHandler.hpp"
// Including type: OVRVirtualKeyboard/InputSource
#include "GlobalNamespace/OVRVirtualKeyboard_InputSource.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single RAY_MAX_DISTANCE
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_RAY_MAX_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_RAY_MAX_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRVirtualKeyboardSampleInputHandler", "RAY_MAX_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RAY_MAX_DISTANCE
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_RAY_MAX_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_RAY_MAX_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboardSampleInputHandler", "RAY_MAX_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single THUMBSTICK_DEADZONE
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_THUMBSTICK_DEADZONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_THUMBSTICK_DEADZONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRVirtualKeyboardSampleInputHandler", "THUMBSTICK_DEADZONE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single THUMBSTICK_DEADZONE
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_THUMBSTICK_DEADZONE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_THUMBSTICK_DEADZONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboardSampleInputHandler", "THUMBSTICK_DEADZONE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COLLISION_BOUNDS_ADDED_BLEED_PERCENT
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_COLLISION_BOUNDS_ADDED_BLEED_PERCENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_COLLISION_BOUNDS_ADDED_BLEED_PERCENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRVirtualKeyboardSampleInputHandler", "COLLISION_BOUNDS_ADDED_BLEED_PERCENT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COLLISION_BOUNDS_ADDED_BLEED_PERCENT
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_COLLISION_BOUNDS_ADDED_BLEED_PERCENT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_COLLISION_BOUNDS_ADDED_BLEED_PERCENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboardSampleInputHandler", "COLLISION_BOUNDS_ADDED_BLEED_PERCENT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LINEPOINTER_THINNING_THRESHOLD
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_LINEPOINTER_THINNING_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_get_LINEPOINTER_THINNING_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRVirtualKeyboardSampleInputHandler", "LINEPOINTER_THINNING_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LINEPOINTER_THINNING_THRESHOLD
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_LINEPOINTER_THINNING_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::_set_LINEPOINTER_THINNING_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRVirtualKeyboardSampleInputHandler", "LINEPOINTER_THINNING_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRVirtualKeyboard OVRVirtualKeyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRVirtualKeyboard*& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_OVRVirtualKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_OVRVirtualKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OVRVirtualKeyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRVirtualKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRRaycaster raycaster
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRaycaster*& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_raycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_raycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.OVRInputModule inputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_inputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_inputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer leftLinePointer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_leftLinePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_leftLinePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLinePointer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer rightLinePointer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_rightLinePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_rightLinePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLinePointer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<OVRInput/Controller> interactionDevice_
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::OVRInput::Controller>& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_interactionDevice_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_interactionDevice_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionDevice_"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::OVRInput::Controller>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single linePointerInitialWidth_
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_linePointerInitialWidth_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::dyn_linePointerInitialWidth_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePointerInitialWidth_"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.ApplyDeadzone
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::ApplyDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::ApplyDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRVirtualKeyboardSampleInputHandler", "ApplyDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.get_AnalogStickX
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_AnalogStickX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_AnalogStickX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnalogStickX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.get_AnalogStickY
float GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_AnalogStickY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_AnalogStickY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnalogStickY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.get_InputRayPosition
::UnityEngine::Vector3 GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_InputRayPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_InputRayPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputRayPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.get_InputRayRotation
::UnityEngine::Quaternion GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_InputRayRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::get_InputRayRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputRayRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.Start
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.Update
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.UpdateLineRenderer
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.UpdateLineRendererFromSource
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateLineRendererFromSource(::GlobalNamespace::OVRVirtualKeyboard::InputSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateLineRendererFromSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineRendererFromSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: OVRVirtualKeyboardSampleInputHandler.UpdateInteractionAnchor
void GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateInteractionAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleInputHandler::UpdateInteractionAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractionAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRVirtualKeyboardSampleWPMPrompt
#include "GlobalNamespace/OVRVirtualKeyboardSampleWPMPrompt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRVirtualKeyboardSampleWPMPrompt.Awake
void GlobalNamespace::OVRVirtualKeyboardSampleWPMPrompt::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRVirtualKeyboardSampleWPMPrompt::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusXRPlugin
#include "GlobalNamespace/OculusXRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusXRPlugin.SetColorScale
void GlobalNamespace::OculusXRPlugin::SetColorScale(float x, float y, float z, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetColorScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetColorScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, w);
}
// Autogenerated method: OculusXRPlugin.SetColorOffset
void GlobalNamespace::OculusXRPlugin::SetColorOffset(float x, float y, float z, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetColorOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetColorOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, w);
}
// Autogenerated method: OculusXRPlugin.SetSpaceWarp
void GlobalNamespace::OculusXRPlugin::SetSpaceWarp(::GlobalNamespace::OVRPlugin::Bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetSpaceWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetSpaceWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, on);
}
// Autogenerated method: OculusXRPlugin.SetAppSpacePosition
void GlobalNamespace::OculusXRPlugin::SetAppSpacePosition(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetAppSpacePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetAppSpacePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: OculusXRPlugin.SetAppSpaceRotation
void GlobalNamespace::OculusXRPlugin::SetAppSpaceRotation(float x, float y, float z, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetAppSpaceRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetAppSpaceRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, w);
}
// Autogenerated method: OculusXRPlugin.SetDepthSubmission
void GlobalNamespace::OculusXRPlugin::SetDepthSubmission(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusXRPlugin::SetDepthSubmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusXRPlugin", "SetDepthSubmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProcessPort
#include "GlobalNamespace/ProcessPort.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <processName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ProcessPort::dyn_$processName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::dyn_$processName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<processName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <processId>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProcessPort::dyn_$processId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::dyn_$processId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<processId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <portNumber>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ProcessPort::dyn_$portNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::dyn_$portNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<portNumber>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <protocol>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ProcessPort::dyn_$protocol$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::dyn_$protocol$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<protocol>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProcessPort.get_processName
::StringW GlobalNamespace::ProcessPort::get_processName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::get_processName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_processName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ProcessPort.set_processName
void GlobalNamespace::ProcessPort::set_processName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::set_processName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_processName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProcessPort.get_processId
int GlobalNamespace::ProcessPort::get_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::get_processId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_processId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ProcessPort.set_processId
void GlobalNamespace::ProcessPort::set_processId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::set_processId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_processId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProcessPort.get_portNumber
::StringW GlobalNamespace::ProcessPort::get_portNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::get_portNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_portNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ProcessPort.set_portNumber
void GlobalNamespace::ProcessPort::set_portNumber(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::set_portNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_portNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProcessPort.get_protocol
::StringW GlobalNamespace::ProcessPort::get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::get_protocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_protocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ProcessPort.set_protocol
void GlobalNamespace::ProcessPort::set_protocol(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::set_protocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_protocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProcessPort.LookupProcess
::StringW GlobalNamespace::ProcessPort::LookupProcess(int pid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::LookupProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProcessPort", "LookupProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pid);
}
// Autogenerated method: ProcessPort.GetProcessesByPort
::System::Collections::Generic::List_1<::GlobalNamespace::ProcessPort*>* GlobalNamespace::ProcessPort::GetProcessesByPort(::StringW targetPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::GetProcessesByPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProcessPort", "GetProcessesByPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPort)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ProcessPort*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPort);
}
// Autogenerated method: ProcessPort.ToString
::StringW GlobalNamespace::ProcessPort::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProcessPort::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTask
#include "GlobalNamespace/OVRTask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTask.GetId
::System::Guid GlobalNamespace::OVRTask::GetId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTask::GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTask", "GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRAudioSourceTest
#include "GlobalNamespace/OVRAudioSourceTest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single period
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRAudioSourceTest::dyn_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAudioSourceTest::dyn_period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextActionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRAudioSourceTest::dyn_nextActionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAudioSourceTest::dyn_nextActionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextActionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRAudioSourceTest.Start
void GlobalNamespace::OVRAudioSourceTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAudioSourceTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAudioSourceTest.Update
void GlobalNamespace::OVRAudioSourceTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAudioSourceTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRAutoDestroyInMRC
#include "GlobalNamespace/OVRAutoDestroyInMRC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRAutoDestroyInMRC.Start
void GlobalNamespace::OVRAutoDestroyInMRC::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAutoDestroyInMRC::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRChromaticAberration
#include "GlobalNamespace/OVRChromaticAberration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton toggleButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRChromaticAberration::dyn_toggleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChromaticAberration::dyn_toggleButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggleButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean chromatic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRChromaticAberration::dyn_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChromaticAberration::dyn_chromatic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chromatic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRChromaticAberration.Start
void GlobalNamespace::OVRChromaticAberration::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChromaticAberration::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRChromaticAberration.Update
void GlobalNamespace::OVRChromaticAberration::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChromaticAberration::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper
#include "GlobalNamespace/OVRControllerHelper.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSLeftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuestAndRiftSLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuestAndRiftSLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchQuestAndRiftSLeftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuestAndRiftSRightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuestAndRiftSRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuestAndRiftSRightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchQuestAndRiftSRightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchRiftLeftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchRiftLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchRiftLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchRiftLeftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchRiftRightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchRiftRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchRiftRightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchRiftRightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2LeftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuest2LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuest2LeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchQuest2LeftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelOculusTouchQuest2RightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuest2RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelOculusTouchQuest2RightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelOculusTouchQuest2RightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelMetaTouchProLeftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchProLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchProLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelMetaTouchProLeftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelMetaTouchProRightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchProRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchProRightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelMetaTouchProRightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelMetaTouchPlusLeftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchPlusLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchPlusLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelMetaTouchPlusLeftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_modelMetaTouchPlusRightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchPlusRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_modelMetaTouchPlusRightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_modelMetaTouchPlusRightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::OVRControllerHelper::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/InputDeviceShowState m_showState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::InputDeviceShowState& GlobalNamespace::OVRControllerHelper::dyn_m_showState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_showState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::InputDeviceShowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showWhenHandsArePoweredByNaturalControllerPoses
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_showWhenHandsArePoweredByNaturalControllerPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_showWhenHandsArePoweredByNaturalControllerPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showWhenHandsArePoweredByNaturalControllerPoses"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::OVRControllerHelper::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_activeController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRControllerHelper::dyn_m_activeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_activeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activeController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_controllerModelsInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_m_controllerModelsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_controllerModelsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controllerModelsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasInputFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_m_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_hasInputFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasInputFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasInputFocusPrev
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_m_hasInputFocusPrev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_hasInputFocusPrev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasInputFocusPrev"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRControllerHelper/ControllerType activeControllerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRControllerHelper::ControllerType& GlobalNamespace::OVRControllerHelper::dyn_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_activeControllerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeControllerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRControllerHelper::ControllerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevControllerConnected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevControllerConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevControllerConnectedCached
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerConnectedCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerConnectedCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevControllerConnectedCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/ControllerInHandState m_prevControllerInHandState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::ControllerInHandState& GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerInHandState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::dyn_m_prevControllerInHandState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevControllerInHandState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::ControllerInHandState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRControllerHelper.Start
void GlobalNamespace::OVRControllerHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.InitializeControllerModels
void GlobalNamespace::OVRControllerHelper::InitializeControllerModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::InitializeControllerModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeControllerModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.Update
void GlobalNamespace::OVRControllerHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.InputFocusAquired
void GlobalNamespace::OVRControllerHelper::InputFocusAquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::InputFocusAquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputFocusAquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.InputFocusLost
void GlobalNamespace::OVRControllerHelper::InputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper/ControllerType
#include "GlobalNamespace/OVRControllerHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
::GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "QuestAndRiftS"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS(::GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "QuestAndRiftS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Rift
::GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Rift"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Rift
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift(::GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Rift", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Quest2
::GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Quest2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_get_Quest2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Quest2"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Quest2
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Quest2(::GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_set_Quest2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Quest2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType TouchPro
::GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_TouchPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_get_TouchPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "TouchPro"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType TouchPro
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_TouchPro(::GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_set_TouchPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "TouchPro", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType TouchPlus
::GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_TouchPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_get_TouchPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "TouchPlus"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType TouchPlus
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_TouchPlus(::GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::_set_TouchPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "TouchPlus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRControllerHelper::ControllerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerHelper::ControllerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerTest
#include "GlobalNamespace/OVRControllerTest.hpp"
// Including type: OVRControllerTest/BoolMonitor
#include "GlobalNamespace/OVRControllerTest_BoolMonitor.hpp"
// Including type: OVRControllerTest/<>c
#include "GlobalNamespace/OVRControllerTest_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String prevConnected
::StringW GlobalNamespace::OVRControllerTest::_get_prevConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::_get_prevConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRControllerTest", "prevConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevConnected
void GlobalNamespace::OVRControllerTest::_set_prevConnected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::_set_prevConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerTest", "prevConnected", value));
}
// Autogenerated static field getter
// Get static field: static private OVRControllerTest/BoolMonitor controllers
::GlobalNamespace::OVRControllerTest::BoolMonitor* GlobalNamespace::OVRControllerTest::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor*>("", "OVRControllerTest", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private OVRControllerTest/BoolMonitor controllers
void GlobalNamespace::OVRControllerTest::_set_controllers(::GlobalNamespace::OVRControllerTest::BoolMonitor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerTest", "controllers", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text uiText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRControllerTest::dyn_uiText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::dyn_uiText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRControllerTest/BoolMonitor> monitors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRControllerTest::BoolMonitor*>*& GlobalNamespace::OVRControllerTest::dyn_monitors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::dyn_monitors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monitors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRControllerTest::BoolMonitor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder data
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::OVRControllerTest::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRControllerTest.Start
void GlobalNamespace::OVRControllerTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest.Update
void GlobalNamespace::OVRControllerTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest..cctor
void GlobalNamespace::OVRControllerTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRControllerTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerTest/BoolMonitor
#include "GlobalNamespace/OVRControllerTest_BoolMonitor.hpp"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRControllerTest/BoolMonitor/BoolGenerator m_generator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_generator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_generator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_generator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevValue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_prevValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_prevValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currentValueRecentlyChanged
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_currentValueRecentlyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_currentValueRecentlyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentValueRecentlyChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimeout
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_displayTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_displayTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_displayTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_displayTimer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_displayTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::dyn_m_displayTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_displayTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRControllerTest/BoolMonitor.Update
void GlobalNamespace::OVRControllerTest::BoolMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/BoolMonitor.AppendToStringBuilder
void GlobalNamespace::OVRControllerTest::BoolMonitor::AppendToStringBuilder(ByRef<::System::Text::StringBuilder*> sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::AppendToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(sb));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.Invoke
bool GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRControllerTest/BoolMonitor/BoolGenerator.EndInvoke
bool GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerTest/<>c
#include "GlobalNamespace/OVRControllerTest_--c.hpp"
// Including type: OVRControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRControllerTest_BoolMonitor_BoolGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRControllerTest/<>c <>9
::GlobalNamespace::OVRControllerTest::$$c* GlobalNamespace::OVRControllerTest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::$$c*>("", "OVRControllerTest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRControllerTest/<>c <>9
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9(::GlobalNamespace::OVRControllerTest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_0
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_0
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_0(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_1
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_1
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_1(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_2
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_2")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_2
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_2(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_2", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_3
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_3
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_3(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_4
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_4")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_4
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_4(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_4", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_5
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_5")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_5
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_5(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_5", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_6
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_6")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_6
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_6(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_6", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_7
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_7")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_7
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_7(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_7", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_8
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_8")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_8
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_8(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_8", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_9
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_9")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_9
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_9(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_10
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_10")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_10
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_10(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_10", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_11
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_11")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_11
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_11(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_11", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_12
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_12")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_12
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_12(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_12", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_13
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_13")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_13
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_13(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_13", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_14
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_14")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_14
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_14(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_14", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_15
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_15")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_15
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_15(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_15", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_16
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_16")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_16
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_16(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_16", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_17
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_17")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_17
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_17(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_17", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_18
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_18");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_18")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_18
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_18(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_18");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_18", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_19
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_19");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_19")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_19
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_19(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_19");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_19", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_20
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_20");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_20")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_20
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_20(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_20");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_20", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_21
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_21");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_21")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_21
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_21(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_21");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_21", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_22
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_22");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_22")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_22
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_22(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_22");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_22", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_23
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_23");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_23")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_23
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_23(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_23");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_23", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_24
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_24");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_24")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_24
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_24(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_24");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_24", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_25
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_25");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_25")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_25
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_25(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_25");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_25", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_26
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_26");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_26")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_26
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_26(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_26");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_26", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_27
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_27");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_27")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_27
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_27(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_27");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_27", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_28
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_28");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_28")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_28
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_28(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_28");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_28", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_29
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_29");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_29")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_29
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_29(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_29");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_29", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_30
::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_get_$$9__4_30");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator*>("", "OVRControllerTest/<>c", "<>9__4_30")));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerTest/BoolMonitor/BoolGenerator <>9__4_30
void GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_30(::GlobalNamespace::OVRControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::_set_$$9__4_30");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRControllerTest/<>c", "<>9__4_30", value)));
}
// Autogenerated method: OVRControllerTest/<>c..cctor
void GlobalNamespace::OVRControllerTest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRControllerTest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_0
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_1
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_2
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_3
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_4
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_5
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_6
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_7
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_8
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_9
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_10
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_11
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_12
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_13
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_14
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_15
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_16
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_17
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_18
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_19
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_20
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_21
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_21", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_22
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_22", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_23
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_23", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_24
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_25
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_25", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_26
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_26", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_27
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_27", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_28
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_28", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_29
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_29");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_29", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<Start>b__4_30
bool GlobalNamespace::OVRControllerTest::$$c::$Start$b__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<Start>b__4_30");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_30", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerTest/<>c.<.cctor>b__9_0
bool GlobalNamespace::OVRControllerTest::$$c::$_cctor$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerTest::$$c::<.cctor>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCubemapCapture
#include "GlobalNamespace/OVRCubemapCapture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoTriggerAfterLaunch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerAfterLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerAfterLaunch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoTriggerAfterLaunch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single autoTriggerDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoTriggerDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single autoTriggerElapse
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerElapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_autoTriggerElapse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoTriggerElapse"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode triggeredByKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRCubemapCapture::dyn_triggeredByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_triggeredByKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggeredByKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String pathName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCubemapCapture::dyn_pathName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_pathName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cubemapSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRCubemapCapture::dyn_cubemapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::dyn_cubemapSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubemapSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCubemapCapture.Update
void GlobalNamespace::OVRCubemapCapture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCubemapCapture.TriggerCubemapCapture
void GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture(::UnityEngine::Vector3 capturePos, int cubemapSize, ::StringW pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "TriggerCubemapCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capturePos), ::il2cpp_utils::ExtractType(cubemapSize), ::il2cpp_utils::ExtractType(pathName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capturePos, cubemapSize, pathName);
}
// Autogenerated method: OVRCubemapCapture.RenderIntoCubemap
void GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap(::UnityEngine::Camera* ownerCamera, ::UnityEngine::Cubemap* outCubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "RenderIntoCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerCamera), ::il2cpp_utils::ExtractType(outCubemap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ownerCamera, outCubemap);
}
// Autogenerated method: OVRCubemapCapture.SaveCubemapCapture
bool GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture(::UnityEngine::Cubemap* cubemap, ::StringW pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "SaveCubemapCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap), ::il2cpp_utils::ExtractType(pathName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cubemap, pathName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCursor.SetCursorRay
void GlobalNamespace::OVRCursor::SetCursorRay(::UnityEngine::Transform* ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCursor::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated method: OVRCursor.SetCursorStartDest
void GlobalNamespace::OVRCursor::SetCursorStartDest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 dest, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCursor::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCustomFace
#include "GlobalNamespace/OVRCustomFace.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: OVRFaceExpressions/FaceExpression[] _mappings
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>& GlobalNamespace::OVRCustomFace::dyn__mappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::dyn__mappings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mappings"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OVRCustomFace/RetargetingType retargetingType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCustomFace::RetargetingType& GlobalNamespace::OVRCustomFace::dyn_retargetingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::dyn_retargetingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "retargetingType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCustomFace::RetargetingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _allowDuplicateMapping
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCustomFace::dyn__allowDuplicateMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::dyn__allowDuplicateMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowDuplicateMapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCustomFace.get_Mappings
::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> GlobalNamespace::OVRCustomFace::get_Mappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::get_Mappings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mappings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomFace.set_Mappings
void GlobalNamespace::OVRCustomFace::set_Mappings(::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::set_Mappings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mappings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCustomFace.get_RetargetingValue
::GlobalNamespace::OVRCustomFace::RetargetingType GlobalNamespace::OVRCustomFace::get_RetargetingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::get_RetargetingValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetargetingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRCustomFace::RetargetingType, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomFace.set_RetargetingValue
void GlobalNamespace::OVRCustomFace::set_RetargetingValue(::GlobalNamespace::OVRCustomFace::RetargetingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::set_RetargetingValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RetargetingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCustomFace.get_AllowDuplicateMapping
bool GlobalNamespace::OVRCustomFace::get_AllowDuplicateMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::get_AllowDuplicateMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowDuplicateMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomFace.set_AllowDuplicateMapping
void GlobalNamespace::OVRCustomFace::set_AllowDuplicateMapping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::set_AllowDuplicateMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowDuplicateMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCustomFace.GetCustomBlendShapeNameAndExpressionPairs
::System::ValueTuple_2<::ArrayW<::StringW>, ::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>> GlobalNamespace::OVRCustomFace::GetCustomBlendShapeNameAndExpressionPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::GetCustomBlendShapeNameAndExpressionPairs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCustomFace*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::ArrayW<::StringW>, ::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>>, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomFace.Start
void GlobalNamespace::OVRCustomFace::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFace*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomFace.GetFaceExpression
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRCustomFace::GetFaceExpression(int blendShapeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::GetFaceExpression");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFace*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRFaceExpressions::FaceExpression, false>(this, ___internal__method, blendShapeIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCustomFace/RetargetingType
#include "GlobalNamespace/OVRCustomFace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRCustomFace/RetargetingType OculusFace
::GlobalNamespace::OVRCustomFace::RetargetingType GlobalNamespace::OVRCustomFace::RetargetingType::_get_OculusFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::RetargetingType::_get_OculusFace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRCustomFace::RetargetingType>("", "OVRCustomFace/RetargetingType", "OculusFace"));
}
// Autogenerated static field setter
// Set static field: static public OVRCustomFace/RetargetingType OculusFace
void GlobalNamespace::OVRCustomFace::RetargetingType::_set_OculusFace(::GlobalNamespace::OVRCustomFace::RetargetingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::RetargetingType::_set_OculusFace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRCustomFace/RetargetingType", "OculusFace", value));
}
// Autogenerated static field getter
// Get static field: static public OVRCustomFace/RetargetingType Custom
::GlobalNamespace::OVRCustomFace::RetargetingType GlobalNamespace::OVRCustomFace::RetargetingType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::RetargetingType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRCustomFace::RetargetingType>("", "OVRCustomFace/RetargetingType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRCustomFace/RetargetingType Custom
void GlobalNamespace::OVRCustomFace::RetargetingType::_set_Custom(::GlobalNamespace::OVRCustomFace::RetargetingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::RetargetingType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRCustomFace/RetargetingType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRCustomFace::RetargetingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFace::RetargetingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCustomFaceExtensions
#include "GlobalNamespace/OVRCustomFaceExtensions.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OVRCustomFace
#include "GlobalNamespace/OVRCustomFace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCustomFaceExtensions.AutoGenerateMapping
::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> GlobalNamespace::OVRCustomFaceExtensions::AutoGenerateMapping(::UnityEngine::Mesh* skinnedMesh, ::ArrayW<::StringW> blendShapeNames, ::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> faceExpressions, bool allowDuplicateMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::AutoGenerateMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "AutoGenerateMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMesh), ::il2cpp_utils::ExtractType(blendShapeNames), ::il2cpp_utils::ExtractType(faceExpressions), ::il2cpp_utils::ExtractType(allowDuplicateMapping)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skinnedMesh, blendShapeNames, faceExpressions, allowDuplicateMapping);
}
// Autogenerated method: OVRCustomFaceExtensions.FindBestMatch
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRCustomFaceExtensions::FindBestMatch(::ArrayW<::System::Collections::Generic::HashSet_1<::StringW>*> tokenizedOptions, ::StringW searchString, ::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> expressions, ::GlobalNamespace::OVRFaceExpressions::FaceExpression fallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::FindBestMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "FindBestMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenizedOptions), ::il2cpp_utils::ExtractType(searchString), ::il2cpp_utils::ExtractType(expressions), ::il2cpp_utils::ExtractType(fallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRFaceExpressions::FaceExpression, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tokenizedOptions, searchString, expressions, fallback);
}
// Autogenerated method: OVRCustomFaceExtensions.IsLipsToward
bool GlobalNamespace::OVRCustomFaceExtensions::IsLipsToward(::StringW blendshapeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::IsLipsToward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "IsLipsToward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendshapeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendshapeName);
}
// Autogenerated method: OVRCustomFaceExtensions.TokenizeString
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::OVRCustomFaceExtensions::TokenizeString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::TokenizeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "TokenizeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: OVRCustomFaceExtensions.SplitCamelCase
::StringW GlobalNamespace::OVRCustomFaceExtensions::SplitCamelCase(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::SplitCamelCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "SplitCamelCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: OVRCustomFaceExtensions.AutoMapBlendshapes
void GlobalNamespace::OVRCustomFaceExtensions::AutoMapBlendshapes(::GlobalNamespace::OVRCustomFace* customFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::AutoMapBlendshapes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "AutoMapBlendshapes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customFace);
}
// Autogenerated method: OVRCustomFaceExtensions.ClearBlendshapes
void GlobalNamespace::OVRCustomFaceExtensions::ClearBlendshapes(::GlobalNamespace::OVRCustomFace* customFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::ClearBlendshapes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "ClearBlendshapes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customFace);
}
// Autogenerated method: OVRCustomFaceExtensions.OculusFaceAutoGenerateMapping
::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> GlobalNamespace::OVRCustomFaceExtensions::OculusFaceAutoGenerateMapping(::UnityEngine::Mesh* sharedMesh, bool allowDuplicateMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::OculusFaceAutoGenerateMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "OculusFaceAutoGenerateMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sharedMesh), ::il2cpp_utils::ExtractType(allowDuplicateMapping)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sharedMesh, allowDuplicateMapping);
}
// Autogenerated method: OVRCustomFaceExtensions.CustomAutoGeneratedMapping
::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression> GlobalNamespace::OVRCustomFaceExtensions::CustomAutoGeneratedMapping(::GlobalNamespace::OVRCustomFace* customFace, ::UnityEngine::Mesh* sharedMesh, bool allowDuplicateMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomFaceExtensions::CustomAutoGeneratedMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCustomFaceExtensions", "CustomAutoGeneratedMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customFace), ::il2cpp_utils::ExtractType(sharedMesh), ::il2cpp_utils::ExtractType(allowDuplicateMapping)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRFaceExpressions::FaceExpression>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customFace, sharedMesh, allowDuplicateMapping);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCustomSkeleton
#include "GlobalNamespace/OVRCustomSkeleton.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _customBones_V2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GlobalNamespace::OVRCustomSkeleton::dyn__customBones_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::dyn__customBones_V2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customBones_V2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OVRCustomSkeleton/RetargetingType retargetingType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCustomSkeleton::RetargetingType& GlobalNamespace::OVRCustomSkeleton::dyn_retargetingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::dyn_retargetingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "retargetingType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCustomSkeleton::RetargetingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCustomSkeleton.get_CustomBones
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* GlobalNamespace::OVRCustomSkeleton::get_CustomBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::get_CustomBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void GlobalNamespace::OVRCustomSkeleton::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCustomSkeleton*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void GlobalNamespace::OVRCustomSkeleton::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCustomSkeleton*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.AllocateBones
void GlobalNamespace::OVRCustomSkeleton::AllocateBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::AllocateBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.GetBoneTransform
::UnityEngine::Transform* GlobalNamespace::OVRCustomSkeleton::GetBoneTransform(::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::GetBoneTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSkeleton*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, boneId);
}
// Autogenerated method: OVRCustomSkeleton.SetSkeletonType
void GlobalNamespace::OVRCustomSkeleton::SetSkeletonType(::GlobalNamespace::OVRSkeleton::SkeletonType skeletonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCustomSkeleton::SetSkeletonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSkeleton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skeletonType);
}
