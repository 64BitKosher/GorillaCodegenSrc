// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.Video3DLayout
#include "UnityEngine/Video/Video3DLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout No3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_No3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_No3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "No3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout No3D
void UnityEngine::Video::Video3DLayout::_set_No3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_No3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "No3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_SideBySide3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_SideBySide3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "SideBySide3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
void UnityEngine::Video::Video3DLayout::_set_SideBySide3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_SideBySide3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "SideBySide3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_OverUnder3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_OverUnder3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "OverUnder3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
void UnityEngine::Video::Video3DLayout::_set_OverUnder3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_OverUnder3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "OverUnder3D", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::Video3DLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAspectRatio
#include "UnityEngine/Video/VideoAspectRatio.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_NoScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_NoScaling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "NoScaling"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
void UnityEngine::Video::VideoAspectRatio::_set_NoScaling(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_NoScaling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "NoScaling", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitVertically");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitVertically"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
void UnityEngine::Video::VideoAspectRatio::_set_FitVertically(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitVertically");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitVertically", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
void UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitInside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitInside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitInside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitInside
void UnityEngine::Video::VideoAspectRatio::_set_FitInside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitInside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitInside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitOutside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitOutside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitOutside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
void UnityEngine::Video::VideoAspectRatio::_set_FitOutside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitOutside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitOutside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio Stretch
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_Stretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_Stretch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "Stretch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio Stretch
void UnityEngine::Video::VideoAspectRatio::_set_Stretch(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_Stretch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "Stretch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAspectRatio::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeSource
#include "UnityEngine/Video/VideoTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
void UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_GameTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_GameTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "GameTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
void UnityEngine::Video::VideoTimeSource::_set_GameTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_GameTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "GameTimeSource", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeReference
#include "UnityEngine/Video/VideoTimeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference Freerun
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_Freerun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_Freerun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "Freerun"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference Freerun
void UnityEngine::Video::VideoTimeReference::_set_Freerun(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_Freerun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "Freerun", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference InternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_InternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_InternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "InternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference InternalTime
void UnityEngine::Video::VideoTimeReference::_set_InternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_InternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "InternalTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_ExternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_ExternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "ExternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
void UnityEngine::Video::VideoTimeReference::_set_ExternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_ExternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "ExternalTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeReference::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoSource
#include "UnityEngine/Video/VideoSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource VideoClip
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_VideoClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_VideoClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "VideoClip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource VideoClip
void UnityEngine::Video::VideoSource::_set_VideoClip(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_VideoClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "VideoClip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource Url
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_Url");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "Url"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource Url
void UnityEngine::Video::VideoSource::_set_Url(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_Url");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "Url", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeUpdateMode
#include "UnityEngine/Video/VideoTimeUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeUpdateMode DSPTime
::UnityEngine::Video::VideoTimeUpdateMode UnityEngine::Video::VideoTimeUpdateMode::_get_DSPTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_get_DSPTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeUpdateMode>("UnityEngine.Video", "VideoTimeUpdateMode", "DSPTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeUpdateMode DSPTime
void UnityEngine::Video::VideoTimeUpdateMode::_set_DSPTime(::UnityEngine::Video::VideoTimeUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_set_DSPTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeUpdateMode", "DSPTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeUpdateMode GameTime
::UnityEngine::Video::VideoTimeUpdateMode UnityEngine::Video::VideoTimeUpdateMode::_get_GameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_get_GameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeUpdateMode>("UnityEngine.Video", "VideoTimeUpdateMode", "GameTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeUpdateMode GameTime
void UnityEngine::Video::VideoTimeUpdateMode::_set_GameTime(::UnityEngine::Video::VideoTimeUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_set_GameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeUpdateMode", "GameTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeUpdateMode UnscaledGameTime
::UnityEngine::Video::VideoTimeUpdateMode UnityEngine::Video::VideoTimeUpdateMode::_get_UnscaledGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_get_UnscaledGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeUpdateMode>("UnityEngine.Video", "VideoTimeUpdateMode", "UnscaledGameTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeUpdateMode UnscaledGameTime
void UnityEngine::Video::VideoTimeUpdateMode::_set_UnscaledGameTime(::UnityEngine::Video::VideoTimeUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::_set_UnscaledGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeUpdateMode", "UnscaledGameTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeUpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeUpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAudioOutputMode
#include "UnityEngine/Video/VideoAudioOutputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode None
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode None
void UnityEngine::Video::VideoAudioOutputMode::_set_None(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
void UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
void UnityEngine::Video::VideoAudioOutputMode::_set_Direct(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "Direct", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
void UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAudioOutputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: UnityEngine.Video.VideoPlayer/EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler prepareCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_prepareCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_prepareCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prepareCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler loopPointReached
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_loopPointReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_loopPointReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopPointReached"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler started
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler frameDropped
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameDropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameDropped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDropped"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/ErrorEventHandler errorReceived
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::ErrorEventHandler*& UnityEngine::Video::VideoPlayer::dyn_errorReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_errorReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorReceived"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::ErrorEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler seekCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_seekCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_seekCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/TimeEventHandler clockResyncOccurred
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::TimeEventHandler*& UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockResyncOccurred"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::TimeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/FrameReadyEventHandler frameReady
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameReady"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_url
void UnityEngine::Video::VideoPlayer::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_texture
::UnityEngine::Texture* UnityEngine::Video::VideoPlayer::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Prepare
void UnityEngine::Video::VideoPlayer::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Play
void UnityEngine::Video::VideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Pause
void UnityEngine::Video::VideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Stop
void UnityEngine::Video::VideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_isPlaying
bool UnityEngine::Video::VideoPlayer::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_time
double UnityEngine::Video::VideoPlayer::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_time
void UnityEngine::Video::VideoPlayer::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_playbackSpeed
void UnityEngine::Video::VideoPlayer::set_playbackSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_playbackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playbackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_isLooping
void UnityEngine::Video::VideoPlayer::set_isLooping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_isLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_length
double UnityEngine::Video::VideoPlayer::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokePrepareCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokePrepareCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameReadyCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameReadyCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeLoopPointReachedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeLoopPointReachedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeStartedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeStartedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameDroppedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameDroppedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeErrorReceivedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal(::UnityEngine::Video::VideoPlayer* source, ::StringW errorStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeErrorReceivedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(errorStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, errorStr);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeSeekCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeSeekCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeClockResyncOccurredCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeClockResyncOccurredCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, seconds);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/EventHandler.Invoke
void UnityEngine::Video::VideoPlayer::EventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/ErrorEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, frameIdx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/TimeEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, seconds);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRSettings
#include "UnityEngine/XR/XRSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRSettings.set_eyeTextureResolutionScale
void UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureWidth
int UnityEngine::XR::XRSettings::get_eyeTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureHeight
int UnityEngine::XR::XRSettings::get_eyeTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScale
float UnityEngine::XR::XRSettings::get_renderViewportScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScale
void UnityEngine::XR::XRSettings::set_renderViewportScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScaleInternal
float UnityEngine::XR::XRSettings::get_renderViewportScaleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScaleInternal
void UnityEngine::XR::XRSettings::set_renderViewportScaleInternal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_loadedDeviceName
::StringW UnityEngine::XR::XRSettings::get_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_loadedDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_loadedDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDevice
#include "UnityEngine/XR/XRDevice.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deviceLoaded
::System::Action_1<::StringW>* UnityEngine::XR::XRDevice::_get_deviceLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_get_deviceLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("UnityEngine.XR", "XRDevice", "deviceLoaded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deviceLoaded
void UnityEngine::XR::XRDevice::_set_deviceLoaded(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_set_deviceLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDevice", "deviceLoaded", value));
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_refreshRate
float UnityEngine::XR::XRDevice::get_refreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::get_refreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_refreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.DisableAutoXRCameraTracking
void UnityEngine::XR::XRDevice::DisableAutoXRCameraTracking(::UnityEngine::Camera* camera, bool disabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::DisableAutoXRCameraTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "DisableAutoXRCameraTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(disabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, disabled);
}
// Autogenerated method: UnityEngine.XR.XRDevice.InvokeDeviceLoaded
void UnityEngine::XR::XRDevice::InvokeDeviceLoaded(::StringW loadedDeviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::InvokeDeviceLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "InvokeDeviceLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedDeviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadedDeviceName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking
#include "UnityEngine/XR/InputTracking.hpp"
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
void UnityEngine::XR::InputTracking::_set_trackingAcquired(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
void UnityEngine::XR::InputTracking::_set_trackingLost(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeAdded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
void UnityEngine::XR::InputTracking::_set_nodeAdded(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
void UnityEngine::XR::InputTracking::_set_nodeRemoved(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeRemoved", value));
}
// Autogenerated method: UnityEngine.XR.InputTracking.InvokeTrackingEvent
void UnityEngine::XR::InputTracking::InvokeTrackingEvent(::UnityEngine::XR::InputTracking::TrackingStateEventType eventType, ::UnityEngine::XR::XRNode nodeType, int64_t uniqueID, bool tracked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::InvokeTrackingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "InvokeTrackingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(uniqueID), ::il2cpp_utils::ExtractType(tracked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventType, nodeType, uniqueID, tracked);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates
void UnityEngine::XR::InputTracking::GetNodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates_Internal
void UnityEngine::XR::InputTracking::GetNodeStates_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetDeviceIdAtXRNode
uint64_t UnityEngine::XR::InputTracking::GetDeviceIdAtXRNode(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetDeviceIdAtXRNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetDeviceIdAtXRNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetDeviceIdsAtXRNode_Internal
void UnityEngine::XR::InputTracking::GetDeviceIdsAtXRNode_Internal(::UnityEngine::XR::XRNode node, ::System::Collections::Generic::List_1<uint64_t>* deviceIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetDeviceIdsAtXRNode_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetDeviceIdsAtXRNode_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(deviceIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, deviceIds);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftEye
void UnityEngine::XR::XRNode::_set_LeftEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightEye
void UnityEngine::XR::XRNode::_set_RightEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode CenterEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_CenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_CenterEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "CenterEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode CenterEye
void UnityEngine::XR::XRNode::_set_CenterEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_CenterEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "CenterEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode Head
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode Head
void UnityEngine::XR::XRNode::_set_Head(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftHand
void UnityEngine::XR::XRNode::_set_LeftHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightHand
void UnityEngine::XR::XRNode::_set_RightHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode GameController
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_GameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_GameController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "GameController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode GameController
void UnityEngine::XR::XRNode::_set_GameController(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_GameController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "GameController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode TrackingReference
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode TrackingReference
void UnityEngine::XR::XRNode::_set_TrackingReference(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode HardwareTracker
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_HardwareTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_HardwareTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "HardwareTracker"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode HardwareTracker
void UnityEngine::XR::XRNode::_set_HardwareTracker(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_HardwareTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "HardwareTracker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.AvailableTrackingData
#include "UnityEngine/XR/AvailableTrackingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData None
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData None
void UnityEngine::XR::AvailableTrackingData::_set_None(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
void UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::AvailableTrackingData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::XRNodeState::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.AvailableTrackingData m_AvailableFields
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::AvailableTrackingData& UnityEngine::XR::XRNodeState::dyn_m_AvailableFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AvailableFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AvailableFields"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::AvailableTrackingData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::XRNodeState::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Acceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Acceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularAcceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularAcceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tracked
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNodeState::dyn_m_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Tracked");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_UniqueID
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::XRNodeState::dyn_m_UniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_UniqueID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UniqueID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
::UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::get_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_tracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rotation));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(ByRef<::UnityEngine::Vector3> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(velocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularVelocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(ByRef<::UnityEngine::Vector3> acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(acceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(ByRef<::UnityEngine::Vector3> angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularAcceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Vector3 inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Vector3> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Quaternion inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Quaternion> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.HapticCapabilities
#include "UnityEngine/XR/HapticCapabilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_NumChannels
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::HapticCapabilities::dyn_m_NumChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_NumChannels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NumChannels"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SupportsImpulse
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::HapticCapabilities::dyn_m_SupportsImpulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_SupportsImpulse");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportsImpulse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SupportsBuffer
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::HapticCapabilities::dyn_m_SupportsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_SupportsBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportsBuffer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_BufferFrequencyHz
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::HapticCapabilities::dyn_m_BufferFrequencyHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_BufferFrequencyHz");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BufferFrequencyHz"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_BufferMaxSize
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::HapticCapabilities::dyn_m_BufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_BufferMaxSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BufferMaxSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_BufferOptimalSize
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::HapticCapabilities::dyn_m_BufferOptimalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::dyn_m_BufferOptimalSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BufferOptimalSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_numChannels
uint UnityEngine::XR::HapticCapabilities::get_numChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_numChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_numChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_supportsImpulse
bool UnityEngine::XR::HapticCapabilities::get_supportsImpulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_supportsImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_supportsImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_supportsBuffer
bool UnityEngine::XR::HapticCapabilities::get_supportsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_supportsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_supportsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_bufferFrequencyHz
uint UnityEngine::XR::HapticCapabilities::get_bufferFrequencyHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_bufferFrequencyHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_bufferFrequencyHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_bufferMaxSize
uint UnityEngine::XR::HapticCapabilities::get_bufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_bufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_bufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.get_bufferOptimalSize
uint UnityEngine::XR::HapticCapabilities::get_bufferOptimalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::get_bufferOptimalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_bufferOptimalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.Equals
bool UnityEngine::XR::HapticCapabilities::Equals(::UnityEngine::XR::HapticCapabilities other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::HapticCapabilities), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.Equals
bool UnityEngine::XR::HapticCapabilities::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.HapticCapabilities.GetHashCode
int UnityEngine::XR::HapticCapabilities::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HapticCapabilities::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputFeatureType
#include "UnityEngine/XR/InputFeatureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Custom
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Custom
void UnityEngine::XR::InputFeatureType::_set_Custom(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Binary
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Binary
void UnityEngine::XR::InputFeatureType::_set_Binary(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_DiscreteStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_DiscreteStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "DiscreteStates"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
void UnityEngine::XR::InputFeatureType::_set_DiscreteStates(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_DiscreteStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "DiscreteStates", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis1D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis1D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis1D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis1D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis1D
void UnityEngine::XR::InputFeatureType::_set_Axis1D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis1D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis1D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis2D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis2D
void UnityEngine::XR::InputFeatureType::_set_Axis2D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis3D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis3D
void UnityEngine::XR::InputFeatureType::_set_Axis3D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Rotation
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Rotation
void UnityEngine::XR::InputFeatureType::_set_Rotation(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Hand
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Hand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Hand
void UnityEngine::XR::InputFeatureType::_set_Hand(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Hand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Bone
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Bone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Bone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Bone
void UnityEngine::XR::InputFeatureType::_set_Bone(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Bone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Bone", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Eyes
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Eyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Eyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Eyes
void UnityEngine::XR::InputFeatureType::_set_Eyes(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Eyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Eyes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
void UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::InputFeatureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Connected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Connected
void UnityEngine::XR::ConnectionChangeType::_set_Connected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
void UnityEngine::XR::ConnectionChangeType::_set_Disconnected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_ConfigChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_ConfigChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "ConfigChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
void UnityEngine::XR::ConnectionChangeType::_set_ConfigChange(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_ConfigChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "ConfigChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::ConnectionChangeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics None
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics None
void UnityEngine::XR::InputDeviceCharacteristics::_set_None(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HeadMounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HeadMounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HeadMounted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
void UnityEngine::XR::InputDeviceCharacteristics::_set_HeadMounted(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HeadMounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HeadMounted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Camera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Camera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
void UnityEngine::XR::InputDeviceCharacteristics::_set_Camera(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Camera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Camera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HeldInHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HeldInHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HeldInHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
void UnityEngine::XR::InputDeviceCharacteristics::_set_HeldInHand(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HeldInHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HeldInHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_HandTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_HandTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "HandTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
void UnityEngine::XR::InputDeviceCharacteristics::_set_HandTracking(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_HandTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "HandTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_EyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_EyeTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "EyeTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
void UnityEngine::XR::InputDeviceCharacteristics::_set_EyeTracking(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_EyeTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "EyeTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_TrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_TrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "TrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
void UnityEngine::XR::InputDeviceCharacteristics::_set_TrackedDevice(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_TrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "TrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
void UnityEngine::XR::InputDeviceCharacteristics::_set_Controller(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Controller", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
void UnityEngine::XR::InputDeviceCharacteristics::_set_TrackingReference(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
void UnityEngine::XR::InputDeviceCharacteristics::_set_Left(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
void UnityEngine::XR::InputDeviceCharacteristics::_set_Right(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDeviceCharacteristics::_get_Simulated6DOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_get_Simulated6DOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("UnityEngine.XR", "InputDeviceCharacteristics", "Simulated6DOF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
void UnityEngine::XR::InputDeviceCharacteristics::_set_Simulated6DOF(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::_set_Simulated6DOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDeviceCharacteristics", "Simulated6DOF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::InputDeviceCharacteristics::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDeviceCharacteristics::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTrackingState
#include "UnityEngine/XR/InputTrackingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState None
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState None
void UnityEngine::XR::InputTrackingState::_set_None(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Position
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Position
void UnityEngine::XR::InputTrackingState::_set_Position(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Rotation
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Rotation
void UnityEngine::XR::InputTrackingState::_set_Rotation(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Velocity
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Velocity
void UnityEngine::XR::InputTrackingState::_set_Velocity(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState AngularVelocity
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState AngularVelocity
void UnityEngine::XR::InputTrackingState::_set_AngularVelocity(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState Acceleration
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState Acceleration
void UnityEngine::XR::InputTrackingState::_set_Acceleration(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState AngularAcceleration
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState AngularAcceleration
void UnityEngine::XR::InputTrackingState::_set_AngularAcceleration(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTrackingState All
::UnityEngine::XR::InputTrackingState UnityEngine::XR::InputTrackingState::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTrackingState>("UnityEngine.XR", "InputTrackingState", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTrackingState All
void UnityEngine::XR::InputTrackingState::_set_All(::UnityEngine::XR::InputTrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTrackingState", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::InputTrackingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTrackingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputFeatureUsage
#include "UnityEngine/XR/InputFeatureUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::InputFeatureUsage::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.XR.InputFeatureType m_InternalType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputFeatureType& UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_name
::StringW UnityEngine::XR::InputFeatureUsage::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_internalType
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureUsage::get_internalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_internalType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_internalType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputFeatureType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::UnityEngine::XR::InputFeatureUsage other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::InputFeatureUsage), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.GetHashCode
int UnityEngine::XR::InputFeatureUsage::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.CommonUsages
#include "UnityEngine/XR/CommonUsages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_isTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_isTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "isTracked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
void UnityEngine::XR::CommonUsages::_set_isTracked(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_isTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "isTracked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primaryButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
void UnityEngine::XR::CommonUsages::_set_primaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
void UnityEngine::XR::CommonUsages::_set_primaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondaryButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
void UnityEngine::XR::CommonUsages::_set_secondaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
void UnityEngine::XR::CommonUsages::_set_secondaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_gripButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_gripButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "gripButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
void UnityEngine::XR::CommonUsages::_set_gripButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_gripButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "gripButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_triggerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_triggerButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "triggerButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
void UnityEngine::XR::CommonUsages::_set_triggerButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_triggerButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "triggerButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_menuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_menuButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "menuButton"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
void UnityEngine::XR::CommonUsages::_set_menuButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_menuButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "menuButton", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
void UnityEngine::XR::CommonUsages::_set_primary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_primary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "primary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
void UnityEngine::XR::CommonUsages::_set_primary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
void UnityEngine::XR::CommonUsages::_set_secondary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_secondary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "secondary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
void UnityEngine::XR::CommonUsages::_set_secondary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_userPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_userPresence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "userPresence"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
void UnityEngine::XR::CommonUsages::_set_userPresence(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_userPresence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "userPresence", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> UnityEngine::XR::CommonUsages::_get_trackingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_trackingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState>>("UnityEngine.XR", "CommonUsages", "trackingState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
void UnityEngine::XR::CommonUsages::_set_trackingState(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_trackingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "trackingState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_batteryLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "batteryLevel"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
void UnityEngine::XR::CommonUsages::_set_batteryLevel(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_batteryLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "batteryLevel", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "trigger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
void UnityEngine::XR::CommonUsages::_set_trigger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "trigger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "grip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
void UnityEngine::XR::CommonUsages::_set_grip(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "grip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
void UnityEngine::XR::CommonUsages::_set_primary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
void UnityEngine::XR::CommonUsages::_set_secondary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "secondary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_devicePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_devicePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "devicePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
void UnityEngine::XR::CommonUsages::_set_devicePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_devicePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "devicePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
void UnityEngine::XR::CommonUsages::_set_leftEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
void UnityEngine::XR::CommonUsages::_set_rightEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
void UnityEngine::XR::CommonUsages::_set_centerEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
void UnityEngine::XR::CommonUsages::_set_colorCameraPosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
void UnityEngine::XR::CommonUsages::_set_deviceVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
void UnityEngine::XR::CommonUsages::_set_deviceAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
void UnityEngine::XR::CommonUsages::_set_leftEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_leftEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
void UnityEngine::XR::CommonUsages::_set_rightEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_rightEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
void UnityEngine::XR::CommonUsages::_set_centerEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
void UnityEngine::XR::CommonUsages::_set_centerEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
void UnityEngine::XR::CommonUsages::_set_colorCameraVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
void UnityEngine::XR::CommonUsages::_set_colorCameraAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
void UnityEngine::XR::CommonUsages::_set_deviceAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_deviceAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "deviceAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_deviceAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_leftEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_leftEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "leftEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_leftEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_rightEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_rightEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "rightEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_rightEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
void UnityEngine::XR::CommonUsages::_set_centerEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_centerEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "centerEyeAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_centerEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
void UnityEngine::XR::CommonUsages::_set_colorCameraAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> UnityEngine::XR::CommonUsages::_get_colorCameraAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraAngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3>>("UnityEngine.XR", "CommonUsages", "colorCameraAngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
void UnityEngine::XR::CommonUsages::_set_colorCameraAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraAngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraAngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_deviceRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_deviceRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "deviceRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
void UnityEngine::XR::CommonUsages::_set_deviceRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_deviceRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "deviceRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_leftEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_leftEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "leftEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
void UnityEngine::XR::CommonUsages::_set_leftEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_leftEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "leftEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_rightEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_rightEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "rightEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
void UnityEngine::XR::CommonUsages::_set_rightEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_rightEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "rightEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_centerEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_centerEyeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "centerEyeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
void UnityEngine::XR::CommonUsages::_set_centerEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_centerEyeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "centerEyeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> UnityEngine::XR::CommonUsages::_get_colorCameraRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_colorCameraRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion>>("UnityEngine.XR", "CommonUsages", "colorCameraRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
void UnityEngine::XR::CommonUsages::_set_colorCameraRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_colorCameraRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "colorCameraRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> UnityEngine::XR::CommonUsages::_get_handData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_handData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand>>("UnityEngine.XR", "CommonUsages", "handData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
void UnityEngine::XR::CommonUsages::_set_handData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_handData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "handData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> UnityEngine::XR::CommonUsages::_get_eyesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_eyesData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes>>("UnityEngine.XR", "CommonUsages", "eyesData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
void UnityEngine::XR::CommonUsages::_set_eyesData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_eyesData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "eyesData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> UnityEngine::XR::CommonUsages::_get_dPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_dPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>("UnityEngine.XR", "CommonUsages", "dPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
void UnityEngine::XR::CommonUsages::_set_dPad(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_dPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "dPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_indexFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_indexFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "indexFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
void UnityEngine::XR::CommonUsages::_set_indexFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_indexFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "indexFinger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_middleFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_middleFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "middleFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
void UnityEngine::XR::CommonUsages::_set_middleFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_middleFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "middleFinger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_ringFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_ringFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "ringFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
void UnityEngine::XR::CommonUsages::_set_ringFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_ringFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "ringFinger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_pinkyFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_pinkyFinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "pinkyFinger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
void UnityEngine::XR::CommonUsages::_set_pinkyFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_pinkyFinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "pinkyFinger", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
::UnityEngine::XR::InputFeatureUsage_1<bool> UnityEngine::XR::CommonUsages::_get_thumbrest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_thumbrest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<bool>>("UnityEngine.XR", "CommonUsages", "thumbrest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
void UnityEngine::XR::CommonUsages::_set_thumbrest(::UnityEngine::XR::InputFeatureUsage_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_thumbrest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "thumbrest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_indexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_indexTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "indexTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
void UnityEngine::XR::CommonUsages::_set_indexTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_indexTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "indexTouch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
::UnityEngine::XR::InputFeatureUsage_1<float> UnityEngine::XR::CommonUsages::_get_thumbTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_get_thumbTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureUsage_1<float>>("UnityEngine.XR", "CommonUsages", "thumbTouch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
void UnityEngine::XR::CommonUsages::_set_thumbTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::_set_thumbTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "CommonUsages", "thumbTouch", value));
}
// Autogenerated method: UnityEngine.XR.CommonUsages..cctor
void UnityEngine::XR::CommonUsages::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::CommonUsages::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "CommonUsages", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
// Including type: UnityEngine.XR.HapticCapabilities
#include "UnityEngine/XR/HapticCapabilities.hpp"
// Including type: UnityEngine.XR.InputFeatureUsage`1
#include "UnityEngine/XR/InputFeatureUsage_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystemCache
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* UnityEngine::XR::InputDevice::_get_s_InputSubsystemCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::_get_s_InputSubsystemCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>*>("UnityEngine.XR", "InputDevice", "s_InputSubsystemCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystemCache
void UnityEngine::XR::InputDevice::_set_s_InputSubsystemCache(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::_set_s_InputSubsystemCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevice", "s_InputSubsystemCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::InputDevice::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Initialized
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::InputDevice::dyn_m_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_Initialized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputDevice..ctor
UnityEngine::XR::InputDevice::InputDevice(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceId);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_deviceId
uint64_t UnityEngine::XR::InputDevice::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_isValid
bool UnityEngine::XR::InputDevice::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_name
::StringW UnityEngine::XR::InputDevice::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_characteristics
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDevice::get_characteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_characteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_characteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDeviceCharacteristics, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.IsValidId
bool UnityEngine::XR::InputDevice::IsValidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::IsValidId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValidId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice.SendHapticImpulse
bool UnityEngine::XR::InputDevice::SendHapticImpulse(uint channel, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channel, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetHapticCapabilities
bool UnityEngine::XR::InputDevice::TryGetHapticCapabilities(ByRef<::UnityEngine::XR::HapticCapabilities> capabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetHapticCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetHapticCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::HapticCapabilities&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(capabilities));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<bool> usage, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<float> usage, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> usage, ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> usage, ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> usage, ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.TryGetFeatureValue
bool UnityEngine::XR::InputDevice::TryGetFeatureValue(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> usage, ByRef<::UnityEngine::XR::InputTrackingState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::TryGetFeatureValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetFeatureValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::InputTrackingState&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::UnityEngine::XR::InputDevice other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::InputDevice), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputDevice.GetHashCode
int UnityEngine::XR::InputDevice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Hand
#include "UnityEngine/XR/Hand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Hand::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Hand::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Hand.get_deviceId
uint64_t UnityEngine::XR::Hand::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.get_featureIndex
uint UnityEngine::XR::Hand::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::UnityEngine::XR::Hand other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Hand), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Hand.GetHashCode
int UnityEngine::XR::Hand::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Eyes
#include "UnityEngine/XR/Eyes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Eyes::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Eyes::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_deviceId
uint64_t UnityEngine::XR::Eyes::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_featureIndex
uint UnityEngine::XR::Eyes::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::UnityEngine::XR::Eyes other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Eyes), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Eyes.GetHashCode
int UnityEngine::XR::Eyes::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Bone
#include "UnityEngine/XR/Bone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Bone::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Bone::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Bone.get_deviceId
uint64_t UnityEngine::XR::Bone::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.get_featureIndex
uint UnityEngine::XR::Bone::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::UnityEngine::XR::Bone other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::Bone), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Bone.GetHashCode
int UnityEngine::XR::Bone::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDevices
#include "UnityEngine/XR/InputDevices.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: UnityEngine.XR.InputDeviceCharacteristics
#include "UnityEngine/XR/InputDeviceCharacteristics.hpp"
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
// Including type: UnityEngine.XR.HapticCapabilities
#include "UnityEngine/XR/HapticCapabilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> s_InputDeviceList
::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_s_InputDeviceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_s_InputDeviceList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "s_InputDeviceList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> s_InputDeviceList
void UnityEngine::XR::InputDevices::_set_s_InputDeviceList(::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_s_InputDeviceList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "s_InputDeviceList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
void UnityEngine::XR::InputDevices::_set_deviceConnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConnected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceDisconnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
void UnityEngine::XR::InputDevices::_set_deviceDisconnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConfigChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConfigChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
void UnityEngine::XR::InputDevices::_set_deviceConfigChanged(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConfigChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConfigChanged", value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDeviceAtXRNode
::UnityEngine::XR::InputDevice UnityEngine::XR::InputDevices::GetDeviceAtXRNode(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDeviceAtXRNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDeviceAtXRNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDevice, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevicesAtXRNode
void UnityEngine::XR::InputDevices::GetDevicesAtXRNode(::UnityEngine::XR::XRNode node, ::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevicesAtXRNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevicesAtXRNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevices
void UnityEngine::XR::InputDevices::GetDevices(::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevicesWithCharacteristics
void UnityEngine::XR::InputDevices::GetDevicesWithCharacteristics(::UnityEngine::XR::InputDeviceCharacteristics desiredCharacteristics, ::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevicesWithCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevicesWithCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredCharacteristics), ::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, desiredCharacteristics, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.add_deviceConnected
void UnityEngine::XR::InputDevices::add_deviceConnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::add_deviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "add_deviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.InputDevices.remove_deviceConnected
void UnityEngine::XR::InputDevices::remove_deviceConnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::remove_deviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "remove_deviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.InputDevices.add_deviceDisconnected
void UnityEngine::XR::InputDevices::add_deviceDisconnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::add_deviceDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "add_deviceDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.InputDevices.remove_deviceDisconnected
void UnityEngine::XR::InputDevices::remove_deviceDisconnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::remove_deviceDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "remove_deviceDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.InputDevices.InvokeConnectionEvent
void UnityEngine::XR::InputDevices::InvokeConnectionEvent(uint64_t deviceId, ::UnityEngine::XR::ConnectionChangeType change) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::InvokeConnectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "InvokeConnectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(change)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, change);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDevices_Internal
void UnityEngine::XR::InputDevices::GetDevices_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>* inputDevices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDevices_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDevices_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputDevices);
}
// Autogenerated method: UnityEngine.XR.InputDevices.SendHapticImpulse
bool UnityEngine::XR::InputDevices::SendHapticImpulse(uint64_t deviceId, uint channel, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, channel, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetHapticCapabilities
bool UnityEngine::XR::InputDevices::TryGetHapticCapabilities(uint64_t deviceId, ByRef<::UnityEngine::XR::HapticCapabilities> capabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetHapticCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetHapticCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::HapticCapabilities&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, byref(capabilities));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_bool
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_bool(uint64_t deviceId, ::StringW usage, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_bool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_bool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_UInt32
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_UInt32(uint64_t deviceId, ::StringW usage, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_UInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_UInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_float
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_float(uint64_t deviceId, ::StringW usage, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_Vector2f
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_Vector2f(uint64_t deviceId, ::StringW usage, ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_Vector2f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_Vector2f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_Vector3f
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_Vector3f(uint64_t deviceId, ::StringW usage, ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_Vector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_Vector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.TryGetFeatureValue_Quaternionf
bool UnityEngine::XR::InputDevices::TryGetFeatureValue_Quaternionf(uint64_t deviceId, ::StringW usage, ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::TryGetFeatureValue_Quaternionf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "TryGetFeatureValue_Quaternionf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, usage, byref(value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.IsDeviceValid
bool UnityEngine::XR::InputDevices::IsDeviceValid(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::IsDeviceValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "IsDeviceValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDeviceName
::StringW UnityEngine::XR::InputDevices::GetDeviceName(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: UnityEngine.XR.InputDevices.GetDeviceCharacteristics
::UnityEngine::XR::InputDeviceCharacteristics UnityEngine::XR::InputDevices::GetDeviceCharacteristics(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::GetDeviceCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "GetDeviceCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDeviceCharacteristics, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/LateLatchNode
#include "UnityEngine/XR/XRDisplaySubsystem_LateLatchNode.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/TextureLayout
#include "UnityEngine/XR/XRDisplaySubsystem_TextureLayout.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRRenderParameter
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderParameter.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderPass.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRBlitParams
#include "UnityEngine/XR/XRDisplaySubsystem_XRBlitParams.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc
#include "UnityEngine/XR/XRDisplaySubsystem_XRMirrorViewBlitDesc.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Rendering.ScriptableCullingParameters
#include "UnityEngine/Rendering/ScriptableCullingParameters.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> displayFocusChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& UnityEngine::XR::XRDisplaySubsystem::dyn_displayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::dyn_displayFocusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayFocusChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.InvokeDisplayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeDisplayFocusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_scaleOfAllRenderTargets
void UnityEngine::XR::XRDisplaySubsystem::set_scaleOfAllRenderTargets(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_scaleOfAllRenderTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleOfAllRenderTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_zNear
void UnityEngine::XR::XRDisplaySubsystem::set_zNear(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_zNear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zNear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_zFar
void UnityEngine::XR::XRDisplaySubsystem::set_zFar(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_zFar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zFar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_sRGB
void UnityEngine::XR::XRDisplaySubsystem::set_sRGB(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_sRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.MarkTransformLateLatched
void UnityEngine::XR::XRDisplaySubsystem::MarkTransformLateLatched(::UnityEngine::Transform* transform, ::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::MarkTransformLateLatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkTransformLateLatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(nodeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, nodeType);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_textureLayout
void UnityEngine::XR::XRDisplaySubsystem::set_textureLayout(::UnityEngine::XR::XRDisplaySubsystem::TextureLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_textureLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textureLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.SetMSAALevel
void UnityEngine::XR::XRDisplaySubsystem::SetMSAALevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::SetMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.set_disableLegacyRenderer
void UnityEngine::XR::XRDisplaySubsystem::set_disableLegacyRenderer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::set_disableLegacyRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableLegacyRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.GetRenderPassCount
int UnityEngine::XR::XRDisplaySubsystem::GetRenderPassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::GetRenderPassCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderPassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.GetRenderPass
void UnityEngine::XR::XRDisplaySubsystem::GetRenderPass(int renderPassIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass> renderPass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::GetRenderPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPassIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderPassIndex, byref(renderPass));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.Internal_TryGetRenderPass
bool UnityEngine::XR::XRDisplaySubsystem::Internal_TryGetRenderPass(int renderPassIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass> renderPass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::Internal_TryGetRenderPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_TryGetRenderPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPassIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, renderPassIndex, byref(renderPass));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.EndRecordingIfLateLatched
void UnityEngine::XR::XRDisplaySubsystem::EndRecordingIfLateLatched(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::EndRecordingIfLateLatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRecordingIfLateLatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.Internal_TryEndRecordingIfLateLatched
bool UnityEngine::XR::XRDisplaySubsystem::Internal_TryEndRecordingIfLateLatched(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::Internal_TryEndRecordingIfLateLatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_TryEndRecordingIfLateLatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, camera);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.BeginRecordingIfLateLatched
void UnityEngine::XR::XRDisplaySubsystem::BeginRecordingIfLateLatched(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::BeginRecordingIfLateLatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRecordingIfLateLatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.Internal_TryBeginRecordingIfLateLatched
bool UnityEngine::XR::XRDisplaySubsystem::Internal_TryBeginRecordingIfLateLatched(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::Internal_TryBeginRecordingIfLateLatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_TryBeginRecordingIfLateLatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, camera);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.GetCullingParameters
void UnityEngine::XR::XRDisplaySubsystem::GetCullingParameters(::UnityEngine::Camera* camera, int cullingPassIndex, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> scriptableCullingParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::GetCullingParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCullingParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cullingPassIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rendering::ScriptableCullingParameters&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, cullingPassIndex, byref(scriptableCullingParameters));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.Internal_TryGetCullingParams
bool UnityEngine::XR::XRDisplaySubsystem::Internal_TryGetCullingParams(::UnityEngine::Camera* camera, int cullingPassIndex, ByRef<::UnityEngine::Rendering::ScriptableCullingParameters> scriptableCullingParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::Internal_TryGetCullingParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_TryGetCullingParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cullingPassIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rendering::ScriptableCullingParameters&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, camera, cullingPassIndex, byref(scriptableCullingParameters));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetAppGPUTimeLastFrame
bool UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame(ByRef<float> gpuTimeLastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetAppGPUTimeLastFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetAppGPUTimeLastFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(gpuTimeLastFrame));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetCompositorGPUTimeLastFrame
bool UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame(ByRef<float> gpuTimeLastFrameCompositor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetCompositorGPUTimeLastFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCompositorGPUTimeLastFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(gpuTimeLastFrameCompositor));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetDisplayRefreshRate
bool UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate(ByRef<float> displayRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetDisplayRefreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDisplayRefreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(displayRefreshRate));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.TryGetMotionToPhoton
bool UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton(ByRef<float> motionToPhoton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TryGetMotionToPhoton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMotionToPhoton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(motionToPhoton));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.GetPreferredMirrorBlitMode
int UnityEngine::XR::XRDisplaySubsystem::GetPreferredMirrorBlitMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::GetPreferredMirrorBlitMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredMirrorBlitMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.GetMirrorViewBlitDesc
bool UnityEngine::XR::XRDisplaySubsystem::GetMirrorViewBlitDesc(::UnityEngine::RenderTexture* mirrorRt, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc> outDesc, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::GetMirrorViewBlitDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorViewBlitDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mirrorRt), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc&>(), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mirrorRt, byref(outDesc), mode);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.AddGraphicsThreadMirrorViewBlit
bool UnityEngine::XR::XRDisplaySubsystem::AddGraphicsThreadMirrorViewBlit(::UnityEngine::Rendering::CommandBuffer* cmd, bool allowGraphicsStateInvalidate, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::AddGraphicsThreadMirrorViewBlit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraphicsThreadMirrorViewBlit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd), ::il2cpp_utils::ExtractType(allowGraphicsStateInvalidate), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cmd, allowGraphicsStateInvalidate, mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystem/LateLatchNode
#include "UnityEngine/XR/XRDisplaySubsystem_LateLatchNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode Head
::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode>("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode Head
void UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_Head(::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode LeftHand
::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode>("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode LeftHand
void UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_LeftHand(::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode RightHand
::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode>("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/LateLatchNode RightHand
void UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_RightHand(::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/LateLatchNode", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::LateLatchNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystem/TextureLayout
#include "UnityEngine/XR/XRDisplaySubsystem_TextureLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout Texture2DArray
::UnityEngine::XR::XRDisplaySubsystem::TextureLayout UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_Texture2DArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_Texture2DArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::TextureLayout>("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "Texture2DArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout Texture2DArray
void UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_Texture2DArray(::UnityEngine::XR::XRDisplaySubsystem::TextureLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_Texture2DArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "Texture2DArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout SingleTexture2D
::UnityEngine::XR::XRDisplaySubsystem::TextureLayout UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_SingleTexture2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_SingleTexture2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::TextureLayout>("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "SingleTexture2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout SingleTexture2D
void UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_SingleTexture2D(::UnityEngine::XR::XRDisplaySubsystem::TextureLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_SingleTexture2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "SingleTexture2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout SeparateTexture2Ds
::UnityEngine::XR::XRDisplaySubsystem::TextureLayout UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_SeparateTexture2Ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_get_SeparateTexture2Ds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRDisplaySubsystem::TextureLayout>("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "SeparateTexture2Ds"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRDisplaySubsystem/TextureLayout SeparateTexture2Ds
void UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_SeparateTexture2Ds(::UnityEngine::XR::XRDisplaySubsystem::TextureLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::_set_SeparateTexture2Ds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem/TextureLayout", "SeparateTexture2Ds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRDisplaySubsystem::TextureLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::TextureLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderPass.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRRenderParameter
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr displaySubsystemInstance
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_displaySubsystemInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_displaySubsystemInstance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displaySubsystemInstance"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 renderPassIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderPassIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderPassIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderPassIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.RenderTargetIdentifier renderTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RenderTargetIdentifier& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::RenderTargetIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTextureDescriptor renderTargetDesc
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTextureDescriptor& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderTargetDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_renderTargetDesc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderTargetDesc"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTextureDescriptor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasMotionVectorPass
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_hasMotionVectorPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_hasMotionVectorPass");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasMotionVectorPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.RenderTargetIdentifier motionVectorRenderTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::RenderTargetIdentifier& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_motionVectorRenderTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_motionVectorRenderTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motionVectorRenderTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::RenderTargetIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTextureDescriptor motionVectorRenderTargetDesc
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTextureDescriptor& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_motionVectorRenderTargetDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_motionVectorRenderTargetDesc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motionVectorRenderTargetDesc"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTextureDescriptor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldFillOutDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_shouldFillOutDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_shouldFillOutDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldFillOutDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cullingPassIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_cullingPassIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_cullingPassIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cullingPassIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr foveatedRenderingInfo
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_foveatedRenderingInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::dyn_foveatedRenderingInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foveatedRenderingInfo"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass.GetRenderParameter
void UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameter(::UnityEngine::Camera* camera, int renderParameterIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderParameter> renderParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRenderParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(renderParameterIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRRenderParameter&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, renderParameterIndex, byref(renderParameter));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass.GetRenderParameterCount
int UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRenderParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass.GetRenderParameter_Injected
void UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameter_Injected(ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass> _unity_self, ::UnityEngine::Camera* camera, int renderParameterIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderParameter> renderParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameter_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDisplaySubsystem/XRRenderPass", "GetRenderParameter_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(renderParameterIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRRenderParameter&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), camera, renderParameterIndex, byref(renderParameter));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRRenderPass.GetRenderParameterCount_Injected
int UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameterCount_Injected(ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRRenderPass::GetRenderParameterCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDisplaySubsystem/XRRenderPass", "GetRenderParameterCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc
#include "UnityEngine/XR/XRDisplaySubsystem_XRMirrorViewBlitDesc.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/XRBlitParams
#include "UnityEngine/XR/XRDisplaySubsystem_XRBlitParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr displaySubsystemInstance
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_displaySubsystemInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_displaySubsystemInstance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displaySubsystemInstance"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean nativeBlitAvailable
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_nativeBlitAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_nativeBlitAvailable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeBlitAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean nativeBlitInvalidStates
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_nativeBlitInvalidStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_nativeBlitInvalidStates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeBlitInvalidStates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 blitParamsCount
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_blitParamsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::dyn_blitParamsCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blitParamsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc.GetBlitParameter
void UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::GetBlitParameter(int blitParameterIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRBlitParams> blitParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::GetBlitParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlitParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blitParameterIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRBlitParams&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blitParameterIndex, byref(blitParameter));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem/XRMirrorViewBlitDesc.GetBlitParameter_Injected
void UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::GetBlitParameter_Injected(ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc> _unity_self, int blitParameterIndex, ByRef<::UnityEngine::XR::XRDisplaySubsystem::XRBlitParams> blitParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::XRMirrorViewBlitDesc::GetBlitParameter_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDisplaySubsystem/XRMirrorViewBlitDesc", "GetBlitParameter_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(blitParameterIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::XR::XRDisplaySubsystem::XRBlitParams&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), blitParameterIndex, byref(blitParameter));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.TrackingOriginModeFlags
#include "UnityEngine/XR/TrackingOriginModeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingOriginModeFlags Unknown
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::TrackingOriginModeFlags::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingOriginModeFlags>("UnityEngine.XR", "TrackingOriginModeFlags", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingOriginModeFlags Unknown
void UnityEngine::XR::TrackingOriginModeFlags::_set_Unknown(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingOriginModeFlags", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingOriginModeFlags Device
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::TrackingOriginModeFlags::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingOriginModeFlags>("UnityEngine.XR", "TrackingOriginModeFlags", "Device"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingOriginModeFlags Device
void UnityEngine::XR::TrackingOriginModeFlags::_set_Device(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingOriginModeFlags", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingOriginModeFlags Floor
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::TrackingOriginModeFlags::_get_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_get_Floor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingOriginModeFlags>("UnityEngine.XR", "TrackingOriginModeFlags", "Floor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingOriginModeFlags Floor
void UnityEngine::XR::TrackingOriginModeFlags::_set_Floor(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_set_Floor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingOriginModeFlags", "Floor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingOriginModeFlags TrackingReference
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::TrackingOriginModeFlags::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingOriginModeFlags>("UnityEngine.XR", "TrackingOriginModeFlags", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingOriginModeFlags TrackingReference
void UnityEngine::XR::TrackingOriginModeFlags::_set_TrackingReference(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingOriginModeFlags", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingOriginModeFlags Unbounded
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::TrackingOriginModeFlags::_get_Unbounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_get_Unbounded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingOriginModeFlags>("UnityEngine.XR", "TrackingOriginModeFlags", "Unbounded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingOriginModeFlags Unbounded
void UnityEngine::XR::TrackingOriginModeFlags::_set_Unbounded(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::_set_Unbounded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingOriginModeFlags", "Unbounded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::TrackingOriginModeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingOriginModeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.TrackingOriginModeFlags
#include "UnityEngine/XR/TrackingOriginModeFlags.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> trackingOriginUpdated
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingOriginUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> boundaryChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt64> m_DeviceIdsCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint64_t>*& UnityEngine::XR::XRInputSubsystem::dyn_m_DeviceIdsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_m_DeviceIdsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceIdsCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.TryRecenter
bool UnityEngine::XR::XRInputSubsystem::TryRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::TryRecenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRecenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.TrySetTrackingOriginMode
bool UnityEngine::XR::XRInputSubsystem::TrySetTrackingOriginMode(::UnityEngine::XR::TrackingOriginModeFlags origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::TrySetTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.GetTrackingOriginMode
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::XRInputSubsystem::GetTrackingOriginMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::GetTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::TrackingOriginModeFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.GetSupportedTrackingOriginModes
::UnityEngine::XR::TrackingOriginModeFlags UnityEngine::XR::XRInputSubsystem::GetSupportedTrackingOriginModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::GetSupportedTrackingOriginModes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSupportedTrackingOriginModes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::TrackingOriginModeFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.add_trackingOriginUpdated
void UnityEngine::XR::XRInputSubsystem::add_trackingOriginUpdated(::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::add_trackingOriginUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_trackingOriginUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.remove_trackingOriginUpdated
void UnityEngine::XR::XRInputSubsystem::remove_trackingOriginUpdated(::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::remove_trackingOriginUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_trackingOriginUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeTrackingOriginUpdatedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeTrackingOriginUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeBoundaryChangedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeBoundaryChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshId
#include "UnityEngine/XR/MeshId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.MeshId s_InvalidId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshId::_get_s_InvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_get_s_InvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshId>("UnityEngine.XR", "MeshId", "s_InvalidId"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.MeshId s_InvalidId
void UnityEngine::XR::MeshId::_set_s_InvalidId(::UnityEngine::XR::MeshId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_set_s_InvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshId", "s_InvalidId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId1
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId2
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId2"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::UnityEngine::XR::MeshId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::MeshId), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshId..cctor
void UnityEngine::XR::MeshId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "MeshId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.ToString
::StringW UnityEngine::XR::MeshId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.GetHashCode
int UnityEngine::XR::MeshId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshGenerationStatus
#include "UnityEngine/XR/MeshGenerationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Success
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Success
void UnityEngine::XR::MeshGenerationStatus::_set_Success(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
void UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
void UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
void UnityEngine::XR::MeshGenerationStatus::_set_Canceled(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
void UnityEngine::XR::MeshGenerationStatus::_set_UnknownError(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::MeshGenerationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.HashCodeHelper
#include "UnityEngine/XR/HashCodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3, int hash4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3), ::il2cpp_utils::ExtractType(hash4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3, hash4);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3, int hash4, int hash5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3), ::il2cpp_utils::ExtractType(hash4), ::il2cpp_utils::ExtractType(hash5)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3, hash4, hash5);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3, int hash4, int hash5, int hash6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3), ::il2cpp_utils::ExtractType(hash4), ::il2cpp_utils::ExtractType(hash5), ::il2cpp_utils::ExtractType(hash6)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3, hash4, hash5, hash6);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3, int hash4, int hash5, int hash6, int hash7) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3), ::il2cpp_utils::ExtractType(hash4), ::il2cpp_utils::ExtractType(hash5), ::il2cpp_utils::ExtractType(hash6), ::il2cpp_utils::ExtractType(hash7)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3, hash4, hash5, hash6, hash7);
}
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2, int hash3, int hash4, int hash5, int hash6, int hash7, int hash8) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2), ::il2cpp_utils::ExtractType(hash3), ::il2cpp_utils::ExtractType(hash4), ::il2cpp_utils::ExtractType(hash5), ::il2cpp_utils::ExtractType(hash6), ::il2cpp_utils::ExtractType(hash7), ::il2cpp_utils::ExtractType(hash8)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2, hash3, hash4, hash5, hash6, hash7, hash8);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshGenerationResult
#include "UnityEngine/XR/MeshGenerationResult.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshId <MeshId>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshId& UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshId>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Mesh <Mesh>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Mesh>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.MeshCollider <MeshCollider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshGenerationStatus <Status>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshGenerationStatus& UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Status>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshGenerationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshVertexAttributes <Attributes>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshVertexAttributes& UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attributes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshVertexAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Timestamp>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::MeshGenerationResult::dyn_$Timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Timestamp$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::MeshGenerationResult::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Position$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Quaternion <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::MeshGenerationResult::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <Scale>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::MeshGenerationResult::dyn_$Scale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Scale$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scale>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshGenerationResult::get_MeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshId, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Mesh
::UnityEngine::Mesh* UnityEngine::XR::MeshGenerationResult::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshCollider
::UnityEngine::MeshCollider* UnityEngine::XR::MeshGenerationResult::get_MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshCollider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Status
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationResult::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshGenerationStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Attributes
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshGenerationResult::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshVertexAttributes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Position
::UnityEngine::Vector3 UnityEngine::XR::MeshGenerationResult::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Rotation
::UnityEngine::Quaternion UnityEngine::XR::MeshGenerationResult::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Scale
::UnityEngine::Vector3 UnityEngine::XR::MeshGenerationResult::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::UnityEngine::XR::MeshGenerationResult other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::MeshGenerationResult), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.GetHashCode
int UnityEngine::XR::MeshGenerationResult::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshVertexAttributes
#include "UnityEngine/XR/MeshVertexAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes None
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes None
void UnityEngine::XR::MeshVertexAttributes::_set_None(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Normals
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Normals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Normals
void UnityEngine::XR::MeshVertexAttributes::_set_Normals(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Normals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Tangents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Tangents"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
void UnityEngine::XR::MeshVertexAttributes::_set_Tangents(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Tangents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Tangents", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes UVs
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_UVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "UVs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes UVs
void UnityEngine::XR::MeshVertexAttributes::_set_UVs(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_UVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "UVs", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Colors
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Colors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Colors
void UnityEngine::XR::MeshVertexAttributes::_set_Colors(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Colors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::MeshVertexAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem/MeshTransformList
#include "UnityEngine/XR/XRMeshSubsystem_MeshTransformList.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem.InvokeMeshReadyDelegate
void UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate(::UnityEngine::XR::MeshGenerationResult result, ::System::Action_1<::UnityEngine::XR::MeshGenerationResult>* onMeshGenerationComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMeshReadyDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(onMeshGenerationComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, onMeshGenerationComplete);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystem/MeshTransformList
#include "UnityEngine/XR/XRMeshSubsystem_MeshTransformList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IntPtr m_Self
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::XR::XRMeshSubsystem::MeshTransformList::dyn_m_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::MeshTransformList::dyn_m_Self");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Self"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem/MeshTransformList.Dispose
void UnityEngine::XR::XRMeshSubsystem::MeshTransformList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::MeshTransformList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::XR::XRMeshSubsystem::MeshTransformList), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem/MeshTransformList.Dispose
void UnityEngine::XR::XRMeshSubsystem::MeshTransformList::Dispose(::System::IntPtr self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::MeshTransformList::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRMeshSubsystem/MeshTransformList", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Provider.XRStats
#include "UnityEngine/XR/Provider/XRStats.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat
bool UnityEngine::XR::Provider::XRStats::TryGetStat(::UnityEngine::IntegratedSubsystem* xrSubsystem, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSubsystem), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSubsystem, tag, byref(value));
}
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat_Internal
bool UnityEngine::XR::Provider::XRStats::TryGetStat_Internal(::System::IntPtr ptr, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, tag, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Configuration.WitDictationRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitDictationRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Dictation.Configuration.DictationConfiguration
#include "Oculus/Voice/Dictation/Configuration/DictationConfiguration.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Voice.Dictation.Configuration.DictationConfiguration dictationConfiguration
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Dictation::Configuration::DictationConfiguration*& Meta::WitAi::Configuration::WitDictationRuntimeConfiguration::dyn_dictationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration::dyn_dictationConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dictationConfiguration"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Dictation::Configuration::DictationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Configuration.WitDictationRuntimeConfiguration.get_RecordingTimeRange
::UnityEngine::Vector2 Meta::WitAi::Configuration::WitDictationRuntimeConfiguration::get_RecordingTimeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration::get_RecordingTimeRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitRuntimeConfiguration*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.AppDictationExperience
#include "Oculus/Voice/Dictation/AppDictationExperience.hpp"
// Including type: Meta.WitAi.Configuration.WitDictationRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitDictationRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
#include "Oculus/Voice/Core/Bindings/Interfaces/IVoiceSDKLogger.hpp"
// Including type: Meta.WitAi.Dictation.Data.DictationSession
#include "Meta/WitAi/Dictation/Data/DictationSession.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitDictationRuntimeConfiguration runtimeConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*& Oculus::Voice::Dictation::AppDictationExperience::dyn_runtimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn_runtimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtimeConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePlatformServices
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::AppDictationExperience::dyn_usePlatformServices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn_usePlatformServices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePlatformServices"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotFallbackToWit
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::AppDictationExperience::dyn_doNotFallbackToWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn_doNotFallbackToWit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotFallbackToWit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableConsoleLogging
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::AppDictationExperience::dyn_enableConsoleLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn_enableConsoleLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableConsoleLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Dictation.IDictationService _dictationServiceImpl
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::IDictationService*& Oculus::Voice::Dictation::AppDictationExperience::dyn__dictationServiceImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn__dictationServiceImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictationServiceImpl"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Dictation::IDictationService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger _voiceSDKLogger
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*& Oculus::Voice::Dictation::AppDictationExperience::dyn__voiceSDKLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn__voiceSDKLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceSDKLogger"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::AppDictationExperience::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Dictation.Data.DictationSession _activeSession
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::Data::DictationSession*& Oculus::Voice::Dictation::AppDictationExperience::dyn__activeSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn__activeSession");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeSession"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Dictation::Data::DictationSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitRequestOptions _activeRequestOptions
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitRequestOptions*& Oculus::Voice::Dictation::AppDictationExperience::dyn__activeRequestOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn__activeRequestOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRequestOptions"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitRequestOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnInitialized
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Voice::Dictation::AppDictationExperience::dyn_OnInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::dyn_OnInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnInitialized"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_RuntimeConfiguration
::Meta::WitAi::Configuration::WitRuntimeConfiguration* Oculus::Voice::Dictation::AppDictationExperience::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::AppDictationExperience*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_RuntimeDictationConfiguration
::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration* Oculus::Voice::Dictation::AppDictationExperience::get_RuntimeDictationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_RuntimeDictationConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RuntimeDictationConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.set_RuntimeDictationConfiguration
void Oculus::Voice::Dictation::AppDictationExperience::set_RuntimeDictationConfiguration(::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::set_RuntimeDictationConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeDictationConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Oculus::Voice::Dictation::AppDictationExperience::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_Configuration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::AppDictationExperience*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_ActiveSession
::Meta::WitAi::Dictation::Data::DictationSession* Oculus::Voice::Dictation::AppDictationExperience::get_ActiveSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_ActiveSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Dictation::Data::DictationSession*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_ActiveRequestOptions
::Meta::WitAi::Configuration::WitRequestOptions* Oculus::Voice::Dictation::AppDictationExperience::get_ActiveRequestOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_ActiveRequestOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveRequestOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRequestOptions*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.add_OnInitialized
void Oculus::Voice::Dictation::AppDictationExperience::add_OnInitialized(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::add_OnInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.remove_OnInitialized
void Oculus::Voice::Dictation::AppDictationExperience::remove_OnInitialized(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::remove_OnInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_PACKAGE_VERSION
::StringW Oculus::Voice::Dictation::AppDictationExperience::get_PACKAGE_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_PACKAGE_VERSION");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Dictation", "AppDictationExperience", "get_PACKAGE_VERSION", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_HasPlatformIntegrations
bool Oculus::Voice::Dictation::AppDictationExperience::get_HasPlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_HasPlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_UsePlatformIntegrations
bool Oculus::Voice::Dictation::AppDictationExperience::get_UsePlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_UsePlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsePlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.set_UsePlatformIntegrations
void Oculus::Voice::Dictation::AppDictationExperience::set_UsePlatformIntegrations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::set_UsePlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UsePlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_DoNotFallbackToWit
bool Oculus::Voice::Dictation::AppDictationExperience::get_DoNotFallbackToWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_DoNotFallbackToWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DoNotFallbackToWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.set_DoNotFallbackToWit
void Oculus::Voice::Dictation::AppDictationExperience::set_DoNotFallbackToWit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::set_DoNotFallbackToWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoNotFallbackToWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.InitDictation
void Oculus::Voice::Dictation::AppDictationExperience::InitDictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::InitDictation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDictation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnPlatformServiceNotAvailable
void Oculus::Voice::Dictation::AppDictationExperience::OnPlatformServiceNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnPlatformServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlatformServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnDictationServiceNotAvailable
void Oculus::Voice::Dictation::AppDictationExperience::OnDictationServiceNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnDictationServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDictationServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.RevertToWitDictation
void Oculus::Voice::Dictation::AppDictationExperience::RevertToWitDictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::RevertToWitDictation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertToWitDictation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.Toggle
void Oculus::Voice::Dictation::AppDictationExperience::Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnRequestInit
void Oculus::Voice::Dictation::AppDictationExperience::OnRequestInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnRequestInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnStarted
void Oculus::Voice::Dictation::AppDictationExperience::OnStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnStopped
void Oculus::Voice::Dictation::AppDictationExperience::OnStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnStopped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStopped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnDictationSessionStarted
void Oculus::Voice::Dictation::AppDictationExperience::OnDictationSessionStarted(::Meta::WitAi::Dictation::Data::DictationSession* session) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnDictationSessionStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDictationSessionStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, session);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnAudioDurationTrackerFinished
void Oculus::Voice::Dictation::AppDictationExperience::OnAudioDurationTrackerFinished(int64_t timestamp, double audioDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnAudioDurationTrackerFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioDurationTrackerFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(audioDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, audioDuration);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnPartialTranscription
void Oculus::Voice::Dictation::AppDictationExperience::OnPartialTranscription(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnFullTranscription
void Oculus::Voice::Dictation::AppDictationExperience::OnFullTranscription(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnComplete
void Oculus::Voice::Dictation::AppDictationExperience::OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.CleanupSession
void Oculus::Voice::Dictation::AppDictationExperience::CleanupSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::CleanupSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.<OnEnable>b__37_0
void Oculus::Voice::Dictation::AppDictationExperience::$OnEnable$b__37_0(::StringW e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::<OnEnable>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnEnable
void Oculus::Voice::Dictation::AppDictationExperience::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.OnDisable
void Oculus::Voice::Dictation::AppDictationExperience::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_Active
bool Oculus::Voice::Dictation::AppDictationExperience::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_IsRequestActive
bool Oculus::Voice::Dictation::AppDictationExperience::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::Dictation::AppDictationExperience::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.set_TranscriptionProvider
void Oculus::Voice::Dictation::AppDictationExperience::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_MicActive
bool Oculus::Voice::Dictation::AppDictationExperience::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.get_ShouldSendMicData
bool Oculus::Voice::Dictation::AppDictationExperience::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Dictation::AppDictationExperience::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Dictation::AppDictationExperience::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.Deactivate
void Oculus::Voice::Dictation::AppDictationExperience::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.AppDictationExperience.Cancel
void Oculus::Voice::Dictation::AppDictationExperience::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::AppDictationExperience::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Dictation::DictationService*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding
#include "Oculus/Voice/Dictation/Bindings/Android/DictationConfigurationBinding.hpp"
// Including type: Meta.WitAi.Configuration.WitDictationRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitDictationRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Dictation.Configuration.DictationConfiguration
#include "Oculus/Voice/Dictation/Configuration/DictationConfiguration.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Configuration.WitDictationRuntimeConfiguration _runtimeConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*& Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn__runtimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn__runtimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runtimeConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Voice.Dictation.Configuration.DictationConfiguration _dictationConfiguration
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Dictation::Configuration::DictationConfiguration*& Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn__dictationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn__dictationConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictationConfiguration"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Dictation::Configuration::DictationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS
[[deprecated("Use field access instead!")]] int& Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn_MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::dyn_MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding.ToJavaObject
::UnityEngine::AndroidJavaObject* Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::ToJavaObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::ToJavaObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJavaObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding
#include "Oculus/Voice/Dictation/Bindings/Android/DictationListenerBinding.hpp"
// Including type: Meta.WitAi.Dictation.IDictationService
#include "Meta/WitAi/Dictation/IDictationService.hpp"
// Including type: Oculus.Voice.Dictation.Bindings.Android.IServiceEvents
#include "Oculus/Voice/Dictation/Bindings/Android/IServiceEvents.hpp"
// Including type: Meta.WitAi.Dictation.Events.DictationEvents
#include "Meta/WitAi/Dictation/Events/DictationEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Dictation.IDictationService _dictationService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::IDictationService*& Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::dyn__dictationService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::dyn__dictationService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictationService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Dictation::IDictationService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Dictation.Bindings.Android.IServiceEvents _serviceEvents
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents*& Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::dyn__serviceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::dyn__serviceEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serviceEvents"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.get_DictationEvents
::Meta::WitAi::Dictation::Events::DictationEvents* Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::get_DictationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::get_DictationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DictationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Dictation::Events::DictationEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onStart
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onStart(::StringW sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onMicAudioLevel
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onMicAudioLevel(::StringW sessionId, int micLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onMicAudioLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicAudioLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(micLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, micLevel);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onPartialTranscription
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onPartialTranscription(::StringW sessionId, ::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, transcription);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onFinalTranscription
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onFinalTranscription(::StringW sessionId, ::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onFinalTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFinalTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, transcription);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onError
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onError(::StringW sessionId, ::StringW errorType, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(errorType), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, errorType, errorMessage);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onStopped
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onStopped(::StringW sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onStopped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStopped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding.onServiceNotAvailable
void Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding::onServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.IServiceEvents
#include "Oculus/Voice/Dictation/Bindings/Android/IServiceEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.IServiceEvents.OnServiceNotAvailable
void Oculus::Voice::Dictation::Bindings::Android::IServiceEvents::OnServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents::OnServiceNotAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl
#include "Oculus/Voice/Dictation/Bindings/Android/PlatformDictationImpl.hpp"
// Including type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding
#include "Oculus/Voice/Dictation/Bindings/Android/PlatformDictationSDKBinding.hpp"
// Including type: Meta.WitAi.Configuration.WitDictationRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitDictationRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding
#include "Oculus/Voice/Dictation/Bindings/Android/DictationListenerBinding.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Meta.WitAi.Dictation.Events.DictationEvents
#include "Meta/WitAi/Dictation/Events/DictationEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Dictation.IDictationService _baseService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Dictation::IDictationService*& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__baseService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__baseService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Dictation::IDictationService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _serviceAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__serviceAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__serviceAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serviceAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitDictationRuntimeConfiguration _dictationRuntimeConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__dictationRuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__dictationRuntimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictationRuntimeConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding _listenerBinding
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding*& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__listenerBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn__listenerBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listenerBinding"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.ITranscriptionProvider <TranscriptionProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::ITranscriptionProvider*& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn_$TranscriptionProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn_$TranscriptionProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TranscriptionProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::ITranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnServiceNotAvailableEvent
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn_OnServiceNotAvailableEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::dyn_OnServiceNotAvailableEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnServiceNotAvailableEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_PlatformSupportsDictation
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_PlatformSupportsDictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_PlatformSupportsDictation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlatformSupportsDictation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_Active
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_IsRequestActive
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_MicActive
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.set_TranscriptionProvider
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_DictationEvents
::Meta::WitAi::Dictation::Events::DictationEvents* Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_DictationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_DictationEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Dictation::Events::DictationEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.set_DictationEvents
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_DictationEvents(::Meta::WitAi::Dictation::Events::DictationEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_DictationEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.set_TelemetryEvents
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_TelemetryEvents(::Meta::WitAi::Events::TelemetryEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::set_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.SetDictationRuntimeConfiguration
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::SetDictationRuntimeConfiguration(::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::SetDictationRuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDictationRuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Activate
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Deactivate
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Cancel
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.OnServiceNotAvailable
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::OnServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::OnServiceNotAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Connect
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Connect(::StringW version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationImpl.Disconnect
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationImpl::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding
#include "Oculus/Voice/Dictation/Bindings/Android/PlatformDictationSDKBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding
#include "Oculus/Voice/Dictation/Bindings/Android/DictationConfigurationBinding.hpp"
// Including type: Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding
#include "Oculus/Voice/Dictation/Bindings/Android/DictationListenerBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.get_Active
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.get_IsRequestActive
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsRequestActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.get_IsSupported
bool Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.StartDictation
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StartDictation(::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StartDictation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDictation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.StopDictation
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StopDictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StopDictation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopDictation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding.SetListener
void Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::SetListener(::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding* listenerBinding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::SetListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerBinding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listenerBinding);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSession
#include "Oculus/Voice/Dictation/Bindings/Android/PlatformDictationSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String platformSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession::dyn_platformSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession::dyn_platformSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Listeners.DictationListener
#include "Oculus/Voice/Dictation/Listeners/DictationListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnStart
void Oculus::Voice::Dictation::Listeners::DictationListener::OnStart(::Oculus::Voice::Dictation::Listeners::DictationListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnMicAudioLevel
void Oculus::Voice::Dictation::Listeners::DictationListener::OnMicAudioLevel(float micLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnMicAudioLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, micLevel);
}
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnPartialTranscription
void Oculus::Voice::Dictation::Listeners::DictationListener::OnPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnFinalTranscription
void Oculus::Voice::Dictation::Listeners::DictationListener::OnFinalTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnFinalTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnError
void Oculus::Voice::Dictation::Listeners::DictationListener::OnError(::StringW errorType, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorType, errorMessage);
}
// Autogenerated method: Oculus.Voice.Dictation.Listeners.DictationListener.OnStopped
void Oculus::Voice::Dictation::Listeners::DictationListener::OnStopped(::Oculus::Voice::Dictation::Listeners::DictationListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Listeners::DictationListener::OnStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Dictation::Listeners::DictationListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Dictation.Configuration.DictationConfiguration
#include "Oculus/Voice/Dictation/Configuration/DictationConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean multiPhrase
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_multiPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_multiPhrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiPhrase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String scenario
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_scenario() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_scenario");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenario"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String inputType
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_inputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Configuration::DictationConfiguration::dyn_inputType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.VoiceSDK.UX.VoiceActivationButton
#include "Oculus/VoiceSDK/UX/VoiceActivationButton.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _buttonLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__buttonLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__buttonLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.VoiceService _voiceService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__voiceService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__voiceService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::VoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _activateText
[[deprecated("Use field access instead!")]] ::StringW& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__activateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__activateText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activateImmediately
[[deprecated("Use field access instead!")]] bool& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__activateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__activateImmediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateImmediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _deactivateText
[[deprecated("Use field access instead!")]] ::StringW& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__deactivateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__deactivateText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deactivateText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _deactivateAndAbort
[[deprecated("Use field access instead!")]] bool& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__deactivateAndAbort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__deactivateAndAbort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deactivateAndAbort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VoiceServiceRequest _request
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.Awake
void Oculus::VoiceSDK::UX::VoiceActivationButton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.OnEnable
void Oculus::VoiceSDK::UX::VoiceActivationButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.OnDisable
void Oculus::VoiceSDK::UX::VoiceActivationButton::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.OnClick
void Oculus::VoiceSDK::UX::VoiceActivationButton::OnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::OnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.Activate
void Oculus::VoiceSDK::UX::VoiceActivationButton::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.Deactivate
void Oculus::VoiceSDK::UX::VoiceActivationButton::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.GetRequestEvents
::Meta::WitAi::Requests::VoiceServiceRequestEvents* Oculus::VoiceSDK::UX::VoiceActivationButton::GetRequestEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::GetRequestEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequestEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.OnInit
void Oculus::VoiceSDK::UX::VoiceActivationButton::OnInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::OnInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.OnComplete
void Oculus::VoiceSDK::UX::VoiceActivationButton::OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceActivationButton.RefreshActive
void Oculus::VoiceSDK::UX::VoiceActivationButton::RefreshActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::RefreshActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel
#include "Oculus/VoiceSDK/UX/VoiceTranscriptionLabel.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _label
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.VoiceService[] _voiceServices
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::VoiceService*>& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__voiceServices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__voiceServices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceServices"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::VoiceService*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _transcriptionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__transcriptionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__transcriptionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transcriptionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _promptColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _promptDefault
[[deprecated("Use field access instead!")]] ::StringW& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptDefault"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _promptListening
[[deprecated("Use field access instead!")]] ::StringW& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__promptListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptListening"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _errorColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__errorColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::dyn__errorColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_errorColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.get_Label
::UnityEngine::UI::Text* Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::get_Label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::get_Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.Awake
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnEnable
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnDisable
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnStartListening
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnTranscriptionChange
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnTranscriptionChange(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnTranscriptionChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTranscriptionChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnError
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnError(::StringW status, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, status, error);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.OnComplete
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.VoiceSDK.UX.VoiceTranscriptionLabel.SetText
void Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::SetText(::StringW newText, ::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceTranscriptionLabel::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newText), ::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newText, newColor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.VoiceSDK.Utilities.MicPermissionsManager
#include "Oculus/VoiceSDK/Utilities/MicPermissionsManager.hpp"
// Including type: Oculus.VoiceSDK.Utilities.MicPermissionsManager/<>c__DisplayClass1_0
#include "Oculus/VoiceSDK/Utilities/MicPermissionsManager_--c__DisplayClass1_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.VoiceSDK.Utilities.MicPermissionsManager.HasMicPermission
bool Oculus::VoiceSDK::Utilities::MicPermissionsManager::HasMicPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::Utilities::MicPermissionsManager::HasMicPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.VoiceSDK.Utilities", "MicPermissionsManager", "HasMicPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.VoiceSDK.Utilities.MicPermissionsManager.RequestMicPermission
void Oculus::VoiceSDK::Utilities::MicPermissionsManager::RequestMicPermission(::System::Action_1<::StringW>* permissionGrantedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::Utilities::MicPermissionsManager::RequestMicPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.VoiceSDK.Utilities", "MicPermissionsManager", "RequestMicPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionGrantedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permissionGrantedCallback);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.VoiceSDK.Utilities.MicPermissionsManager/<>c__DisplayClass1_0
#include "Oculus/VoiceSDK/Utilities/MicPermissionsManager_--c__DisplayClass1_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> permissionGrantedCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::dyn_permissionGrantedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::dyn_permissionGrantedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionGrantedCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.VoiceSDK.Utilities.MicPermissionsManager/<>c__DisplayClass1_0.<RequestMicPermission>b__0
void Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::$RequestMicPermission$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::<RequestMicPermission>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestMicPermission>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppBuiltIns
#include "Oculus/Voice/AppBuiltIns.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String builtInPrefix
::StringW Oculus::Voice::AppBuiltIns::_get_builtInPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_builtInPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "builtInPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String builtInPrefix
void Oculus::Voice::AppBuiltIns::_set_builtInPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_builtInPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "builtInPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String modelName
::StringW Oculus::Voice::AppBuiltIns::_get_modelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_modelName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "modelName"));
}
// Autogenerated static field setter
// Set static field: static private System.String modelName
void Oculus::Voice::AppBuiltIns::_set_modelName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_modelName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "modelName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Voice::AppBuiltIns::_get_apps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_apps");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Oculus.Voice", "AppBuiltIns", "apps")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
void Oculus::Voice::AppBuiltIns::_set_apps(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_apps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "apps", value));
}
// Autogenerated method: Oculus.Voice.AppBuiltIns.get_appNames
::ArrayW<::StringW> Oculus::Voice::AppBuiltIns::get_appNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::get_appNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", "get_appNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppBuiltIns..cctor
void Oculus::Voice::AppBuiltIns::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
#include "Oculus/Voice/Core/Bindings/Interfaces/IVoiceSDKLogger.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witRuntimeConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePlatformServices
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::AppVoiceExperience::dyn_usePlatformServices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_usePlatformServices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePlatformServices"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableConsoleLogging
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::AppVoiceExperience::dyn_enableConsoleLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_enableConsoleLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableConsoleLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Interfaces.IPlatformVoiceService platformService
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Interfaces::IPlatformVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_platformService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_platformService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformService"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Interfaces::IPlatformVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IVoiceService voiceServiceImpl
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceServiceImpl"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger voiceSDKLoggerImpl
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*& Oculus::Voice::AppVoiceExperience::dyn_voiceSDKLoggerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_voiceSDKLoggerImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceSDKLoggerImpl"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnInitialized
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Voice::AppVoiceExperience::dyn_OnInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_OnInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnInitialized"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_RuntimeConfiguration
::Meta::WitAi::Configuration::WitRuntimeConfiguration* Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::AppVoiceExperience*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_RuntimeConfiguration
void Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Oculus::Voice::AppVoiceExperience::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_Configuration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::AppVoiceExperience*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_PACKAGE_VERSION
::StringW Oculus::Voice::AppVoiceExperience::get_PACKAGE_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_PACKAGE_VERSION");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppVoiceExperience", "get_PACKAGE_VERSION", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_Initialized
bool Oculus::Voice::AppVoiceExperience::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.add_OnInitialized
void Oculus::Voice::AppVoiceExperience::add_OnInitialized(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::add_OnInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.remove_OnInitialized
void Oculus::Voice::AppVoiceExperience::remove_OnInitialized(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::remove_OnInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_HasPlatformIntegrations
bool Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_EnableConsoleLogging
bool Oculus::Voice::AppVoiceExperience::get_EnableConsoleLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_EnableConsoleLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableConsoleLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.InitVoiceSDK
void Oculus::Voice::AppVoiceExperience::InitVoiceSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::InitVoiceSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitVoiceSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.RevertToWitUnity
void Oculus::Voice::AppVoiceExperience::RevertToWitUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::RevertToWitUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertToWitUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnApplicationFocus
void Oculus::Voice::AppVoiceExperience::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnRequestInit
void Oculus::Voice::AppVoiceExperience::OnRequestInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnRequestInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnWitResponseListener
void Oculus::Voice::AppVoiceExperience::OnWitResponseListener(::Meta::WitAi::Json::WitResponseNode* witResponseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnWitResponseListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWitResponseListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponseNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, witResponseNode);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnStartedListening
void Oculus::Voice::AppVoiceExperience::OnStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnStartedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnMinimumWakeThresholdHit
void Oculus::Voice::AppVoiceExperience::OnMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnStoppedListening
void Oculus::Voice::AppVoiceExperience::OnStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnStoppedListeningDueToTimeout
void Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoppedListeningDueToTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnStoppedListeningDueToInactivity
void Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToInactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToInactivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoppedListeningDueToInactivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnStoppedListeningDueToDeactivation
void Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnStoppedListeningDueToDeactivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoppedListeningDueToDeactivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnMicDataSent
void Oculus::Voice::AppVoiceExperience::OnMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnSend
void Oculus::Voice::AppVoiceExperience::OnSend(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnAudioDurationTrackerFinished
void Oculus::Voice::AppVoiceExperience::OnAudioDurationTrackerFinished(int64_t timestamp, double audioDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnAudioDurationTrackerFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioDurationTrackerFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(audioDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, audioDuration);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnPartialTranscription
void Oculus::Voice::AppVoiceExperience::OnPartialTranscription(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnFullTranscription
void Oculus::Voice::AppVoiceExperience::OnFullTranscription(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnRequestComplete
void Oculus::Voice::AppVoiceExperience::OnRequestComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnRequestComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.<InitVoiceSDK>b__44_0
void Oculus::Voice::AppVoiceExperience::$InitVoiceSDK$b__44_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::<InitVoiceSDK>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitVoiceSDK>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_Active
bool Oculus::Voice::AppVoiceExperience::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_IsRequestActive
bool Oculus::Voice::AppVoiceExperience::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_TranscriptionProvider
void Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_MicActive
bool Oculus::Voice::AppVoiceExperience::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_ShouldSendMicData
bool Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_UsePlatformIntegrations
bool Oculus::Voice::AppVoiceExperience::get_UsePlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_UsePlatformIntegrations
void Oculus::Voice::AppVoiceExperience::set_UsePlatformIntegrations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.CanSend
bool Oculus::Voice::AppVoiceExperience::CanSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::CanSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::AppVoiceExperience::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.CanActivateAudio
bool Oculus::Voice::AppVoiceExperience::CanActivateAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::CanActivateAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.GetActivateAudioError
::StringW Oculus::Voice::AppVoiceExperience::GetActivateAudioError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::GetActivateAudioError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::AppVoiceExperience::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::AppVoiceExperience::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Deactivate
void Oculus::Voice::AppVoiceExperience::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.DeactivateAndAbortRequest
void Oculus::Voice::AppVoiceExperience::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnEnable
void Oculus::Voice::AppVoiceExperience::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnDisable
void Oculus::Voice::AppVoiceExperience::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.ObjectVoiceExperience
#include "Oculus/Voice/ObjectVoiceExperience.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.VoiceEvents _voiceEvents
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceEvents*& Oculus::Voice::ObjectVoiceExperience::dyn__voiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::dyn__voiceEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceEvents"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.AppVoiceExperience _voice
[[deprecated("Use field access instead!")]] ::Oculus::Voice::AppVoiceExperience*& Oculus::Voice::ObjectVoiceExperience::dyn__voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::dyn__voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voice"))->offset;
  return *reinterpret_cast<::Oculus::Voice::AppVoiceExperience**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VoiceServiceRequest _activation
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Oculus::Voice::ObjectVoiceExperience::dyn__activation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::dyn__activation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activation"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VoiceServiceRequestEvents _events
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequestEvents*& Oculus::Voice::ObjectVoiceExperience::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequestEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.OnEnable
void Oculus::Voice::ObjectVoiceExperience::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.OnDisable
void Oculus::Voice::ObjectVoiceExperience::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleAudioInputStateChange
void Oculus::Voice::ObjectVoiceExperience::HandleAudioInputStateChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleAudioInputStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAudioInputStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleUploadProgressChange
void Oculus::Voice::ObjectVoiceExperience::HandleUploadProgressChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleUploadProgressChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUploadProgressChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleDownloadProgressChange
void Oculus::Voice::ObjectVoiceExperience::HandleDownloadProgressChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleDownloadProgressChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDownloadProgressChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleStopListening
void Oculus::Voice::ObjectVoiceExperience::HandleStopListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleStopListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStopListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleStartListening
void Oculus::Voice::ObjectVoiceExperience::HandleStartListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleStateChange
void Oculus::Voice::ObjectVoiceExperience::HandleStateChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleFullTranscription
void Oculus::Voice::ObjectVoiceExperience::HandleFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandlePartialTranscription
void Oculus::Voice::ObjectVoiceExperience::HandlePartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandlePartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleAudioDeactivation
void Oculus::Voice::ObjectVoiceExperience::HandleAudioDeactivation(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleAudioDeactivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAudioDeactivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleAudioActivation
void Oculus::Voice::ObjectVoiceExperience::HandleAudioActivation(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleAudioActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAudioActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleSuccess
void Oculus::Voice::ObjectVoiceExperience::HandleSuccess(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleSend
void Oculus::Voice::ObjectVoiceExperience::HandleSend(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleInit
void Oculus::Voice::ObjectVoiceExperience::HandleInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleFailed
void Oculus::Voice::ObjectVoiceExperience::HandleFailed(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleComplete
void Oculus::Voice::ObjectVoiceExperience::HandleComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.HandleCancel
void Oculus::Voice::ObjectVoiceExperience::HandleCancel(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::HandleCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.Activate
void Oculus::Voice::ObjectVoiceExperience::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.ObjectVoiceExperience.Deactivate
void Oculus::Voice::ObjectVoiceExperience::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::ObjectVoiceExperience::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.VoiceSDKConstants
#include "Oculus/Voice/VoiceSDKConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _isInitialized
bool Oculus::Voice::VoiceSDKConstants::_get__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_get__isInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Voice", "VoiceSDKConstants", "_isInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isInitialized
void Oculus::Voice::VoiceSDKConstants::_set__isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_set__isInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "VoiceSDKConstants", "_isInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _sdkVersion
::StringW Oculus::Voice::VoiceSDKConstants::_get__sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_get__sdkVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "VoiceSDKConstants", "_sdkVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String _sdkVersion
void Oculus::Voice::VoiceSDKConstants::_set__sdkVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_set__sdkVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "VoiceSDKConstants", "_sdkVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _userAgentPrefix
::StringW Oculus::Voice::VoiceSDKConstants::_get__userAgentPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_get__userAgentPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "VoiceSDKConstants", "_userAgentPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userAgentPrefix
void Oculus::Voice::VoiceSDKConstants::_set__userAgentPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::_set__userAgentPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "VoiceSDKConstants", "_userAgentPrefix", value));
}
// Autogenerated method: Oculus.Voice.VoiceSDKConstants..cctor
void Oculus::Voice::VoiceSDKConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "VoiceSDKConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.VoiceSDKConstants.Init
void Oculus::Voice::VoiceSDKConstants::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "VoiceSDKConstants", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.VoiceSDKConstants.get_SdkVersion
::StringW Oculus::Voice::VoiceSDKConstants::get_SdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::get_SdkVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "VoiceSDKConstants", "get_SdkVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.VoiceSDKConstants.OnCustomUserAgent
void Oculus::Voice::VoiceSDKConstants::OnCustomUserAgent(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::VoiceSDKConstants::OnCustomUserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "VoiceSDKConstants", "OnCustomUserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Logging.TTSServiceLogging
#include "Oculus/Voice/Logging/TTSServiceLogging.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Meta.WitAi.TTS.TTSService
#include "Meta/WitAi/TTS/TTSService.hpp"
// Including type: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
#include "Oculus/Voice/Core/Bindings/Interfaces/IVoiceSDKLogger.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.WitAi.TTS.Data.TTSClipData
#include "Meta/WitAi/TTS/Data/TTSClipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String TTS_FILETYPE_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FILETYPE_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FILETYPE_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FILETYPE_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_FILETYPE_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FILETYPE_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FILETYPE_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FILETYPE_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_FILESTREAM_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FILESTREAM_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FILESTREAM_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FILESTREAM_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_FILESTREAM_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FILESTREAM_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FILESTREAM_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FILESTREAM_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_START_TIME_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_START_TIME_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_START_TIME_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_START_TIME_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_START_TIME_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_START_TIME_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_START_TIME_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_START_TIME_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_FIRST_TIME_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FIRST_TIME_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FIRST_TIME_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FIRST_TIME_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_FIRST_TIME_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FIRST_TIME_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FIRST_TIME_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FIRST_TIME_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_READY_TIME_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_READY_TIME_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_READY_TIME_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_READY_TIME_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_READY_TIME_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_READY_TIME_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_READY_TIME_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_READY_TIME_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_FINISH_TIME_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FINISH_TIME_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_FINISH_TIME_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FINISH_TIME_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_FINISH_TIME_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FINISH_TIME_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_FINISH_TIME_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_FINISH_TIME_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TTS_ERROR_ANNOTATION
::StringW Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_ERROR_ANNOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get_TTS_ERROR_ANNOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_ERROR_ANNOTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.String TTS_ERROR_ANNOTATION
void Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_ERROR_ANNOTATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set_TTS_ERROR_ANNOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "TTS_ERROR_ANNOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _initialized
bool Oculus::Voice::Logging::TTSServiceLogging::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_get__initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Voice.Logging", "TTSServiceLogging", "_initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _initialized
void Oculus::Voice::Logging::TTSServiceLogging::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::_set__initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Logging", "TTSServiceLogging", "_initialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableConsoleLogging
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Logging::TTSServiceLogging::dyn_EnableConsoleLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::dyn_EnableConsoleLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableConsoleLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.TTS.TTSService <Service>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::TTSService*& Oculus::Voice::Logging::TTSServiceLogging::dyn_$Service$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::dyn_$Service$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Service>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::TTS::TTSService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger _voiceSDKLoggerImpl
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*& Oculus::Voice::Logging::TTSServiceLogging::dyn__voiceSDKLoggerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::dyn__voiceSDKLoggerImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceSDKLoggerImpl"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,Oculus.Voice.Logging.TTSServiceLogging/TTSServiceRequestLog> _requests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog>*& Oculus::Voice::Logging::TTSServiceLogging::dyn__requests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::dyn__requests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.get_Service
::Meta::WitAi::TTS::TTSService* Oculus::Voice::Logging::TTSServiceLogging::get_Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::get_Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::TTS::TTSService*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.set_Service
void Oculus::Voice::Logging::TTSServiceLogging::set_Service(::Meta::WitAi::TTS::TTSService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::set_Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.Awake
void Oculus::Voice::Logging::TTSServiceLogging::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.InitLogger
void Oculus::Voice::Logging::TTSServiceLogging::InitLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::InitLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnEnable
void Oculus::Voice::Logging::TTSServiceLogging::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnDisable
void Oculus::Voice::Logging::TTSServiceLogging::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestBegin
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestBegin(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestCancel
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestCancel(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestError
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestError(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData, error);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestFirstResponse
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestFirstResponse(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestFirstResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestFirstResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestReady
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestReady(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnRequestComplete
void Oculus::Voice::Logging::TTSServiceLogging::OnRequestComplete(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnRequestComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.LogStart
void Oculus::Voice::Logging::TTSServiceLogging::LogStart(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::LogStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.GetRequestData
::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog Oculus::Voice::Logging::TTSServiceLogging::GetRequestData(::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::GetRequestData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog, false>(this, ___internal__method, clipData);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.LogTimestamp
void Oculus::Voice::Logging::TTSServiceLogging::LogTimestamp(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::LogTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData), ::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData, key);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.LogTimestamp
void Oculus::Voice::Logging::TTSServiceLogging::LogTimestamp(::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog requestData, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::LogTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestData), ::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestData, key);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.LogAnnotate
void Oculus::Voice::Logging::TTSServiceLogging::LogAnnotate(::Oculus::Voice::Logging::TTSServiceLogging::TTSServiceRequestLog requestData, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::LogAnnotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogAnnotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestData), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestData, key, value);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.LogComplete
void Oculus::Voice::Logging::TTSServiceLogging::LogComplete(::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::LogComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipData), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipData, error);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.Init
void Oculus::Voice::Logging::TTSServiceLogging::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Logging", "TTSServiceLogging", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.Logging.TTSServiceLogging.OnServiceStart
void Oculus::Voice::Logging::TTSServiceLogging::OnServiceStart(::Meta::WitAi::TTS::TTSService* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Logging::TTSServiceLogging::OnServiceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Logging", "TTSServiceLogging", "OnServiceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(service)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, service);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.get_PlatformSupportsWit
bool Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.SetRuntimeConfiguration
void Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.IVCBindingEvents
#include "Oculus/Voice/Bindings/Android/IVCBindingEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Bindings.Android.IVCBindingEvents.OnServiceNotAvailable
void Oculus::Voice::Bindings::Android::IVCBindingEvents::OnServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::IVCBindingEvents::OnServiceNotAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::IVCBindingEvents*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlatformSupportsWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::Meta::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.DeactivateAndAbortRequest
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::DeactivateAndAbortRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateAndAbortRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetListener
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Connect
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKConfigBinding.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitRuntimeConfiguration configuration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding.ToJavaObject
::UnityEngine::AndroidJavaObject* Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJavaObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKImpl
#include "Oculus/Voice/Bindings/Android/VoiceSDKImpl.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.Voice.NLPRequestInputType
#include "Meta/Voice/NLPRequestInputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isServiceAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__isServiceAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__isServiceAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServiceAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnServiceNotAvailableEvent
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_OnServiceNotAvailableEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_OnServiceNotAvailableEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnServiceNotAvailableEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IVoiceService _baseVoiceService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IVoiceService*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__baseVoiceService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__baseVoiceService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseVoiceService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding eventBinding
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBinding"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Meta.WitAi.Requests.VoiceServiceRequest> <Requests>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$Requests$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$Requests$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Requests>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.ITranscriptionProvider <TranscriptionProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::ITranscriptionProvider*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TranscriptionProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::ITranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_UsePlatformIntegrations
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_UsePlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_UsePlatformIntegrations
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_UsePlatformIntegrations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_Requests
::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Requests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Requests");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_TranscriptionProvider
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.CanActivateAudio
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::CanActivateAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::CanActivateAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.CanSend
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::CanSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::CanSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnStoppedListening
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.DeactivateAndAbortRequest
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.DeactivateAndAbortRequest
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::DeactivateAndAbortRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnServiceNotAvailable
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnServiceNotAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_VoiceEvents
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents(::Meta::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_TelemetryEvents
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TelemetryEvents(::Meta::WitAi::Events::TelemetryEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.GetRequest
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Bindings::Android::VoiceSDKImpl::GetRequest(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::Meta::Voice::NLPRequestInputType inputType, bool audioImmediate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::GetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions), ::il2cpp_utils::ExtractType(requestEvents), ::il2cpp_utils::ExtractType(inputType), ::il2cpp_utils::ExtractType(audioImmediate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents, inputType, audioImmediate);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnRequestCanceled
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestCanceled(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnRequestFailed
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestFailed(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnRequestSuccess
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestSuccess(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.OnRequestComplete
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::OnRequestComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Connect
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Connect(::StringW version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Disconnect
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest
#include "Oculus/Voice/Bindings/Android/VoiceSDKImplRequest.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Bindings.Android.VoiceSDKBinding <Service>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Bindings::Android::VoiceSDKBinding*& Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::dyn_$Service$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::dyn_$Service$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Service>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Bindings::Android::VoiceSDKBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Immediately>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::dyn_$Immediately$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::dyn_$Immediately$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Immediately>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.get_Service
::Oculus::Voice::Bindings::Android::VoiceSDKBinding* Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::get_Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::get_Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Voice::Bindings::Android::VoiceSDKBinding*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.set_Service
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::set_Service(::Oculus::Voice::Bindings::Android::VoiceSDKBinding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::set_Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.get_Immediately
bool Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::get_Immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::get_Immediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Immediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.set_Immediately
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::set_Immediately(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::set_Immediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Immediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleStartListening
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleStopListening
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleStopListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleStopListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStopListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandlePartialResponse
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandlePartialResponse(::StringW responseJson) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandlePartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandlePartialTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandlePartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandlePartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleFullTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleTransmissionBegan
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleTransmissionBegan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleTransmissionBegan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTransmissionBegan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleCanceled
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleError
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleError(::StringW error, ::StringW message, ::StringW errorBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(errorBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message, errorBody);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleResponse
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleResponse(::StringW responseJson) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleAudioActivation
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleAudioActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleAudioActivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 45)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleAudioDeactivation
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleAudioDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleAudioDeactivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 49)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleSend
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleSend");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 20)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImplRequest.HandleCancel
void Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImplRequest::HandleCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 29)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding_StoppedListeningReason.hpp"
// Including type: Meta.WitAi.IVoiceService
#include "Meta/WitAi/IVoiceService.hpp"
// Including type: Oculus.Voice.Bindings.Android.IVCBindingEvents
#include "Oculus/Voice/Bindings/Android/IVCBindingEvents.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IVoiceService _voiceService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IVoiceService*& Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn__voiceService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn__voiceService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Voice.Bindings.Android.IVCBindingEvents _bindingEvents
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Bindings::Android::IVCBindingEvents*& Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn__bindingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn__bindingEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindingEvents"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Bindings::Android::IVCBindingEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_TelemetryEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TelemetryEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.GetRequest
::Meta::WitAi::Requests::VoiceServiceRequest* Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::GetRequest(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::GetRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStartListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStartListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening(int reason, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening(int reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCreated
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCreated
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription(::StringW transcription, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onFullTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription(::StringW transcription, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onFullTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialResponse(::StringW responseJson, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialResponse(::StringW responseJson) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onAborted
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAborted(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onAborted
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onError
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError(::StringW error, ::StringW message, ::StringW errorBody, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(errorBody), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message, errorBody, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onError
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError(::StringW error, ::StringW message, ::StringW errorBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(errorBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message, errorBody);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse(::StringW responseJson, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse(::StringW responseJson) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseJson)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseJson);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicLevelChanged
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged(float level, ::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicLevelChanged
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicDataSent
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicDataSent
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMinimumWakeThresholdHit
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMinimumWakeThresholdHit
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCompleted
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCompleted(::StringW requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCompleted
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onServiceNotAvailable
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onServiceNotAvailable(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onAudioDurationTrackerFinished
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAudioDurationTrackerFinished(int64_t timestamp, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onAudioDurationTrackerFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onAudioDurationTrackerFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, duration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.NativeTimestampToDateTime
::System::DateTime Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::NativeTimestampToDateTime(int64_t javaTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::NativeTimestampToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NativeTimestampToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaTimestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, javaTimestamp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding_StoppedListeningReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason NoReasonProvided
::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_NoReasonProvided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_NoReasonProvided");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason>("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "NoReasonProvided"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason NoReasonProvided
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_NoReasonProvided(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_NoReasonProvided");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "NoReasonProvided", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Inactivity
::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Inactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Inactivity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason>("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Inactivity"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Inactivity
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Inactivity(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Inactivity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Inactivity", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Timeout
::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason>("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Timeout
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Timeout(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Deactivation
::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Deactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_get_Deactivation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason>("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Deactivation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding/StoppedListeningReason Deactivation
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Deactivation(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::_set_Deactivation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding/StoppedListeningReason", "Deactivation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::StoppedListeningReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute______________.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableAttribute
#include "System/Runtime/CompilerServices/NullableAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] NullableFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Runtime::CompilerServices::NullableAttribute__::dyn_NullableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute__::dyn_NullableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NullableFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableContextAttribute
#include "System/Runtime/CompilerServices/NullableContextAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte Flag
[[deprecated("Use field access instead!")]] uint8_t& System::Runtime::CompilerServices::NullableContextAttribute_::dyn_Flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableContextAttribute_::dyn_Flag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.BooleanFormatter
#include "VYaml/Serialization/BooleanFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.BooleanFormatter Instance
::VYaml::Serialization::BooleanFormatter* VYaml::Serialization::BooleanFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BooleanFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::BooleanFormatter*>("VYaml.Serialization", "BooleanFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.BooleanFormatter Instance
void VYaml::Serialization::BooleanFormatter::_set_Instance(::VYaml::Serialization::BooleanFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BooleanFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "BooleanFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.BooleanFormatter.Serialize
void VYaml::Serialization::BooleanFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, bool value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BooleanFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::BooleanFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.BooleanFormatter.Deserialize
bool VYaml::Serialization::BooleanFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BooleanFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::BooleanFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.BooleanFormatter..cctor
void VYaml::Serialization::BooleanFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BooleanFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "BooleanFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableBooleanFormatter
#include "VYaml/Serialization/NullableBooleanFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableBooleanFormatter Instance
::VYaml::Serialization::NullableBooleanFormatter* VYaml::Serialization::NullableBooleanFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableBooleanFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableBooleanFormatter*>("VYaml.Serialization", "NullableBooleanFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableBooleanFormatter Instance
void VYaml::Serialization::NullableBooleanFormatter::_set_Instance(::VYaml::Serialization::NullableBooleanFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableBooleanFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableBooleanFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableBooleanFormatter.Serialize
void VYaml::Serialization::NullableBooleanFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<bool> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableBooleanFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableBooleanFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableBooleanFormatter.Deserialize
::System::Nullable_1<bool> VYaml::Serialization::NullableBooleanFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableBooleanFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableBooleanFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableBooleanFormatter..cctor
void VYaml::Serialization::NullableBooleanFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableBooleanFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableBooleanFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.ByteArrayFormatter
#include "VYaml/Serialization/ByteArrayFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.IYamlFormatter`1<System.Byte[]> Instance
::VYaml::Serialization::IYamlFormatter_1<::ArrayW<uint8_t>>* VYaml::Serialization::ByteArrayFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteArrayFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::IYamlFormatter_1<::ArrayW<uint8_t>>*>("VYaml.Serialization", "ByteArrayFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.IYamlFormatter`1<System.Byte[]> Instance
void VYaml::Serialization::ByteArrayFormatter::_set_Instance(::VYaml::Serialization::IYamlFormatter_1<::ArrayW<uint8_t>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteArrayFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "ByteArrayFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.ByteArrayFormatter.Serialize
void VYaml::Serialization::ByteArrayFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::ArrayW<uint8_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteArrayFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::ByteArrayFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.ByteArrayFormatter.Deserialize
::ArrayW<uint8_t> VYaml::Serialization::ByteArrayFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteArrayFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::ByteArrayFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.ByteArrayFormatter..cctor
void VYaml::Serialization::ByteArrayFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteArrayFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "ByteArrayFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.ByteFormatter
#include "VYaml/Serialization/ByteFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.ByteFormatter Instance
::VYaml::Serialization::ByteFormatter* VYaml::Serialization::ByteFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::ByteFormatter*>("VYaml.Serialization", "ByteFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.ByteFormatter Instance
void VYaml::Serialization::ByteFormatter::_set_Instance(::VYaml::Serialization::ByteFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "ByteFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.ByteFormatter.Serialize
void VYaml::Serialization::ByteFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, uint8_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::ByteFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.ByteFormatter.Deserialize
uint8_t VYaml::Serialization::ByteFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::ByteFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.ByteFormatter..cctor
void VYaml::Serialization::ByteFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::ByteFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "ByteFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableByteFormatter
#include "VYaml/Serialization/NullableByteFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableByteFormatter Instance
::VYaml::Serialization::NullableByteFormatter* VYaml::Serialization::NullableByteFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableByteFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableByteFormatter*>("VYaml.Serialization", "NullableByteFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableByteFormatter Instance
void VYaml::Serialization::NullableByteFormatter::_set_Instance(::VYaml::Serialization::NullableByteFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableByteFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableByteFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableByteFormatter.Serialize
void VYaml::Serialization::NullableByteFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<uint8_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableByteFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableByteFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableByteFormatter.Deserialize
::System::Nullable_1<uint8_t> VYaml::Serialization::NullableByteFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableByteFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableByteFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint8_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableByteFormatter..cctor
void VYaml::Serialization::NullableByteFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableByteFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableByteFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.CharFormatter
#include "VYaml/Serialization/CharFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.CharFormatter Instance
::VYaml::Serialization::CharFormatter* VYaml::Serialization::CharFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CharFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::CharFormatter*>("VYaml.Serialization", "CharFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.CharFormatter Instance
void VYaml::Serialization::CharFormatter::_set_Instance(::VYaml::Serialization::CharFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CharFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "CharFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.CharFormatter.Serialize
void VYaml::Serialization::CharFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::Il2CppChar value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CharFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::CharFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.CharFormatter.Deserialize
::Il2CppChar VYaml::Serialization::CharFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CharFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::CharFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.CharFormatter..cctor
void VYaml::Serialization::CharFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CharFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "CharFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableCharFormatter
#include "VYaml/Serialization/NullableCharFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableCharFormatter Instance
::VYaml::Serialization::NullableCharFormatter* VYaml::Serialization::NullableCharFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableCharFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableCharFormatter*>("VYaml.Serialization", "NullableCharFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableCharFormatter Instance
void VYaml::Serialization::NullableCharFormatter::_set_Instance(::VYaml::Serialization::NullableCharFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableCharFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableCharFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableCharFormatter.Serialize
void VYaml::Serialization::NullableCharFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<::Il2CppChar> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableCharFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableCharFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableCharFormatter.Deserialize
::System::Nullable_1<::Il2CppChar> VYaml::Serialization::NullableCharFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableCharFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableCharFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Il2CppChar>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableCharFormatter..cctor
void VYaml::Serialization::NullableCharFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableCharFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableCharFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.DateTimeFormatter
#include "VYaml/Serialization/DateTimeFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.DateTimeFormatter Instance
::VYaml::Serialization::DateTimeFormatter* VYaml::Serialization::DateTimeFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::DateTimeFormatter*>("VYaml.Serialization", "DateTimeFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.DateTimeFormatter Instance
void VYaml::Serialization::DateTimeFormatter::_set_Instance(::VYaml::Serialization::DateTimeFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "DateTimeFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.DateTimeFormatter.Serialize
void VYaml::Serialization::DateTimeFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::DateTime value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DateTimeFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.DateTimeFormatter.Deserialize
::System::DateTime VYaml::Serialization::DateTimeFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DateTimeFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.DateTimeFormatter..cctor
void VYaml::Serialization::DateTimeFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "DateTimeFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableDateTimeFormatter
#include "VYaml/Serialization/NullableDateTimeFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableDateTimeFormatter Instance
::VYaml::Serialization::NullableDateTimeFormatter* VYaml::Serialization::NullableDateTimeFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableDateTimeFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableDateTimeFormatter*>("VYaml.Serialization", "NullableDateTimeFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableDateTimeFormatter Instance
void VYaml::Serialization::NullableDateTimeFormatter::_set_Instance(::VYaml::Serialization::NullableDateTimeFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableDateTimeFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableDateTimeFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableDateTimeFormatter.Serialize
void VYaml::Serialization::NullableDateTimeFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<::System::DateTime> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableDateTimeFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableDateTimeFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableDateTimeFormatter.Deserialize
::System::Nullable_1<::System::DateTime> VYaml::Serialization::NullableDateTimeFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableDateTimeFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableDateTimeFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableDateTimeFormatter..cctor
void VYaml::Serialization::NullableDateTimeFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableDateTimeFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableDateTimeFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.DateTimeOffsetFormatter
#include "VYaml/Serialization/DateTimeOffsetFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.DateTimeOffsetFormatter Instance
::VYaml::Serialization::DateTimeOffsetFormatter* VYaml::Serialization::DateTimeOffsetFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeOffsetFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::DateTimeOffsetFormatter*>("VYaml.Serialization", "DateTimeOffsetFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.DateTimeOffsetFormatter Instance
void VYaml::Serialization::DateTimeOffsetFormatter::_set_Instance(::VYaml::Serialization::DateTimeOffsetFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeOffsetFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "DateTimeOffsetFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.DateTimeOffsetFormatter.Serialize
void VYaml::Serialization::DateTimeOffsetFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::DateTimeOffset value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeOffsetFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DateTimeOffsetFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.DateTimeOffsetFormatter.Deserialize
::System::DateTimeOffset VYaml::Serialization::DateTimeOffsetFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeOffsetFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DateTimeOffsetFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.DateTimeOffsetFormatter..cctor
void VYaml::Serialization::DateTimeOffsetFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DateTimeOffsetFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "DateTimeOffsetFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
