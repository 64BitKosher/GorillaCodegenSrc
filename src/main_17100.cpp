// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptingRuntime
#include "UnityEngine/ScriptingRuntime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptingRuntime.GetAllUserAssemblies
::ArrayW<::StringW> UnityEngine::ScriptingRuntime::GetAllUserAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptingRuntime::GetAllUserAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptingRuntime", "GetAllUserAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptingUtility
#include "UnityEngine/ScriptingUtility.hpp"
// Including type: UnityEngine.ScriptingUtility/TestClass
#include "UnityEngine/ScriptingUtility_TestClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptingUtility.IsManagedCodeWorking
bool UnityEngine::ScriptingUtility::IsManagedCodeWorking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptingUtility::IsManagedCodeWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptingUtility", "IsManagedCodeWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SelectionBaseAttribute
#include "UnityEngine/SelectionBaseAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.StackTraceUtility
#include "UnityEngine/StackTraceUtility.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String projectFolder
::StringW UnityEngine::StackTraceUtility::_get_projectFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_get_projectFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "StackTraceUtility", "projectFolder"));
}
// Autogenerated static field setter
// Set static field: static private System.String projectFolder
void UnityEngine::StackTraceUtility::_set_projectFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_set_projectFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StackTraceUtility", "projectFolder", value));
}
// Autogenerated method: UnityEngine.StackTraceUtility.SetProjectFolder
void UnityEngine::StackTraceUtility::SetProjectFolder(::StringW folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::SetProjectFolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "SetProjectFolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStringFromExceptionInternal
void UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal(::Il2CppObject* exceptiono, ByRef<::StringW> message, ByRef<::StringW> stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStringFromExceptionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptiono), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exceptiono, byref(message), byref(stackTrace));
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractFormattedStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractFormattedStackTrace(::System::Diagnostics::StackTrace* stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractFormattedStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractFormattedStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackTrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stackTrace);
}
// Autogenerated method: UnityEngine.StackTraceUtility..cctor
void UnityEngine::StackTraceUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityException
#include "UnityEngine/UnityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.MissingReferenceException
#include "UnityEngine/MissingReferenceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.TextAsset/EncodingUtility
#include "UnityEngine/TextAsset_EncodingUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextAsset.get_bytes
::ArrayW<uint8_t> UnityEngine::TextAsset::get_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.get_text
::StringW UnityEngine::TextAsset::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.DecodeString
::StringW UnityEngine::TextAsset::DecodeString(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextAsset", "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.TextAsset.ToString
::StringW UnityEngine::TextAsset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAsset/EncodingUtility
#include "UnityEngine/TextAsset_EncodingUtility.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.KeyValuePair`2<System.Byte[],System.Text.Encoding>[] encodingLookup
::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>> UnityEngine::TextAsset::EncodingUtility::_get_encodingLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_get_encodingLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>>>("UnityEngine", "TextAsset/EncodingUtility", "encodingLookup")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.KeyValuePair`2<System.Byte[],System.Text.Encoding>[] encodingLookup
void UnityEngine::TextAsset::EncodingUtility::_set_encodingLookup(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_set_encodingLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAsset/EncodingUtility", "encodingLookup", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Text.Encoding targetEncoding
::System::Text::Encoding* UnityEngine::TextAsset::EncodingUtility::_get_targetEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_get_targetEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("UnityEngine", "TextAsset/EncodingUtility", "targetEncoding"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.Encoding targetEncoding
void UnityEngine::TextAsset::EncodingUtility::_set_targetEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_set_targetEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAsset/EncodingUtility", "targetEncoding", value));
}
// Autogenerated method: UnityEngine.TextAsset/EncodingUtility..cctor
void UnityEngine::TextAsset::EncodingUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextAsset/EncodingUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TrackedReference
#include "UnityEngine/TrackedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::TrackedReference::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TrackedReference.Equals
bool UnityEngine::TrackedReference::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.TrackedReference.GetHashCode
int UnityEngine::TrackedReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TrackedReference.op_Equality
bool UnityEngine::operator ==(::UnityEngine::TrackedReference* x, ::UnityEngine::TrackedReference& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TrackedReference", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated method: UnityEngine.TrackedReference.op_Inequality
bool UnityEngine::operator !=(::UnityEngine::TrackedReference* x, ::UnityEngine::TrackedReference& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TrackedReference", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnhandledExceptionHandler
#include "UnityEngine/UnhandledExceptionHandler.hpp"
// Including type: UnityEngine.UnhandledExceptionHandler/<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnhandledExceptionHandler.RegisterUECatcher
void UnityEngine::UnhandledExceptionHandler::RegisterUECatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::RegisterUECatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler", "RegisterUECatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnhandledExceptionHandler/<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UnhandledExceptionHandler/<>c <>9
::UnityEngine::UnhandledExceptionHandler::$$c* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UnhandledExceptionHandler::$$c*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UnhandledExceptionHandler/<>c <>9
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9(::UnityEngine::UnhandledExceptionHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.UnhandledExceptionEventHandler <>9__0_0
::System::UnhandledExceptionEventHandler* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::UnhandledExceptionEventHandler*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.UnhandledExceptionEventHandler <>9__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0(::System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0", value)));
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/<>c..cctor
void UnityEngine::UnhandledExceptionHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/<>c.<RegisterUECatcher>b__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::$RegisterUECatcher$b__0_0(::Il2CppObject* sender, ::System::UnhandledExceptionEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::<RegisterUECatcher>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterUECatcher>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags None
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags None
void UnityEngine::HideFlags::_set_None(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInHierarchy
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInHierarchy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInHierarchy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInHierarchy
void UnityEngine::HideFlags::_set_HideInHierarchy(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInHierarchy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInHierarchy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInInspector
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInInspector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInInspector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInInspector
void UnityEngine::HideFlags::_set_HideInInspector(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInInspector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInInspector", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInEditor
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInEditor
void UnityEngine::HideFlags::_set_DontSaveInEditor(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags NotEditable
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_NotEditable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_NotEditable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "NotEditable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags NotEditable
void UnityEngine::HideFlags::_set_NotEditable(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_NotEditable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "NotEditable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInBuild
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInBuild"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInBuild
void UnityEngine::HideFlags::_set_DontSaveInBuild(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInBuild", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontUnloadUnusedAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontUnloadUnusedAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontUnloadUnusedAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
void UnityEngine::HideFlags::_set_DontUnloadUnusedAsset(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontUnloadUnusedAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontUnloadUnusedAsset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSave
void UnityEngine::HideFlags::_set_DontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSave", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideAndDontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideAndDontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideAndDontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideAndDontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideAndDontSave
void UnityEngine::HideFlags::_set_HideAndDontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideAndDontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideAndDontSave", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::HideFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.FindObjectsSortMode
#include "UnityEngine/FindObjectsSortMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FindObjectsSortMode None
::UnityEngine::FindObjectsSortMode UnityEngine::FindObjectsSortMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsSortMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FindObjectsSortMode>("UnityEngine", "FindObjectsSortMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FindObjectsSortMode None
void UnityEngine::FindObjectsSortMode::_set_None(::UnityEngine::FindObjectsSortMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsSortMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FindObjectsSortMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FindObjectsSortMode InstanceID
::UnityEngine::FindObjectsSortMode UnityEngine::FindObjectsSortMode::_get_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsSortMode::_get_InstanceID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FindObjectsSortMode>("UnityEngine", "FindObjectsSortMode", "InstanceID"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FindObjectsSortMode InstanceID
void UnityEngine::FindObjectsSortMode::_set_InstanceID(::UnityEngine::FindObjectsSortMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsSortMode::_set_InstanceID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FindObjectsSortMode", "InstanceID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::FindObjectsSortMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsSortMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.FindObjectsInactive
#include "UnityEngine/FindObjectsInactive.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FindObjectsInactive Exclude
::UnityEngine::FindObjectsInactive UnityEngine::FindObjectsInactive::_get_Exclude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsInactive::_get_Exclude");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FindObjectsInactive>("UnityEngine", "FindObjectsInactive", "Exclude"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FindObjectsInactive Exclude
void UnityEngine::FindObjectsInactive::_set_Exclude(::UnityEngine::FindObjectsInactive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsInactive::_set_Exclude");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FindObjectsInactive", "Exclude", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FindObjectsInactive Include
::UnityEngine::FindObjectsInactive UnityEngine::FindObjectsInactive::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsInactive::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FindObjectsInactive>("UnityEngine", "FindObjectsInactive", "Include"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FindObjectsInactive Include
void UnityEngine::FindObjectsInactive::_set_Include(::UnityEngine::FindObjectsInactive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsInactive::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FindObjectsInactive", "Include", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::FindObjectsInactive::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FindObjectsInactive::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
void UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.String objectIsNullMessage
::StringW UnityEngine::Object::_get_objectIsNullMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_objectIsNullMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "objectIsNullMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String objectIsNullMessage
void UnityEngine::Object::_set_objectIsNullMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_objectIsNullMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "objectIsNullMessage", value));
}
// Autogenerated static field getter
// Get static field: static private System.String cloneDestroyedMessage
::StringW UnityEngine::Object::_get_cloneDestroyedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_cloneDestroyedMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "cloneDestroyedMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String cloneDestroyedMessage
void UnityEngine::Object::_set_cloneDestroyedMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_cloneDestroyedMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "cloneDestroyedMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_CachedPtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Object::dyn_m_CachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::dyn_m_CachedPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Object.GetInstanceID
int UnityEngine::Object::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.CompareBaseObjects
bool UnityEngine::Object::CompareBaseObjects(::UnityEngine::Object* lhs, ::UnityEngine::Object* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CompareBaseObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CompareBaseObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Object.EnsureRunningOnMainThread
void UnityEngine::Object::EnsureRunningOnMainThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::EnsureRunningOnMainThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureRunningOnMainThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.IsNativeObjectAlive
bool UnityEngine::Object::IsNativeObjectAlive(::UnityEngine::Object* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::IsNativeObjectAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "IsNativeObjectAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: UnityEngine.Object.GetCachedPtr
::System::IntPtr UnityEngine::Object::GetCachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetCachedPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.get_name
::StringW UnityEngine::Object::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_name
void UnityEngine::Object::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation, parent);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent, instantiateInWorldSpace);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj, bool allowDestroyingAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(allowDestroyingAssets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, allowDestroyingAssets);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfType(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.Object.FindObjectsByType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsByType(::System::Type* type, ::UnityEngine::FindObjectsSortMode sortMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(sortMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, sortMode);
}
// Autogenerated method: UnityEngine.Object.FindObjectsByType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsByType(::System::Type* type, ::UnityEngine::FindObjectsInactive findObjectsInactive, ::UnityEngine::FindObjectsSortMode sortMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(findObjectsInactive), ::il2cpp_utils::ExtractType(sortMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, findObjectsInactive, sortMode);
}
// Autogenerated method: UnityEngine.Object.DontDestroyOnLoad
void UnityEngine::Object::DontDestroyOnLoad(::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DontDestroyOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DontDestroyOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: UnityEngine.Object.get_hideFlags
::UnityEngine::HideFlags UnityEngine::Object::get_hideFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HideFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_hideFlags
void UnityEngine::Object::set_hideFlags(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object.DestroyObject
void UnityEngine::Object::DestroyObject(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: UnityEngine.Object.DestroyObject
void UnityEngine::Object::DestroyObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.FindSceneObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindSceneObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindSceneObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindSceneObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfTypeIncludingAssets(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfTypeIncludingAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfTypeIncludingAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfTypeAll
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfTypeAll(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.CheckNullArgument
void UnityEngine::Object::CheckNullArgument(::Il2CppObject* arg, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CheckNullArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CheckNullArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, message);
}
// Autogenerated method: UnityEngine.Object.FindObjectOfType
::UnityEngine::Object* UnityEngine::Object::FindObjectOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindFirstObjectByType
::UnityEngine::Object* UnityEngine::Object::FindFirstObjectByType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindFirstObjectByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindFirstObjectByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindAnyObjectByType
::UnityEngine::Object* UnityEngine::Object::FindAnyObjectByType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindAnyObjectByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindAnyObjectByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectOfType
::UnityEngine::Object* UnityEngine::Object::FindObjectOfType(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.Object.FindFirstObjectByType
::UnityEngine::Object* UnityEngine::Object::FindFirstObjectByType(::System::Type* type, ::UnityEngine::FindObjectsInactive findObjectsInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindFirstObjectByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindFirstObjectByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(findObjectsInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, findObjectsInactive);
}
// Autogenerated method: UnityEngine.Object.FindAnyObjectByType
::UnityEngine::Object* UnityEngine::Object::FindAnyObjectByType(::System::Type* type, ::UnityEngine::FindObjectsInactive findObjectsInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindAnyObjectByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindAnyObjectByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(findObjectsInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, findObjectsInactive);
}
// Autogenerated method: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetOffsetOfInstanceIDInCPlusPlusObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.CurrentThreadIsMainThread
bool UnityEngine::Object::CurrentThreadIsMainThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CurrentThreadIsMainThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CurrentThreadIsMainThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingle
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingle(::UnityEngine::Object* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingleWithParent
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingleWithParent(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingleWithParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingleWithParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle(::UnityEngine::Object* data, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, pos, rot);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingleWithParent
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingleWithParent(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingleWithParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingleWithParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, pos, rot);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.GetName
::StringW UnityEngine::Object::GetName(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.IsPersistent
bool UnityEngine::Object::IsPersistent(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::IsPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "IsPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.SetName
void UnityEngine::Object::SetName(::UnityEngine::Object* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Object.DoesObjectWithInstanceIDExist
bool UnityEngine::Object::DoesObjectWithInstanceIDExist(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DoesObjectWithInstanceIDExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DoesObjectWithInstanceIDExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Object.FindObjectFromInstanceID
::UnityEngine::Object* UnityEngine::Object::FindObjectFromInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectFromInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectFromInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Object.ForceLoadFromInstanceID
::UnityEngine::Object* UnityEngine::Object::ForceLoadFromInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ForceLoadFromInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "ForceLoadFromInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Object.MarkDirty
void UnityEngine::Object::MarkDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::MarkDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object..cctor
void UnityEngine::Object::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle_Injected
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle_Injected(::UnityEngine::Object* data, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos), byref(rot));
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingleWithParent_Injected(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingleWithParent_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingleWithParent_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, byref(pos), byref(rot));
}
// Autogenerated method: UnityEngine.Object.GetHashCode
int UnityEngine::Object::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Equals
bool UnityEngine::Object::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.op_Equality
bool UnityEngine::operator ==(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated method: UnityEngine.Object.op_Inequality
bool UnityEngine::operator !=(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/WorkRequest> m_AsyncWorkQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncWorkQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/WorkRequest> m_CurrentFrameWork
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentFrameWork"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_MainThreadID
[[deprecated("Use field access instead!")]] int& UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MainThreadID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_TrackedCount
[[deprecated("Use field access instead!")]] int& UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Exec
void UnityEngine::UnitySynchronizationContext::Exec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Exec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.HasPendingTasks
bool UnityEngine::UnitySynchronizationContext::HasPendingTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::HasPendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.InitializeSynchronizationContext
void UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "InitializeSynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecuteTasks
void UnityEngine::UnitySynchronizationContext::ExecuteTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecuteTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecuteTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecutePendingTasks
bool UnityEngine::UnitySynchronizationContext::ExecutePendingTasks(int64_t millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecutePendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecutePendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Send
void UnityEngine::UnitySynchronizationContext::Send(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationStarted
void UnityEngine::UnitySynchronizationContext::OperationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationStarted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationCompleted
void UnityEngine::UnitySynchronizationContext::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Post
void UnityEngine::UnitySynchronizationContext::Post(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* UnityEngine::UnitySynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext/WorkRequest
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SendOrPostCallback m_DelagateCallback
[[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateCallback"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object m_DelagateState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEvent m_WaitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext/WorkRequest..ctor
// ABORTED elsewhere.  UnityEngine::UnitySynchronizationContext::WorkRequest::WorkRequest(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state, ::System::Threading::ManualResetEvent* waitHandle)
// Autogenerated method: UnityEngine.UnitySynchronizationContext/WorkRequest.Invoke
void UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForEndOfFrame
#include "UnityEngine/WaitForEndOfFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_Seconds
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSeconds::dyn_m_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSeconds::dyn_m_Seconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Seconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <waitTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_WaitUntilTime
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitUntilTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_waitTime
float UnityEngine::WaitForSecondsRealtime::get_waitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.set_waitTime
void UnityEngine::WaitForSecondsRealtime::set_waitTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::set_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_keepWaiting
bool UnityEngine::WaitForSecondsRealtime::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.Reset
void UnityEngine::WaitForSecondsRealtime::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Boolean> m_Predicate
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& UnityEngine::WaitUntil::dyn_m_Predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitUntil::dyn_m_Predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Predicate"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitUntil.get_keepWaiting
bool UnityEngine::WaitUntil::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitUntil::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitWhile
#include "UnityEngine/WaitWhile.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Boolean> m_Predicate
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& UnityEngine::WaitWhile::dyn_m_Predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitWhile::dyn_m_Predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Predicate"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitWhile.get_keepWaiting
bool UnityEngine::WaitWhile::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitWhile::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SerializeField
#include "UnityEngine/SerializeField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SerializeReference
#include "UnityEngine/SerializeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PreferBinarySerialization
#include "UnityEngine/PreferBinarySerialization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISerializationCallbackReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISerializationCallbackReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::ComputeBuffer::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ComputeBuffer.Dispose
void UnityEngine::ComputeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ComputeBuffer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ComputeBuffer.Dispose
void UnityEngine::ComputeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.ComputeBuffer.InitBuffer
::System::IntPtr UnityEngine::ComputeBuffer::InitBuffer(int count, int stride, ::UnityEngine::ComputeBufferType type, ::UnityEngine::ComputeBufferMode usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ComputeBuffer", "InitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(stride), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count, stride, type, usage);
}
// Autogenerated method: UnityEngine.ComputeBuffer.DestroyBuffer
void UnityEngine::ComputeBuffer::DestroyBuffer(::UnityEngine::ComputeBuffer* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::DestroyBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ComputeBuffer", "DestroyBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf);
}
// Autogenerated method: UnityEngine.ComputeBuffer.Release
void UnityEngine::ComputeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ComputeBuffer.get_count
int UnityEngine::ComputeBuffer::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::get_count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ComputeBuffer.get_stride
int UnityEngine::ComputeBuffer::get_stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::get_stride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ComputeBuffer.SetData
void UnityEngine::ComputeBuffer::SetData(::System::Array* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.ComputeBuffer.InternalSetNativeData
void UnityEngine::ComputeBuffer::InternalSetNativeData(::System::IntPtr data, int nativeBufferStartIndex, int computeBufferStartIndex, int count, int elemSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::InternalSetNativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetNativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(nativeBufferStartIndex), ::il2cpp_utils::ExtractType(computeBufferStartIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, nativeBufferStartIndex, computeBufferStartIndex, count, elemSize);
}
// Autogenerated method: UnityEngine.ComputeBuffer.InternalSetData
void UnityEngine::ComputeBuffer::InternalSetData(::System::Array* data, int managedBufferStartIndex, int computeBufferStartIndex, int count, int elemSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::InternalSetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(managedBufferStartIndex), ::il2cpp_utils::ExtractType(computeBufferStartIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, managedBufferStartIndex, computeBufferStartIndex, count, elemSize);
}
// Autogenerated method: UnityEngine.ComputeBuffer.GetData
void UnityEngine::ComputeBuffer::GetData(::System::Array* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.ComputeBuffer.InternalGetData
void UnityEngine::ComputeBuffer::InternalGetData(::System::Array* data, int managedBufferStartIndex, int computeBufferStartIndex, int count, int elemSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::InternalGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(managedBufferStartIndex), ::il2cpp_utils::ExtractType(computeBufferStartIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, managedBufferStartIndex, computeBufferStartIndex, count, elemSize);
}
// Autogenerated method: UnityEngine.ComputeBuffer.Finalize
void UnityEngine::ComputeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.ComputeShader
#include "UnityEngine/ComputeShader.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ComputeShader.FindKernel
int UnityEngine::ComputeShader::FindKernel(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::FindKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.ComputeShader.SetVector
void UnityEngine::ComputeShader::SetVector(int nameID, ::UnityEngine::Vector4 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameID, val);
}
// Autogenerated method: UnityEngine.ComputeShader.SetIntArray
void UnityEngine::ComputeShader::SetIntArray(int nameID, ::ArrayW<int> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::SetIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.ComputeShader.Internal_SetBuffer
void UnityEngine::ComputeShader::Internal_SetBuffer(int kernelIndex, int nameID, ::UnityEngine::ComputeBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::Internal_SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kernelIndex), ::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kernelIndex, nameID, buffer);
}
// Autogenerated method: UnityEngine.ComputeShader.SetBuffer
void UnityEngine::ComputeShader::SetBuffer(int kernelIndex, int nameID, ::UnityEngine::ComputeBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kernelIndex), ::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kernelIndex, nameID, buffer);
}
// Autogenerated method: UnityEngine.ComputeShader.Dispatch
void UnityEngine::ComputeShader::Dispatch(int kernelIndex, int threadGroupsX, int threadGroupsY, int threadGroupsZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::Dispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kernelIndex), ::il2cpp_utils::ExtractType(threadGroupsX), ::il2cpp_utils::ExtractType(threadGroupsY), ::il2cpp_utils::ExtractType(threadGroupsZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kernelIndex, threadGroupsX, threadGroupsY, threadGroupsZ);
}
// Autogenerated method: UnityEngine.ComputeShader.SetInts
void UnityEngine::ComputeShader::SetInts(int nameID, ::ArrayW<int> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::SetInts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.ComputeShader.SetVector_Injected
void UnityEngine::ComputeShader::SetVector_Injected(int nameID, ByRef<::UnityEngine::Vector4> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::SetVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameID, byref(val));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.MaterialPropertyType
#include "UnityEngine/MaterialPropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType Float
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType Float
void UnityEngine::MaterialPropertyType::_set_Float(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType Int
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType Int
void UnityEngine::MaterialPropertyType::_set_Int(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType Vector
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_Vector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_Vector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "Vector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType Vector
void UnityEngine::MaterialPropertyType::_set_Vector(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_Vector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "Vector", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType Matrix
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_Matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_Matrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "Matrix"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType Matrix
void UnityEngine::MaterialPropertyType::_set_Matrix(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_Matrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "Matrix", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType Texture
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "Texture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType Texture
void UnityEngine::MaterialPropertyType::_set_Texture(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "Texture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType ConstantBuffer
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_ConstantBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_ConstantBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "ConstantBuffer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType ConstantBuffer
void UnityEngine::MaterialPropertyType::_set_ConstantBuffer(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_ConstantBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "ConstantBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialPropertyType ComputeBuffer
::UnityEngine::MaterialPropertyType UnityEngine::MaterialPropertyType::_get_ComputeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_get_ComputeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyType>("UnityEngine", "MaterialPropertyType", "ComputeBuffer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialPropertyType ComputeBuffer
void UnityEngine::MaterialPropertyType::_set_ComputeBuffer(::UnityEngine::MaterialPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::_set_ComputeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialPropertyType", "ComputeBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::MaterialPropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MaterialPropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.DisableBatchingType
#include "UnityEngine/DisableBatchingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType False
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "False"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType False
void UnityEngine::DisableBatchingType::_set_False(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "False", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType True
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "True"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType True
void UnityEngine::DisableBatchingType::_set_True(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "True", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType WhenLODFading
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_WhenLODFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_WhenLODFading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "WhenLODFading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType WhenLODFading
void UnityEngine::DisableBatchingType::_set_WhenLODFading(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_WhenLODFading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "WhenLODFading", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DisableBatchingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SnapAxis
#include "UnityEngine/SnapAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SnapAxis None
::UnityEngine::SnapAxis UnityEngine::SnapAxis::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SnapAxis>("UnityEngine", "SnapAxis", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SnapAxis None
void UnityEngine::SnapAxis::_set_None(::UnityEngine::SnapAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SnapAxis", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SnapAxis X
::UnityEngine::SnapAxis UnityEngine::SnapAxis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SnapAxis>("UnityEngine", "SnapAxis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SnapAxis X
void UnityEngine::SnapAxis::_set_X(::UnityEngine::SnapAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SnapAxis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SnapAxis Y
::UnityEngine::SnapAxis UnityEngine::SnapAxis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SnapAxis>("UnityEngine", "SnapAxis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SnapAxis Y
void UnityEngine::SnapAxis::_set_Y(::UnityEngine::SnapAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SnapAxis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SnapAxis Z
::UnityEngine::SnapAxis UnityEngine::SnapAxis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SnapAxis>("UnityEngine", "SnapAxis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SnapAxis Z
void UnityEngine::SnapAxis::_set_Z(::UnityEngine::SnapAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SnapAxis", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SnapAxis All
::UnityEngine::SnapAxis UnityEngine::SnapAxis::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SnapAxis>("UnityEngine", "SnapAxis", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SnapAxis All
void UnityEngine::SnapAxis::_set_All(::UnityEngine::SnapAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SnapAxis", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::SnapAxis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SnapAxis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.StaticBatchingUtility
#include "UnityEngine/StaticBatchingUtility.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Unity.Profiling.ProfilerMarker s_CombineMarker
::Unity::Profiling::ProfilerMarker UnityEngine::StaticBatchingUtility::_get_s_CombineMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_get_s_CombineMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine", "StaticBatchingUtility", "s_CombineMarker"));
}
// Autogenerated static field setter
// Set static field: static Unity.Profiling.ProfilerMarker s_CombineMarker
void UnityEngine::StaticBatchingUtility::_set_s_CombineMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_set_s_CombineMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StaticBatchingUtility", "s_CombineMarker", value));
}
// Autogenerated method: UnityEngine.StaticBatchingUtility.Combine
void UnityEngine::StaticBatchingUtility::Combine(::UnityEngine::GameObject* staticBatchRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StaticBatchingUtility", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(staticBatchRoot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, staticBatchRoot);
}
// Autogenerated method: UnityEngine.StaticBatchingUtility.CombineRoot
void UnityEngine::StaticBatchingUtility::CombineRoot(::UnityEngine::GameObject* staticBatchRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::CombineRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StaticBatchingUtility", "CombineRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(staticBatchRoot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, staticBatchRoot);
}
// Autogenerated method: UnityEngine.StaticBatchingUtility..cctor
void UnityEngine::StaticBatchingUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StaticBatchingUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.LowerResBlitTexture
#include "UnityEngine/LowerResBlitTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LowerResBlitTexture.LowerResBlitTextureDontStripMe
void UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowerResBlitTextureDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PreloadData
#include "UnityEngine/PreloadData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PreloadData.PreloadDataDontStripMe
void UnityEngine::PreloadData::PreloadDataDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PreloadData::PreloadDataDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreloadDataDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.BatteryStatus
#include "UnityEngine/BatteryStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.BatteryStatus Unknown
::UnityEngine::BatteryStatus UnityEngine::BatteryStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::BatteryStatus>("UnityEngine", "BatteryStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.BatteryStatus Unknown
void UnityEngine::BatteryStatus::_set_Unknown(::UnityEngine::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BatteryStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.BatteryStatus Charging
::UnityEngine::BatteryStatus UnityEngine::BatteryStatus::_get_Charging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_get_Charging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::BatteryStatus>("UnityEngine", "BatteryStatus", "Charging"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.BatteryStatus Charging
void UnityEngine::BatteryStatus::_set_Charging(::UnityEngine::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_set_Charging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BatteryStatus", "Charging", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.BatteryStatus Discharging
::UnityEngine::BatteryStatus UnityEngine::BatteryStatus::_get_Discharging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_get_Discharging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::BatteryStatus>("UnityEngine", "BatteryStatus", "Discharging"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.BatteryStatus Discharging
void UnityEngine::BatteryStatus::_set_Discharging(::UnityEngine::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_set_Discharging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BatteryStatus", "Discharging", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.BatteryStatus NotCharging
::UnityEngine::BatteryStatus UnityEngine::BatteryStatus::_get_NotCharging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_get_NotCharging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::BatteryStatus>("UnityEngine", "BatteryStatus", "NotCharging"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.BatteryStatus NotCharging
void UnityEngine::BatteryStatus::_set_NotCharging(::UnityEngine::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_set_NotCharging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BatteryStatus", "NotCharging", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.BatteryStatus Full
::UnityEngine::BatteryStatus UnityEngine::BatteryStatus::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::BatteryStatus>("UnityEngine", "BatteryStatus", "Full"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.BatteryStatus Full
void UnityEngine::BatteryStatus::_set_Full(::UnityEngine::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BatteryStatus", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::BatteryStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BatteryStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Other
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Other"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Other
void UnityEngine::OperatingSystemFamily::_set_Other(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily MacOSX
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_MacOSX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_MacOSX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "MacOSX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily MacOSX
void UnityEngine::OperatingSystemFamily::_set_MacOSX(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_MacOSX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "MacOSX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Windows
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Windows
void UnityEngine::OperatingSystemFamily::_set_Windows(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Linux
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Linux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Linux"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Linux
void UnityEngine::OperatingSystemFamily::_set_Linux(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Linux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Linux", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::OperatingSystemFamily::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Unknown
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Unknown
void UnityEngine::DeviceType::_set_Unknown(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Handheld
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Handheld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Handheld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Handheld"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Handheld
void UnityEngine::DeviceType::_set_Handheld(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Handheld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Handheld", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Console
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Console() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Console"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Console
void UnityEngine::DeviceType::_set_Console(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Console", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Desktop
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Desktop
void UnityEngine::DeviceType::_set_Desktop(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Desktop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: UnityEngine.SystemInfo
#include "UnityEngine/SystemInfo.hpp"
// Including type: UnityEngine.BatteryStatus
#include "UnityEngine/BatteryStatus.hpp"
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
// Including type: UnityEngine.Rendering.GraphicsDeviceType
#include "UnityEngine/Rendering/GraphicsDeviceType.hpp"
// Including type: UnityEngine.Rendering.FoveatedRenderingCaps
#include "UnityEngine/Rendering/FoveatedRenderingCaps.hpp"
// Including type: UnityEngine.Rendering.CopyTextureSupport
#include "UnityEngine/Rendering/CopyTextureSupport.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Including type: UnityEngine.HDRDisplaySupportFlags
#include "UnityEngine/HDRDisplaySupportFlags.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.FormatUsage
#include "UnityEngine/Experimental/Rendering/FormatUsage.hpp"
// Including type: UnityEngine.Experimental.Rendering.DefaultFormat
#include "UnityEngine/Experimental/Rendering/DefaultFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SystemInfo.get_batteryLevel
float UnityEngine::SystemInfo::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_batteryStatus
::UnityEngine::BatteryStatus UnityEngine::SystemInfo::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::BatteryStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_operatingSystem
::StringW UnityEngine::SystemInfo::get_operatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_operatingSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_operatingSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_operatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::get_operatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_operatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_operatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_processorType
::StringW UnityEngine::SystemInfo::get_processorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_processorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_processorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_processorFrequency
int UnityEngine::SystemInfo::get_processorFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_processorFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_processorFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_processorCount
int UnityEngine::SystemInfo::get_processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_processorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_processorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_systemMemorySize
int UnityEngine::SystemInfo::get_systemMemorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_systemMemorySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_systemMemorySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceUniqueIdentifier
::StringW UnityEngine::SystemInfo::get_deviceUniqueIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceUniqueIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceUniqueIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceName
::StringW UnityEngine::SystemInfo::get_deviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceModel
::StringW UnityEngine::SystemInfo::get_deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsAccelerometer
bool UnityEngine::SystemInfo::get_supportsAccelerometer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsAccelerometer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsAccelerometer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsGyroscope
bool UnityEngine::SystemInfo::get_supportsGyroscope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsGyroscope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsGyroscope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsLocationService
bool UnityEngine::SystemInfo::get_supportsLocationService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsLocationService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsLocationService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsAudio
bool UnityEngine::SystemInfo::get_supportsAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsMemorySize
int UnityEngine::SystemInfo::get_graphicsMemorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsMemorySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsMemorySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceName
::StringW UnityEngine::SystemInfo::get_graphicsDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceVendor
::StringW UnityEngine::SystemInfo::get_graphicsDeviceVendor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceVendor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceVendor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceID
int UnityEngine::SystemInfo::get_graphicsDeviceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceVendorID
int UnityEngine::SystemInfo::get_graphicsDeviceVendorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceVendorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceVendorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::get_graphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsUVStartsAtTop
bool UnityEngine::SystemInfo::get_graphicsUVStartsAtTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsUVStartsAtTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsUVStartsAtTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceVersion
::StringW UnityEngine::SystemInfo::get_graphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsShaderLevel
int UnityEngine::SystemInfo::get_graphicsShaderLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsShaderLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsShaderLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsMultiThreaded
bool UnityEngine::SystemInfo::get_graphicsMultiThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsMultiThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsMultiThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_foveatedRenderingCaps
::UnityEngine::Rendering::FoveatedRenderingCaps UnityEngine::SystemInfo::get_foveatedRenderingCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_foveatedRenderingCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_foveatedRenderingCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::FoveatedRenderingCaps, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_hasHiddenSurfaceRemovalOnGPU
bool UnityEngine::SystemInfo::get_hasHiddenSurfaceRemovalOnGPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_hasHiddenSurfaceRemovalOnGPU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_hasHiddenSurfaceRemovalOnGPU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsShadows
bool UnityEngine::SystemInfo::get_supportsShadows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsShadows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsShadows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_copyTextureSupport
::UnityEngine::Rendering::CopyTextureSupport UnityEngine::SystemInfo::get_copyTextureSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_copyTextureSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_copyTextureSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CopyTextureSupport, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsComputeShaders
bool UnityEngine::SystemInfo::get_supportsComputeShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsComputeShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsComputeShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsRenderTargetArrayIndexFromVertexShader
bool UnityEngine::SystemInfo::get_supportsRenderTargetArrayIndexFromVertexShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsRenderTargetArrayIndexFromVertexShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsRenderTargetArrayIndexFromVertexShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsInstancing
bool UnityEngine::SystemInfo::get_supportsInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportedRenderTargetCount
int UnityEngine::SystemInfo::get_supportedRenderTargetCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportedRenderTargetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportedRenderTargetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsMultisampledTextures
int UnityEngine::SystemInfo::get_supportsMultisampledTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsMultisampledTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsMultisampledTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsMultisampleAutoResolve
bool UnityEngine::SystemInfo::get_supportsMultisampleAutoResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsMultisampleAutoResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsMultisampleAutoResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_usesReversedZBuffer
bool UnityEngine::SystemInfo::get_usesReversedZBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_usesReversedZBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_usesReversedZBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.IsValidEnumValue
bool UnityEngine::SystemInfo::IsValidEnumValue(::System::Enum* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsValidEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsValidEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsRenderTextureFormat
bool UnityEngine::SystemInfo::SupportsRenderTextureFormat(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsRenderTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsRenderTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormat
bool UnityEngine::SystemInfo::SupportsTextureFormat(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.get_maxTextureSize
int UnityEngine::SystemInfo::get_maxTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_maxTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_maxTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_maxTextureArraySlices
int UnityEngine::SystemInfo::get_maxTextureArraySlices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_maxTextureArraySlices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_maxTextureArraySlices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_maxRenderTextureSize
int UnityEngine::SystemInfo::get_maxRenderTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_maxRenderTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_maxRenderTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsGraphicsFence
bool UnityEngine::SystemInfo::get_supportsGraphicsFence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsGraphicsFence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsGraphicsFence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_maxGraphicsBufferSize
int64_t UnityEngine::SystemInfo::get_maxGraphicsBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_maxGraphicsBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_maxGraphicsBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_usesLoadStoreActions
bool UnityEngine::SystemInfo::get_usesLoadStoreActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_usesLoadStoreActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_usesLoadStoreActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_hdrDisplaySupportFlags
::UnityEngine::HDRDisplaySupportFlags UnityEngine::SystemInfo::get_hdrDisplaySupportFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_hdrDisplaySupportFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_hdrDisplaySupportFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HDRDisplaySupportFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsMultiview
bool UnityEngine::SystemInfo::get_supportsMultiview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsMultiview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsMultiview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsStoreAndResolveAction
bool UnityEngine::SystemInfo::get_supportsStoreAndResolveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsStoreAndResolveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsStoreAndResolveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsMultisampleResolveDepth
bool UnityEngine::SystemInfo::get_supportsMultisampleResolveDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsMultisampleResolveDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsMultisampleResolveDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsMultisampleResolveStencil
bool UnityEngine::SystemInfo::get_supportsMultisampleResolveStencil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsMultisampleResolveStencil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsMultisampleResolveStencil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsIndirectArgumentsBuffer
bool UnityEngine::SystemInfo::get_supportsIndirectArgumentsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsIndirectArgumentsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsIndirectArgumentsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetBatteryLevel
float UnityEngine::SystemInfo::GetBatteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetBatteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetBatteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetBatteryStatus
::UnityEngine::BatteryStatus UnityEngine::SystemInfo::GetBatteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetBatteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetBatteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::BatteryStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetOperatingSystem
::StringW UnityEngine::SystemInfo::GetOperatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetOperatingSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetOperatingSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetOperatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::GetOperatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetOperatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetOperatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetProcessorType
::StringW UnityEngine::SystemInfo::GetProcessorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetProcessorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetProcessorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetProcessorFrequencyMHz
int UnityEngine::SystemInfo::GetProcessorFrequencyMHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetProcessorFrequencyMHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetProcessorFrequencyMHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetProcessorCount
int UnityEngine::SystemInfo::GetProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetProcessorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetProcessorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetPhysicalMemoryMB
int UnityEngine::SystemInfo::GetPhysicalMemoryMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetPhysicalMemoryMB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetPhysicalMemoryMB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceUniqueIdentifier
::StringW UnityEngine::SystemInfo::GetDeviceUniqueIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceUniqueIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceUniqueIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceName
::StringW UnityEngine::SystemInfo::GetDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceModel
::StringW UnityEngine::SystemInfo::GetDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsAccelerometer
bool UnityEngine::SystemInfo::SupportsAccelerometer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsAccelerometer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsAccelerometer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.IsGyroAvailable
bool UnityEngine::SystemInfo::IsGyroAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsGyroAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsGyroAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsLocationService
bool UnityEngine::SystemInfo::SupportsLocationService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsLocationService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsLocationService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsAudio
bool UnityEngine::SystemInfo::SupportsAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::GetDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsMemorySize
int UnityEngine::SystemInfo::GetGraphicsMemorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsMemorySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsMemorySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceName
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceVendor
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceVendor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceVendor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceVendor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceID
int UnityEngine::SystemInfo::GetGraphicsDeviceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceVendorID
int UnityEngine::SystemInfo::GetGraphicsDeviceVendorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceVendorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceVendorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::GetGraphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsUVStartsAtTop
bool UnityEngine::SystemInfo::GetGraphicsUVStartsAtTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsUVStartsAtTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsUVStartsAtTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceVersion
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsShaderLevel
int UnityEngine::SystemInfo::GetGraphicsShaderLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsShaderLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsShaderLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsMultiThreaded
bool UnityEngine::SystemInfo::GetGraphicsMultiThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsMultiThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsMultiThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetFoveatedRenderingCaps
::UnityEngine::Rendering::FoveatedRenderingCaps UnityEngine::SystemInfo::GetFoveatedRenderingCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetFoveatedRenderingCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetFoveatedRenderingCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::FoveatedRenderingCaps, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.HasHiddenSurfaceRemovalOnGPU
bool UnityEngine::SystemInfo::HasHiddenSurfaceRemovalOnGPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::HasHiddenSurfaceRemovalOnGPU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "HasHiddenSurfaceRemovalOnGPU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsShadows
bool UnityEngine::SystemInfo::SupportsShadows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsShadows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsShadows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetCopyTextureSupport
::UnityEngine::Rendering::CopyTextureSupport UnityEngine::SystemInfo::GetCopyTextureSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetCopyTextureSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetCopyTextureSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CopyTextureSupport, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsComputeShaders
bool UnityEngine::SystemInfo::SupportsComputeShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsComputeShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsComputeShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsRenderTargetArrayIndexFromVertexShader
bool UnityEngine::SystemInfo::SupportsRenderTargetArrayIndexFromVertexShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsRenderTargetArrayIndexFromVertexShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsRenderTargetArrayIndexFromVertexShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsInstancing
bool UnityEngine::SystemInfo::SupportsInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportedRenderTargetCount
int UnityEngine::SystemInfo::SupportedRenderTargetCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportedRenderTargetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportedRenderTargetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsMultisampledTextures
int UnityEngine::SystemInfo::SupportsMultisampledTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsMultisampledTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsMultisampledTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsMultisampleAutoResolve
bool UnityEngine::SystemInfo::SupportsMultisampleAutoResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsMultisampleAutoResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsMultisampleAutoResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.UsesReversedZBuffer
bool UnityEngine::SystemInfo::UsesReversedZBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::UsesReversedZBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "UsesReversedZBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.HasRenderTextureNative
bool UnityEngine::SystemInfo::HasRenderTextureNative(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::HasRenderTextureNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "HasRenderTextureNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormatNative
bool UnityEngine::SystemInfo::SupportsTextureFormatNative(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormatNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormatNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.GetMaxTextureSize
int UnityEngine::SystemInfo::GetMaxTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetMaxTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetMaxTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetMaxTextureArraySlices
int UnityEngine::SystemInfo::GetMaxTextureArraySlices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetMaxTextureArraySlices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetMaxTextureArraySlices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetMaxRenderTextureSize
int UnityEngine::SystemInfo::GetMaxRenderTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetMaxRenderTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetMaxRenderTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsGPUFence
bool UnityEngine::SystemInfo::SupportsGPUFence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsGPUFence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsGPUFence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.MaxGraphicsBufferSize
int64_t UnityEngine::SystemInfo::MaxGraphicsBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::MaxGraphicsBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "MaxGraphicsBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.IsFormatSupported
bool UnityEngine::SystemInfo::IsFormatSupported(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsFormatSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsFormatSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetCompatibleFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetCompatibleFormat(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetCompatibleFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetCompatibleFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetGraphicsFormat(::UnityEngine::Experimental::Rendering::DefaultFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.GetRenderTextureSupportedMSAASampleCount
int UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount(::UnityEngine::RenderTextureDescriptor desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetRenderTextureSupportedMSAASampleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, desc);
}
// Autogenerated method: UnityEngine.SystemInfo.UsesLoadStoreActions
bool UnityEngine::SystemInfo::UsesLoadStoreActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::UsesLoadStoreActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "UsesLoadStoreActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetHDRDisplaySupportFlags
::UnityEngine::HDRDisplaySupportFlags UnityEngine::SystemInfo::GetHDRDisplaySupportFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetHDRDisplaySupportFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetHDRDisplaySupportFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HDRDisplaySupportFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsMultiview
bool UnityEngine::SystemInfo::SupportsMultiview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsMultiview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsMultiview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsStoreAndResolveAction
bool UnityEngine::SystemInfo::SupportsStoreAndResolveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsStoreAndResolveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsStoreAndResolveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsMultisampleResolveDepth
bool UnityEngine::SystemInfo::SupportsMultisampleResolveDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsMultisampleResolveDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsMultisampleResolveDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsMultisampleResolveStencil
bool UnityEngine::SystemInfo::SupportsMultisampleResolveStencil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsMultisampleResolveStencil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsMultisampleResolveStencil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsIndirectArgumentsBuffer
bool UnityEngine::SystemInfo::SupportsIndirectArgumentsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsIndirectArgumentsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsIndirectArgumentsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetRenderTextureSupportedMSAASampleCount_Injected
int UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount_Injected(ByRef<::UnityEngine::RenderTextureDescriptor> desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetRenderTextureSupportedMSAASampleCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetRenderTextureSupportedMSAASampleCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(desc));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SystemClock
#include "UnityEngine/SystemClock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_Epoch
::System::DateTime UnityEngine::SystemClock::_get_s_Epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemClock::_get_s_Epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("UnityEngine", "SystemClock", "s_Epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_Epoch
void UnityEngine::SystemClock::_set_s_Epoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemClock::_set_s_Epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemClock", "s_Epoch", value));
}
// Autogenerated method: UnityEngine.SystemClock.get_now
::System::DateTime UnityEngine::SystemClock::get_now() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemClock::get_now");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemClock", "get_now", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemClock..cctor
void UnityEngine::SystemClock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemClock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemClock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Time
#include "UnityEngine/Time.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Time.get_time
float UnityEngine::Time::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_timeAsDouble
double UnityEngine::Time::get_timeAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_timeAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_timeAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_timeSinceLevelLoad
float UnityEngine::Time::get_timeSinceLevelLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_timeSinceLevelLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_timeSinceLevelLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_deltaTime
float UnityEngine::Time::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_fixedTime
float UnityEngine::Time::get_fixedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_fixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_fixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_unscaledTime
float UnityEngine::Time::get_unscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_unscaledTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_unscaledTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_unscaledTimeAsDouble
double UnityEngine::Time::get_unscaledTimeAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_unscaledTimeAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_unscaledTimeAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_fixedUnscaledTime
float UnityEngine::Time::get_fixedUnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_fixedUnscaledTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_fixedUnscaledTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_unscaledDeltaTime
float UnityEngine::Time::get_unscaledDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_unscaledDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_unscaledDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_fixedDeltaTime
float UnityEngine::Time::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.set_fixedDeltaTime
void UnityEngine::Time::set_fixedDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::set_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "set_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Time.get_maximumDeltaTime
float UnityEngine::Time::get_maximumDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_maximumDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_maximumDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_smoothDeltaTime
float UnityEngine::Time::get_smoothDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_smoothDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_smoothDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_timeScale
float UnityEngine::Time::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.set_timeScale
void UnityEngine::Time::set_timeScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::set_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "set_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Time.get_frameCount
int UnityEngine::Time::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_renderedFrameCount
int UnityEngine::Time::get_renderedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_renderedFrameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_renderedFrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_realtimeSinceStartup
float UnityEngine::Time::get_realtimeSinceStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_realtimeSinceStartup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_realtimeSinceStartup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_realtimeSinceStartupAsDouble
double UnityEngine::Time::get_realtimeSinceStartupAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_realtimeSinceStartupAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_realtimeSinceStartupAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.TouchScreenKeyboard/Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
// Including type: UnityEngine.TouchScreenKeyboard_InternalConstructorHelperArguments
#include "UnityEngine/TouchScreenKeyboard_InternalConstructorHelperArguments.hpp"
// Including type: UnityEngine.RangeInt
#include "UnityEngine/RangeInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean <disableInPlaceEditing>k__BackingField
bool UnityEngine::TouchScreenKeyboard::_get_$disableInPlaceEditing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::_get_$disableInPlaceEditing$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("UnityEngine", "TouchScreenKeyboard", "<disableInPlaceEditing>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <disableInPlaceEditing>k__BackingField
void UnityEngine::TouchScreenKeyboard::_set_$disableInPlaceEditing$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::_set_$disableInPlaceEditing$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard", "<disableInPlaceEditing>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::TouchScreenKeyboard::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Internal_Destroy
void UnityEngine::TouchScreenKeyboard::Internal_Destroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Destroy
void UnityEngine::TouchScreenKeyboard::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.TouchScreenKeyboard_InternalConstructorHelper
::System::IntPtr UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper(ByRef<::UnityEngine::TouchScreenKeyboard_InternalConstructorHelperArguments> arguments, ::StringW text, ::StringW textPlaceholder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "TouchScreenKeyboard_InternalConstructorHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textPlaceholder)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(arguments), text, textPlaceholder);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isSupported
bool UnityEngine::TouchScreenKeyboard::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_isSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_disableInPlaceEditing
bool UnityEngine::TouchScreenKeyboard::get_disableInPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_disableInPlaceEditing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_disableInPlaceEditing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isInPlaceEditingAllowed
bool UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isInPlaceEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.IsInPlaceEditingAllowed
bool UnityEngine::TouchScreenKeyboard::IsInPlaceEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::IsInPlaceEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "IsInPlaceEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isRequiredToForceOpen
bool UnityEngine::TouchScreenKeyboard::get_isRequiredToForceOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_isRequiredToForceOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isRequiredToForceOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.IsRequiredToForceOpen
bool UnityEngine::TouchScreenKeyboard::IsRequiredToForceOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::IsRequiredToForceOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "IsRequiredToForceOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Open
::UnityEngine::TouchScreenKeyboard* UnityEngine::TouchScreenKeyboard::Open(::StringW text, ::UnityEngine::TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, ::StringW textPlaceholder, int characterLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(keyboardType), ::il2cpp_utils::ExtractType(autocorrection), ::il2cpp_utils::ExtractType(multiline), ::il2cpp_utils::ExtractType(secure), ::il2cpp_utils::ExtractType(alert), ::il2cpp_utils::ExtractType(textPlaceholder), ::il2cpp_utils::ExtractType(characterLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboard*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, keyboardType, autocorrection, multiline, secure, alert, textPlaceholder, characterLimit);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Open
::UnityEngine::TouchScreenKeyboard* UnityEngine::TouchScreenKeyboard::Open(::StringW text, ::UnityEngine::TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(keyboardType), ::il2cpp_utils::ExtractType(autocorrection), ::il2cpp_utils::ExtractType(multiline), ::il2cpp_utils::ExtractType(secure)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboard*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, keyboardType, autocorrection, multiline, secure);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_text
::StringW UnityEngine::TouchScreenKeyboard::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_text
void UnityEngine::TouchScreenKeyboard::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_hideInput
void UnityEngine::TouchScreenKeyboard::set_hideInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_hideInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "set_hideInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_active
bool UnityEngine::TouchScreenKeyboard::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_active
void UnityEngine::TouchScreenKeyboard::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_status
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboard::Status, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_characterLimit
void UnityEngine::TouchScreenKeyboard::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canGetSelection
bool UnityEngine::TouchScreenKeyboard::get_canGetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_canGetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canGetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canSetSelection
bool UnityEngine::TouchScreenKeyboard::get_canSetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_canSetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_selection
::UnityEngine::RangeInt UnityEngine::TouchScreenKeyboard::get_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RangeInt, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_selection
void UnityEngine::TouchScreenKeyboard::set_selection(::UnityEngine::RangeInt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.GetSelection
void UnityEngine::TouchScreenKeyboard::GetSelection(ByRef<int> start, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::GetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "GetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(start), byref(length));
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.SetSelection
void UnityEngine::TouchScreenKeyboard::SetSelection(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::SetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "SetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, length);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Finalize
void UnityEngine::TouchScreenKeyboard::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboard/Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Visible
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Visible
void UnityEngine::TouchScreenKeyboard::Status::_set_Visible(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Done
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Done"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Done
void UnityEngine::TouchScreenKeyboard::Status::_set_Done(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Done", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Canceled
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Canceled
void UnityEngine::TouchScreenKeyboard::Status::_set_Canceled(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status LostFocus
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status LostFocus
void UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TouchScreenKeyboard::Status::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Default
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Default
void UnityEngine::TouchScreenKeyboardType::_set_Default(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
void UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
void UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType URL
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "URL"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType URL
void UnityEngine::TouchScreenKeyboardType::_set_URL(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "URL", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumberPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NumberPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumberPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
void UnityEngine::TouchScreenKeyboardType::_set_NumberPad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NumberPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumberPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_PhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_PhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "PhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
void UnityEngine::TouchScreenKeyboardType::_set_PhonePad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_PhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "PhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
void UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
void UnityEngine::TouchScreenKeyboardType::_set_EmailAddress(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
void UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Social
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Social() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Social");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Social"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Social
void UnityEngine::TouchScreenKeyboardType::_set_Social(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Social");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Social", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Search
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Search() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Search");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Search"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Search
void UnityEngine::TouchScreenKeyboardType::_set_Search(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Search");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Search", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_DecimalPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_DecimalPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "DecimalPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
void UnityEngine::TouchScreenKeyboardType::_set_DecimalPad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_DecimalPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "DecimalPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType OneTimeCode
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_OneTimeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_OneTimeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "OneTimeCode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType OneTimeCode
void UnityEngine::TouchScreenKeyboardType::_set_OneTimeCode(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_OneTimeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "OneTimeCode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TouchScreenKeyboardType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UINumericFieldsUtils
#include "UnityEngine/UINumericFieldsUtils.hpp"
// Including type: UnityEngine.ExpressionEvaluator/Expression
#include "UnityEngine/ExpressionEvaluator_Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String k_AllowedCharactersForFloat
::StringW UnityEngine::UINumericFieldsUtils::_get_k_AllowedCharactersForFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_get_k_AllowedCharactersForFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "UINumericFieldsUtils", "k_AllowedCharactersForFloat"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String k_AllowedCharactersForFloat
void UnityEngine::UINumericFieldsUtils::_set_k_AllowedCharactersForFloat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_set_k_AllowedCharactersForFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UINumericFieldsUtils", "k_AllowedCharactersForFloat", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String k_AllowedCharactersForInt
::StringW UnityEngine::UINumericFieldsUtils::_get_k_AllowedCharactersForInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_get_k_AllowedCharactersForInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "UINumericFieldsUtils", "k_AllowedCharactersForInt"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String k_AllowedCharactersForInt
void UnityEngine::UINumericFieldsUtils::_set_k_AllowedCharactersForInt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_set_k_AllowedCharactersForInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UINumericFieldsUtils", "k_AllowedCharactersForInt", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String k_DoubleFieldFormatString
::StringW UnityEngine::UINumericFieldsUtils::_get_k_DoubleFieldFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_get_k_DoubleFieldFormatString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "UINumericFieldsUtils", "k_DoubleFieldFormatString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String k_DoubleFieldFormatString
void UnityEngine::UINumericFieldsUtils::_set_k_DoubleFieldFormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_set_k_DoubleFieldFormatString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UINumericFieldsUtils", "k_DoubleFieldFormatString", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String k_FloatFieldFormatString
::StringW UnityEngine::UINumericFieldsUtils::_get_k_FloatFieldFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_get_k_FloatFieldFormatString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "UINumericFieldsUtils", "k_FloatFieldFormatString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String k_FloatFieldFormatString
void UnityEngine::UINumericFieldsUtils::_set_k_FloatFieldFormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_set_k_FloatFieldFormatString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UINumericFieldsUtils", "k_FloatFieldFormatString", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String k_IntFieldFormatString
::StringW UnityEngine::UINumericFieldsUtils::_get_k_IntFieldFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_get_k_IntFieldFormatString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "UINumericFieldsUtils", "k_IntFieldFormatString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String k_IntFieldFormatString
void UnityEngine::UINumericFieldsUtils::_set_k_IntFieldFormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::_set_k_IntFieldFormatString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UINumericFieldsUtils", "k_IntFieldFormatString", value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToDouble
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToDouble(::StringW str, ByRef<double> value, ByRef<::UnityEngine::ExpressionEvaluator::Expression*> expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::ExpressionEvaluator::Expression*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(value), byref(expr));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToDouble
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToDouble(::StringW str, ::StringW initialValueAsString, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToFloat
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToFloat(::StringW str, ::StringW initialValueAsString, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToLong
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToLong(::StringW str, ByRef<int64_t> value, ByRef<::UnityEngine::ExpressionEvaluator::Expression*> expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::ExpressionEvaluator::Expression*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(value), byref(expr));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToLong
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToLong(::StringW str, ::StringW initialValueAsString, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToULong
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToULong(::StringW str, ByRef<uint64_t> value, ByRef<::UnityEngine::ExpressionEvaluator::Expression*> expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::ExpressionEvaluator::Expression*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(value), byref(expr));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToULong
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToULong(::StringW str, ::StringW initialValueAsString, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToInt
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToInt(::StringW str, ::StringW initialValueAsString, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils.TryConvertStringToUInt
bool UnityEngine::UINumericFieldsUtils::TryConvertStringToUInt(::StringW str, ::StringW initialValueAsString, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::TryConvertStringToUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", "TryConvertStringToUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(initialValueAsString), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, initialValueAsString, byref(value));
}
// Autogenerated method: UnityEngine.UINumericFieldsUtils..cctor
void UnityEngine::UINumericFieldsUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UINumericFieldsUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UINumericFieldsUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Pose k_Identity
::UnityEngine::Pose UnityEngine::Pose::_get_k_Identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::_get_k_Identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Pose>("UnityEngine", "Pose", "k_Identity"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Pose k_Identity
void UnityEngine::Pose::_set_k_Identity(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::_set_k_Identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Pose", "k_Identity", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Pose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Pose::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Pose..ctor
// ABORTED elsewhere.  UnityEngine::Pose::Pose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation)
// Autogenerated method: UnityEngine.Pose.GetTransformedBy
::UnityEngine::Pose UnityEngine::Pose::GetTransformedBy(::UnityEngine::Pose lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::GetTransformedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTransformedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, lhs);
}
// Autogenerated method: UnityEngine.Pose.GetTransformedBy
::UnityEngine::Pose UnityEngine::Pose::GetTransformedBy(::UnityEngine::Transform* lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::GetTransformedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTransformedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, lhs);
}
// Autogenerated method: UnityEngine.Pose.get_forward
::UnityEngine::Vector3 UnityEngine::Pose::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.get_right
::UnityEngine::Vector3 UnityEngine::Pose::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.get_up
::UnityEngine::Vector3 UnityEngine::Pose::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.get_identity
::UnityEngine::Pose UnityEngine::Pose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Pose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.Equals
bool UnityEngine::Pose::Equals(::UnityEngine::Pose other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Pose), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Pose..cctor
void UnityEngine::Pose::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Pose", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.ToString
::StringW UnityEngine::Pose::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.Equals
bool UnityEngine::Pose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Pose.GetHashCode
int UnityEngine::Pose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Pose& a, const ::UnityEngine::Pose& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Pose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Pose.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Pose& a, const ::UnityEngine::Pose& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Pose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Pose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties None
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties None
void UnityEngine::DrivenTransformProperties::_set_None(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties All
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties All
void UnityEngine::DrivenTransformProperties::_set_All(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Rotation
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Rotation
void UnityEngine::DrivenTransformProperties::_set_Rotation(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleX
void UnityEngine::DrivenTransformProperties::_set_ScaleX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleY
void UnityEngine::DrivenTransformProperties::_set_ScaleY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleZ
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleZ
void UnityEngine::DrivenTransformProperties::_set_ScaleZ(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMinX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
void UnityEngine::DrivenTransformProperties::_set_AnchorMinX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMinX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMinY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
void UnityEngine::DrivenTransformProperties::_set_AnchorMinY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMinY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMaxX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMaxX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMaxY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMaxY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDeltaX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDeltaX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDeltaY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDeltaY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_PivotX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotX
void UnityEngine::DrivenTransformProperties::_set_PivotX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_PivotX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_PivotY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotY
void UnityEngine::DrivenTransformProperties::_set_PivotY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_PivotY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Scale
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Scale
void UnityEngine::DrivenTransformProperties::_set_Scale(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMin
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMin
void UnityEngine::DrivenTransformProperties::_set_AnchorMin(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMin", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMax
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMax"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMax
void UnityEngine::DrivenTransformProperties::_set_AnchorMax(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMax", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Anchors
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Anchors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Anchors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Anchors
void UnityEngine::DrivenTransformProperties::_set_Anchors(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Anchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Anchors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDelta
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDelta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDelta"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDelta
void UnityEngine::DrivenTransformProperties::_set_SizeDelta(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDelta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDelta", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Pivot
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Pivot
void UnityEngine::DrivenTransformProperties::_set_Pivot(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Pivot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DrivenTransformProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Add
void UnityEngine::DrivenRectTransformTracker::Add(::UnityEngine::Object* driver, ::UnityEngine::RectTransform* rectTransform, ::UnityEngine::DrivenTransformProperties drivenProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenRectTransformTracker::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(drivenProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, driver, rectTransform, drivenProperties);
}
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Clear
void UnityEngine::DrivenRectTransformTracker::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenRectTransformTracker::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.RectTransform/Edge
#include "UnityEngine/RectTransform_Edge.hpp"
// Including type: UnityEngine.RectTransform/Axis
#include "UnityEngine/RectTransform_Axis.hpp"
// Including type: UnityEngine.RectTransform/ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
::UnityEngine::RectTransform::ReapplyDrivenProperties* UnityEngine::RectTransform::_get_reapplyDrivenProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::_get_reapplyDrivenProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::ReapplyDrivenProperties*>("UnityEngine", "RectTransform", "reapplyDrivenProperties"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
void UnityEngine::RectTransform::_set_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::_set_reapplyDrivenProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform", "reapplyDrivenProperties", value));
}
// Autogenerated method: UnityEngine.RectTransform.add_reapplyDrivenProperties
void UnityEngine::RectTransform::add_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::add_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "add_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.remove_reapplyDrivenProperties
void UnityEngine::RectTransform::remove_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::remove_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "remove_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_rect
::UnityEngine::Rect UnityEngine::RectTransform::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin
void UnityEngine::RectTransform::set_anchorMin(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax
void UnityEngine::RectTransform::set_anchorMax(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition
void UnityEngine::RectTransform::set_anchoredPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta
::UnityEngine::Vector2 UnityEngine::RectTransform::get_sizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta
void UnityEngine::RectTransform::set_sizeDelta(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot
::UnityEngine::Vector2 UnityEngine::RectTransform::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot
void UnityEngine::RectTransform::set_pivot(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition3D
::UnityEngine::Vector3 UnityEngine::RectTransform::get_anchoredPosition3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition3D
void UnityEngine::RectTransform::set_anchoredPosition3D(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_offsetMin
::UnityEngine::Vector2 UnityEngine::RectTransform::get_offsetMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_offsetMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMin
void UnityEngine::RectTransform::set_offsetMin(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_offsetMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_offsetMax
::UnityEngine::Vector2 UnityEngine::RectTransform::get_offsetMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_offsetMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMax
void UnityEngine::RectTransform::set_offsetMax(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_offsetMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_drivenByObject
::UnityEngine::Object* UnityEngine::RectTransform::get_drivenByObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_drivenByObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drivenByObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_drivenByObject
void UnityEngine::RectTransform::set_drivenByObject(::UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_drivenByObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drivenByObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_drivenProperties
::UnityEngine::DrivenTransformProperties UnityEngine::RectTransform::get_drivenProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_drivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DrivenTransformProperties, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_drivenProperties
void UnityEngine::RectTransform::set_drivenProperties(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_drivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.ForceUpdateRectTransforms
void UnityEngine::RectTransform::ForceUpdateRectTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::ForceUpdateRectTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceUpdateRectTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.GetLocalCorners
void UnityEngine::RectTransform::GetLocalCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetLocalCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.GetWorldCorners
void UnityEngine::RectTransform::GetWorldCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetWorldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.SetInsetAndSizeFromParentEdge
void UnityEngine::RectTransform::SetInsetAndSizeFromParentEdge(::UnityEngine::RectTransform::Edge edge, float inset, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::SetInsetAndSizeFromParentEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInsetAndSizeFromParentEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge), ::il2cpp_utils::ExtractType(inset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge, inset, size);
}
// Autogenerated method: UnityEngine.RectTransform.SetSizeWithCurrentAnchors
void UnityEngine::RectTransform::SetSizeWithCurrentAnchors(::UnityEngine::RectTransform::Axis axis, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::SetSizeWithCurrentAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizeWithCurrentAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, size);
}
// Autogenerated method: UnityEngine.RectTransform.SendReapplyDrivenProperties
void UnityEngine::RectTransform::SendReapplyDrivenProperties(::UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::SendReapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "SendReapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driven);
}
// Autogenerated method: UnityEngine.RectTransform.GetRectInParentSpace
::UnityEngine::Rect UnityEngine::RectTransform::GetRectInParentSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetRectInParentSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRectInParentSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.GetParentSize
::UnityEngine::Vector2 UnityEngine::RectTransform::GetParentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetParentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_rect_Injected
void UnityEngine::RectTransform::get_rect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin_Injected
void UnityEngine::RectTransform::get_anchorMin_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin_Injected
void UnityEngine::RectTransform::set_anchorMin_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax_Injected
void UnityEngine::RectTransform::get_anchorMax_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax_Injected
void UnityEngine::RectTransform::set_anchorMax_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition_Injected
void UnityEngine::RectTransform::get_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition_Injected
void UnityEngine::RectTransform::set_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta_Injected
void UnityEngine::RectTransform::get_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta_Injected
void UnityEngine::RectTransform::set_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot_Injected
void UnityEngine::RectTransform::get_pivot_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot_Injected
void UnityEngine::RectTransform::set_pivot_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform/Edge
#include "UnityEngine/RectTransform_Edge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Edge Left
::UnityEngine::RectTransform::Edge UnityEngine::RectTransform::Edge::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Edge>("UnityEngine", "RectTransform/Edge", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Edge Left
void UnityEngine::RectTransform::Edge::_set_Left(::UnityEngine::RectTransform::Edge value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Edge", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Edge Right
::UnityEngine::RectTransform::Edge UnityEngine::RectTransform::Edge::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Edge>("UnityEngine", "RectTransform/Edge", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Edge Right
void UnityEngine::RectTransform::Edge::_set_Right(::UnityEngine::RectTransform::Edge value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Edge", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Edge Top
::UnityEngine::RectTransform::Edge UnityEngine::RectTransform::Edge::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Edge>("UnityEngine", "RectTransform/Edge", "Top"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Edge Top
void UnityEngine::RectTransform::Edge::_set_Top(::UnityEngine::RectTransform::Edge value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Edge", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Edge Bottom
::UnityEngine::RectTransform::Edge UnityEngine::RectTransform::Edge::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Edge>("UnityEngine", "RectTransform/Edge", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Edge Bottom
void UnityEngine::RectTransform::Edge::_set_Bottom(::UnityEngine::RectTransform::Edge value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Edge", "Bottom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RectTransform::Edge::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Edge::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform/Axis
#include "UnityEngine/RectTransform_Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Axis Horizontal
::UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Axis Horizontal
void UnityEngine::RectTransform::Axis::_set_Horizontal(::UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Axis Vertical
::UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Axis Vertical
void UnityEngine::RectTransform::Axis::_set_Vertical(::UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RectTransform::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransform/ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RectTransform/ReapplyDrivenProperties.Invoke
void UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke(::UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::RectTransform::ReapplyDrivenProperties*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, driven);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RotationOrder
#include "UnityEngine/RotationOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderXYZ
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderXYZ
void UnityEngine::RotationOrder::_set_OrderXYZ(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderXZY
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderXZY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderXZY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderXZY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderXZY
void UnityEngine::RotationOrder::_set_OrderXZY(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderXZY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderXZY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderYZX
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderYZX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderYZX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderYZX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderYZX
void UnityEngine::RotationOrder::_set_OrderYZX(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderYZX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderYZX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderYXZ
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderYXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderYXZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderYXZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderYXZ
void UnityEngine::RotationOrder::_set_OrderYXZ(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderYXZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderYXZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderZXY
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderZXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderZXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderZXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderZXY
void UnityEngine::RotationOrder::_set_OrderZXY(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderZXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderZXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderZYX
::UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderZYX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_get_OrderZYX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderZYX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderZYX
void UnityEngine::RotationOrder::_set_OrderZYX(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::_set_OrderZYX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderZYX", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RotationOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RotationOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Transform/Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: UnityEngine.RotationOrder
#include "UnityEngine/RotationOrder.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Transform.get_position
::UnityEngine::Vector3 UnityEngine::Transform::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_position
void UnityEngine::Transform::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localPosition
::UnityEngine::Vector3 UnityEngine::Transform::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localPosition
void UnityEngine::Transform::set_localPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetLocalEulerAngles
::UnityEngine::Vector3 UnityEngine::Transform::GetLocalEulerAngles(::UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetLocalEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerAngles
void UnityEngine::Transform::SetLocalEulerAngles(::UnityEngine::Vector3 euler, ::UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, euler, order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerHint
void UnityEngine::Transform::SetLocalEulerHint(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalEulerHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Transform.get_eulerAngles
::UnityEngine::Vector3 UnityEngine::Transform::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_eulerAngles
void UnityEngine::Transform::set_eulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localEulerAngles
::UnityEngine::Vector3 UnityEngine::Transform::get_localEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localEulerAngles
void UnityEngine::Transform::set_localEulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_right
::UnityEngine::Vector3 UnityEngine::Transform::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_right
void UnityEngine::Transform::set_right(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_up
::UnityEngine::Vector3 UnityEngine::Transform::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_up
void UnityEngine::Transform::set_up(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_forward
::UnityEngine::Vector3 UnityEngine::Transform::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_forward
void UnityEngine::Transform::set_forward(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_rotation
::UnityEngine::Quaternion UnityEngine::Transform::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_rotation
void UnityEngine::Transform::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localRotation
::UnityEngine::Quaternion UnityEngine::Transform::get_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localRotation
void UnityEngine::Transform::set_localRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_rotationOrder
::UnityEngine::RotationOrder UnityEngine::Transform::get_rotationOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_rotationOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RotationOrder, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_rotationOrder
void UnityEngine::Transform::set_rotationOrder(::UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_rotationOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetRotationOrderInternal
int UnityEngine::Transform::GetRotationOrderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetRotationOrderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotationOrderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetRotationOrderInternal
void UnityEngine::Transform::SetRotationOrderInternal(::UnityEngine::RotationOrder rotationOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetRotationOrderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotationOrderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationOrder);
}
// Autogenerated method: UnityEngine.Transform.get_localScale
::UnityEngine::Vector3 UnityEngine::Transform::get_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localScale
void UnityEngine::Transform::set_localScale(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parent
::UnityEngine::Transform* UnityEngine::Transform::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parent
void UnityEngine::Transform::set_parent(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parentInternal
::UnityEngine::Transform* UnityEngine::Transform::get_parentInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parentInternal
void UnityEngine::Transform::set_parentInternal(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetParent
::UnityEngine::Transform* UnityEngine::Transform::GetParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(::UnityEngine::Transform* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(::UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix
::UnityEngine::Matrix4x4 UnityEngine::Transform::get_worldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_worldToLocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix
::UnityEngine::Matrix4x4 UnityEngine::Transform::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetPositionAndRotation
void UnityEngine::Transform::SetPositionAndRotation(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.Transform.SetLocalPositionAndRotation
void UnityEngine::Transform::SetLocalPositionAndRotation(::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localPosition, localRotation);
}
// Autogenerated method: UnityEngine.Transform.GetPositionAndRotation
void UnityEngine::Transform::GetPositionAndRotation(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Transform.GetLocalPositionAndRotation
void UnityEngine::Transform::GetLocalPositionAndRotation(ByRef<::UnityEngine::Vector3> localPosition, ByRef<::UnityEngine::Quaternion> localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetLocalPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(localPosition), byref(localRotation));
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(::UnityEngine::Vector3 translation, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translation, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(::UnityEngine::Vector3 translation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translation);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(::UnityEngine::Vector3 translation, ::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translation, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z, ::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 eulers, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eulers, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 eulers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eulers);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(float xAngle, float yAngle, float zAngle, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xAngle), ::il2cpp_utils::ExtractType(yAngle), ::il2cpp_utils::ExtractType(zAngle), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xAngle, yAngle, zAngle, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(float xAngle, float yAngle, float zAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xAngle), ::il2cpp_utils::ExtractType(yAngle), ::il2cpp_utils::ExtractType(zAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xAngle, yAngle, zAngle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal
void UnityEngine::Transform::RotateAroundInternal(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 axis, float angle, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAround
void UnityEngine::Transform::RotateAround(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Transform* target, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Vector3 worldPosition, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt
void UnityEngine::Transform::Internal_LookAt(::UnityEngine::Vector3 worldPosition, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Internal_LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::TransformDirection(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::TransformDirection(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.TransformDirections
void UnityEngine::Transform::TransformDirections(::UnityEngine::Vector3* directions, int count, ::UnityEngine::Vector3* transformedDirections, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedDirections), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions, count, transformedDirections, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.TransformDirections
void UnityEngine::Transform::TransformDirections(::System::ReadOnlySpan_1<::UnityEngine::Vector3> directions, ::System::Span_1<::UnityEngine::Vector3> transformedDirections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions), ::il2cpp_utils::ExtractType(transformedDirections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions, transformedDirections);
}
// Autogenerated method: UnityEngine.Transform.TransformDirections
void UnityEngine::Transform::TransformDirections(::System::Span_1<::UnityEngine::Vector3> directions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformDirection(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformDirection(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirections
void UnityEngine::Transform::InverseTransformDirections(::UnityEngine::Vector3* directions, int count, ::UnityEngine::Vector3* transformedDirections, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedDirections), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions, count, transformedDirections, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirections
void UnityEngine::Transform::InverseTransformDirections(::System::ReadOnlySpan_1<::UnityEngine::Vector3> directions, ::System::Span_1<::UnityEngine::Vector3> transformedDirections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions), ::il2cpp_utils::ExtractType(transformedDirections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions, transformedDirections);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirections
void UnityEngine::Transform::InverseTransformDirections(::System::Span_1<::UnityEngine::Vector3> directions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directions);
}
// Autogenerated method: UnityEngine.Transform.TransformVector
::UnityEngine::Vector3 UnityEngine::Transform::TransformVector(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Transform.TransformVector
::UnityEngine::Vector3 UnityEngine::Transform::TransformVector(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.TransformVectors
void UnityEngine::Transform::TransformVectors(::UnityEngine::Vector3* vectors, int count, ::UnityEngine::Vector3* transformedVectors, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedVectors), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors, count, transformedVectors, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.TransformVectors
void UnityEngine::Transform::TransformVectors(::System::ReadOnlySpan_1<::UnityEngine::Vector3> vectors, ::System::Span_1<::UnityEngine::Vector3> transformedVectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors), ::il2cpp_utils::ExtractType(transformedVectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors, transformedVectors);
}
// Autogenerated method: UnityEngine.Transform.TransformVectors
void UnityEngine::Transform::TransformVectors(::System::Span_1<::UnityEngine::Vector3> vectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformVector(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformVector(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVectors
void UnityEngine::Transform::InverseTransformVectors(::UnityEngine::Vector3* vectors, int count, ::UnityEngine::Vector3* transformedVectors, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedVectors), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors, count, transformedVectors, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVectors
void UnityEngine::Transform::InverseTransformVectors(::System::ReadOnlySpan_1<::UnityEngine::Vector3> vectors, ::System::Span_1<::UnityEngine::Vector3> transformedVectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors), ::il2cpp_utils::ExtractType(transformedVectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors, transformedVectors);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVectors
void UnityEngine::Transform::InverseTransformVectors(::System::Span_1<::UnityEngine::Vector3> vectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectors);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.TransformPoints
void UnityEngine::Transform::TransformPoints(::UnityEngine::Vector3* positions, int count, ::UnityEngine::Vector3* transformedPositions, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedPositions), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, count, transformedPositions, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.TransformPoints
void UnityEngine::Transform::TransformPoints(::System::ReadOnlySpan_1<::UnityEngine::Vector3> positions, ::System::Span_1<::UnityEngine::Vector3> transformedPositions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(transformedPositions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, transformedPositions);
}
// Autogenerated method: UnityEngine.Transform.TransformPoints
void UnityEngine::Transform::TransformPoints(::System::Span_1<::UnityEngine::Vector3> positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformPoint(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoints
void UnityEngine::Transform::InverseTransformPoints(::UnityEngine::Vector3* positions, int count, ::UnityEngine::Vector3* transformedPositions, int transformedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(transformedPositions), ::il2cpp_utils::ExtractType(transformedCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, count, transformedPositions, transformedCount);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoints
void UnityEngine::Transform::InverseTransformPoints(::System::ReadOnlySpan_1<::UnityEngine::Vector3> positions, ::System::Span_1<::UnityEngine::Vector3> transformedPositions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(transformedPositions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, transformedPositions);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoints
void UnityEngine::Transform::InverseTransformPoints(::System::Span_1<::UnityEngine::Vector3> positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions);
}
// Autogenerated method: UnityEngine.Transform.get_root
::UnityEngine::Transform* UnityEngine::Transform::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.GetRoot
::UnityEngine::Transform* UnityEngine::Transform::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_childCount
int UnityEngine::Transform::get_childCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_childCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.DetachChildren
void UnityEngine::Transform::DetachChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::DetachChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetAsFirstSibling
void UnityEngine::Transform::SetAsFirstSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetAsFirstSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsFirstSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetAsLastSibling
void UnityEngine::Transform::SetAsLastSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetAsLastSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsLastSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetSiblingIndex
void UnityEngine::Transform::SetSiblingIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetSiblingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSiblingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Transform.MoveAfterSibling
void UnityEngine::Transform::MoveAfterSibling(::UnityEngine::Transform* transform, bool notifyEditorAndMarkDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::MoveAfterSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveAfterSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(notifyEditorAndMarkDirty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, notifyEditorAndMarkDirty);
}
// Autogenerated method: UnityEngine.Transform.GetSiblingIndex
int UnityEngine::Transform::GetSiblingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetSiblingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSiblingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.FindRelativeTransformWithPath
::UnityEngine::Transform* UnityEngine::Transform::FindRelativeTransformWithPath(::UnityEngine::Transform* transform, ::StringW path, bool isActiveOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::FindRelativeTransformWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Transform", "FindRelativeTransformWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isActiveOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, path, isActiveOnly);
}
// Autogenerated method: UnityEngine.Transform.Find
::UnityEngine::Transform* UnityEngine::Transform::Find(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, n);
}
// Autogenerated method: UnityEngine.Transform.SendTransformChangedScale
void UnityEngine::Transform::SendTransformChangedScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SendTransformChangedScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTransformChangedScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale
::UnityEngine::Vector3 UnityEngine::Transform::get_lossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_lossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.IsChildOf
bool UnityEngine::Transform::IsChildOf(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::IsChildOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChildOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parent);
}
// Autogenerated method: UnityEngine.Transform.get_hasChanged
bool UnityEngine::Transform::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_hasChanged
void UnityEngine::Transform::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.FindChild
::UnityEngine::Transform* UnityEngine::Transform::FindChild(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::FindChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, n);
}
// Autogenerated method: UnityEngine.Transform.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Transform::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Transform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.RotateAround
void UnityEngine::Transform::RotateAround(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundLocal
void UnityEngine::Transform::RotateAroundLocal(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.GetChild
::UnityEngine::Transform* UnityEngine::Transform::GetChild(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Transform.GetChildCount
int UnityEngine::Transform::GetChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_hierarchyCapacity
int UnityEngine::Transform::get_hierarchyCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_hierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_hierarchyCapacity
void UnityEngine::Transform::set_hierarchyCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_hierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.internal_getHierarchyCapacity
int UnityEngine::Transform::internal_getHierarchyCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::internal_getHierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_getHierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.internal_setHierarchyCapacity
void UnityEngine::Transform::internal_setHierarchyCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::internal_setHierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_setHierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_hierarchyCount
int UnityEngine::Transform::get_hierarchyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_hierarchyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.internal_getHierarchyCount
int UnityEngine::Transform::internal_getHierarchyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::internal_getHierarchyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_getHierarchyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.IsNonUniformScaleTransform
bool UnityEngine::Transform::IsNonUniformScaleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::IsNonUniformScaleTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNonUniformScaleTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_constrainProportionsScale
bool UnityEngine::Transform::get_constrainProportionsScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_constrainProportionsScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constrainProportionsScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_constrainProportionsScale
void UnityEngine::Transform::set_constrainProportionsScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_constrainProportionsScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constrainProportionsScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.SetConstrainProportionsScale
void UnityEngine::Transform::SetConstrainProportionsScale(bool isLinked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetConstrainProportionsScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConstrainProportionsScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLinked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLinked);
}
// Autogenerated method: UnityEngine.Transform.IsConstrainProportionsScale
bool UnityEngine::Transform::IsConstrainProportionsScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::IsConstrainProportionsScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConstrainProportionsScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_position_Injected
void UnityEngine::Transform::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_position_Injected
void UnityEngine::Transform::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localPosition_Injected
void UnityEngine::Transform::get_localPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localPosition_Injected
void UnityEngine::Transform::set_localPosition_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.GetLocalEulerAngles_Injected
void UnityEngine::Transform::GetLocalEulerAngles_Injected(::UnityEngine::RotationOrder order, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetLocalEulerAngles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalEulerAngles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerAngles_Injected
void UnityEngine::Transform::SetLocalEulerAngles_Injected(ByRef<::UnityEngine::Vector3> euler, ::UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalEulerAngles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerAngles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(euler), order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerHint_Injected
void UnityEngine::Transform::SetLocalEulerHint_Injected(ByRef<::UnityEngine::Vector3> euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalEulerHint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerHint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(euler));
}
// Autogenerated method: UnityEngine.Transform.get_rotation_Injected
void UnityEngine::Transform::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_rotation_Injected
void UnityEngine::Transform::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localRotation_Injected
void UnityEngine::Transform::get_localRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localRotation_Injected
void UnityEngine::Transform::set_localRotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localScale_Injected
void UnityEngine::Transform::get_localScale_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localScale_Injected
void UnityEngine::Transform::set_localScale_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix_Injected
void UnityEngine::Transform::get_worldToLocalMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_worldToLocalMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix_Injected
void UnityEngine::Transform::get_localToWorldMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localToWorldMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.SetPositionAndRotation_Injected
void UnityEngine::Transform::SetPositionAndRotation_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetPositionAndRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Transform.SetLocalPositionAndRotation_Injected
void UnityEngine::Transform::SetLocalPositionAndRotation_Injected(ByRef<::UnityEngine::Vector3> localPosition, ByRef<::UnityEngine::Quaternion> localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetLocalPositionAndRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPositionAndRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(localPosition), byref(localRotation));
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal_Injected
void UnityEngine::Transform::RotateAroundInternal_Injected(ByRef<::UnityEngine::Vector3> axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axis), angle);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt_Injected
void UnityEngine::Transform::Internal_LookAt_Injected(ByRef<::UnityEngine::Vector3> worldPosition, ByRef<::UnityEngine::Vector3> worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Internal_LookAt_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(worldPosition), byref(worldUp));
}
// Autogenerated method: UnityEngine.Transform.TransformDirection_Injected
void UnityEngine::Transform::TransformDirection_Injected(ByRef<::UnityEngine::Vector3> direction, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(direction), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection_Injected
void UnityEngine::Transform::InverseTransformDirection_Injected(ByRef<::UnityEngine::Vector3> direction, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(direction), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.TransformVector_Injected
void UnityEngine::Transform::TransformVector_Injected(ByRef<::UnityEngine::Vector3> vector, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vector), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector_Injected
void UnityEngine::Transform::InverseTransformVector_Injected(ByRef<::UnityEngine::Vector3> vector, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vector), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.TransformPoint_Injected
void UnityEngine::Transform::TransformPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint_Injected
void UnityEngine::Transform::InverseTransformPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale_Injected
void UnityEngine::Transform::get_lossyScale_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_lossyScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.RotateAround_Injected
void UnityEngine::Transform::RotateAround_Injected(ByRef<::UnityEngine::Vector3> axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAround_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axis), angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundLocal_Injected
void UnityEngine::Transform::RotateAroundLocal_Injected(ByRef<::UnityEngine::Vector3> axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundLocal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundLocal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axis), angle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Transform/Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform outer
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Transform::Enumerator::dyn_outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::dyn_outer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outer"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Transform::Enumerator::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Transform/Enumerator.get_Current
::Il2CppObject* UnityEngine::Transform::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Transform::Enumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/Enumerator.MoveNext
bool UnityEngine::Transform::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Transform::Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/Enumerator.Reset
void UnityEngine::Transform::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Transform::Enumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteMaskInteraction
#include "UnityEngine/SpriteMaskInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMaskInteraction None
::UnityEngine::SpriteMaskInteraction UnityEngine::SpriteMaskInteraction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpriteMaskInteraction>("UnityEngine", "SpriteMaskInteraction", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMaskInteraction None
void UnityEngine::SpriteMaskInteraction::_set_None(::UnityEngine::SpriteMaskInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMaskInteraction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMaskInteraction VisibleInsideMask
::UnityEngine::SpriteMaskInteraction UnityEngine::SpriteMaskInteraction::_get_VisibleInsideMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_get_VisibleInsideMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpriteMaskInteraction>("UnityEngine", "SpriteMaskInteraction", "VisibleInsideMask"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMaskInteraction VisibleInsideMask
void UnityEngine::SpriteMaskInteraction::_set_VisibleInsideMask(::UnityEngine::SpriteMaskInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_set_VisibleInsideMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMaskInteraction", "VisibleInsideMask", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMaskInteraction VisibleOutsideMask
::UnityEngine::SpriteMaskInteraction UnityEngine::SpriteMaskInteraction::_get_VisibleOutsideMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_get_VisibleOutsideMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpriteMaskInteraction>("UnityEngine", "SpriteMaskInteraction", "VisibleOutsideMask"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMaskInteraction VisibleOutsideMask
void UnityEngine::SpriteMaskInteraction::_set_VisibleOutsideMask(::UnityEngine::SpriteMaskInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::_set_VisibleOutsideMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMaskInteraction", "VisibleOutsideMask", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpriteMaskInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMaskInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<UnityEngine.SpriteRenderer> m_SpriteChangeEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::UnityEngine::SpriteRenderer*>*& UnityEngine::SpriteRenderer::dyn_m_SpriteChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::dyn_m_SpriteChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteChangeEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::UnityEngine::SpriteRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SpriteRenderer.InvokeSpriteChanged
void UnityEngine::SpriteRenderer::InvokeSpriteChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::InvokeSpriteChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSpriteChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpriteRenderer.get_color
::UnityEngine::Color UnityEngine::SpriteRenderer::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color
void UnityEngine::SpriteRenderer::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpriteRenderer.get_color_Injected
void UnityEngine::SpriteRenderer::get_color_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::get_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color_Injected
void UnityEngine::SpriteRenderer::set_color_Injected(ByRef<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteMeshType
#include "UnityEngine/SpriteMeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMeshType FullRect
::UnityEngine::SpriteMeshType UnityEngine::SpriteMeshType::_get_FullRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMeshType::_get_FullRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpriteMeshType>("UnityEngine", "SpriteMeshType", "FullRect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMeshType FullRect
void UnityEngine::SpriteMeshType::_set_FullRect(::UnityEngine::SpriteMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMeshType::_set_FullRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMeshType", "FullRect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMeshType Tight
::UnityEngine::SpriteMeshType UnityEngine::SpriteMeshType::_get_Tight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMeshType::_get_Tight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpriteMeshType>("UnityEngine", "SpriteMeshType", "Tight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMeshType Tight
void UnityEngine::SpriteMeshType::_set_Tight(::UnityEngine::SpriteMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMeshType::_set_Tight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMeshType", "Tight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpriteMeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteMeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Tight
::UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Tight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_get_Tight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Tight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Tight
void UnityEngine::SpritePackingMode::_set_Tight(::UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_set_Tight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Tight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Rectangle
::UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Rectangle
void UnityEngine::SpritePackingMode::_set_Rectangle(::UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Rectangle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpritePackingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpritePackingRotation
#include "UnityEngine/SpritePackingRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingRotation None
::UnityEngine::SpritePackingRotation UnityEngine::SpritePackingRotation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingRotation>("UnityEngine", "SpritePackingRotation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingRotation None
void UnityEngine::SpritePackingRotation::_set_None(::UnityEngine::SpritePackingRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingRotation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingRotation FlipHorizontal
::UnityEngine::SpritePackingRotation UnityEngine::SpritePackingRotation::_get_FlipHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_get_FlipHorizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingRotation>("UnityEngine", "SpritePackingRotation", "FlipHorizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingRotation FlipHorizontal
void UnityEngine::SpritePackingRotation::_set_FlipHorizontal(::UnityEngine::SpritePackingRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_set_FlipHorizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingRotation", "FlipHorizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingRotation FlipVertical
::UnityEngine::SpritePackingRotation UnityEngine::SpritePackingRotation::_get_FlipVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_get_FlipVertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingRotation>("UnityEngine", "SpritePackingRotation", "FlipVertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingRotation FlipVertical
void UnityEngine::SpritePackingRotation::_set_FlipVertical(::UnityEngine::SpritePackingRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_set_FlipVertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingRotation", "FlipVertical", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingRotation Rotate180
::UnityEngine::SpritePackingRotation UnityEngine::SpritePackingRotation::_get_Rotate180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_get_Rotate180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingRotation>("UnityEngine", "SpritePackingRotation", "Rotate180"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingRotation Rotate180
void UnityEngine::SpritePackingRotation::_set_Rotate180(::UnityEngine::SpritePackingRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_set_Rotate180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingRotation", "Rotate180", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingRotation Any
::UnityEngine::SpritePackingRotation UnityEngine::SpritePackingRotation::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingRotation>("UnityEngine", "SpritePackingRotation", "Any"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingRotation Any
void UnityEngine::SpritePackingRotation::_set_Any(::UnityEngine::SpritePackingRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingRotation", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpritePackingRotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingRotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.SpriteMeshType
#include "UnityEngine/SpriteMeshType.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
// Including type: UnityEngine.SpritePackingRotation
#include "UnityEngine/SpritePackingRotation.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprite.GetPackingMode
int UnityEngine::Sprite::GetPackingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPackingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPackingRotation
int UnityEngine::Sprite::GetPackingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPackingRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackingRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPacked
int UnityEngine::Sprite::GetPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPacked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPacked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect
::UnityEngine::Rect UnityEngine::Sprite::GetTextureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRectOffset
::UnityEngine::Vector2 UnityEngine::Sprite::GetTextureRectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs
::UnityEngine::Vector4 UnityEngine::Sprite::GetInnerUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetInnerUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs
::UnityEngine::Vector4 UnityEngine::Sprite::GetOuterUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetOuterUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPadding
::UnityEngine::Vector4 UnityEngine::Sprite::GetPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.CreateSpriteWithoutTextureScripting
::UnityEngine::Sprite* UnityEngine::Sprite::CreateSpriteWithoutTextureScripting(::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsToUnits, ::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::CreateSpriteWithoutTextureScripting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSpriteWithoutTextureScripting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsToUnits), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, pivot, pixelsToUnits, texture);
}
// Autogenerated method: UnityEngine.Sprite.CreateSprite
::UnityEngine::Sprite* UnityEngine::Sprite::CreateSprite(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType, ::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape, ::ArrayW<::UnityEngine::SecondarySpriteTexture> secondaryTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::CreateSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape), ::il2cpp_utils::ExtractType(secondaryTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape, secondaryTexture);
}
// Autogenerated method: UnityEngine.Sprite.get_bounds
::UnityEngine::Bounds UnityEngine::Sprite::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_rect
::UnityEngine::Rect UnityEngine::Sprite::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_border
::UnityEngine::Vector4 UnityEngine::Sprite::get_border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_border");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_texture
::UnityEngine::Texture2D* UnityEngine::Sprite::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetSecondaryTexture
::UnityEngine::Texture2D* UnityEngine::Sprite::GetSecondaryTexture(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetSecondaryTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecondaryTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Sprite.GetSecondaryTextureCount
int UnityEngine::Sprite::GetSecondaryTextureCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetSecondaryTextureCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecondaryTextureCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetSecondaryTextures
int UnityEngine::Sprite::GetSecondaryTextures(::ArrayW<::UnityEngine::SecondarySpriteTexture> secondaryTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetSecondaryTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecondaryTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secondaryTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, secondaryTexture);
}
// Autogenerated method: UnityEngine.Sprite.get_pixelsPerUnit
float UnityEngine::Sprite::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_spriteAtlasTextureScale
float UnityEngine::Sprite::get_spriteAtlasTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_spriteAtlasTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAtlasTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_associatedAlphaSplitTexture
::UnityEngine::Texture2D* UnityEngine::Sprite::get_associatedAlphaSplitTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_associatedAlphaSplitTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_associatedAlphaSplitTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_pivot
::UnityEngine::Vector2 UnityEngine::Sprite::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packed
bool UnityEngine::Sprite::get_packed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_packed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packingMode
::UnityEngine::SpritePackingMode UnityEngine::Sprite::get_packingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_packingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpritePackingMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packingRotation
::UnityEngine::SpritePackingRotation UnityEngine::Sprite::get_packingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_packingRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packingRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpritePackingRotation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_textureRect
::UnityEngine::Rect UnityEngine::Sprite::get_textureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_textureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_textureRectOffset
::UnityEngine::Vector2 UnityEngine::Sprite::get_textureRectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_textureRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_vertices
::ArrayW<::UnityEngine::Vector2> UnityEngine::Sprite::get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_triangles
::ArrayW<uint16_t> UnityEngine::Sprite::get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_triangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint16_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_uv
::ArrayW<::UnityEngine::Vector2> UnityEngine::Sprite::get_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_uv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPhysicsShapeCount
int UnityEngine::Sprite::GetPhysicsShapeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPhysicsShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhysicsShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPhysicsShapePointCount
int UnityEngine::Sprite::GetPhysicsShapePointCount(int shapeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPhysicsShapePointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhysicsShapePointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, shapeIdx);
}
// Autogenerated method: UnityEngine.Sprite.Internal_GetPhysicsShapePointCount
int UnityEngine::Sprite::Internal_GetPhysicsShapePointCount(int shapeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Internal_GetPhysicsShapePointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetPhysicsShapePointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, shapeIdx);
}
// Autogenerated method: UnityEngine.Sprite.GetPhysicsShape
int UnityEngine::Sprite::GetPhysicsShape(int shapeIdx, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* physicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPhysicsShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhysicsShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIdx), ::il2cpp_utils::ExtractType(physicsShape)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, shapeIdx, physicsShape);
}
// Autogenerated method: UnityEngine.Sprite.GetPhysicsShapeImpl
void UnityEngine::Sprite::GetPhysicsShapeImpl(::UnityEngine::Sprite* sprite, int shapeIdx, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* physicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPhysicsShapeImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "GetPhysicsShapeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(shapeIdx), ::il2cpp_utils::ExtractType(physicsShape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, shapeIdx, physicsShape);
}
// Autogenerated method: UnityEngine.Sprite.OverridePhysicsShape
void UnityEngine::Sprite::OverridePhysicsShape(::System::Collections::Generic::IList_1<::ArrayW<::UnityEngine::Vector2>>* physicsShapes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::OverridePhysicsShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverridePhysicsShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsShapes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physicsShapes);
}
// Autogenerated method: UnityEngine.Sprite.OverridePhysicsShapeCount
void UnityEngine::Sprite::OverridePhysicsShapeCount(::UnityEngine::Sprite* sprite, int physicsShapeCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::OverridePhysicsShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "OverridePhysicsShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(physicsShapeCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, physicsShapeCount);
}
// Autogenerated method: UnityEngine.Sprite.OverridePhysicsShape
void UnityEngine::Sprite::OverridePhysicsShape(::UnityEngine::Sprite* sprite, ::ArrayW<::UnityEngine::Vector2> physicsShape, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::OverridePhysicsShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "OverridePhysicsShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(physicsShape), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, physicsShape, idx);
}
// Autogenerated method: UnityEngine.Sprite.OverrideGeometry
void UnityEngine::Sprite::OverrideGeometry(::ArrayW<::UnityEngine::Vector2> vertices, ::ArrayW<uint16_t> triangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::OverrideGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, triangles);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsToUnits, ::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsToUnits), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, pivot, pixelsToUnits, texture);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsToUnits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsToUnits)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, pivot, pixelsToUnits);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType, ::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType, ::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape, ::ArrayW<::UnityEngine::SecondarySpriteTexture> secondaryTextures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape), ::il2cpp_utils::ExtractType(secondaryTextures)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape, secondaryTextures);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType, ::UnityEngine::Vector4 border) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot, float pixelsPerUnit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit);
}
// Autogenerated method: UnityEngine.Sprite.Create
::UnityEngine::Sprite* UnityEngine::Sprite::Create(::UnityEngine::Texture2D* texture, ::UnityEngine::Rect rect, ::UnityEngine::Vector2 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, rect, pivot);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect_Injected
void UnityEngine::Sprite::GetTextureRect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRectOffset_Injected
void UnityEngine::Sprite::GetTextureRectOffset_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRectOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRectOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs_Injected
void UnityEngine::Sprite::GetInnerUVs_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetInnerUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs_Injected
void UnityEngine::Sprite::GetOuterUVs_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetOuterUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetPadding_Injected
void UnityEngine::Sprite::GetPadding_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPadding_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.CreateSpriteWithoutTextureScripting_Injected
::UnityEngine::Sprite* UnityEngine::Sprite::CreateSpriteWithoutTextureScripting_Injected(ByRef<::UnityEngine::Rect> rect, ByRef<::UnityEngine::Vector2> pivot, float pixelsToUnits, ::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::CreateSpriteWithoutTextureScripting_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSpriteWithoutTextureScripting_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsToUnits), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rect), byref(pivot), pixelsToUnits, texture);
}
// Autogenerated method: UnityEngine.Sprite.CreateSprite_Injected
::UnityEngine::Sprite* UnityEngine::Sprite::CreateSprite_Injected(::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::Rect> rect, ByRef<::UnityEngine::Vector2> pivot, float pixelsPerUnit, uint extrude, ::UnityEngine::SpriteMeshType meshType, ByRef<::UnityEngine::Vector4> border, bool generateFallbackPhysicsShape, ::ArrayW<::UnityEngine::SecondarySpriteTexture> secondaryTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::CreateSprite_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSprite_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape), ::il2cpp_utils::ExtractType(secondaryTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, byref(rect), byref(pivot), pixelsPerUnit, extrude, meshType, byref(border), generateFallbackPhysicsShape, secondaryTexture);
}
// Autogenerated method: UnityEngine.Sprite.get_bounds_Injected
void UnityEngine::Sprite::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_rect_Injected
void UnityEngine::Sprite::get_rect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_border_Injected
void UnityEngine::Sprite::get_border_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_border_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_pivot_Injected
void UnityEngine::Sprite::get_pivot_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers
#include "UnityEngine/_Scripting/APIUpdating/APIUpdaterRuntimeHelpers.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetMovedFromAttributeDataForType
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType(::System::Type* sourceType, ByRef<::StringW> assembly, ByRef<::StringW> nsp, ByRef<::StringW> klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetMovedFromAttributeDataForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceType, byref(assembly), byref(nsp), byref(klass));
}
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetObsoleteTypeRedirection
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection(::System::Type* sourceType, ByRef<::StringW> assemblyName, ByRef<::StringW> nsp, ByRef<::StringW> className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetObsoleteTypeRedirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceType, byref(assemblyName), byref(nsp), byref(className));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Sprites.DataUtility
#include "UnityEngine/Sprites/DataUtility.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetInnerUV
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetInnerUV(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetInnerUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetInnerUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetOuterUV
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetOuterUV(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetOuterUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetOuterUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetPadding
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetPadding(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetMinSize
::UnityEngine::Vector2 UnityEngine::Sprites::DataUtility::GetMinSize(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.Light2DBase
#include "UnityEngine/U2D/Light2DBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.PixelPerfectRendering
#include "UnityEngine/U2D/PixelPerfectRendering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.U2D.PixelPerfectRendering.set_pixelSnapSpacing
void UnityEngine::U2D::PixelPerfectRendering::set_pixelSnapSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::PixelPerfectRendering::set_pixelSnapSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "PixelPerfectRendering", "set_pixelSnapSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteChannelInfo
#include "UnityEngine/U2D/SpriteChannelInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_Buffer
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::U2D::SpriteChannelInfo::dyn_m_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::dyn_m_Buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Buffer"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Count
[[deprecated("Use field access instead!")]] int& UnityEngine::U2D::SpriteChannelInfo::dyn_m_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::dyn_m_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Offset
[[deprecated("Use field access instead!")]] int& UnityEngine::U2D::SpriteChannelInfo::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Stride
[[deprecated("Use field access instead!")]] int& UnityEngine::U2D::SpriteChannelInfo::dyn_m_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::dyn_m_Stride");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Stride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.U2D.SpriteChannelInfo.get_buffer
void* UnityEngine::U2D::SpriteChannelInfo::get_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::get_buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteChannelInfo.get_count
int UnityEngine::U2D::SpriteChannelInfo::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::get_count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteChannelInfo.get_offset
int UnityEngine::U2D::SpriteChannelInfo::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteChannelInfo.get_stride
int UnityEngine::U2D::SpriteChannelInfo::get_stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteChannelInfo::get_stride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_stride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteDataAccessExtensions
#include "UnityEngine/U2D/SpriteDataAccessExtensions.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.U2D.SpriteChannelInfo
#include "UnityEngine/U2D/SpriteChannelInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.U2D.SpriteDataAccessExtensions.GetIndices
::Unity::Collections::NativeArray_1<uint16_t> UnityEngine::U2D::SpriteDataAccessExtensions::GetIndices(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteDataAccessExtensions::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteDataAccessExtensions", "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Collections::NativeArray_1<uint16_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.U2D.SpriteDataAccessExtensions.GetIndicesInfo
::UnityEngine::U2D::SpriteChannelInfo UnityEngine::U2D::SpriteDataAccessExtensions::GetIndicesInfo(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteDataAccessExtensions::GetIndicesInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteDataAccessExtensions", "GetIndicesInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::U2D::SpriteChannelInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.U2D.SpriteDataAccessExtensions.GetChannelInfo
::UnityEngine::U2D::SpriteChannelInfo UnityEngine::U2D::SpriteDataAccessExtensions::GetChannelInfo(::UnityEngine::Sprite* sprite, ::UnityEngine::Rendering::VertexAttribute channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteDataAccessExtensions::GetChannelInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteDataAccessExtensions", "GetChannelInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(channel)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::U2D::SpriteChannelInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, channel);
}
// Autogenerated method: UnityEngine.U2D.SpriteDataAccessExtensions.GetIndicesInfo_Injected
void UnityEngine::U2D::SpriteDataAccessExtensions::GetIndicesInfo_Injected(::UnityEngine::Sprite* sprite, ByRef<::UnityEngine::U2D::SpriteChannelInfo> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteDataAccessExtensions::GetIndicesInfo_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteDataAccessExtensions", "GetIndicesInfo_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::U2D::SpriteChannelInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, byref(ret));
}
// Autogenerated method: UnityEngine.U2D.SpriteDataAccessExtensions.GetChannelInfo_Injected
void UnityEngine::U2D::SpriteDataAccessExtensions::GetChannelInfo_Injected(::UnityEngine::Sprite* sprite, ::UnityEngine::Rendering::VertexAttribute channel, ByRef<::UnityEngine::U2D::SpriteChannelInfo> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteDataAccessExtensions::GetChannelInfo_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteDataAccessExtensions", "GetChannelInfo_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::U2D::SpriteChannelInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite, channel, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteAtlasManager
#include "UnityEngine/U2D/SpriteAtlasManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested(::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered", value));
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.RequestAtlas
bool UnityEngine::U2D::SpriteAtlasManager::RequestAtlas(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::RequestAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "RequestAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.add_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "add_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.remove_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "remove_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.PostRegisteredAtlas
void UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas(::UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "PostRegisteredAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.Register
void UnityEngine::U2D::SpriteAtlasManager::Register(::UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.get_isVariant
bool UnityEngine::U2D::SpriteAtlas::get_isVariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::get_isVariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isVariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.get_tag
::StringW UnityEngine::U2D::SpriteAtlas::get_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::get_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.get_spriteCount
int UnityEngine::U2D::SpriteAtlas::get_spriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::get_spriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.CanBindTo
bool UnityEngine::U2D::SpriteAtlas::CanBindTo(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::CanBindTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBindTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSprite
::UnityEngine::Sprite* UnityEngine::U2D::SpriteAtlas::GetSprite(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::GetSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSprites
int UnityEngine::U2D::SpriteAtlas::GetSprites(::ArrayW<::UnityEngine::Sprite*> sprites) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::GetSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprites)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sprites);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSprites
int UnityEngine::U2D::SpriteAtlas::GetSprites(::ArrayW<::UnityEngine::Sprite*> sprites, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::GetSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprites), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sprites, name);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSpritesScripting
int UnityEngine::U2D::SpriteAtlas::GetSpritesScripting(::ArrayW<::UnityEngine::Sprite*> sprites) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::GetSpritesScripting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpritesScripting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprites)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sprites);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSpritesWithNameScripting
int UnityEngine::U2D::SpriteAtlas::GetSpritesWithNameScripting(::ArrayW<::UnityEngine::Sprite*> sprites, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::GetSpritesWithNameScripting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpritesWithNameScripting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprites), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sprites, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Profiler
#include "UnityEngine/Profiling/Profiler.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Profiling.Profiler.get_enabled
bool UnityEngine::Profiling::Profiler::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.EndThreadProfiling
void UnityEngine::Profiling::Profiler::EndThreadProfiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::EndThreadProfiling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "EndThreadProfiling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.BeginSample
void UnityEngine::Profiling::Profiler::BeginSample(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::BeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "BeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.ValidateArguments
void UnityEngine::Profiling::Profiler::ValidateArguments(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::ValidateArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "ValidateArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.BeginSampleImpl
void UnityEngine::Profiling::Profiler::BeginSampleImpl(::StringW name, ::UnityEngine::Object* targetObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::BeginSampleImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "BeginSampleImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(targetObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, targetObject);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.EndSample
void UnityEngine::Profiling::Profiler::EndSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::EndSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "EndSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetRuntimeMemorySizeLong
int64_t UnityEngine::Profiling::Profiler::GetRuntimeMemorySizeLong(::UnityEngine::Object* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetRuntimeMemorySizeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetRuntimeMemorySizeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetMonoHeapSizeLong
int64_t UnityEngine::Profiling::Profiler::GetMonoHeapSizeLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetMonoHeapSizeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetMonoHeapSizeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetMonoUsedSizeLong
int64_t UnityEngine::Profiling::Profiler::GetMonoUsedSizeLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetMonoUsedSizeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetMonoUsedSizeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetTempAllocatorSize
uint UnityEngine::Profiling::Profiler::GetTempAllocatorSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetTempAllocatorSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetTempAllocatorSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetTotalAllocatedMemoryLong
int64_t UnityEngine::Profiling::Profiler::GetTotalAllocatedMemoryLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetTotalAllocatedMemoryLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetTotalAllocatedMemoryLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetTotalUnusedReservedMemoryLong
int64_t UnityEngine::Profiling::Profiler::GetTotalUnusedReservedMemoryLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetTotalUnusedReservedMemoryLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetTotalUnusedReservedMemoryLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Profiler.GetTotalReservedMemoryLong
int64_t UnityEngine::Profiling::Profiler::GetTotalReservedMemoryLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Profiler::GetTotalReservedMemoryLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetTotalReservedMemoryLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Profiling.Recorder
#include "UnityEngine/Profiling/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerRecorderOptions s_RecorderDefaultOptions
::Unity::Profiling::ProfilerRecorderOptions UnityEngine::Profiling::Recorder::_get_s_RecorderDefaultOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::_get_s_RecorderDefaultOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerRecorderOptions>("UnityEngine.Profiling", "Recorder", "s_RecorderDefaultOptions"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerRecorderOptions s_RecorderDefaultOptions
void UnityEngine::Profiling::Recorder::_set_s_RecorderDefaultOptions(::Unity::Profiling::ProfilerRecorderOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::_set_s_RecorderDefaultOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling", "Recorder", "s_RecorderDefaultOptions", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Profiling.Recorder s_InvalidRecorder
::UnityEngine::Profiling::Recorder* UnityEngine::Profiling::Recorder::_get_s_InvalidRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::_get_s_InvalidRecorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Profiling::Recorder*>("UnityEngine.Profiling", "Recorder", "s_InvalidRecorder"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Profiling.Recorder s_InvalidRecorder
void UnityEngine::Profiling::Recorder::_set_s_InvalidRecorder(::UnityEngine::Profiling::Recorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::_set_s_InvalidRecorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling", "Recorder", "s_InvalidRecorder", value));
}
// Autogenerated instance field getter
// Get instance field: private Unity.Profiling.ProfilerRecorder m_RecorderCPU
[[deprecated("Use field access instead!")]] ::Unity::Profiling::ProfilerRecorder& UnityEngine::Profiling::Recorder::dyn_m_RecorderCPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::dyn_m_RecorderCPU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecorderCPU"))->offset;
  return *reinterpret_cast<::Unity::Profiling::ProfilerRecorder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Profiling.ProfilerRecorder m_RecorderGPU
[[deprecated("Use field access instead!")]] ::Unity::Profiling::ProfilerRecorder& UnityEngine::Profiling::Recorder::dyn_m_RecorderGPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::dyn_m_RecorderGPU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecorderGPU"))->offset;
  return *reinterpret_cast<::Unity::Profiling::ProfilerRecorder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Profiling.Recorder.set_enabled
void UnityEngine::Profiling::Recorder::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Recorder.SetEnabled
void UnityEngine::Profiling::Recorder::SetEnabled(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::SetEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: UnityEngine.Profiling.Recorder..cctor
void UnityEngine::Profiling::Recorder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Recorder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Recorder.Finalize
void UnityEngine::Profiling::Recorder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Recorder::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Sampler
#include "UnityEngine/Profiling/Sampler.hpp"
// Including type: UnityEngine.Profiling.Recorder
#include "UnityEngine/Profiling/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.Profiling.Sampler s_InvalidSampler
::UnityEngine::Profiling::Sampler* UnityEngine::Profiling::Sampler::_get_s_InvalidSampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Sampler::_get_s_InvalidSampler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Profiling::Sampler*>("UnityEngine.Profiling", "Sampler", "s_InvalidSampler"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Profiling.Sampler s_InvalidSampler
void UnityEngine::Profiling::Sampler::_set_s_InvalidSampler(::UnityEngine::Profiling::Sampler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Sampler::_set_s_InvalidSampler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling", "Sampler", "s_InvalidSampler", value));
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Profiling::Sampler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Sampler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Profiling.Sampler.GetRecorder
::UnityEngine::Profiling::Recorder* UnityEngine::Profiling::Sampler::GetRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Sampler::GetRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Profiling::Recorder*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Sampler..cctor
void UnityEngine::Profiling::Sampler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Sampler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Sampler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.CustomSampler
#include "UnityEngine/Profiling/CustomSampler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.Profiling.CustomSampler s_InvalidCustomSampler
::UnityEngine::Profiling::CustomSampler* UnityEngine::Profiling::CustomSampler::_get_s_InvalidCustomSampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::CustomSampler::_get_s_InvalidCustomSampler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Profiling::CustomSampler*>("UnityEngine.Profiling", "CustomSampler", "s_InvalidCustomSampler"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Profiling.CustomSampler s_InvalidCustomSampler
void UnityEngine::Profiling::CustomSampler::_set_s_InvalidCustomSampler(::UnityEngine::Profiling::CustomSampler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::CustomSampler::_set_s_InvalidCustomSampler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling", "CustomSampler", "s_InvalidCustomSampler", value));
}
// Autogenerated method: UnityEngine.Profiling.CustomSampler.Create
::UnityEngine::Profiling::CustomSampler* UnityEngine::Profiling::CustomSampler::Create(::StringW name, bool collectGpuData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::CustomSampler::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "CustomSampler", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(collectGpuData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Profiling::CustomSampler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, collectGpuData);
}
// Autogenerated method: UnityEngine.Profiling.CustomSampler..cctor
void UnityEngine::Profiling::CustomSampler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::CustomSampler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "CustomSampler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Jobs.IJobParallelForTransform
#include "UnityEngine/Jobs/IJobParallelForTransform.hpp"
// Including type: UnityEngine.Jobs.TransformAccess
#include "UnityEngine/Jobs/TransformAccess.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Jobs.IJobParallelForTransform.Execute
void UnityEngine::Jobs::IJobParallelForTransform::Execute(int index, ::UnityEngine::Jobs::TransformAccess transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::IJobParallelForTransform::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Jobs::IJobParallelForTransform*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Jobs.IJobParallelForTransformExtensions
#include "UnityEngine/Jobs/IJobParallelForTransformExtensions.hpp"
// Including type: UnityEngine.Jobs.IJobParallelForTransformExtensions/TransformParallelForLoopStruct`1
#include "UnityEngine/Jobs/IJobParallelForTransformExtensions_TransformParallelForLoopStruct_1.hpp"
// Including type: UnityEngine.Jobs.IJobParallelForTransform
#include "UnityEngine/Jobs/IJobParallelForTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Jobs.TransformAccess
#include "UnityEngine/Jobs/TransformAccess.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr hierarchy
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Jobs::TransformAccess::dyn_hierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::dyn_hierarchy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hierarchy"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& UnityEngine::Jobs::TransformAccess::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.get_position
::UnityEngine::Vector3 UnityEngine::Jobs::TransformAccess::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.set_position
void UnityEngine::Jobs::TransformAccess::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.get_rotation
::UnityEngine::Quaternion UnityEngine::Jobs::TransformAccess::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.set_rotation
void UnityEngine::Jobs::TransformAccess::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.get_localScale
::UnityEngine::Vector3 UnityEngine::Jobs::TransformAccess::get_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::get_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.get_localToWorldMatrix
::UnityEngine::Matrix4x4 UnityEngine::Jobs::TransformAccess::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.GetPosition
void UnityEngine::Jobs::TransformAccess::GetPosition(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Vector3> p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(p));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.SetPosition
void UnityEngine::Jobs::TransformAccess::SetPosition(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Vector3> p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(p));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.GetRotation
void UnityEngine::Jobs::TransformAccess::GetRotation(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Quaternion> r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(r));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.SetRotation
void UnityEngine::Jobs::TransformAccess::SetRotation(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Quaternion> r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(r));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.GetLocalScale
void UnityEngine::Jobs::TransformAccess::GetLocalScale(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Vector3> r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(r));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccess.GetLocalToWorldMatrix
void UnityEngine::Jobs::TransformAccess::GetLocalToWorldMatrix(ByRef<::UnityEngine::Jobs::TransformAccess> access, ByRef<::UnityEngine::Matrix4x4> m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccess::GetLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccess", "GetLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(access), byref(m));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Jobs.TransformAccessArray
#include "UnityEngine/Jobs/TransformAccessArray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_TransformArray
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Jobs::TransformAccessArray::dyn_m_TransformArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::dyn_m_TransformArray");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TransformArray"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray..ctor
UnityEngine::Jobs::TransformAccessArray::TransformAccessArray(int capacity, int desiredJobCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(desiredJobCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity, desiredJobCount);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.Allocate
void UnityEngine::Jobs::TransformAccessArray::Allocate(int capacity, int desiredJobCount, ByRef<::UnityEngine::Jobs::TransformAccessArray> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(desiredJobCount), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Jobs::TransformAccessArray&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity, desiredJobCount, byref(array));
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.get_isCreated
bool UnityEngine::Jobs::TransformAccessArray::get_isCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::get_isCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.Dispose
void UnityEngine::Jobs::TransformAccessArray::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Jobs::TransformAccessArray), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.GetTransformAccessArrayForSchedule
::System::IntPtr UnityEngine::Jobs::TransformAccessArray::GetTransformAccessArrayForSchedule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::GetTransformAccessArrayForSchedule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTransformAccessArrayForSchedule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.get_Item
::UnityEngine::Transform* UnityEngine::Jobs::TransformAccessArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.set_Item
void UnityEngine::Jobs::TransformAccessArray::set_Item(int index, ::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.get_length
int UnityEngine::Jobs::TransformAccessArray::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.Add
void UnityEngine::Jobs::TransformAccessArray::Add(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.RemoveAtSwapBack
void UnityEngine::Jobs::TransformAccessArray::RemoveAtSwapBack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::RemoveAtSwapBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveAtSwapBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.Create
::System::IntPtr UnityEngine::Jobs::TransformAccessArray::Create(int capacity, int desiredJobCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(desiredJobCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity, desiredJobCount);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.DestroyTransformAccessArray
void UnityEngine::Jobs::TransformAccessArray::DestroyTransformAccessArray(::System::IntPtr transformArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::DestroyTransformAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "DestroyTransformAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArray);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.Add
void UnityEngine::Jobs::TransformAccessArray::Add(::System::IntPtr transformArrayIntPtr, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr, transform);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.RemoveAtSwapBack
void UnityEngine::Jobs::TransformAccessArray::RemoveAtSwapBack(::System::IntPtr transformArrayIntPtr, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::RemoveAtSwapBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "RemoveAtSwapBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr, index);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.GetSortedTransformAccess
::System::IntPtr UnityEngine::Jobs::TransformAccessArray::GetSortedTransformAccess(::System::IntPtr transformArrayIntPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::GetSortedTransformAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "GetSortedTransformAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.GetSortedToUserIndex
::System::IntPtr UnityEngine::Jobs::TransformAccessArray::GetSortedToUserIndex(::System::IntPtr transformArrayIntPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::GetSortedToUserIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "GetSortedToUserIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.GetLength
int UnityEngine::Jobs::TransformAccessArray::GetLength(::System::IntPtr transformArrayIntPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.GetTransform
::UnityEngine::Transform* UnityEngine::Jobs::TransformAccessArray::GetTransform(::System::IntPtr transformArrayIntPtr, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr, index);
}
// Autogenerated method: UnityEngine.Jobs.TransformAccessArray.SetTransform
void UnityEngine::Jobs::TransformAccessArray::SetTransform(::System::IntPtr transformArrayIntPtr, int index, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Jobs::TransformAccessArray::SetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Jobs", "TransformAccessArray", "SetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformArrayIntPtr), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transformArrayIntPtr, index, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_EventDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_EventDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "EventDefined"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
void UnityEngine::Events::PersistentListenerMode::_set_EventDefined(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_EventDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "EventDefined", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Void
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Void() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Void");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Void"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Void
void UnityEngine::Events::PersistentListenerMode::_set_Void(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Void");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Void", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Object
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Object"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Object
void UnityEngine::Events::PersistentListenerMode::_set_Object(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Int
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Int
void UnityEngine::Events::PersistentListenerMode::_set_Int(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Float
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Float
void UnityEngine::Events::PersistentListenerMode::_set_Float(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode String
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "String"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode String
void UnityEngine::Events::PersistentListenerMode::_set_String(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Bool
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Bool
void UnityEngine::Events::PersistentListenerMode::_set_Bool(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Bool", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Events::PersistentListenerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.UnityEventTools
#include "UnityEngine/Events/UnityEventTools.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityEventTools.TidyAssemblyTypeName
::StringW UnityEngine::Events::UnityEventTools::TidyAssemblyTypeName(::StringW assemblyTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventTools::TidyAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEventTools", "TidyAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assemblyTypeName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_ObjectArgument
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectArgument"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ObjectArgumentAssemblyTypeName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgumentAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgumentAssemblyTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectArgumentAssemblyTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_IntArgument
[[deprecated("Use field access instead!")]] int& UnityEngine::Events::ArgumentCache::dyn_m_IntArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_IntArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntArgument"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FloatArgument
[[deprecated("Use field access instead!")]] float& UnityEngine::Events::ArgumentCache::dyn_m_FloatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_FloatArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FloatArgument"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_StringArgument
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Events::ArgumentCache::dyn_m_StringArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_StringArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringArgument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BoolArgument
[[deprecated("Use field access instead!")]] bool& UnityEngine::Events::ArgumentCache::dyn_m_BoolArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_BoolArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoolArgument"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgument
::UnityEngine::Object* UnityEngine::Events::ArgumentCache::get_unityObjectArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_unityObjectArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgumentAssemblyTypeName
::StringW UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgumentAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_intArgument
int UnityEngine::Events::ArgumentCache::get_intArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_intArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_floatArgument
float UnityEngine::Events::ArgumentCache::get_floatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_floatArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_stringArgument
::StringW UnityEngine::Events::ArgumentCache::get_stringArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_stringArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_boolArgument
bool UnityEngine::Events::ArgumentCache::get_boolArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_boolArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boolArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnBeforeSerialize
void UnityEngine::Events::ArgumentCache::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::ArgumentCache*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnAfterDeserialize
void UnityEngine::Events::ArgumentCache::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::ArgumentCache*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Invoke
void UnityEngine::Events::BaseInvokableCall::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::BaseInvokableCall*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.AllowInvoke
bool UnityEngine::Events::BaseInvokableCall::AllowInvoke(::System::Delegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::AllowInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "BaseInvokableCall", "AllowInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegate);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Find
bool UnityEngine::Events::BaseInvokableCall::Find(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::BaseInvokableCall*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCall
#include "UnityEngine/Events/InvokableCall.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityAction Delegate
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& UnityEngine::Events::InvokableCall::dyn_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::dyn_Delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delegate"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.add_Delegate
void UnityEngine::Events::InvokableCall::add_Delegate(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::add_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.remove_Delegate
void UnityEngine::Events::InvokableCall::remove_Delegate(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::remove_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::BaseInvokableCall*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Find
bool UnityEngine::Events::InvokableCall::Find(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::BaseInvokableCall*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.UnityEventCallState
#include "UnityEngine/Events/UnityEventCallState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState Off
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState Off
void UnityEngine::Events::UnityEventCallState::_set_Off(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
void UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
void UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Events::UnityEventCallState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::Events::PersistentCall::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_TargetAssemblyTypeName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Events::PersistentCall::dyn_m_TargetAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_TargetAssemblyTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetAssemblyTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_MethodName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Events::PersistentCall::dyn_m_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_MethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.PersistentListenerMode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::PersistentListenerMode& UnityEngine::Events::PersistentCall::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::PersistentListenerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.ArgumentCache m_Arguments
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::ArgumentCache*& UnityEngine::Events::PersistentCall::dyn_m_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Arguments"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::ArgumentCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEventCallState m_CallState
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEventCallState& UnityEngine::Events::PersistentCall::dyn_m_CallState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_CallState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CallState"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEventCallState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_target
::UnityEngine::Object* UnityEngine::Events::PersistentCall::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_targetAssemblyTypeName
::StringW UnityEngine::Events::PersistentCall::get_targetAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_targetAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_methodName
::StringW UnityEngine::Events::PersistentCall::get_methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_methodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_methodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_mode
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentCall::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::PersistentListenerMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_arguments
::UnityEngine::Events::ArgumentCache* UnityEngine::Events::PersistentCall::get_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::ArgumentCache*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.IsValid
bool UnityEngine::Events::PersistentCall::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetRuntimeCall
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetRuntimeCall(::UnityEngine::Events::UnityEventBase* theEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::GetRuntimeCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, theEvent);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetObjectCall
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetObjectCall(::UnityEngine::Object* target, ::System::Reflection::MethodInfo* method, ::UnityEngine::Events::ArgumentCache* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::GetObjectCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "PersistentCall", "GetObjectCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, method, arguments);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.OnBeforeSerialize
void UnityEngine::Events::PersistentCall::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::PersistentCall*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.OnAfterDeserialize
void UnityEngine::Events::PersistentCall::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::PersistentCall*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Events.PersistentCall> m_Calls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Events::PersistentCall*>*& UnityEngine::Events::PersistentCallGroup::dyn_m_Calls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCallGroup::dyn_m_Calls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Calls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::PersistentCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.PersistentCallGroup.get_Count
int UnityEngine::Events::PersistentCallGroup::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCallGroup::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCallGroup.Initialize
void UnityEngine::Events::PersistentCallGroup::Initialize(::UnityEngine::Events::InvokableCallList* invokableList, ::UnityEngine::Events::UnityEventBase* unityEventBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCallGroup::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokableList), ::il2cpp_utils::ExtractType(unityEventBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, invokableList, unityEventBase);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_PersistentCalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_PersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_PersistentCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PersistentCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_RuntimeCalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_RuntimeCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_RuntimeCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_ExecutingCalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_ExecutingCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_ExecutingCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecutingCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedsUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::Events::InvokableCallList::dyn_m_NeedsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_NeedsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddPersistentInvokableCall
void UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPersistentInvokableCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddListener
void UnityEngine::Events::InvokableCallList::AddListener(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.RemoveListener
void UnityEngine::Events::InvokableCallList::RemoveListener(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.Clear
void UnityEngine::Events::InvokableCallList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.ClearPersistent
void UnityEngine::Events::InvokableCallList::ClearPersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::ClearPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.PrepareInvoke
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::InvokableCallList::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.InvokableCallList m_Calls
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::InvokableCallList*& UnityEngine::Events::UnityEventBase::dyn_m_Calls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_Calls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Calls"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::InvokableCallList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.PersistentCallGroup m_PersistentCalls
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::PersistentCallGroup*& UnityEngine::Events::UnityEventBase::dyn_m_PersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_PersistentCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PersistentCalls"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::PersistentCallGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CallsDirty
[[deprecated("Use field access instead!")]] bool& UnityEngine::Events::UnityEventBase::dyn_m_CallsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_CallsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CallsDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::UnityEventBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::UnityEventBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod_Impl
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod_Impl(::StringW name, ::System::Type* targetObjType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod_Impl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::UnityEventBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, targetObjType);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetDelegate
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEventBase::GetDelegate(::Il2CppObject* target, ::System::Reflection::MethodInfo* theFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::GetDelegate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Events::UnityEventBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, target, theFunction);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(::UnityEngine::Events::PersistentCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(::StringW name, ::System::Type* listenerType, ::UnityEngine::Events::PersistentListenerMode mode, ::System::Type* argumentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(listenerType), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(argumentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, listenerType, mode, argumentType);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetPersistentEventCount
int UnityEngine::Events::UnityEventBase::GetPersistentEventCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::GetPersistentEventCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPersistentEventCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.DirtyPersistentCalls
void UnityEngine::Events::UnityEventBase::DirtyPersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::DirtyPersistentCalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DirtyPersistentCalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RebuildPersistentCallsIfNeeded
void UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildPersistentCallsIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.AddCall
void UnityEngine::Events::UnityEventBase::AddCall(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::AddCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RemoveListener
void UnityEngine::Events::UnityEventBase::RemoveListener(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RemoveAllListeners
void UnityEngine::Events::UnityEventBase::RemoveAllListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::RemoveAllListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.PrepareInvoke
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::UnityEventBase::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetValidMethodInfo
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::GetValidMethodInfo(::System::Type* objectType, ::StringW functionName, ::ArrayW<::System::Type*> argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::GetValidMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEventBase", "GetValidMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(functionName), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, functionName, argumentTypes);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.ToString
::StringW UnityEngine::Events::UnityEventBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
