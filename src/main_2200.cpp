// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: Pathfinding.Seeker/ModifierPass
#include "Pathfinding/Seeker_ModifierPass.hpp"
// Including type: Pathfinding.Seeker/<>c
#include "Pathfinding/Seeker_--c.hpp"
// Including type: Pathfinding.StartEndModifier
#include "Pathfinding/StartEndModifier.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.MultiTargetPath
#include "Pathfinding/MultiTargetPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawGizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::Seeker::dyn_drawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_drawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean detailedGizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::Seeker::dyn_detailedGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_detailedGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detailedGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier startEndModifier
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier*& Pathfinding::Seeker::dyn_startEndModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_startEndModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startEndModifier"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 traversableTags
[[deprecated("Use field access instead!")]] int& Pathfinding::Seeker::dyn_traversableTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_traversableTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traversableTags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] tagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Seeker::dyn_tagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_tagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphMask graphMask
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphMask& Pathfinding::Seeker::dyn_graphMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_graphMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphMask"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 graphMaskCompatibility
[[deprecated("Use field access instead!")]] int& Pathfinding::Seeker::dyn_graphMaskCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_graphMaskCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphMaskCompatibility"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate pathCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_pathCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_pathCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate preProcessPath
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_preProcessPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_preProcessPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preProcessPath"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate postProcessPath
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_postProcessPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_postProcessPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postProcessPath"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> lastCompletedVectorPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Seeker::dyn_lastCompletedVectorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_lastCompletedVectorPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCompletedVectorPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> lastCompletedNodePath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::Seeker::dyn_lastCompletedNodePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_lastCompletedNodePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCompletedNodePath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Seeker::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path prevPath
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Seeker::dyn_prevPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_prevPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPath"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.OnPathDelegate onPathDelegate
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_onPathDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_onPathDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPathDelegate"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.OnPathDelegate onPartialPathDelegate
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_onPartialPathDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_onPartialPathDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPartialPathDelegate"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.OnPathDelegate tmpPathCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Seeker::dyn_tmpPathCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_tmpPathCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmpPathCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt32 lastPathID
[[deprecated("Use field access instead!")]] uint& Pathfinding::Seeker::dyn_lastPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_lastPathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPathID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.IPathModifier> modifiers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::IPathModifier*>*& Pathfinding::Seeker::dyn_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::dyn_modifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::IPathModifier*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Seeker.GetCurrentPath
::Pathfinding::Path* Pathfinding::Seeker::GetCurrentPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::GetCurrentPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.CancelCurrentPathRequest
void Pathfinding::Seeker::CancelCurrentPathRequest(bool pool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::CancelCurrentPathRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelCurrentPathRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pool);
}
// Autogenerated method: Pathfinding.Seeker.OnDestroy
void Pathfinding::Seeker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.ReleaseClaimedPath
void Pathfinding::Seeker::ReleaseClaimedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ReleaseClaimedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseClaimedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.RegisterModifier
void Pathfinding::Seeker::RegisterModifier(::Pathfinding::IPathModifier* modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::RegisterModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifier);
}
// Autogenerated method: Pathfinding.Seeker.DeregisterModifier
void Pathfinding::Seeker::DeregisterModifier(::Pathfinding::IPathModifier* modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::DeregisterModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifier);
}
// Autogenerated method: Pathfinding.Seeker.PostProcess
void Pathfinding::Seeker::PostProcess(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::PostProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.Seeker.RunModifiers
void Pathfinding::Seeker::RunModifiers(::Pathfinding::Seeker::ModifierPass pass, ::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::RunModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pass, path);
}
// Autogenerated method: Pathfinding.Seeker.IsDone
bool Pathfinding::Seeker::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.OnPathComplete
void Pathfinding::Seeker::OnPathComplete(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.Seeker.OnPathComplete
void Pathfinding::Seeker::OnPathComplete(::Pathfinding::Path* p, bool runModifiers, bool sendCallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(runModifiers), ::il2cpp_utils::ExtractType(sendCallbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, runModifiers, sendCallbacks);
}
// Autogenerated method: Pathfinding.Seeker.OnPartialPathComplete
void Pathfinding::Seeker::OnPartialPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnPartialPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPartialPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Seeker.OnMultiPathComplete
void Pathfinding::Seeker::OnMultiPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnMultiPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMultiPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Seeker.GetNewPath
::Pathfinding::ABPath* Pathfinding::Seeker::GetNewPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::GetNewPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ABPath*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Pathfinding.Seeker.StartPath
::Pathfinding::Path* Pathfinding::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Pathfinding.Seeker.StartPath
::Pathfinding::Path* Pathfinding::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end, callback);
}
// Autogenerated method: Pathfinding.Seeker.StartPath
::Pathfinding::Path* Pathfinding::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback, ::Pathfinding::GraphMask graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end, callback, graphMask);
}
// Autogenerated method: Pathfinding.Seeker.StartPath
::Pathfinding::Path* Pathfinding::Seeker::StartPath(::Pathfinding::Path* p, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, p, callback);
}
// Autogenerated method: Pathfinding.Seeker.StartPath
::Pathfinding::Path* Pathfinding::Seeker::StartPath(::Pathfinding::Path* p, ::Pathfinding::OnPathDelegate* callback, ::Pathfinding::GraphMask graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, p, callback, graphMask);
}
// Autogenerated method: Pathfinding.Seeker.StartPathInternal
void Pathfinding::Seeker::StartPathInternal(::Pathfinding::Path* p, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartPathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, callback);
}
// Autogenerated method: Pathfinding.Seeker.StartMultiTargetPath
::Pathfinding::MultiTargetPath* Pathfinding::Seeker::StartMultiTargetPath(::UnityEngine::Vector3 start, ::ArrayW<::UnityEngine::Vector3> endPoints, bool pathsForAll, ::Pathfinding::OnPathDelegate* callback, int graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartMultiTargetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiTargetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(endPoints), ::il2cpp_utils::ExtractType(pathsForAll), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::MultiTargetPath*, false>(this, ___internal__method, start, endPoints, pathsForAll, callback, graphMask);
}
// Autogenerated method: Pathfinding.Seeker.StartMultiTargetPath
::Pathfinding::MultiTargetPath* Pathfinding::Seeker::StartMultiTargetPath(::ArrayW<::UnityEngine::Vector3> startPoints, ::UnityEngine::Vector3 end, bool pathsForAll, ::Pathfinding::OnPathDelegate* callback, int graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartMultiTargetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiTargetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPoints), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(pathsForAll), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::MultiTargetPath*, false>(this, ___internal__method, startPoints, end, pathsForAll, callback, graphMask);
}
// Autogenerated method: Pathfinding.Seeker.StartMultiTargetPath
::Pathfinding::MultiTargetPath* Pathfinding::Seeker::StartMultiTargetPath(::Pathfinding::MultiTargetPath* p, ::Pathfinding::OnPathDelegate* callback, int graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::StartMultiTargetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiTargetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::MultiTargetPath*, false>(this, ___internal__method, p, callback, graphMask);
}
// Autogenerated method: Pathfinding.Seeker.OnDrawGizmos
void Pathfinding::Seeker::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.Awake
void Pathfinding::Seeker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker.OnUpgradeSerializedData
int Pathfinding::Seeker::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Seeker/ModifierPass
#include "Pathfinding/Seeker_ModifierPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Seeker/ModifierPass PreProcess
::Pathfinding::Seeker::ModifierPass Pathfinding::Seeker::ModifierPass::_get_PreProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ModifierPass::_get_PreProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Seeker::ModifierPass>("Pathfinding", "Seeker/ModifierPass", "PreProcess"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Seeker/ModifierPass PreProcess
void Pathfinding::Seeker::ModifierPass::_set_PreProcess(::Pathfinding::Seeker::ModifierPass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ModifierPass::_set_PreProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Seeker/ModifierPass", "PreProcess", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Seeker/ModifierPass PostProcess
::Pathfinding::Seeker::ModifierPass Pathfinding::Seeker::ModifierPass::_get_PostProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ModifierPass::_get_PostProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Seeker::ModifierPass>("Pathfinding", "Seeker/ModifierPass", "PostProcess"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Seeker/ModifierPass PostProcess
void Pathfinding::Seeker::ModifierPass::_set_PostProcess(::Pathfinding::Seeker::ModifierPass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ModifierPass::_set_PostProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Seeker/ModifierPass", "PostProcess", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Seeker::ModifierPass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::ModifierPass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Seeker/<>c
#include "Pathfinding/Seeker_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Seeker/<>c <>9
::Pathfinding::Seeker::$$c* Pathfinding::Seeker::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::Seeker::$$c*>("Pathfinding", "Seeker/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Seeker/<>c <>9
void Pathfinding::Seeker::$$c::_set_$$9(::Pathfinding::Seeker::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "Seeker/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Pathfinding.IPathModifier> <>9__26_0
::System::Comparison_1<::Pathfinding::IPathModifier*>* Pathfinding::Seeker::$$c::_get_$$9__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::_get_$$9__26_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Pathfinding::IPathModifier*>*>("Pathfinding", "Seeker/<>c", "<>9__26_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Pathfinding.IPathModifier> <>9__26_0
void Pathfinding::Seeker::$$c::_set_$$9__26_0(::System::Comparison_1<::Pathfinding::IPathModifier*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::_set_$$9__26_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "Seeker/<>c", "<>9__26_0", value)));
}
// Autogenerated method: Pathfinding.Seeker/<>c..cctor
void Pathfinding::Seeker::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Seeker/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Seeker/<>c.<RegisterModifier>b__26_0
int Pathfinding::Seeker::$$c::$RegisterModifier$b__26_0(::Pathfinding::IPathModifier* a, ::Pathfinding::IPathModifier* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Seeker::$$c::<RegisterModifier>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterModifier>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarColor
#include "Pathfinding/AstarColor.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color SolidColor
::UnityEngine::Color Pathfinding::AstarColor::_get_SolidColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_SolidColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "SolidColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color SolidColor
void Pathfinding::AstarColor::_set_SolidColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_SolidColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "SolidColor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color UnwalkableNode
::UnityEngine::Color Pathfinding::AstarColor::_get_UnwalkableNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_UnwalkableNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "UnwalkableNode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color UnwalkableNode
void Pathfinding::AstarColor::_set_UnwalkableNode(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_UnwalkableNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "UnwalkableNode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color BoundsHandles
::UnityEngine::Color Pathfinding::AstarColor::_get_BoundsHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_BoundsHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "BoundsHandles"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color BoundsHandles
void Pathfinding::AstarColor::_set_BoundsHandles(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_BoundsHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "BoundsHandles", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color ConnectionLowLerp
::UnityEngine::Color Pathfinding::AstarColor::_get_ConnectionLowLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_ConnectionLowLerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "ConnectionLowLerp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color ConnectionLowLerp
void Pathfinding::AstarColor::_set_ConnectionLowLerp(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_ConnectionLowLerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "ConnectionLowLerp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color ConnectionHighLerp
::UnityEngine::Color Pathfinding::AstarColor::_get_ConnectionHighLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_ConnectionHighLerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "ConnectionHighLerp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color ConnectionHighLerp
void Pathfinding::AstarColor::_set_ConnectionHighLerp(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_ConnectionHighLerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "ConnectionHighLerp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color MeshEdgeColor
::UnityEngine::Color Pathfinding::AstarColor::_get_MeshEdgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_MeshEdgeColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AstarColor", "MeshEdgeColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color MeshEdgeColor
void Pathfinding::AstarColor::_set_MeshEdgeColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_MeshEdgeColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "MeshEdgeColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color[] AreaColors
::ArrayW<::UnityEngine::Color> Pathfinding::AstarColor::_get_AreaColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_get_AreaColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Color>>("Pathfinding", "AstarColor", "AreaColors"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color[] AreaColors
void Pathfinding::AstarColor::_set_AreaColors(::ArrayW<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::_set_AreaColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarColor", "AreaColors", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _SolidColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__SolidColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__SolidColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SolidColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _UnwalkableNode
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__UnwalkableNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__UnwalkableNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UnwalkableNode"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _BoundsHandles
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__BoundsHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__BoundsHandles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BoundsHandles"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _ConnectionLowLerp
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__ConnectionLowLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__ConnectionLowLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ConnectionLowLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _ConnectionHighLerp
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__ConnectionHighLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__ConnectionHighLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ConnectionHighLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _MeshEdgeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::AstarColor::dyn__MeshEdgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__MeshEdgeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshEdgeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] _AreaColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& Pathfinding::AstarColor::dyn__AreaColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::dyn__AreaColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AreaColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarColor.ColorHash
int Pathfinding::AstarColor::ColorHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::ColorHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarColor", "ColorHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarColor.GetAreaColor
::UnityEngine::Color Pathfinding::AstarColor::GetAreaColor(uint area) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::GetAreaColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarColor", "GetAreaColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(area)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, area);
}
// Autogenerated method: Pathfinding.AstarColor.GetTagColor
::UnityEngine::Color Pathfinding::AstarColor::GetTagColor(uint tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::GetTagColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarColor", "GetTagColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarColor.PushToStatic
void Pathfinding::AstarColor::PushToStatic(::GlobalNamespace::AstarPath* astar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::PushToStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushToStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(astar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, astar);
}
// Autogenerated method: Pathfinding.AstarColor..cctor
void Pathfinding::AstarColor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarColor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarColor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphHitInfo
#include "Pathfinding/GraphHitInfo.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphHitInfo::dyn_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::dyn_origin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphHitInfo::dyn_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::dyn_point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::GraphHitInfo::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::dyn_node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 tangentOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphHitInfo::dyn_tangentOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::dyn_tangentOrigin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tangentOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 tangent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphHitInfo::dyn_tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::dyn_tangent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tangent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphHitInfo.get_distance
float Pathfinding::GraphHitInfo::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphHitInfo..ctor
Pathfinding::GraphHitInfo::GraphHitInfo(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphHitInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphMask graphMask
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphMask& Pathfinding::NNConstraint::dyn_graphMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_graphMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphMask"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean constrainArea
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_constrainArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_constrainArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainArea"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 area
[[deprecated("Use field access instead!")]] int& Pathfinding::NNConstraint::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean constrainWalkability
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_constrainWalkability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_constrainWalkability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainWalkability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean walkable
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_walkable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_walkable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "walkable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean distanceXZ
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_distanceXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_distanceXZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceXZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean constrainTags
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_constrainTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_constrainTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainTags"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tags
[[deprecated("Use field access instead!")]] int& Pathfinding::NNConstraint::dyn_tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean constrainDistance
[[deprecated("Use field access instead!")]] bool& Pathfinding::NNConstraint::dyn_constrainDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::dyn_constrainDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NNConstraint.SuitableGraph
bool Pathfinding::NNConstraint::SuitableGraph(int graphIndex, ::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::SuitableGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NNConstraint*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.NNConstraint.Suitable
bool Pathfinding::NNConstraint::Suitable(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::Suitable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NNConstraint*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.NNConstraint.get_Default
::Pathfinding::NNConstraint* Pathfinding::NNConstraint::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NNConstraint", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NNConstraint.get_None
::Pathfinding::NNConstraint* Pathfinding::NNConstraint::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNConstraint::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NNConstraint", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathNNConstraint
#include "Pathfinding/PathNNConstraint.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.PathNNConstraint.get_Default
::Pathfinding::PathNNConstraint* Pathfinding::PathNNConstraint::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNNConstraint::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathNNConstraint", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNNConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.PathNNConstraint.SetStart
void Pathfinding::PathNNConstraint::SetStart(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNNConstraint::SetStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathNNConstraint*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NNInfoInternal::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::dyn_node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode constrainedNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NNInfoInternal::dyn_constrainedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::dyn_constrainedNode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainedNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 clampedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NNInfoInternal::dyn_clampedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::dyn_clampedPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 constClampedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NNInfoInternal::dyn_constClampedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::dyn_constClampedPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constClampedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NNInfoInternal..ctor
Pathfinding::NNInfoInternal::NNInfoInternal(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.NNInfoInternal.UpdateInfo
void Pathfinding::NNInfoInternal::UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfoInternal::UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NNInfo::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::dyn_node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NNInfo::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NNInfo.get_clampedPosition
::UnityEngine::Vector3 Pathfinding::NNInfo::get_clampedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::get_clampedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_clampedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NNInfo..ctor
Pathfinding::NNInfo::NNInfo(::Pathfinding::NNInfoInternal internalInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, internalInfo);
}
// Autogenerated method: Pathfinding.NNInfo.op_Explicit
Pathfinding::NNInfo::operator ::UnityEngine::Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NNInfo", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NNInfo.op_Explicit
Pathfinding::NNInfo::operator ::Pathfinding::GraphNode*() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NNInfo::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NNInfo", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Progress
#include "Pathfinding/Progress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single progress
[[deprecated("Use field access instead!")]] float& Pathfinding::Progress::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Progress::dyn_progress");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String description
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Progress::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Progress::dyn_description");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Progress..ctor
// ABORTED elsewhere.  Pathfinding::Progress::Progress(float progress, ::StringW description)
// Autogenerated method: Pathfinding.Progress.MapTo
::Pathfinding::Progress Pathfinding::Progress::MapTo(float min, float max, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Progress::MapTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MapTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method, min, max, prefix);
}
// Autogenerated method: Pathfinding.Progress.ToString
::StringW Pathfinding::Progress::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Progress::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IUpdatableGraph
#include "Pathfinding/IUpdatableGraph.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::IUpdatableGraph::UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IUpdatableGraph::UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IUpdatableGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.IUpdatableGraph.UpdateAreaInit
void Pathfinding::IUpdatableGraph::UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IUpdatableGraph::UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IUpdatableGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.IUpdatableGraph.UpdateAreaPost
void Pathfinding::IUpdatableGraph::UpdateAreaPost(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IUpdatableGraph::UpdateAreaPost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IUpdatableGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.IUpdatableGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::IUpdatableGraph::CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IUpdatableGraph::CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IUpdatableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateStage
#include "Pathfinding/GraphUpdateStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateStage Created
::Pathfinding::GraphUpdateStage Pathfinding::GraphUpdateStage::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateStage>("Pathfinding", "GraphUpdateStage", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateStage Created
void Pathfinding::GraphUpdateStage::_set_Created(::Pathfinding::GraphUpdateStage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateStage", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateStage Pending
::Pathfinding::GraphUpdateStage Pathfinding::GraphUpdateStage::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateStage>("Pathfinding", "GraphUpdateStage", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateStage Pending
void Pathfinding::GraphUpdateStage::_set_Pending(::Pathfinding::GraphUpdateStage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateStage", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateStage Applied
::Pathfinding::GraphUpdateStage Pathfinding::GraphUpdateStage::_get_Applied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_get_Applied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateStage>("Pathfinding", "GraphUpdateStage", "Applied"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateStage Applied
void Pathfinding::GraphUpdateStage::_set_Applied(::Pathfinding::GraphUpdateStage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_set_Applied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateStage", "Applied", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateStage Aborted
::Pathfinding::GraphUpdateStage Pathfinding::GraphUpdateStage::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateStage>("Pathfinding", "GraphUpdateStage", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateStage Aborted
void Pathfinding::GraphUpdateStage::_set_Aborted(::Pathfinding::GraphUpdateStage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateStage", "Aborted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateStage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateStage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphUpdateShape
#include "Pathfinding/GraphUpdateShape.hpp"
// Including type: Pathfinding.GraphUpdateStage
#include "Pathfinding/GraphUpdateStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 STAGE_CREATED
int Pathfinding::GraphUpdateObject::_get_STAGE_CREATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_get_STAGE_CREATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphUpdateObject", "STAGE_CREATED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 STAGE_CREATED
void Pathfinding::GraphUpdateObject::_set_STAGE_CREATED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_set_STAGE_CREATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateObject", "STAGE_CREATED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 STAGE_PENDING
int Pathfinding::GraphUpdateObject::_get_STAGE_PENDING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_get_STAGE_PENDING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphUpdateObject", "STAGE_PENDING"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 STAGE_PENDING
void Pathfinding::GraphUpdateObject::_set_STAGE_PENDING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_set_STAGE_PENDING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateObject", "STAGE_PENDING", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 STAGE_ABORTED
int Pathfinding::GraphUpdateObject::_get_STAGE_ABORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_get_STAGE_ABORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphUpdateObject", "STAGE_ABORTED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 STAGE_ABORTED
void Pathfinding::GraphUpdateObject::_set_STAGE_ABORTED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_set_STAGE_ABORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateObject", "STAGE_ABORTED", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 STAGE_APPLIED
int Pathfinding::GraphUpdateObject::_get_STAGE_APPLIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_get_STAGE_APPLIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphUpdateObject", "STAGE_APPLIED"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 STAGE_APPLIED
void Pathfinding::GraphUpdateObject::_set_STAGE_APPLIED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::_set_STAGE_APPLIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateObject", "STAGE_APPLIED", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::GraphUpdateObject::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatePhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_updatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_updatePhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatePhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetPenaltyOnPhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_resetPenaltyOnPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_resetPenaltyOnPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetPenaltyOnPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateErosion
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_updateErosion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_updateErosion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateErosion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint nnConstraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::GraphUpdateObject::dyn_nnConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_nnConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nnConstraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 addPenalty
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateObject::dyn_addPenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_addPenalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addPenalty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean modifyWalkability
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_modifyWalkability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_modifyWalkability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifyWalkability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean setWalkability
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_setWalkability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_setWalkability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setWalkability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean modifyTag
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_modifyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_modifyTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifyTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setTag
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateObject::dyn_setTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_setTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean trackChangedNodes
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateObject::dyn_trackChangedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_trackChangedNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackChangedNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> changedNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::GraphUpdateObject::dyn_changedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_changedNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changedNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt32> backupData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint>*& Pathfinding::GraphUpdateObject::dyn_backupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_backupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backupData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Int3> backupPositionData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Int3>*& Pathfinding::GraphUpdateObject::dyn_backupPositionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_backupPositionData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backupPositionData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Int3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateShape shape
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateShape*& Pathfinding::GraphUpdateObject::dyn_shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_shape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shape"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateShape**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 internalStage
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateObject::dyn_internalStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::dyn_internalStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalStage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUpdateObject.set_requiresFloodFill
void Pathfinding::GraphUpdateObject::set_requiresFloodFill(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::set_requiresFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requiresFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphUpdateObject.get_stage
::Pathfinding::GraphUpdateStage Pathfinding::GraphUpdateObject::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateStage, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateObject.WillUpdateNode
void Pathfinding::GraphUpdateObject::WillUpdateNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::WillUpdateNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphUpdateObject*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GraphUpdateObject.RevertFromBackup
void Pathfinding::GraphUpdateObject::RevertFromBackup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::RevertFromBackup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphUpdateObject*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateObject.Apply
void Pathfinding::GraphUpdateObject::Apply(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateObject::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphUpdateObject*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ITransformedGraph
#include "Pathfinding/ITransformedGraph.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.ITransformedGraph.get_transform
::Pathfinding::Util::GraphTransform* Pathfinding::ITransformedGraph::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ITransformedGraph::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ITransformedGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IRaycastableGraph
#include "Pathfinding/IRaycastableGraph.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphHitInfo
#include "Pathfinding/GraphHitInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IRaycastableGraph.Linecast
bool Pathfinding::IRaycastableGraph::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IRaycastableGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IRaycastableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Pathfinding.IRaycastableGraph.Linecast
bool Pathfinding::IRaycastableGraph::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IRaycastableGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IRaycastableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, hint);
}
// Autogenerated method: Pathfinding.IRaycastableGraph.Linecast
bool Pathfinding::IRaycastableGraph::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IRaycastableGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IRaycastableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, hint, byref(hit));
}
// Autogenerated method: Pathfinding.IRaycastableGraph.Linecast
bool Pathfinding::IRaycastableGraph::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IRaycastableGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IRaycastableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, hint, byref(hit), trace);
}
// Autogenerated method: Pathfinding.IRaycastableGraph.Linecast
bool Pathfinding::IRaycastableGraph::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IRaycastableGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IRaycastableGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, byref(hit), trace, filter);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 xmin
[[deprecated("Use field access instead!")]] int& Pathfinding::IntRect::dyn_xmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::dyn_xmin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymin
[[deprecated("Use field access instead!")]] int& Pathfinding::IntRect::dyn_ymin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::dyn_ymin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 xmax
[[deprecated("Use field access instead!")]] int& Pathfinding::IntRect::dyn_xmax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::dyn_xmax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymax
[[deprecated("Use field access instead!")]] int& Pathfinding::IntRect::dyn_ymax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::dyn_ymax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.IntRect..ctor
// ABORTED elsewhere.  Pathfinding::IntRect::IntRect(int xmin, int ymin, int xmax, int ymax)
// Autogenerated method: Pathfinding.IntRect.Contains
bool Pathfinding::IntRect::Contains(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Pathfinding.IntRect.get_Min
::Pathfinding::Int2 Pathfinding::IntRect::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.get_Max
::Pathfinding::Int2 Pathfinding::IntRect::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.get_Width
int Pathfinding::IntRect::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.get_Height
int Pathfinding::IntRect::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.get_Area
int Pathfinding::IntRect::get_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::get_Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.IsValid
bool Pathfinding::IntRect::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.Intersection
::Pathfinding::IntRect Pathfinding::IntRect::Intersection(::Pathfinding::IntRect a, ::Pathfinding::IntRect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Intersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "IntRect", "Intersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.IntRect.Intersects
bool Pathfinding::IntRect::Intersects(::Pathfinding::IntRect a, ::Pathfinding::IntRect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "IntRect", "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.IntRect.Union
::Pathfinding::IntRect Pathfinding::IntRect::Union(::Pathfinding::IntRect a, ::Pathfinding::IntRect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Union");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "IntRect", "Union", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.IntRect.ExpandToContain
::Pathfinding::IntRect Pathfinding::IntRect::ExpandToContain(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::ExpandToContain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ExpandToContain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Pathfinding.IntRect.Expand
::Pathfinding::IntRect Pathfinding::IntRect::Expand(int range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(range)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, range);
}
// Autogenerated method: Pathfinding.IntRect.DebugDraw
void Pathfinding::IntRect::DebugDraw(::Pathfinding::Util::GraphTransform* transform, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::DebugDraw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DebugDraw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, color);
}
// Autogenerated method: Pathfinding.IntRect.Equals
bool Pathfinding::IntRect::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.IntRect.GetHashCode
int Pathfinding::IntRect::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.ToString
::StringW Pathfinding::IntRect::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IntRect.op_Equality
bool Pathfinding::operator ==(const ::Pathfinding::IntRect& a, const ::Pathfinding::IntRect& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "IntRect", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.IntRect.op_Inequality
bool Pathfinding::operator !=(const ::Pathfinding::IntRect& a, const ::Pathfinding::IntRect& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IntRect::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "IntRect", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphMask
#include "Pathfinding/GraphMask.hpp"
// Including type: Pathfinding.GraphMask/<>c__DisplayClass12_0
#include "Pathfinding/GraphMask_--c__DisplayClass12_0.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphMask::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphMask.get_everything
::Pathfinding::GraphMask Pathfinding::GraphMask::get_everything() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::get_everything");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "get_everything", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GraphMask..ctor
// ABORTED elsewhere.  Pathfinding::GraphMask::GraphMask(int value)
// Autogenerated method: Pathfinding.GraphMask.Contains
bool Pathfinding::GraphMask::Contains(int graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.GraphMask.FromGraph
::Pathfinding::GraphMask Pathfinding::GraphMask::FromGraph(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::FromGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "FromGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.GraphMask.FromGraphName
::Pathfinding::GraphMask Pathfinding::GraphMask::FromGraphName(::StringW graphName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::FromGraphName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "FromGraphName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphName);
}
// Autogenerated method: Pathfinding.GraphMask.ToString
::StringW Pathfinding::GraphMask::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphMask.op_BitwiseAnd
::Pathfinding::GraphMask Pathfinding::operator&(const ::Pathfinding::GraphMask& lhs, const ::Pathfinding::GraphMask& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.GraphMask.op_BitwiseOr
::Pathfinding::GraphMask Pathfinding::operator|(const ::Pathfinding::GraphMask& lhs, const ::Pathfinding::GraphMask& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.GraphMask.op_OnesComplement
::Pathfinding::GraphMask Pathfinding::operator~(const ::Pathfinding::GraphMask& lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::op_OnesComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphMask", "op_OnesComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphMask/<>c__DisplayClass12_0
#include "Pathfinding/GraphMask_--c__DisplayClass12_0.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String graphName
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::GraphMask::$$c__DisplayClass12_0::dyn_graphName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::$$c__DisplayClass12_0::dyn_graphName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphMask/<>c__DisplayClass12_0.<FromGraphName>b__0
bool Pathfinding::GraphMask::$$c__DisplayClass12_0::$FromGraphName$b__0(::Pathfinding::NavGraph* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphMask::$$c__DisplayClass12_0::<FromGraphName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromGraphName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, g);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.OnPathDelegate.Invoke
void Pathfinding::OnPathDelegate::Invoke(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnPathDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnPathDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.OnPathDelegate.BeginInvoke
::System::IAsyncResult* Pathfinding::OnPathDelegate::BeginInvoke(::Pathfinding::Path* p, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnPathDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnPathDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, p, callback, object);
}
// Autogenerated method: Pathfinding.OnPathDelegate.EndInvoke
void Pathfinding::OnPathDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnPathDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnPathDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.OnGraphDelegate
#include "Pathfinding/OnGraphDelegate.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.OnGraphDelegate.Invoke
void Pathfinding::OnGraphDelegate::Invoke(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnGraphDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnGraphDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.OnGraphDelegate.BeginInvoke
::System::IAsyncResult* Pathfinding::OnGraphDelegate::BeginInvoke(::Pathfinding::NavGraph* graph, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnGraphDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnGraphDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, graph, callback, object);
}
// Autogenerated method: Pathfinding.OnGraphDelegate.EndInvoke
void Pathfinding::OnGraphDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnGraphDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnGraphDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.OnScanDelegate
#include "Pathfinding/OnScanDelegate.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.OnScanDelegate.Invoke
void Pathfinding::OnScanDelegate::Invoke(::GlobalNamespace::AstarPath* script) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, script);
}
// Autogenerated method: Pathfinding.OnScanDelegate.BeginInvoke
::System::IAsyncResult* Pathfinding::OnScanDelegate::BeginInvoke(::GlobalNamespace::AstarPath* script, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, script, callback, object);
}
// Autogenerated method: Pathfinding.OnScanDelegate.EndInvoke
void Pathfinding::OnScanDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: Pathfinding.Progress
#include "Pathfinding/Progress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.OnScanStatus.Invoke
void Pathfinding::OnScanStatus::Invoke(::Pathfinding::Progress progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanStatus::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanStatus*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Pathfinding.OnScanStatus.BeginInvoke
::System::IAsyncResult* Pathfinding::OnScanStatus::BeginInvoke(::Pathfinding::Progress progress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanStatus::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanStatus*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, progress, callback, object);
}
// Autogenerated method: Pathfinding.OnScanStatus.EndInvoke
void Pathfinding::OnScanStatus::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OnScanStatus::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::OnScanStatus*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateThreading UnityThread
::Pathfinding::GraphUpdateThreading Pathfinding::GraphUpdateThreading::_get_UnityThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_get_UnityThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateThreading>("Pathfinding", "GraphUpdateThreading", "UnityThread"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateThreading UnityThread
void Pathfinding::GraphUpdateThreading::_set_UnityThread(::Pathfinding::GraphUpdateThreading value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_set_UnityThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateThreading", "UnityThread", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateThreading SeparateThread
::Pathfinding::GraphUpdateThreading Pathfinding::GraphUpdateThreading::_get_SeparateThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_get_SeparateThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateThreading>("Pathfinding", "GraphUpdateThreading", "SeparateThread"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateThreading SeparateThread
void Pathfinding::GraphUpdateThreading::_set_SeparateThread(::Pathfinding::GraphUpdateThreading value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_set_SeparateThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateThreading", "SeparateThread", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateThreading UnityInit
::Pathfinding::GraphUpdateThreading Pathfinding::GraphUpdateThreading::_get_UnityInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_get_UnityInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateThreading>("Pathfinding", "GraphUpdateThreading", "UnityInit"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateThreading UnityInit
void Pathfinding::GraphUpdateThreading::_set_UnityInit(::Pathfinding::GraphUpdateThreading value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_set_UnityInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateThreading", "UnityInit", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateThreading UnityPost
::Pathfinding::GraphUpdateThreading Pathfinding::GraphUpdateThreading::_get_UnityPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_get_UnityPost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateThreading>("Pathfinding", "GraphUpdateThreading", "UnityPost"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateThreading UnityPost
void Pathfinding::GraphUpdateThreading::_set_UnityPost(::Pathfinding::GraphUpdateThreading value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_set_UnityPost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateThreading", "UnityPost", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateThreading SeparateAndUnityInit
::Pathfinding::GraphUpdateThreading Pathfinding::GraphUpdateThreading::_get_SeparateAndUnityInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_get_SeparateAndUnityInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateThreading>("Pathfinding", "GraphUpdateThreading", "SeparateAndUnityInit"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateThreading SeparateAndUnityInit
void Pathfinding::GraphUpdateThreading::_set_SeparateAndUnityInit(::Pathfinding::GraphUpdateThreading value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::_set_SeparateAndUnityInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateThreading", "SeparateAndUnityInit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateThreading::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateThreading::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathLog None
::Pathfinding::PathLog Pathfinding::PathLog::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathLog>("Pathfinding", "PathLog", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathLog None
void Pathfinding::PathLog::_set_None(::Pathfinding::PathLog value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathLog", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathLog Normal
::Pathfinding::PathLog Pathfinding::PathLog::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathLog>("Pathfinding", "PathLog", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathLog Normal
void Pathfinding::PathLog::_set_Normal(::Pathfinding::PathLog value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathLog", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathLog Heavy
::Pathfinding::PathLog Pathfinding::PathLog::_get_Heavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_get_Heavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathLog>("Pathfinding", "PathLog", "Heavy"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathLog Heavy
void Pathfinding::PathLog::_set_Heavy(::Pathfinding::PathLog value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_set_Heavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathLog", "Heavy", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathLog InGame
::Pathfinding::PathLog Pathfinding::PathLog::_get_InGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_get_InGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathLog>("Pathfinding", "PathLog", "InGame"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathLog InGame
void Pathfinding::PathLog::_set_InGame(::Pathfinding::PathLog value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_set_InGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathLog", "InGame", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathLog OnlyErrors
::Pathfinding::PathLog Pathfinding::PathLog::_get_OnlyErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_get_OnlyErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathLog>("Pathfinding", "PathLog", "OnlyErrors"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathLog OnlyErrors
void Pathfinding::PathLog::_set_OnlyErrors(::Pathfinding::PathLog value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::_set_OnlyErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathLog", "OnlyErrors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::PathLog::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathLog::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Heuristic
#include "Pathfinding/Heuristic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Heuristic Manhattan
::Pathfinding::Heuristic Pathfinding::Heuristic::_get_Manhattan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_get_Manhattan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Heuristic>("Pathfinding", "Heuristic", "Manhattan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Heuristic Manhattan
void Pathfinding::Heuristic::_set_Manhattan(::Pathfinding::Heuristic value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_set_Manhattan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Heuristic", "Manhattan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Heuristic DiagonalManhattan
::Pathfinding::Heuristic Pathfinding::Heuristic::_get_DiagonalManhattan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_get_DiagonalManhattan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Heuristic>("Pathfinding", "Heuristic", "DiagonalManhattan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Heuristic DiagonalManhattan
void Pathfinding::Heuristic::_set_DiagonalManhattan(::Pathfinding::Heuristic value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_set_DiagonalManhattan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Heuristic", "DiagonalManhattan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Heuristic Euclidean
::Pathfinding::Heuristic Pathfinding::Heuristic::_get_Euclidean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_get_Euclidean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Heuristic>("Pathfinding", "Heuristic", "Euclidean"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Heuristic Euclidean
void Pathfinding::Heuristic::_set_Euclidean(::Pathfinding::Heuristic value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_set_Euclidean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Heuristic", "Euclidean", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Heuristic None
::Pathfinding::Heuristic Pathfinding::Heuristic::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Heuristic>("Pathfinding", "Heuristic", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Heuristic None
void Pathfinding::Heuristic::_set_None(::Pathfinding::Heuristic value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Heuristic", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Heuristic::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Heuristic::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphDebugMode
#include "Pathfinding/GraphDebugMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode SolidColor
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_SolidColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_SolidColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "SolidColor"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode SolidColor
void Pathfinding::GraphDebugMode::_set_SolidColor(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_SolidColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "SolidColor", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode G
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_G() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_G");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "G"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode G
void Pathfinding::GraphDebugMode::_set_G(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_G");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "G", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode H
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_H");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "H"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode H
void Pathfinding::GraphDebugMode::_set_H(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_H");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "H", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode F
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_F");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "F"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode F
void Pathfinding::GraphDebugMode::_set_F(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_F");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "F", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode Penalty
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_Penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_Penalty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "Penalty"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode Penalty
void Pathfinding::GraphDebugMode::_set_Penalty(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_Penalty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "Penalty", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode Areas
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_Areas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_Areas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "Areas"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode Areas
void Pathfinding::GraphDebugMode::_set_Areas(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_Areas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "Areas", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode Tags
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_Tags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "Tags"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode Tags
void Pathfinding::GraphDebugMode::_set_Tags(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_Tags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "Tags", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphDebugMode HierarchicalNode
::Pathfinding::GraphDebugMode Pathfinding::GraphDebugMode::_get_HierarchicalNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_get_HierarchicalNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphDebugMode>("Pathfinding", "GraphDebugMode", "HierarchicalNode"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphDebugMode HierarchicalNode
void Pathfinding::GraphDebugMode::_set_HierarchicalNode(::Pathfinding::GraphDebugMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::_set_HierarchicalNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphDebugMode", "HierarchicalNode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphDebugMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphDebugMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ThreadCount
#include "Pathfinding/ThreadCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount AutomaticLowLoad
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_AutomaticLowLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_AutomaticLowLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "AutomaticLowLoad"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount AutomaticLowLoad
void Pathfinding::ThreadCount::_set_AutomaticLowLoad(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_AutomaticLowLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "AutomaticLowLoad", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount AutomaticHighLoad
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_AutomaticHighLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_AutomaticHighLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "AutomaticHighLoad"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount AutomaticHighLoad
void Pathfinding::ThreadCount::_set_AutomaticHighLoad(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_AutomaticHighLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "AutomaticHighLoad", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount None
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount None
void Pathfinding::ThreadCount::_set_None(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount One
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "One"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount One
void Pathfinding::ThreadCount::_set_One(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "One", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Two
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Two"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Two
void Pathfinding::ThreadCount::_set_Two(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Three
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Three"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Three
void Pathfinding::ThreadCount::_set_Three(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Four
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Four"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Four
void Pathfinding::ThreadCount::_set_Four(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Five
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Five() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Five");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Five"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Five
void Pathfinding::ThreadCount::_set_Five(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Five");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Five", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Six
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Six() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Six");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Six"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Six
void Pathfinding::ThreadCount::_set_Six(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Six");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Six", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Seven
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Seven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Seven");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Seven"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Seven
void Pathfinding::ThreadCount::_set_Seven(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Seven");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Seven", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ThreadCount Eight
::Pathfinding::ThreadCount Pathfinding::ThreadCount::_get_Eight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_get_Eight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ThreadCount>("Pathfinding", "ThreadCount", "Eight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ThreadCount Eight
void Pathfinding::ThreadCount::_set_Eight(::Pathfinding::ThreadCount value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::_set_Eight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ThreadCount", "Eight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ThreadCount::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadCount::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathState
#include "Pathfinding/PathState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathState Created
::Pathfinding::PathState Pathfinding::PathState::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathState>("Pathfinding", "PathState", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathState Created
void Pathfinding::PathState::_set_Created(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathState", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathState PathQueue
::Pathfinding::PathState Pathfinding::PathState::_get_PathQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_get_PathQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathState>("Pathfinding", "PathState", "PathQueue"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathState PathQueue
void Pathfinding::PathState::_set_PathQueue(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_set_PathQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathState", "PathQueue", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathState Processing
::Pathfinding::PathState Pathfinding::PathState::_get_Processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_get_Processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathState>("Pathfinding", "PathState", "Processing"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathState Processing
void Pathfinding::PathState::_set_Processing(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_set_Processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathState", "Processing", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathState ReturnQueue
::Pathfinding::PathState Pathfinding::PathState::_get_ReturnQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_get_ReturnQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathState>("Pathfinding", "PathState", "ReturnQueue"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathState ReturnQueue
void Pathfinding::PathState::_set_ReturnQueue(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_set_ReturnQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathState", "ReturnQueue", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathState Returned
::Pathfinding::PathState Pathfinding::PathState::_get_Returned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_get_Returned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathState>("Pathfinding", "PathState", "Returned"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathState Returned
void Pathfinding::PathState::_set_Returned(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::_set_Returned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathState", "Returned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::PathState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathCompleteState
#include "Pathfinding/PathCompleteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathCompleteState NotCalculated
::Pathfinding::PathCompleteState Pathfinding::PathCompleteState::_get_NotCalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_get_NotCalculated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathCompleteState>("Pathfinding", "PathCompleteState", "NotCalculated"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathCompleteState NotCalculated
void Pathfinding::PathCompleteState::_set_NotCalculated(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_set_NotCalculated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathCompleteState", "NotCalculated", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathCompleteState Error
::Pathfinding::PathCompleteState Pathfinding::PathCompleteState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathCompleteState>("Pathfinding", "PathCompleteState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathCompleteState Error
void Pathfinding::PathCompleteState::_set_Error(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathCompleteState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathCompleteState Complete
::Pathfinding::PathCompleteState Pathfinding::PathCompleteState::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathCompleteState>("Pathfinding", "PathCompleteState", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathCompleteState Complete
void Pathfinding::PathCompleteState::_set_Complete(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathCompleteState", "Complete", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PathCompleteState Partial
::Pathfinding::PathCompleteState Pathfinding::PathCompleteState::_get_Partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_get_Partial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PathCompleteState>("Pathfinding", "PathCompleteState", "Partial"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PathCompleteState Partial
void Pathfinding::PathCompleteState::_set_Partial(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::_set_Partial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathCompleteState", "Partial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::PathCompleteState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathCompleteState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.CloseToDestinationMode
#include "Pathfinding/CloseToDestinationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.CloseToDestinationMode Stop
::Pathfinding::CloseToDestinationMode Pathfinding::CloseToDestinationMode::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::CloseToDestinationMode::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::CloseToDestinationMode>("Pathfinding", "CloseToDestinationMode", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.CloseToDestinationMode Stop
void Pathfinding::CloseToDestinationMode::_set_Stop(::Pathfinding::CloseToDestinationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::CloseToDestinationMode::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "CloseToDestinationMode", "Stop", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.CloseToDestinationMode ContinueToExactDestination
::Pathfinding::CloseToDestinationMode Pathfinding::CloseToDestinationMode::_get_ContinueToExactDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::CloseToDestinationMode::_get_ContinueToExactDestination");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::CloseToDestinationMode>("Pathfinding", "CloseToDestinationMode", "ContinueToExactDestination"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.CloseToDestinationMode ContinueToExactDestination
void Pathfinding::CloseToDestinationMode::_set_ContinueToExactDestination(::Pathfinding::CloseToDestinationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::CloseToDestinationMode::_set_ContinueToExactDestination");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "CloseToDestinationMode", "ContinueToExactDestination", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::CloseToDestinationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::CloseToDestinationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Side
#include "Pathfinding/Side.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Side Colinear
::Pathfinding::Side Pathfinding::Side::_get_Colinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_get_Colinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Side>("Pathfinding", "Side", "Colinear"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Side Colinear
void Pathfinding::Side::_set_Colinear(::Pathfinding::Side value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_set_Colinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Side", "Colinear", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Side Left
::Pathfinding::Side Pathfinding::Side::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Side>("Pathfinding", "Side", "Left"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Side Left
void Pathfinding::Side::_set_Left(::Pathfinding::Side value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Side", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Side Right
::Pathfinding::Side Pathfinding::Side::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Side>("Pathfinding", "Side", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Side Right
void Pathfinding::Side::_set_Right(::Pathfinding::Side value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Side", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Pathfinding::Side::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Side::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.InspectorGridHexagonNodeSize
#include "Pathfinding/InspectorGridHexagonNodeSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridHexagonNodeSize Width
::Pathfinding::InspectorGridHexagonNodeSize Pathfinding::InspectorGridHexagonNodeSize::_get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_get_Width");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridHexagonNodeSize>("Pathfinding", "InspectorGridHexagonNodeSize", "Width"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridHexagonNodeSize Width
void Pathfinding::InspectorGridHexagonNodeSize::_set_Width(::Pathfinding::InspectorGridHexagonNodeSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_set_Width");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridHexagonNodeSize", "Width", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridHexagonNodeSize Diameter
::Pathfinding::InspectorGridHexagonNodeSize Pathfinding::InspectorGridHexagonNodeSize::_get_Diameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_get_Diameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridHexagonNodeSize>("Pathfinding", "InspectorGridHexagonNodeSize", "Diameter"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridHexagonNodeSize Diameter
void Pathfinding::InspectorGridHexagonNodeSize::_set_Diameter(::Pathfinding::InspectorGridHexagonNodeSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_set_Diameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridHexagonNodeSize", "Diameter", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridHexagonNodeSize NodeSize
::Pathfinding::InspectorGridHexagonNodeSize Pathfinding::InspectorGridHexagonNodeSize::_get_NodeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_get_NodeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridHexagonNodeSize>("Pathfinding", "InspectorGridHexagonNodeSize", "NodeSize"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridHexagonNodeSize NodeSize
void Pathfinding::InspectorGridHexagonNodeSize::_set_NodeSize(::Pathfinding::InspectorGridHexagonNodeSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::_set_NodeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridHexagonNodeSize", "NodeSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::InspectorGridHexagonNodeSize::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridHexagonNodeSize::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.InspectorGridMode
#include "Pathfinding/InspectorGridMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridMode Grid
::Pathfinding::InspectorGridMode Pathfinding::InspectorGridMode::_get_Grid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_get_Grid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridMode>("Pathfinding", "InspectorGridMode", "Grid"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridMode Grid
void Pathfinding::InspectorGridMode::_set_Grid(::Pathfinding::InspectorGridMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_set_Grid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridMode", "Grid", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridMode IsometricGrid
::Pathfinding::InspectorGridMode Pathfinding::InspectorGridMode::_get_IsometricGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_get_IsometricGrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridMode>("Pathfinding", "InspectorGridMode", "IsometricGrid"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridMode IsometricGrid
void Pathfinding::InspectorGridMode::_set_IsometricGrid(::Pathfinding::InspectorGridMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_set_IsometricGrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridMode", "IsometricGrid", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridMode Hexagonal
::Pathfinding::InspectorGridMode Pathfinding::InspectorGridMode::_get_Hexagonal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_get_Hexagonal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridMode>("Pathfinding", "InspectorGridMode", "Hexagonal"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridMode Hexagonal
void Pathfinding::InspectorGridMode::_set_Hexagonal(::Pathfinding::InspectorGridMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_set_Hexagonal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridMode", "Hexagonal", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.InspectorGridMode Advanced
::Pathfinding::InspectorGridMode Pathfinding::InspectorGridMode::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::InspectorGridMode>("Pathfinding", "InspectorGridMode", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.InspectorGridMode Advanced
void Pathfinding::InspectorGridMode::_set_Advanced(::Pathfinding::InspectorGridMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "InspectorGridMode", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::InspectorGridMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::InspectorGridMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.OrientationMode
#include "Pathfinding/OrientationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.OrientationMode ZAxisForward
::Pathfinding::OrientationMode Pathfinding::OrientationMode::_get_ZAxisForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OrientationMode::_get_ZAxisForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OrientationMode>("Pathfinding", "OrientationMode", "ZAxisForward"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OrientationMode ZAxisForward
void Pathfinding::OrientationMode::_set_ZAxisForward(::Pathfinding::OrientationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OrientationMode::_set_ZAxisForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "OrientationMode", "ZAxisForward", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OrientationMode YAxisForward
::Pathfinding::OrientationMode Pathfinding::OrientationMode::_get_YAxisForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OrientationMode::_get_YAxisForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OrientationMode>("Pathfinding", "OrientationMode", "YAxisForward"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OrientationMode YAxisForward
void Pathfinding::OrientationMode::_set_YAxisForward(::Pathfinding::OrientationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OrientationMode::_set_YAxisForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "OrientationMode", "YAxisForward", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::OrientationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::OrientationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarData
#include "Pathfinding/AstarData.hpp"
// Including type: Pathfinding.AstarData/<>c__DisplayClass53_0
#include "Pathfinding/AstarData_--c__DisplayClass53_0.hpp"
// Including type: Pathfinding.AstarData/<>c__DisplayClass64_0
#include "Pathfinding/AstarData_--c__DisplayClass64_0.hpp"
// Including type: Pathfinding.AstarData/<>c__DisplayClass65_0
#include "Pathfinding/AstarData_--c__DisplayClass65_0.hpp"
// Including type: Pathfinding.AstarData/<FindGraphsOfType>d__66
#include "Pathfinding/AstarData_-FindGraphsOfType-d__66.hpp"
// Including type: Pathfinding.AstarData/<GetRaycastableGraphs>d__68
#include "Pathfinding/AstarData_-GetRaycastableGraphs-d__68.hpp"
// Including type: Pathfinding.AstarData/<GetUpdateableGraphs>d__67
#include "Pathfinding/AstarData_-GetUpdateableGraphs-d__67.hpp"
// Including type: Pathfinding.NavMeshGraph
#include "Pathfinding/NavMeshGraph.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: Pathfinding.LayerGridGraph
#include "Pathfinding/LayerGridGraph.hpp"
// Including type: Pathfinding.PointGraph
#include "Pathfinding/PointGraph.hpp"
// Including type: Pathfinding.RecastGraph
#include "Pathfinding/RecastGraph.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Serialization.SerializeSettings
#include "Pathfinding/Serialization/SerializeSettings.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer
#include "Pathfinding/Serialization/AstarSerializer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: Pathfinding.PathProcessor/GraphUpdateLock
#include "Pathfinding/PathProcessor_GraphUpdateLock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavMeshGraph <navmesh>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::NavMeshGraph*& Pathfinding::AstarData::dyn_$navmesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$navmesh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<navmesh>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::NavMeshGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridGraph <gridGraph>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& Pathfinding::AstarData::dyn_$gridGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$gridGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gridGraph>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.LayerGridGraph <layerGridGraph>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::LayerGridGraph*& Pathfinding::AstarData::dyn_$layerGridGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$layerGridGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<layerGridGraph>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::LayerGridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PointGraph <pointGraph>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::PointGraph*& Pathfinding::AstarData::dyn_$pointGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$pointGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointGraph>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::PointGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RecastGraph <recastGraph>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& Pathfinding::AstarData::dyn_$recastGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$recastGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recastGraph>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <graphTypes>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& Pathfinding::AstarData::dyn_$graphTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_$graphTypes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graphTypes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph[] graphs
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& Pathfinding::AstarData::dyn_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_graphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphs"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String dataString
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::AstarData::dyn_dataString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_dataString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] upgradeData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::AstarData::dyn_upgradeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_upgradeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset file_cachedStartup
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& Pathfinding::AstarData::dyn_file_cachedStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_file_cachedStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "file_cachedStartup"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] data_cachedStartup
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::AstarData::dyn_data_cachedStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_data_cachedStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data_cachedStartup"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cacheStartup
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarData::dyn_cacheStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_cacheStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cacheStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Boolean> graphStructureLocked
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& Pathfinding::AstarData::dyn_graphStructureLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::dyn_graphStructureLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphStructureLocked"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData.get_active
::GlobalNamespace::AstarPath* Pathfinding::AstarData::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarData", "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AstarPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.get_navmesh
::Pathfinding::NavMeshGraph* Pathfinding::AstarData::get_navmesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_navmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_navmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavMeshGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_navmesh
void Pathfinding::AstarData::set_navmesh(::Pathfinding::NavMeshGraph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_navmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_navmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_gridGraph
::Pathfinding::GridGraph* Pathfinding::AstarData::get_gridGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_gridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_gridGraph
void Pathfinding::AstarData::set_gridGraph(::Pathfinding::GridGraph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_gridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_layerGridGraph
::Pathfinding::LayerGridGraph* Pathfinding::AstarData::get_layerGridGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_layerGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::LayerGridGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_layerGridGraph
void Pathfinding::AstarData::set_layerGridGraph(::Pathfinding::LayerGridGraph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_layerGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layerGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_pointGraph
::Pathfinding::PointGraph* Pathfinding::AstarData::get_pointGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_pointGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PointGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_pointGraph
void Pathfinding::AstarData::set_pointGraph(::Pathfinding::PointGraph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_pointGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_recastGraph
::Pathfinding::RecastGraph* Pathfinding::AstarData::get_recastGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_recastGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recastGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RecastGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_recastGraph
void Pathfinding::AstarData::set_recastGraph(::Pathfinding::RecastGraph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_recastGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recastGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_graphTypes
::ArrayW<::System::Type*> Pathfinding::AstarData::get_graphTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_graphTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_graphTypes
void Pathfinding::AstarData::set_graphTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_graphTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_graphTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.get_data
::ArrayW<uint8_t> Pathfinding::AstarData::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.set_data
void Pathfinding::AstarData::set_data(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::set_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AstarData.GetData
::ArrayW<uint8_t> Pathfinding::AstarData::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.SetData
void Pathfinding::AstarData::SetData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Pathfinding.AstarData.Awake
void Pathfinding::AstarData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.LockGraphStructure
void Pathfinding::AstarData::LockGraphStructure(bool allowAddingGraphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::LockGraphStructure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockGraphStructure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowAddingGraphs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowAddingGraphs);
}
// Autogenerated method: Pathfinding.AstarData.UnlockGraphStructure
void Pathfinding::AstarData::UnlockGraphStructure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::UnlockGraphStructure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockGraphStructure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.AssertSafe
::Pathfinding::PathProcessor::GraphUpdateLock Pathfinding::AstarData::AssertSafe(bool onlyAddingGraph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::AssertSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyAddingGraph)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathProcessor::GraphUpdateLock, false>(this, ___internal__method, onlyAddingGraph);
}
// Autogenerated method: Pathfinding.AstarData.GetNodes
void Pathfinding::AstarData::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: Pathfinding.AstarData.UpdateShortcuts
void Pathfinding::AstarData::UpdateShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::UpdateShortcuts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShortcuts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.LoadFromCache
void Pathfinding::AstarData::LoadFromCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::LoadFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.SerializeGraphs
::ArrayW<uint8_t> Pathfinding::AstarData::SerializeGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::SerializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.SerializeGraphs
::ArrayW<uint8_t> Pathfinding::AstarData::SerializeGraphs(::Pathfinding::Serialization::SerializeSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::SerializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, settings);
}
// Autogenerated method: Pathfinding.AstarData.SerializeGraphs
::ArrayW<uint8_t> Pathfinding::AstarData::SerializeGraphs(::Pathfinding::Serialization::SerializeSettings* settings, ByRef<uint> checksum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::SerializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, settings, byref(checksum));
}
// Autogenerated method: Pathfinding.AstarData.DeserializeGraphs
void Pathfinding::AstarData::DeserializeGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::DeserializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.ClearGraphs
void Pathfinding::AstarData::ClearGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::ClearGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.OnDestroy
void Pathfinding::AstarData::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.DeserializeGraphs
void Pathfinding::AstarData::DeserializeGraphs(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::DeserializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.AstarData.DeserializeGraphsAdditive
void Pathfinding::AstarData::DeserializeGraphsAdditive(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::DeserializeGraphsAdditive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphsAdditive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.AstarData.DeserializeGraphsPartAdditive
void Pathfinding::AstarData::DeserializeGraphsPartAdditive(::Pathfinding::Serialization::AstarSerializer* sr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::DeserializeGraphsPartAdditive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphsPartAdditive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sr);
}
// Autogenerated method: Pathfinding.AstarData.FindGraphTypes
void Pathfinding::AstarData::FindGraphTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::FindGraphTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGraphTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.GetGraphType
::System::Type* Pathfinding::AstarData::GetGraphType(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetGraphType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGraphType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.CreateGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::CreateGraph(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::CreateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.CreateGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::CreateGraph(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::CreateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.AddGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::AddGraph(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::AddGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.AddGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::AddGraph(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::AddGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.AddGraph
void Pathfinding::AstarData::AddGraph(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::AddGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.AstarData.RemoveGraph
bool Pathfinding::AstarData::RemoveGraph(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::RemoveGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.AstarData.GetGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::GetGraph(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarData", "GetGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Pathfinding.AstarData.FindGraph
::Pathfinding::NavGraph* Pathfinding::AstarData::FindGraph(::System::Func_2<::Pathfinding::NavGraph*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::FindGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Pathfinding.AstarData.FindGraphOfType
::Pathfinding::NavGraph* Pathfinding::AstarData::FindGraphOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::FindGraphOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGraphOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.FindGraphWhichInheritsFrom
::Pathfinding::NavGraph* Pathfinding::AstarData::FindGraphWhichInheritsFrom(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::FindGraphWhichInheritsFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGraphWhichInheritsFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.FindGraphsOfType
::System::Collections::IEnumerable* Pathfinding::AstarData::FindGraphsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::FindGraphsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGraphsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerable*, false>(this, ___internal__method, type);
}
// Autogenerated method: Pathfinding.AstarData.GetUpdateableGraphs
::System::Collections::IEnumerable* Pathfinding::AstarData::GetUpdateableGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetUpdateableGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpdateableGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.GetRaycastableGraphs
::System::Collections::IEnumerable* Pathfinding::AstarData::GetRaycastableGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetRaycastableGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRaycastableGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerable*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData.GetGraphIndex
int Pathfinding::AstarData::GetGraphIndex(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::GetGraphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGraphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarData/<>c__DisplayClass53_0
#include "Pathfinding/AstarData_--c__DisplayClass53_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 i
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$$c__DisplayClass53_0::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass53_0::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<>c__DisplayClass53_0.<DeserializeGraphsPartAdditive>b__0
void Pathfinding::AstarData::$$c__DisplayClass53_0::$DeserializeGraphsPartAdditive$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass53_0::<DeserializeGraphsPartAdditive>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeGraphsPartAdditive>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarData/<>c__DisplayClass64_0
#include "Pathfinding/AstarData_--c__DisplayClass64_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Pathfinding::AstarData::$$c__DisplayClass64_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass64_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<>c__DisplayClass64_0.<FindGraphOfType>b__0
bool Pathfinding::AstarData::$$c__DisplayClass64_0::$FindGraphOfType$b__0(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass64_0::<FindGraphOfType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindGraphOfType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarData/<>c__DisplayClass65_0
#include "Pathfinding/AstarData_--c__DisplayClass65_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Pathfinding::AstarData::$$c__DisplayClass65_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass65_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<>c__DisplayClass65_0.<FindGraphWhichInheritsFrom>b__0
bool Pathfinding::AstarData::$$c__DisplayClass65_0::$FindGraphWhichInheritsFrom$b__0(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$$c__DisplayClass65_0::<FindGraphWhichInheritsFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindGraphWhichInheritsFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.AstarData/<FindGraphsOfType>d__66
#include "Pathfinding/AstarData_-FindGraphsOfType-d__66.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarData <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type <>3__type
[[deprecated("Use field access instead!")]] ::System::Type*& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$3__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$$3__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.IDisposable.Dispose
void Pathfinding::AstarData::$FindGraphsOfType$d__66::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.MoveNext
bool Pathfinding::AstarData::$FindGraphsOfType$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::AstarData::$FindGraphsOfType$d__66::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.Collections.IEnumerator.Reset
void Pathfinding::AstarData::$FindGraphsOfType$d__66::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::AstarData::$FindGraphsOfType$d__66::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* Pathfinding::AstarData::$FindGraphsOfType$d__66::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<FindGraphsOfType>d__66.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::AstarData::$FindGraphsOfType$d__66::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$FindGraphsOfType$d__66::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$FindGraphsOfType$d__66*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.AstarData/<GetRaycastableGraphs>d__68
#include "Pathfinding/AstarData_-GetRaycastableGraphs-d__68.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarData <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.IDisposable.Dispose
void Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.MoveNext
bool Pathfinding::AstarData::$GetRaycastableGraphs$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.Collections.IEnumerator.Reset
void Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetRaycastableGraphs>d__68.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetRaycastableGraphs$d__68::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetRaycastableGraphs$d__68*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.AstarData/<GetUpdateableGraphs>d__67
#include "Pathfinding/AstarData_-GetUpdateableGraphs-d__67.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarData <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.IDisposable.Dispose
void Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.MoveNext
bool Pathfinding::AstarData::$GetUpdateableGraphs$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.Collections.IEnumerator.Reset
void Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarData/<GetUpdateableGraphs>d__67.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarData::$GetUpdateableGraphs$d__67::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AstarData::$GetUpdateableGraphs$d__67*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarSplines
#include "Pathfinding/AstarSplines.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.AstarSplines.CatmullRom
::UnityEngine::Vector3 Pathfinding::AstarSplines::CatmullRom(::UnityEngine::Vector3 previous, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Vector3 next, float elapsedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarSplines::CatmullRom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarSplines", "CatmullRom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previous), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(next), ::il2cpp_utils::ExtractType(elapsedTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previous, start, end, next, elapsedTime);
}
// Autogenerated method: Pathfinding.AstarSplines.CubicBezier
::UnityEngine::Vector3 Pathfinding::AstarSplines::CubicBezier(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarSplines::CubicBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarSplines", "CubicBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated method: Pathfinding.AstarSplines.CubicBezierDerivative
::UnityEngine::Vector3 Pathfinding::AstarSplines::CubicBezierDerivative(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarSplines::CubicBezierDerivative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarSplines", "CubicBezierDerivative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated method: Pathfinding.AstarSplines.CubicBezierSecondDerivative
::UnityEngine::Vector3 Pathfinding::AstarSplines::CubicBezierSecondDerivative(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarSplines::CubicBezierSecondDerivative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarSplines", "CubicBezierSecondDerivative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.VectorMath
#include "Pathfinding/VectorMath.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: Pathfinding.Side
#include "Pathfinding/Side.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.VectorMath.ComplexMultiply
::UnityEngine::Vector2 Pathfinding::VectorMath::ComplexMultiply(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ComplexMultiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ComplexMultiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.VectorMath.ComplexMultiplyConjugate
::UnityEngine::Vector2 Pathfinding::VectorMath::ComplexMultiplyConjugate(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ComplexMultiplyConjugate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ComplexMultiplyConjugate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnLine
::UnityEngine::Vector3 Pathfinding::VectorMath::ClosestPointOnLine(::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnLineFactor
float Pathfinding::VectorMath::ClosestPointOnLineFactor(::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnLineFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnLineFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnLineFactor
float Pathfinding::VectorMath::ClosestPointOnLineFactor(::Pathfinding::Int3 lineStart, ::Pathfinding::Int3 lineEnd, ::Pathfinding::Int3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnLineFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnLineFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnLineFactor
float Pathfinding::VectorMath::ClosestPointOnLineFactor(::Pathfinding::Int2 lineStart, ::Pathfinding::Int2 lineEnd, ::Pathfinding::Int2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnLineFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnLineFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnSegment
::UnityEngine::Vector3 Pathfinding::VectorMath::ClosestPointOnSegment(::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.ClosestPointOnSegmentXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::ClosestPointOnSegmentXZ(::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClosestPointOnSegmentXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClosestPointOnSegmentXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, point);
}
// Autogenerated method: Pathfinding.VectorMath.SqrDistancePointSegmentApproximate
float Pathfinding::VectorMath::SqrDistancePointSegmentApproximate(int x, int z, int px, int pz, int qx, int qz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SqrDistancePointSegmentApproximate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SqrDistancePointSegmentApproximate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(px), ::il2cpp_utils::ExtractType(pz), ::il2cpp_utils::ExtractType(qx), ::il2cpp_utils::ExtractType(qz)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, z, px, pz, qx, qz);
}
// Autogenerated method: Pathfinding.VectorMath.SqrDistancePointSegmentApproximate
float Pathfinding::VectorMath::SqrDistancePointSegmentApproximate(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SqrDistancePointSegmentApproximate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SqrDistancePointSegmentApproximate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.SqrDistancePointSegment
float Pathfinding::VectorMath::SqrDistancePointSegment(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SqrDistancePointSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SqrDistancePointSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.SqrDistanceSegmentSegment
float Pathfinding::VectorMath::SqrDistanceSegmentSegment(::UnityEngine::Vector3 s1, ::UnityEngine::Vector3 e1, ::UnityEngine::Vector3 s2, ::UnityEngine::Vector3 e2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SqrDistanceSegmentSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SqrDistanceSegmentSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(e2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s1, e1, s2, e2);
}
// Autogenerated method: Pathfinding.VectorMath.SqrDistanceXZ
float Pathfinding::VectorMath::SqrDistanceXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SqrDistanceXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SqrDistanceXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.VectorMath.SignedTriangleAreaTimes2XZ
int64_t Pathfinding::VectorMath::SignedTriangleAreaTimes2XZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SignedTriangleAreaTimes2XZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SignedTriangleAreaTimes2XZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.SignedTriangleAreaTimes2XZ
float Pathfinding::VectorMath::SignedTriangleAreaTimes2XZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SignedTriangleAreaTimes2XZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SignedTriangleAreaTimes2XZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.RightXZ
bool Pathfinding::VectorMath::RightXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.RightXZ
bool Pathfinding::VectorMath::RightXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.SideXZ
::Pathfinding::Side Pathfinding::VectorMath::SideXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SideXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SideXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Side, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.RightOrColinear
bool Pathfinding::VectorMath::RightOrColinear(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, ::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightOrColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightOrColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.RightOrColinear
bool Pathfinding::VectorMath::RightOrColinear(::Pathfinding::Int2 a, ::Pathfinding::Int2 b, ::Pathfinding::Int2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightOrColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightOrColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.RightOrColinearXZ
bool Pathfinding::VectorMath::RightOrColinearXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightOrColinearXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightOrColinearXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.RightOrColinearXZ
bool Pathfinding::VectorMath::RightOrColinearXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RightOrColinearXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RightOrColinearXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, p);
}
// Autogenerated method: Pathfinding.VectorMath.IsClockwiseMarginXZ
bool Pathfinding::VectorMath::IsClockwiseMarginXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsClockwiseMarginXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsClockwiseMarginXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsClockwiseXZ
bool Pathfinding::VectorMath::IsClockwiseXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsClockwiseXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsClockwiseXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsClockwiseXZ
bool Pathfinding::VectorMath::IsClockwiseXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsClockwiseXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsClockwiseXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsClockwiseOrColinearXZ
bool Pathfinding::VectorMath::IsClockwiseOrColinearXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsClockwiseOrColinearXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsClockwiseOrColinearXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsClockwiseOrColinear
bool Pathfinding::VectorMath::IsClockwiseOrColinear(::Pathfinding::Int2 a, ::Pathfinding::Int2 b, ::Pathfinding::Int2 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsClockwiseOrColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsClockwiseOrColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsColinear
bool Pathfinding::VectorMath::IsColinear(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsColinear
bool Pathfinding::VectorMath::IsColinear(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, ::UnityEngine::Vector2 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsColinearXZ
bool Pathfinding::VectorMath::IsColinearXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsColinearXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsColinearXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsColinearXZ
bool Pathfinding::VectorMath::IsColinearXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsColinearXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsColinearXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.IsColinearAlmostXZ
bool Pathfinding::VectorMath::IsColinearAlmostXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::IsColinearAlmostXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "IsColinearAlmostXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.VectorMath.SegmentsIntersect
bool Pathfinding::VectorMath::SegmentsIntersect(::Pathfinding::Int2 start1, ::Pathfinding::Int2 end1, ::Pathfinding::Int2 start2, ::Pathfinding::Int2 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SegmentsIntersect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SegmentsIntersect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.SegmentsIntersectXZ
bool Pathfinding::VectorMath::SegmentsIntersectXZ(::Pathfinding::Int3 start1, ::Pathfinding::Int3 end1, ::Pathfinding::Int3 start2, ::Pathfinding::Int3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SegmentsIntersectXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SegmentsIntersectXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.SegmentsIntersectXZ
bool Pathfinding::VectorMath::SegmentsIntersectXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SegmentsIntersectXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SegmentsIntersectXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineLineIntersectionFactor
bool Pathfinding::VectorMath::LineLineIntersectionFactor(::UnityEngine::Vector2 start1, ::UnityEngine::Vector2 dir1, ::UnityEngine::Vector2 start2, ::UnityEngine::Vector2 dir2, ByRef<float> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineLineIntersectionFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineLineIntersectionFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(dir1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(dir2), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, dir1, start2, dir2, byref(t));
}
// Autogenerated method: Pathfinding.VectorMath.LineDirIntersectionPointXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::LineDirIntersectionPointXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 dir1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 dir2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineDirIntersectionPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineDirIntersectionPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(dir1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(dir2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, dir1, start2, dir2);
}
// Autogenerated method: Pathfinding.VectorMath.LineDirIntersectionPointXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::LineDirIntersectionPointXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 dir1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 dir2, ByRef<bool> intersects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineDirIntersectionPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineDirIntersectionPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(dir1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(dir2), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, dir1, start2, dir2, byref(intersects));
}
// Autogenerated method: Pathfinding.VectorMath.RaySegmentIntersectXZ
bool Pathfinding::VectorMath::RaySegmentIntersectXZ(::Pathfinding::Int3 start1, ::Pathfinding::Int3 end1, ::Pathfinding::Int3 start2, ::Pathfinding::Int3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::RaySegmentIntersectXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "RaySegmentIntersectXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionFactorXZ
bool Pathfinding::VectorMath::LineIntersectionFactorXZ(::Pathfinding::Int3 start1, ::Pathfinding::Int3 end1, ::Pathfinding::Int3 start2, ::Pathfinding::Int3 end2, ByRef<float> factor1, ByRef<float> factor2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionFactorXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionFactorXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2, byref(factor1), byref(factor2));
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionFactorXZ
bool Pathfinding::VectorMath::LineIntersectionFactorXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2, ByRef<float> factor1, ByRef<float> factor2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionFactorXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionFactorXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2, byref(factor1), byref(factor2));
}
// Autogenerated method: Pathfinding.VectorMath.LineRayIntersectionFactorXZ
float Pathfinding::VectorMath::LineRayIntersectionFactorXZ(::Pathfinding::Int3 start1, ::Pathfinding::Int3 end1, ::Pathfinding::Int3 start2, ::Pathfinding::Int3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineRayIntersectionFactorXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineRayIntersectionFactorXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionFactorXZ
float Pathfinding::VectorMath::LineIntersectionFactorXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionFactorXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionFactorXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionPointXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::LineIntersectionPointXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionPointXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::LineIntersectionPointXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2, ByRef<bool> intersects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2, byref(intersects));
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionPoint
::UnityEngine::Vector2 Pathfinding::VectorMath::LineIntersectionPoint(::UnityEngine::Vector2 start1, ::UnityEngine::Vector2 end1, ::UnityEngine::Vector2 start2, ::UnityEngine::Vector2 end2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2);
}
// Autogenerated method: Pathfinding.VectorMath.LineIntersectionPoint
::UnityEngine::Vector2 Pathfinding::VectorMath::LineIntersectionPoint(::UnityEngine::Vector2 start1, ::UnityEngine::Vector2 end1, ::UnityEngine::Vector2 start2, ::UnityEngine::Vector2 end2, ByRef<bool> intersects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineIntersectionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineIntersectionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2, byref(intersects));
}
// Autogenerated method: Pathfinding.VectorMath.SegmentIntersectionPointXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::SegmentIntersectionPointXZ(::UnityEngine::Vector3 start1, ::UnityEngine::Vector3 end1, ::UnityEngine::Vector3 start2, ::UnityEngine::Vector3 end2, ByRef<bool> intersects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SegmentIntersectionPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SegmentIntersectionPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(end1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(end2), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start1, end1, start2, end2, byref(intersects));
}
// Autogenerated method: Pathfinding.VectorMath.SegmentIntersectsBounds
bool Pathfinding::VectorMath::SegmentIntersectsBounds(::UnityEngine::Bounds bounds, ::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::SegmentIntersectsBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "SegmentIntersectsBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds, a, b);
}
// Autogenerated method: Pathfinding.VectorMath.LineCircleIntersectionFactor
float Pathfinding::VectorMath::LineCircleIntersectionFactor(::UnityEngine::Vector3 circleCenter, ::UnityEngine::Vector3 linePoint1, ::UnityEngine::Vector3 linePoint2, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::LineCircleIntersectionFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "LineCircleIntersectionFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(circleCenter), ::il2cpp_utils::ExtractType(linePoint1), ::il2cpp_utils::ExtractType(linePoint2), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, circleCenter, linePoint1, linePoint2, radius);
}
// Autogenerated method: Pathfinding.VectorMath.ReversesFaceOrientations
bool Pathfinding::VectorMath::ReversesFaceOrientations(::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ReversesFaceOrientations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ReversesFaceOrientations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix);
}
// Autogenerated method: Pathfinding.VectorMath.ReversesFaceOrientationsXZ
bool Pathfinding::VectorMath::ReversesFaceOrientationsXZ(::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ReversesFaceOrientationsXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ReversesFaceOrientationsXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix);
}
// Autogenerated method: Pathfinding.VectorMath.Normalize
::UnityEngine::Vector3 Pathfinding::VectorMath::Normalize(::UnityEngine::Vector3 v, ByRef<float> magnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, byref(magnitude));
}
// Autogenerated method: Pathfinding.VectorMath.Normalize
::UnityEngine::Vector2 Pathfinding::VectorMath::Normalize(::UnityEngine::Vector2 v, ByRef<float> magnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, byref(magnitude));
}
// Autogenerated method: Pathfinding.VectorMath.ClampMagnitudeXZ
::UnityEngine::Vector3 Pathfinding::VectorMath::ClampMagnitudeXZ(::UnityEngine::Vector3 v, float maxMagnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::ClampMagnitudeXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "ClampMagnitudeXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(maxMagnitude)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, maxMagnitude);
}
// Autogenerated method: Pathfinding.VectorMath.MagnitudeXZ
float Pathfinding::VectorMath::MagnitudeXZ(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VectorMath::MagnitudeXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "VectorMath", "MagnitudeXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarMath
#include "Pathfinding/AstarMath.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.AstarMath.MapTo
float Pathfinding::AstarMath::MapTo(float startMin, float startMax, float targetMin, float targetMax, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarMath::MapTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarMath", "MapTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startMin), ::il2cpp_utils::ExtractType(startMax), ::il2cpp_utils::ExtractType(targetMin), ::il2cpp_utils::ExtractType(targetMax), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startMin, startMax, targetMin, targetMax, value);
}
// Autogenerated method: Pathfinding.AstarMath.FormatBytesBinary
::StringW Pathfinding::AstarMath::FormatBytesBinary(int bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarMath::FormatBytesBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarMath", "FormatBytesBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.AstarMath.Bit
int Pathfinding::AstarMath::Bit(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarMath::Bit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarMath", "Bit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.AstarMath.IntToColor
::UnityEngine::Color Pathfinding::AstarMath::IntToColor(int i, float a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarMath::IntToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarMath", "IntToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, a);
}
// Autogenerated method: Pathfinding.AstarMath.HSVToRGB
::UnityEngine::Color Pathfinding::AstarMath::HSVToRGB(float h, float s, float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarMath::HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarMath", "HSVToRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h, s, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Polygon
#include "Pathfinding/Polygon.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<Pathfinding.Int3,System.Int32> cached_Int3_int_dict
::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, int>* Pathfinding::Polygon::_get_cached_Int3_int_dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::_get_cached_Int3_int_dict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, int>*>("Pathfinding", "Polygon", "cached_Int3_int_dict")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<Pathfinding.Int3,System.Int32> cached_Int3_int_dict
void Pathfinding::Polygon::_set_cached_Int3_int_dict(::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::_set_cached_Int3_int_dict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Polygon", "cached_Int3_int_dict", value));
}
// Autogenerated method: Pathfinding.Polygon.ContainsPointXZ
bool Pathfinding::Polygon::ContainsPointXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ContainsPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ContainsPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.ContainsPointXZ
bool Pathfinding::Polygon::ContainsPointXZ(::Pathfinding::Int3 a, ::Pathfinding::Int3 b, ::Pathfinding::Int3 c, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ContainsPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ContainsPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.ContainsPoint
bool Pathfinding::Polygon::ContainsPoint(::Pathfinding::Int2 a, ::Pathfinding::Int2 b, ::Pathfinding::Int2 c, ::Pathfinding::Int2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ContainsPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ContainsPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.ContainsPoint
bool Pathfinding::Polygon::ContainsPoint(::ArrayW<::UnityEngine::Vector2> polyPoints, ::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ContainsPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ContainsPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polyPoints), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, polyPoints, p);
}
// Autogenerated method: Pathfinding.Polygon.ContainsPointXZ
bool Pathfinding::Polygon::ContainsPointXZ(::ArrayW<::UnityEngine::Vector3> polyPoints, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ContainsPointXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ContainsPointXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polyPoints), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, polyPoints, p);
}
// Autogenerated method: Pathfinding.Polygon.SampleYCoordinateInTriangle
int Pathfinding::Polygon::SampleYCoordinateInTriangle(::Pathfinding::Int3 p1, ::Pathfinding::Int3 p2, ::Pathfinding::Int3 p3, ::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::SampleYCoordinateInTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "SampleYCoordinateInTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p1, p2, p3, p);
}
// Autogenerated method: Pathfinding.Polygon.ConvexHullXZ
::ArrayW<::UnityEngine::Vector3> Pathfinding::Polygon::ConvexHullXZ(::ArrayW<::UnityEngine::Vector3> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ConvexHullXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ConvexHullXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points);
}
// Autogenerated method: Pathfinding.Polygon.ClosestPointOnTriangle
::UnityEngine::Vector2 Pathfinding::Polygon::ClosestPointOnTriangle(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, ::UnityEngine::Vector2 c, ::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ClosestPointOnTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ClosestPointOnTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.ClosestPointOnTriangleXZ
::UnityEngine::Vector3 Pathfinding::Polygon::ClosestPointOnTriangleXZ(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ClosestPointOnTriangleXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ClosestPointOnTriangleXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.ClosestPointOnTriangle
::UnityEngine::Vector3 Pathfinding::Polygon::ClosestPointOnTriangle(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::ClosestPointOnTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "ClosestPointOnTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, p);
}
// Autogenerated method: Pathfinding.Polygon.CompressMesh
void Pathfinding::Polygon::CompressMesh(::System::Collections::Generic::List_1<::Pathfinding::Int3>* vertices, ::System::Collections::Generic::List_1<int>* triangles, ByRef<::ArrayW<::Pathfinding::Int3>> outVertices, ByRef<::ArrayW<int>> outTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::CompressMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "CompressMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Pathfinding::Int3>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertices, triangles, byref(outVertices), byref(outTriangles));
}
// Autogenerated method: Pathfinding.Polygon.TraceContours
void Pathfinding::Polygon::TraceContours(::System::Collections::Generic::Dictionary_2<int, int>* outline, ::System::Collections::Generic::HashSet_1<int>* hasInEdge, ::System::Action_2<::System::Collections::Generic::List_1<int>*, bool>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::TraceContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "TraceContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outline), ::il2cpp_utils::ExtractType(hasInEdge), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outline, hasInEdge, results);
}
// Autogenerated method: Pathfinding.Polygon.Subdivide
void Pathfinding::Polygon::Subdivide(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* result, int subSegments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::Subdivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", "Subdivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(subSegments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, result, subSegments);
}
// Autogenerated method: Pathfinding.Polygon..cctor
void Pathfinding::Polygon::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Polygon::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Polygon", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateScene
#include "Pathfinding/GraphUpdateScene.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::GraphUpdateScene::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] convexPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::GraphUpdateScene::dyn_convexPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_convexPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "convexPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean convex
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_convex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_convex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "convex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minBoundsHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphUpdateScene::dyn_minBoundsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_minBoundsHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minBoundsHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 penaltyDelta
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateScene::dyn_penaltyDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_penaltyDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyDelta"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean modifyWalkability
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_modifyWalkability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_modifyWalkability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifyWalkability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean setWalkability
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_setWalkability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_setWalkability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setWalkability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyOnStart
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_applyOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_applyOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyOnScan
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_applyOnScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_applyOnScan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyOnScan"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatePhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_updatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_updatePhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatePhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetPenaltyOnPhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_resetPenaltyOnPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_resetPenaltyOnPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetPenaltyOnPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateErosion
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_updateErosion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_updateErosion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateErosion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean modifyTag
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_modifyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_modifyTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifyTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setTag
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateScene::dyn_setTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_setTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean legacyMode
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_legacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_legacyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legacyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 setTagInvert
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateScene::dyn_setTagInvert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_setTagInvert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setTagInvert"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstApplied
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_firstApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_firstApplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstApplied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 serializedVersion
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateScene::dyn_serializedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_serializedVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean legacyUseWorldSpace
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateScene::dyn_legacyUseWorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::dyn_legacyUseWorldSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legacyUseWorldSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.Start
void Pathfinding::GraphUpdateScene::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.InvertSettings
void Pathfinding::GraphUpdateScene::InvertSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::InvertSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphUpdateScene*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.RecalcConvex
void Pathfinding::GraphUpdateScene::RecalcConvex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::RecalcConvex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalcConvex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.ToggleUseWorldSpace
void Pathfinding::GraphUpdateScene::ToggleUseWorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::ToggleUseWorldSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleUseWorldSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.LockToY
void Pathfinding::GraphUpdateScene::LockToY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::LockToY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockToY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.GetBounds
::UnityEngine::Bounds Pathfinding::GraphUpdateScene::GetBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.Apply
void Pathfinding::GraphUpdateScene::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.OnDrawGizmos
void Pathfinding::GraphUpdateScene::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.OnDrawGizmosSelected
void Pathfinding::GraphUpdateScene::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.OnDrawGizmos
void Pathfinding::GraphUpdateScene::OnDrawGizmos(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.DisableLegacyMode
void Pathfinding::GraphUpdateScene::DisableLegacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::DisableLegacyMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableLegacyMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.OnPostScan
void Pathfinding::GraphUpdateScene::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateScene.Awake
void Pathfinding::GraphUpdateScene::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateScene::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateShape
#include "Pathfinding/GraphUpdateShape.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::GraphUpdateShape::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _convexPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::GraphUpdateShape::dyn__convexPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn__convexPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_convexPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _convex
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateShape::dyn__convex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn__convex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_convex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 right
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphUpdateShape::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn_right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 forward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphUpdateShape::dyn_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn_forward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphUpdateShape::dyn_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn_up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphUpdateShape::dyn_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn_origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphUpdateShape::dyn_minimumHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::dyn_minimumHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.get_points
::ArrayW<::UnityEngine::Vector3> Pathfinding::GraphUpdateShape::get_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::get_points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.set_points
void Pathfinding::GraphUpdateShape::set_points(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::set_points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.get_convex
bool Pathfinding::GraphUpdateShape::get_convex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::get_convex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_convex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.set_convex
void Pathfinding::GraphUpdateShape::set_convex(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::set_convex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_convex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.CalculateConvexHull
void Pathfinding::GraphUpdateShape::CalculateConvexHull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::CalculateConvexHull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateConvexHull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.GetBounds
::UnityEngine::Bounds Pathfinding::GraphUpdateShape::GetBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.GetBounds
::UnityEngine::Bounds Pathfinding::GraphUpdateShape::GetBounds(::ArrayW<::UnityEngine::Vector3> points, ::UnityEngine::Matrix4x4 matrix, float minimumHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateShape", "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(minimumHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, matrix, minimumHeight);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.GetBounds
::UnityEngine::Bounds Pathfinding::GraphUpdateShape::GetBounds(::ArrayW<::UnityEngine::Vector3> points, ::UnityEngine::Vector3 right, ::UnityEngine::Vector3 up, ::UnityEngine::Vector3 forward, ::UnityEngine::Vector3 origin, float minimumHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateShape", "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(minimumHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, right, up, forward, origin, minimumHeight);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.Contains
bool Pathfinding::GraphUpdateShape::Contains(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GraphUpdateShape.Contains
bool Pathfinding::GraphUpdateShape::Contains(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateShape::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AnimationLink
#include "Pathfinding/AnimationLink.hpp"
// Including type: Pathfinding.AnimationLink/LinkClip
#include "Pathfinding/AnimationLink_LinkClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String clip
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::AnimationLink::dyn_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clip"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::AnimationLink::dyn_animSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_animSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reverseAnim
[[deprecated("Use field access instead!")]] bool& Pathfinding::AnimationLink::dyn_reverseAnim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_reverseAnim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseAnim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject referenceMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::AnimationLink::dyn_referenceMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_referenceMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AnimationLink/LinkClip[] sequence
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::AnimationLink::LinkClip*>& Pathfinding::AnimationLink::dyn_sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_sequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sequence"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::AnimationLink::LinkClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String boneRoot
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::AnimationLink::dyn_boneRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::dyn_boneRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneRoot"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AnimationLink.SearchRec
::UnityEngine::Transform* Pathfinding::AnimationLink::SearchRec(::UnityEngine::Transform* tr, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::SearchRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AnimationLink", "SearchRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tr, name);
}
// Autogenerated method: Pathfinding.AnimationLink.CalculateOffsets
void Pathfinding::AnimationLink::CalculateOffsets(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* trace, ByRef<::UnityEngine::Vector3> endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::CalculateOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trace, byref(endPosition));
}
// Autogenerated method: Pathfinding.AnimationLink.OnDrawGizmosSelected
void Pathfinding::AnimationLink::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NodeLink2*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AnimationLink/LinkClip
#include "Pathfinding/AnimationLink_LinkClip.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationClip clip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& Pathfinding::AnimationLink::LinkClip::dyn_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::LinkClip::dyn_clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AnimationLink::LinkClip::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::LinkClip::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 loopCount
[[deprecated("Use field access instead!")]] int& Pathfinding::AnimationLink::LinkClip::dyn_loopCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::LinkClip::dyn_loopCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AnimationLink/LinkClip.get_name
::StringW Pathfinding::AnimationLink::LinkClip::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::LinkClip::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarDebugger
#include "Pathfinding/AstarDebugger.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.AstarDebugger/<>c
#include "Pathfinding/AstarDebugger_--c.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 yOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean show
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_show");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "show"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showInEditor
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_showInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_showInEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showInEditor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showFPS
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_showFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_showFPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showFPS"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showPathProfile
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_showPathProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_showPathProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showPathProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMemProfile
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_showMemProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_showMemProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMemProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showGraph
[[deprecated("Use field access instead!")]] bool& Pathfinding::AstarDebugger::dyn_showGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_showGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 graphBufferSize
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_graphBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_graphBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphBufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Font font
[[deprecated("Use field access instead!")]] ::UnityEngine::Font*& Pathfinding::AstarDebugger::dyn_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_font");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "font"))->offset;
  return *reinterpret_cast<::UnityEngine::Font**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fontSize
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_fontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder text
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::AstarDebugger::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String cachedText
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::AstarDebugger::dyn_cachedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_cachedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastUpdate
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_lastUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AstarDebugger/GraphPoint[] graph
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::AstarDebugger::GraphPoint>& Pathfinding::AstarDebugger::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::AstarDebugger::GraphPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single delayedDeltaTime
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_delayedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_delayedDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollect
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_lastCollect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastCollect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollectNum
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_lastCollectNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastCollectNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollectNum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single delta
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastDeltaTime
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_lastDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 allocRate
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_allocRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_allocRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allocRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAllocMemory
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_lastAllocMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastAllocMemory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAllocMemory"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAllocSet
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_lastAllocSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_lastAllocSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAllocSet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 allocMem
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_allocMem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_allocMem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allocMem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 collectAlloc
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_collectAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_collectAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collectAlloc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 peakAlloc
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_peakAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_peakAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peakAlloc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fpsDropCounterSize
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_fpsDropCounterSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_fpsDropCounterSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsDropCounterSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] fpsDrops
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::AstarDebugger::dyn_fpsDrops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_fpsDrops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsDrops"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect boxRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Pathfinding::AstarDebugger::dyn_boxRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_boxRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boxRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GUIStyle style
[[deprecated("Use field access instead!")]] ::UnityEngine::GUIStyle*& Pathfinding::AstarDebugger::dyn_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
  return *reinterpret_cast<::UnityEngine::GUIStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera cam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Pathfinding::AstarDebugger::dyn_cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphWidth
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_graphWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_graphWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_graphHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_graphHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::AstarDebugger::dyn_graphOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_graphOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxVecPool
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_maxVecPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_maxVecPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVecPool"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxNodePool
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarDebugger::dyn_maxNodePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_maxNodePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNodePool"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AstarDebugger/PathTypeDebug[] debugTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::AstarDebugger::PathTypeDebug>& Pathfinding::AstarDebugger::dyn_debugTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::dyn_debugTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::AstarDebugger::PathTypeDebug>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarDebugger.Start
void Pathfinding::AstarDebugger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger.LateUpdate
void Pathfinding::AstarDebugger::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger.DrawGraphLine
void Pathfinding::AstarDebugger::DrawGraphLine(int index, ::UnityEngine::Matrix4x4 m, float x1, float x2, float y1, float y2, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::DrawGraphLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGraphLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(x1), ::il2cpp_utils::ExtractType(x2), ::il2cpp_utils::ExtractType(y1), ::il2cpp_utils::ExtractType(y2), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, m, x1, x2, y1, y2, color);
}
// Autogenerated method: Pathfinding.AstarDebugger.OnGUI
void Pathfinding::AstarDebugger::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarDebugger/PathTypeDebug
#include "Pathfinding/AstarDebugger.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::AstarDebugger::PathTypeDebug::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::PathTypeDebug::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Int32> getSize
[[deprecated("Use field access instead!")]] ::System::Func_1<int>*& Pathfinding::AstarDebugger::PathTypeDebug::dyn_getSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::PathTypeDebug::dyn_getSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSize"))->offset;
  return *reinterpret_cast<::System::Func_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Int32> getTotalCreated
[[deprecated("Use field access instead!")]] ::System::Func_1<int>*& Pathfinding::AstarDebugger::PathTypeDebug::dyn_getTotalCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::PathTypeDebug::dyn_getTotalCreated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getTotalCreated"))->offset;
  return *reinterpret_cast<::System::Func_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarDebugger/PathTypeDebug..ctor
// ABORTED elsewhere.  Pathfinding::AstarDebugger::PathTypeDebug::PathTypeDebug(::StringW name, ::System::Func_1<int>* getSize, ::System::Func_1<int>* getTotalCreated)
// Autogenerated method: Pathfinding.AstarDebugger/PathTypeDebug.Print
void Pathfinding::AstarDebugger::PathTypeDebug::Print(::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::PathTypeDebug::Print");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Print", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarDebugger/<>c
#include "Pathfinding/AstarDebugger_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.AstarDebugger/<>c <>9
::Pathfinding::AstarDebugger::$$c* Pathfinding::AstarDebugger::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::AstarDebugger::$$c*>("Pathfinding", "AstarDebugger/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.AstarDebugger/<>c <>9
void Pathfinding::AstarDebugger::$$c::_set_$$9(::Pathfinding::AstarDebugger::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_0
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_0
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_0(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_1
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_1
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_1(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_2
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_2
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_2(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_3
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_3
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_3(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_4
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_4
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_4(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_5
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_5")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_5
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_5(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_5", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_6
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_6")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_6
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_6(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_6", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_7
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_7")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_7
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_7(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_7", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_8
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_8")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_8
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_8(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_8", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_9
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_9")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_9
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_9(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_10
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_10")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_10
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_10(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_10", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_11
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_11")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_11
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_11(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_11", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_12
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_12")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_12
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_12(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_12", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__42_13
::System::Func_1<int>* Pathfinding::AstarDebugger::$$c::_get_$$9__42_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_get_$$9__42_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("Pathfinding", "AstarDebugger/<>c", "<>9__42_13")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__42_13
void Pathfinding::AstarDebugger::$$c::_set_$$9__42_13(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::_set_$$9__42_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "AstarDebugger/<>c", "<>9__42_13", value)));
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c..cctor
void Pathfinding::AstarDebugger::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarDebugger/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_0
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_1
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_2
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_3
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_4
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_5
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_6
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_7
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_8
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_9
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_10
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_11
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_12
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AstarDebugger/<>c.<.ctor>b__42_13
int Pathfinding::AstarDebugger::$$c::$_ctor$b__42_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarDebugger::$$c::<.ctor>b__42_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__42_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AutoRepathPolicy
#include "Pathfinding/AutoRepathPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AutoRepathPolicy/Mode mode
[[deprecated("Use field access instead!")]] ::Pathfinding::AutoRepathPolicy::Mode& Pathfinding::AutoRepathPolicy::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Pathfinding::AutoRepathPolicy::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single period
[[deprecated("Use field access instead!")]] float& Pathfinding::AutoRepathPolicy::dyn_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivity
[[deprecated("Use field access instead!")]] float& Pathfinding::AutoRepathPolicy::dyn_sensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_sensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumPeriod
[[deprecated("Use field access instead!")]] float& Pathfinding::AutoRepathPolicy::dyn_maximumPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_maximumPeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumPeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeSensitivity
[[deprecated("Use field access instead!")]] bool& Pathfinding::AutoRepathPolicy::dyn_visualizeSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_visualizeSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeSensitivity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastDestination
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AutoRepathPolicy::dyn_lastDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_lastDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDestination"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastRepathTime
[[deprecated("Use field access instead!")]] float& Pathfinding::AutoRepathPolicy::dyn_lastRepathTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::dyn_lastRepathTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRepathTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AutoRepathPolicy.ShouldRecalculatePath
bool Pathfinding::AutoRepathPolicy::ShouldRecalculatePath(::UnityEngine::Vector3 position, float radius, ::UnityEngine::Vector3 destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::ShouldRecalculatePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AutoRepathPolicy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, radius, destination);
}
// Autogenerated method: Pathfinding.AutoRepathPolicy.Reset
void Pathfinding::AutoRepathPolicy::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AutoRepathPolicy*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AutoRepathPolicy.DidRecalculatePath
void Pathfinding::AutoRepathPolicy::DidRecalculatePath(::UnityEngine::Vector3 destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::DidRecalculatePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AutoRepathPolicy*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: Pathfinding.AutoRepathPolicy.DrawGizmos
void Pathfinding::AutoRepathPolicy::DrawGizmos(::UnityEngine::Vector3 position, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, radius);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AutoRepathPolicy/Mode
#include "Pathfinding/AutoRepathPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.AutoRepathPolicy/Mode Never
::Pathfinding::AutoRepathPolicy::Mode Pathfinding::AutoRepathPolicy::Mode::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::AutoRepathPolicy::Mode>("Pathfinding", "AutoRepathPolicy/Mode", "Never"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.AutoRepathPolicy/Mode Never
void Pathfinding::AutoRepathPolicy::Mode::_set_Never(::Pathfinding::AutoRepathPolicy::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AutoRepathPolicy/Mode", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.AutoRepathPolicy/Mode EveryNSeconds
::Pathfinding::AutoRepathPolicy::Mode Pathfinding::AutoRepathPolicy::Mode::_get_EveryNSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_get_EveryNSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::AutoRepathPolicy::Mode>("Pathfinding", "AutoRepathPolicy/Mode", "EveryNSeconds"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.AutoRepathPolicy/Mode EveryNSeconds
void Pathfinding::AutoRepathPolicy::Mode::_set_EveryNSeconds(::Pathfinding::AutoRepathPolicy::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_set_EveryNSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AutoRepathPolicy/Mode", "EveryNSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.AutoRepathPolicy/Mode Dynamic
::Pathfinding::AutoRepathPolicy::Mode Pathfinding::AutoRepathPolicy::Mode::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::AutoRepathPolicy::Mode>("Pathfinding", "AutoRepathPolicy/Mode", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.AutoRepathPolicy/Mode Dynamic
void Pathfinding::AutoRepathPolicy::Mode::_set_Dynamic(::Pathfinding::AutoRepathPolicy::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AutoRepathPolicy/Mode", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::AutoRepathPolicy::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AutoRepathPolicy::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BinaryHeap
#include "Pathfinding/BinaryHeap.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 D
int Pathfinding::BinaryHeap::_get_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_get_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "BinaryHeap", "D"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 D
void Pathfinding::BinaryHeap::_set_D(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_set_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BinaryHeap", "D", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean SortGScores
bool Pathfinding::BinaryHeap::_get_SortGScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_get_SortGScores");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "BinaryHeap", "SortGScores"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean SortGScores
void Pathfinding::BinaryHeap::_set_SortGScores(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_set_SortGScores");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BinaryHeap", "SortGScores", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt16 NotInHeap
uint16_t Pathfinding::BinaryHeap::_get_NotInHeap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_get_NotInHeap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("Pathfinding", "BinaryHeap", "NotInHeap"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt16 NotInHeap
void Pathfinding::BinaryHeap::_set_NotInHeap(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::_set_NotInHeap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BinaryHeap", "NotInHeap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numberOfItems
[[deprecated("Use field access instead!")]] int& Pathfinding::BinaryHeap::dyn_numberOfItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::dyn_numberOfItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberOfItems"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single growthFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::BinaryHeap::dyn_growthFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::dyn_growthFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "growthFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.BinaryHeap/Tuple[] heap
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::BinaryHeap::Tuple>& Pathfinding::BinaryHeap::dyn_heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::dyn_heap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::BinaryHeap::Tuple>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BinaryHeap.get_isEmpty
bool Pathfinding::BinaryHeap::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BinaryHeap.RoundUpToNextMultipleMod1
int Pathfinding::BinaryHeap::RoundUpToNextMultipleMod1(int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::RoundUpToNextMultipleMod1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BinaryHeap", "RoundUpToNextMultipleMod1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Pathfinding.BinaryHeap.Clear
void Pathfinding::BinaryHeap::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BinaryHeap.GetNode
::Pathfinding::PathNode* Pathfinding::BinaryHeap::GetNode(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.BinaryHeap.SetF
void Pathfinding::BinaryHeap::SetF(int i, uint f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::SetF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, f);
}
// Autogenerated method: Pathfinding.BinaryHeap.Expand
void Pathfinding::BinaryHeap::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BinaryHeap.Add
void Pathfinding::BinaryHeap::Add(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.BinaryHeap.DecreaseKey
void Pathfinding::BinaryHeap::DecreaseKey(::Pathfinding::BinaryHeap::Tuple node, uint16_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::DecreaseKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecreaseKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, index);
}
// Autogenerated method: Pathfinding.BinaryHeap.Remove
::Pathfinding::PathNode* Pathfinding::BinaryHeap::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BinaryHeap.Validate
void Pathfinding::BinaryHeap::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BinaryHeap.Rebuild
void Pathfinding::BinaryHeap::Rebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Rebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BinaryHeap/Tuple
#include "Pathfinding/BinaryHeap.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::BinaryHeap::Tuple::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Tuple::dyn_node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 F
[[deprecated("Use field access instead!")]] uint& Pathfinding::BinaryHeap::Tuple::dyn_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Tuple::dyn_F");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "F"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BinaryHeap/Tuple..ctor
Pathfinding::BinaryHeap::Tuple::Tuple(uint f, ::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BinaryHeap::Tuple::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphEditorBase
#include "Pathfinding/GraphEditorBase.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph target
[[deprecated("Use field access instead!")]] ::Pathfinding::NavGraph*& Pathfinding::GraphEditorBase::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphEditorBase::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::Pathfinding::NavGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphModifier
#include "Pathfinding/GraphModifier.hpp"
// Including type: Pathfinding.GraphModifier/EventType
#include "Pathfinding/GraphModifier_EventType.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.GraphModifier root
::Pathfinding::GraphModifier* Pathfinding::GraphModifier::_get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::_get_root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier*>("Pathfinding", "GraphModifier", "root"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.GraphModifier root
void Pathfinding::GraphModifier::_set_root(::Pathfinding::GraphModifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::_set_root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier", "root", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Collections.Generic.Dictionary`2<System.UInt64,Pathfinding.GraphModifier> usedIDs
::System::Collections::Generic::Dictionary_2<uint64_t, ::Pathfinding::GraphModifier*>* Pathfinding::GraphModifier::_get_usedIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::_get_usedIDs");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::Pathfinding::GraphModifier*>*>("Pathfinding", "GraphModifier", "usedIDs")));
}
// Autogenerated static field setter
// Set static field: static protected System.Collections.Generic.Dictionary`2<System.UInt64,Pathfinding.GraphModifier> usedIDs
void Pathfinding::GraphModifier::_set_usedIDs(::System::Collections::Generic::Dictionary_2<uint64_t, ::Pathfinding::GraphModifier*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::_set_usedIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier", "usedIDs", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphModifier prev
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphModifier*& Pathfinding::GraphModifier::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphModifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphModifier next
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphModifier*& Pathfinding::GraphModifier::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphModifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt64 uniqueID
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::GraphModifier::dyn_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::dyn_uniqueID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uniqueID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphModifier.FindAllModifiers
void Pathfinding::GraphModifier::FindAllModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::FindAllModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphModifier", "FindAllModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.TriggerEvent
void Pathfinding::GraphModifier::TriggerEvent(::Pathfinding::GraphModifier::EventType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::TriggerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphModifier", "TriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Pathfinding.GraphModifier.OnEnable
void Pathfinding::GraphModifier::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnDisable
void Pathfinding::GraphModifier::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.ConfigureUniqueID
void Pathfinding::GraphModifier::ConfigureUniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::ConfigureUniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureUniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.AddToLinkedList
void Pathfinding::GraphModifier::AddToLinkedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::AddToLinkedList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToLinkedList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.RemoveFromLinkedList
void Pathfinding::GraphModifier::RemoveFromLinkedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::RemoveFromLinkedList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromLinkedList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnDestroy
void Pathfinding::GraphModifier::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnPostScan
void Pathfinding::GraphModifier::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnPreScan
void Pathfinding::GraphModifier::OnPreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnPreScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnLatePostScan
void Pathfinding::GraphModifier::OnLatePostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnLatePostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnPostCacheLoad
void Pathfinding::GraphModifier::OnPostCacheLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnPostCacheLoad");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnGraphsPreUpdate
void Pathfinding::GraphModifier::OnGraphsPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnGraphsPreUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.OnGraphsPostUpdate
void Pathfinding::GraphModifier::OnGraphsPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::OnGraphsPostUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier..cctor
void Pathfinding::GraphModifier::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphModifier", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.Awake
void Pathfinding::GraphModifier::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphModifier.Reset
void Pathfinding::GraphModifier::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphModifier/EventType
#include "Pathfinding/GraphModifier_EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType PostScan
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_PostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_PostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "PostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType PostScan
void Pathfinding::GraphModifier::EventType::_set_PostScan(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_PostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "PostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType PreScan
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_PreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_PreScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "PreScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType PreScan
void Pathfinding::GraphModifier::EventType::_set_PreScan(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_PreScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "PreScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType LatePostScan
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_LatePostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_LatePostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "LatePostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType LatePostScan
void Pathfinding::GraphModifier::EventType::_set_LatePostScan(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_LatePostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "LatePostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType PreUpdate
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_PreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_PreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "PreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType PreUpdate
void Pathfinding::GraphModifier::EventType::_set_PreUpdate(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_PreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "PreUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType PostUpdate
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_PostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_PostUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "PostUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType PostUpdate
void Pathfinding::GraphModifier::EventType::_set_PostUpdate(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_PostUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "PostUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphModifier/EventType PostCacheLoad
::Pathfinding::GraphModifier::EventType Pathfinding::GraphModifier::EventType::_get_PostCacheLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_get_PostCacheLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphModifier::EventType>("Pathfinding", "GraphModifier/EventType", "PostCacheLoad"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphModifier/EventType PostCacheLoad
void Pathfinding::GraphModifier::EventType::_set_PostCacheLoad(::Pathfinding::GraphModifier::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::_set_PostCacheLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphModifier/EventType", "PostCacheLoad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphModifier::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphModifier::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateProcessor
#include "Pathfinding/GraphUpdateProcessor.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: UnityEngine.Profiling.CustomSampler
#include "UnityEngine/Profiling/CustomSampler.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Pathfinding.AstarWorkItem
#include "Pathfinding/AstarWorkItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action OnGraphsUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::GraphUpdateProcessor::dyn_OnGraphsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_OnGraphsUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGraphsUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AstarPath astar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& Pathfinding::GraphUpdateProcessor::dyn_astar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_astar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "astar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread graphUpdateThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anyGraphUpdateInProgress
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateProcessor::dyn_anyGraphUpdateInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_anyGraphUpdateInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyGraphUpdateInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Profiling.CustomSampler asyncUpdateProfilingSampler
[[deprecated("Use field access instead!")]] ::UnityEngine::Profiling::CustomSampler*& Pathfinding::GraphUpdateProcessor::dyn_asyncUpdateProfilingSampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_asyncUpdateProfilingSampler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncUpdateProfilingSampler"))->offset;
  return *reinterpret_cast<::UnityEngine::Profiling::CustomSampler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateObject> graphUpdateQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateProcessor/GUOSingle> graphUpdateQueueAsync
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueueAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueueAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueueAsync"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateProcessor/GUOSingle> graphUpdateQueuePost
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueuePost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueuePost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueuePost"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateProcessor/GUOSingle> graphUpdateQueueRegular
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueueRegular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateQueueRegular");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueueRegular"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateProcessor::GUOSingle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEvent asyncGraphUpdatesComplete
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Pathfinding::GraphUpdateProcessor::dyn_asyncGraphUpdatesComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_asyncGraphUpdatesComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncGraphUpdatesComplete"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.AutoResetEvent graphUpdateAsyncEvent
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Pathfinding::GraphUpdateProcessor::dyn_graphUpdateAsyncEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_graphUpdateAsyncEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateAsyncEvent"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.AutoResetEvent exitAsyncThread
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Pathfinding::GraphUpdateProcessor::dyn_exitAsyncThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::dyn_exitAsyncThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitAsyncThread"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.add_OnGraphsUpdated
void Pathfinding::GraphUpdateProcessor::add_OnGraphsUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::add_OnGraphsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnGraphsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.remove_OnGraphsUpdated
void Pathfinding::GraphUpdateProcessor::remove_OnGraphsUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::remove_OnGraphsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnGraphsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.get_IsAnyGraphUpdateQueued
bool Pathfinding::GraphUpdateProcessor::get_IsAnyGraphUpdateQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::get_IsAnyGraphUpdateQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdateQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.get_IsAnyGraphUpdateInProgress
bool Pathfinding::GraphUpdateProcessor::get_IsAnyGraphUpdateInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::get_IsAnyGraphUpdateInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdateInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.GetWorkItem
::Pathfinding::AstarWorkItem Pathfinding::GraphUpdateProcessor::GetWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::GetWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::AstarWorkItem, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.EnableMultithreading
void Pathfinding::GraphUpdateProcessor::EnableMultithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::EnableMultithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMultithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.DisableMultithreading
void Pathfinding::GraphUpdateProcessor::DisableMultithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::DisableMultithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMultithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.AddToQueue
void Pathfinding::GraphUpdateProcessor::AddToQueue(::Pathfinding::GraphUpdateObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::AddToQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.QueueGraphUpdatesInternal
void Pathfinding::GraphUpdateProcessor::QueueGraphUpdatesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::QueueGraphUpdatesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueGraphUpdatesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.ProcessGraphUpdates
bool Pathfinding::GraphUpdateProcessor::ProcessGraphUpdates(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::ProcessGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.ProcessRegularUpdates
bool Pathfinding::GraphUpdateProcessor::ProcessRegularUpdates(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::ProcessRegularUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRegularUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.StartAsyncUpdatesIfQueued
bool Pathfinding::GraphUpdateProcessor::StartAsyncUpdatesIfQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::StartAsyncUpdatesIfQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAsyncUpdatesIfQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.ProcessPostUpdates
void Pathfinding::GraphUpdateProcessor::ProcessPostUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::ProcessPostUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPostUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphUpdateProcessor.ProcessGraphUpdatesAsync
void Pathfinding::GraphUpdateProcessor::ProcessGraphUpdatesAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::ProcessGraphUpdatesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessGraphUpdatesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateProcessor/GraphUpdateOrder
#include "Pathfinding/GraphUpdateProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphUpdateProcessor/GraphUpdateOrder GraphUpdate
::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::_get_GraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::_get_GraphUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder>("Pathfinding", "GraphUpdateProcessor/GraphUpdateOrder", "GraphUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphUpdateProcessor/GraphUpdateOrder GraphUpdate
void Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::_set_GraphUpdate(::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::_set_GraphUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphUpdateProcessor/GraphUpdateOrder", "GraphUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateProcessor::GraphUpdateOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUtilities
#include "Pathfinding/GraphUtilities.hpp"
// Including type: Pathfinding.GraphUtilities/<>c__DisplayClass0_0
#include "Pathfinding/GraphUtilities_--c__DisplayClass0_0.hpp"
// Including type: Pathfinding.GraphUtilities/<>c__DisplayClass1_0
#include "Pathfinding/GraphUtilities_--c__DisplayClass1_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.INavmesh
#include "Pathfinding/INavmesh.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.GraphUtilities.GetContours
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::GraphUtilities::GetContours(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::GetContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUtilities", "GetContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.GraphUtilities.GetContours
void Pathfinding::GraphUtilities::GetContours(::Pathfinding::INavmesh* navmesh, ::System::Action_2<::System::Collections::Generic::List_1<::Pathfinding::Int3>*, bool>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::GetContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUtilities", "GetContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(navmesh), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, navmesh, results);
}
// Autogenerated method: Pathfinding.GraphUtilities.GetContours
void Pathfinding::GraphUtilities::GetContours(::Pathfinding::GridGraph* grid, ::System::Action_1<::ArrayW<::UnityEngine::Vector3>>* callback, float yMergeThreshold, ::ArrayW<::Pathfinding::GridNodeBase*> nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::GetContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUtilities", "GetContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grid), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(yMergeThreshold), ::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grid, callback, yMergeThreshold, nodes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUtilities/<>c__DisplayClass0_0
#include "Pathfinding/GraphUtilities_--c__DisplayClass0_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> result
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::GraphUtilities::$$c__DisplayClass0_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass0_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUtilities/<>c__DisplayClass0_0.<GetContours>b__0
void Pathfinding::GraphUtilities::$$c__DisplayClass0_0::$GetContours$b__0(::System::Collections::Generic::List_1<::Pathfinding::Int3>* vertices, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass0_0::<GetContours>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContours>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(cycle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, cycle);
}
// Autogenerated method: Pathfinding.GraphUtilities/<>c__DisplayClass0_0.<GetContours>b__1
void Pathfinding::GraphUtilities::$$c__DisplayClass0_0::$GetContours$b__1(::ArrayW<::UnityEngine::Vector3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass0_0::<GetContours>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContours>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUtilities/<>c__DisplayClass1_0
#include "Pathfinding/GraphUtilities_--c__DisplayClass1_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] uses
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_uses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_uses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uses"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> outline
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_outline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outline"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<System.Int32> hasInEdge
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_hasInEdge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_hasInEdge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasInEdge"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,Pathfinding.Int3> vertexPositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Pathfinding::Int3>*& Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_vertexPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_vertexPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertexPositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Pathfinding::Int3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Collections.Generic.List`1<Pathfinding.Int3>,System.Boolean> results
[[deprecated("Use field access instead!")]] ::System::Action_2<::System::Collections::Generic::List_1<::Pathfinding::Int3>*, bool>*& Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_results() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::dyn_results");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "results"))->offset;
  return *reinterpret_cast<::System::Action_2<::System::Collections::Generic::List_1<::Pathfinding::Int3>*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUtilities/<>c__DisplayClass1_0.<GetContours>b__0
void Pathfinding::GraphUtilities::$$c__DisplayClass1_0::$GetContours$b__0(::Pathfinding::GraphNode* _node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::<GetContours>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContours>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _node);
}
// Autogenerated method: Pathfinding.GraphUtilities/<>c__DisplayClass1_0.<GetContours>b__1
void Pathfinding::GraphUtilities::$$c__DisplayClass1_0::$GetContours$b__1(::System::Collections::Generic::List_1<int>* chain, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUtilities::$$c__DisplayClass1_0::<GetContours>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContours>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(cycle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chain, cycle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.HierarchicalGraph
#include "Pathfinding/HierarchicalGraph.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 Tiling
int Pathfinding::HierarchicalGraph::_get_Tiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_get_Tiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "HierarchicalGraph", "Tiling"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Tiling
void Pathfinding::HierarchicalGraph::_set_Tiling(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_set_Tiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HierarchicalGraph", "Tiling", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxChildrenPerNode
int Pathfinding::HierarchicalGraph::_get_MaxChildrenPerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_get_MaxChildrenPerNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "HierarchicalGraph", "MaxChildrenPerNode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxChildrenPerNode
void Pathfinding::HierarchicalGraph::_set_MaxChildrenPerNode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_set_MaxChildrenPerNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HierarchicalGraph", "MaxChildrenPerNode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MinChildrenPerNode
int Pathfinding::HierarchicalGraph::_get_MinChildrenPerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_get_MinChildrenPerNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "HierarchicalGraph", "MinChildrenPerNode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MinChildrenPerNode
void Pathfinding::HierarchicalGraph::_set_MinChildrenPerNode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::_set_MinChildrenPerNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HierarchicalGraph", "MinChildrenPerNode", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode>[] children
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*>& Pathfinding::HierarchicalGraph::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32>[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<int>*>& Pathfinding::HierarchicalGraph::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<int>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] areas
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::HierarchicalGraph::dyn_areas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_areas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "areas"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] dirty
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::HierarchicalGraph::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <version>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::HierarchicalGraph::dyn_$version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_$version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<version>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onConnectedComponentsChanged
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::HierarchicalGraph::dyn_onConnectedComponentsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_onConnectedComponentsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedComponentsChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Pathfinding.GraphNode> connectionCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::HierarchicalGraph::dyn_connectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_connectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Pathfinding.GraphNode> temporaryQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>*& Pathfinding::HierarchicalGraph::dyn_temporaryQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_temporaryQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temporaryQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> currentChildren
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::HierarchicalGraph::dyn_currentChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_currentChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> currentConnections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Pathfinding::HierarchicalGraph::dyn_currentConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_currentConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentConnections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentHierarchicalNodeIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::HierarchicalGraph::dyn_currentHierarchicalNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_currentHierarchicalNodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHierarchicalNodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Int32> temporaryStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<int>*& Pathfinding::HierarchicalGraph::dyn_temporaryStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_temporaryStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temporaryStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numDirtyNodes
[[deprecated("Use field access instead!")]] int& Pathfinding::HierarchicalGraph::dyn_numDirtyNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_numDirtyNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numDirtyNodes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode[] dirtyNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::HierarchicalGraph::dyn_dirtyNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_dirtyNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirtyNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Int32> freeNodeIndices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<int>*& Pathfinding::HierarchicalGraph::dyn_freeNodeIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_freeNodeIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freeNodeIndices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gizmoVersion
[[deprecated("Use field access instead!")]] int& Pathfinding::HierarchicalGraph::dyn_gizmoVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_gizmoVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmoVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <NumConnectedComponents>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::HierarchicalGraph::dyn_$NumConnectedComponents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::dyn_$NumConnectedComponents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NumConnectedComponents>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.get_version
int Pathfinding::HierarchicalGraph::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.set_version
void Pathfinding::HierarchicalGraph::set_version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::set_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.Grow
void Pathfinding::HierarchicalGraph::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.GetHierarchicalNodeIndex
int Pathfinding::HierarchicalGraph::GetHierarchicalNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::GetHierarchicalNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHierarchicalNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.OnCreatedNode
void Pathfinding::HierarchicalGraph::OnCreatedNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::OnCreatedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreatedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.AddDirtyNode
void Pathfinding::HierarchicalGraph::AddDirtyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::AddDirtyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDirtyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.get_NumConnectedComponents
int Pathfinding::HierarchicalGraph::get_NumConnectedComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::get_NumConnectedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumConnectedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.set_NumConnectedComponents
void Pathfinding::HierarchicalGraph::set_NumConnectedComponents(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::set_NumConnectedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NumConnectedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.GetConnectedComponent
uint Pathfinding::HierarchicalGraph::GetConnectedComponent(int hierarchicalNodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::GetConnectedComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hierarchicalNodeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, hierarchicalNodeIndex);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.RemoveHierarchicalNode
void Pathfinding::HierarchicalGraph::RemoveHierarchicalNode(int hierarchicalNode, bool removeAdjacentSmallNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::RemoveHierarchicalNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveHierarchicalNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hierarchicalNode), ::il2cpp_utils::ExtractType(removeAdjacentSmallNodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hierarchicalNode, removeAdjacentSmallNodes);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.RecalculateIfNecessary
void Pathfinding::HierarchicalGraph::RecalculateIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::RecalculateIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.RecalculateAll
void Pathfinding::HierarchicalGraph::RecalculateAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::RecalculateAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.FloodFill
void Pathfinding::HierarchicalGraph::FloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.FindHierarchicalNodeChildren
void Pathfinding::HierarchicalGraph::FindHierarchicalNodeChildren(int hierarchicalNode, ::Pathfinding::GraphNode* startNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::FindHierarchicalNodeChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindHierarchicalNodeChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hierarchicalNode), ::il2cpp_utils::ExtractType(startNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hierarchicalNode, startNode);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.OnDrawGizmos
void Pathfinding::HierarchicalGraph::OnDrawGizmos(::Pathfinding::Util::RetainedGizmos* gizmos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gizmos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.<.ctor>b__22_0
void Pathfinding::HierarchicalGraph::$_ctor$b__22_0(::Pathfinding::GraphNode* neighbour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::<.ctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(neighbour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, neighbour);
}
// Autogenerated method: Pathfinding.HierarchicalGraph.<RecalculateAll>b__34_0
void Pathfinding::HierarchicalGraph::$RecalculateAll$b__34_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HierarchicalGraph::<RecalculateAll>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateAll>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Precision
int Pathfinding::Int3::_get_Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_get_Precision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "Int3", "Precision"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Precision
void Pathfinding::Int3::_set_Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_set_Precision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Int3", "Precision", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FloatPrecision
float Pathfinding::Int3::_get_FloatPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_get_FloatPrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "Int3", "FloatPrecision"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FloatPrecision
void Pathfinding::Int3::_set_FloatPrecision(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_set_FloatPrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Int3", "FloatPrecision", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionFactor
float Pathfinding::Int3::_get_PrecisionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_get_PrecisionFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "Int3", "PrecisionFactor"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionFactor
void Pathfinding::Int3::_set_PrecisionFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::_set_PrecisionFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Int3", "PrecisionFactor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::Int3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 y
[[deprecated("Use field access instead!")]] int& Pathfinding::Int3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 z
[[deprecated("Use field access instead!")]] int& Pathfinding::Int3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Int3.get_zero
::Pathfinding::Int3 Pathfinding::Int3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Int3..ctor
Pathfinding::Int3::Int3(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.Int3..ctor
// ABORTED elsewhere.  Pathfinding::Int3::Int3(int _x, int _y, int _z)
// Autogenerated method: Pathfinding.Int3.op_Explicit
Pathfinding::Int3::Int3(::UnityEngine::Vector3& ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ob);
}
// Autogenerated method: Pathfinding.Int3.op_Explicit
Pathfinding::Int3::operator ::UnityEngine::Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.get_Item
int Pathfinding::Int3::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.Int3.set_Item
void Pathfinding::Int3::set_Item(int i, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, value);
}
// Autogenerated method: Pathfinding.Int3.Angle
float Pathfinding::Int3::Angle(::Pathfinding::Int3 lhs, ::Pathfinding::Int3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.Dot
int Pathfinding::Int3::Dot(::Pathfinding::Int3 lhs, ::Pathfinding::Int3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.DotLong
int64_t Pathfinding::Int3::DotLong(::Pathfinding::Int3 lhs, ::Pathfinding::Int3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::DotLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "DotLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.Normal2D
::Pathfinding::Int3 Pathfinding::Int3::Normal2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::Normal2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normal2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.get_magnitude
float Pathfinding::Int3::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.get_costMagnitude
int Pathfinding::Int3::get_costMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_costMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_costMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.get_sqrMagnitude
float Pathfinding::Int3::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.get_sqrMagnitudeLong
int64_t Pathfinding::Int3::get_sqrMagnitudeLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::get_sqrMagnitudeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitudeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.Equals
bool Pathfinding::Int3::Equals(::Pathfinding::Int3 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Pathfinding::Int3), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.Int3.ToString
::StringW Pathfinding::Int3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.Equals
bool Pathfinding::Int3::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.Int3.GetHashCode
int Pathfinding::Int3::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int3.op_Equality
bool Pathfinding::operator ==(const ::Pathfinding::Int3& lhs, const ::Pathfinding::Int3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Inequality
bool Pathfinding::operator !=(const ::Pathfinding::Int3& lhs, const ::Pathfinding::Int3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Subtraction
::Pathfinding::Int3 Pathfinding::operator-(const ::Pathfinding::Int3& lhs, const ::Pathfinding::Int3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_UnaryNegation
::Pathfinding::Int3 Pathfinding::operator-(const ::Pathfinding::Int3& lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs);
}
// Autogenerated method: Pathfinding.Int3.op_Addition
::Pathfinding::Int3 Pathfinding::operator+(const ::Pathfinding::Int3& lhs, const ::Pathfinding::Int3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Multiply
::Pathfinding::Int3 Pathfinding::operator*(const ::Pathfinding::Int3& lhs, const int& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Multiply
::Pathfinding::Int3 Pathfinding::operator*(const ::Pathfinding::Int3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Multiply
::Pathfinding::Int3 Pathfinding::operator*(const ::Pathfinding::Int3& lhs, const double& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Int3.op_Division
::Pathfinding::Int3 Pathfinding::operator/(const ::Pathfinding::Int3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int3::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int3", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::Int2::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 y
[[deprecated("Use field access instead!")]] int& Pathfinding::Int2::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Int2..ctor
// ABORTED elsewhere.  Pathfinding::Int2::Int2(int x, int y)
// Autogenerated method: Pathfinding.Int2.get_sqrMagnitudeLong
int64_t Pathfinding::Int2::get_sqrMagnitudeLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::get_sqrMagnitudeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitudeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int2.DotLong
int64_t Pathfinding::Int2::DotLong(::Pathfinding::Int2 a, ::Pathfinding::Int2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::DotLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "DotLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.Equals
bool Pathfinding::Int2::Equals(::Pathfinding::Int2 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Pathfinding::Int2), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.Int2.Min
::Pathfinding::Int2 Pathfinding::Int2::Min(::Pathfinding::Int2 a, ::Pathfinding::Int2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.Max
::Pathfinding::Int2 Pathfinding::Int2::Max(::Pathfinding::Int2 a, ::Pathfinding::Int2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.FromInt3XZ
::Pathfinding::Int2 Pathfinding::Int2::FromInt3XZ(::Pathfinding::Int3 o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::FromInt3XZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "FromInt3XZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: Pathfinding.Int2.ToInt3XZ
::Pathfinding::Int3 Pathfinding::Int2::ToInt3XZ(::Pathfinding::Int2 o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::ToInt3XZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "ToInt3XZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: Pathfinding.Int2.Equals
bool Pathfinding::Int2::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.Int2.GetHashCode
int Pathfinding::Int2::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int2.ToString
::StringW Pathfinding::Int2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Int2.op_UnaryNegation
::Pathfinding::Int2 Pathfinding::operator-(const ::Pathfinding::Int2& lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs);
}
// Autogenerated method: Pathfinding.Int2.op_Addition
::Pathfinding::Int2 Pathfinding::operator+(const ::Pathfinding::Int2& a, const ::Pathfinding::Int2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.op_Subtraction
::Pathfinding::Int2 Pathfinding::operator-(const ::Pathfinding::Int2& a, const ::Pathfinding::Int2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.op_Equality
bool Pathfinding::operator ==(const ::Pathfinding::Int2& a, const ::Pathfinding::Int2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Int2.op_Inequality
bool Pathfinding::operator !=(const ::Pathfinding::Int2& a, const ::Pathfinding::Int2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Int2::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Int2", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NodeLink
#include "Pathfinding/NodeLink.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform end
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::NodeLink::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single costFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::NodeLink::dyn_costFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::dyn_costFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "costFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oneWay
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink::dyn_oneWay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::dyn_oneWay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneWay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean deleteConnection
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink::dyn_deleteConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::dyn_deleteConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deleteConnection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NodeLink.get_Start
::UnityEngine::Transform* Pathfinding::NodeLink::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::get_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.get_End
::UnityEngine::Transform* Pathfinding::NodeLink::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.InternalOnPostScan
void Pathfinding::NodeLink::InternalOnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::InternalOnPostScan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnPostScan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.Apply
void Pathfinding::NodeLink::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NodeLink*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.OnDrawGizmos
void Pathfinding::NodeLink::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.<OnPostScan>b__8_0
bool Pathfinding::NodeLink::$OnPostScan$b__8_0(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::<OnPostScan>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnPostScan>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.NodeLink.<OnGraphsPostUpdate>b__10_0
bool Pathfinding::NodeLink::$OnGraphsPostUpdate$b__10_0(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::<OnGraphsPostUpdate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGraphsPostUpdate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.NodeLink.OnPostScan
void Pathfinding::NodeLink::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink.OnGraphsPostUpdate
void Pathfinding::NodeLink::OnGraphsPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink::OnGraphsPostUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NodeLink2
#include "Pathfinding/NodeLink2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,Pathfinding.NodeLink2> reference
::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink2*>* Pathfinding::NodeLink2::_get_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_get_reference");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink2*>*>("Pathfinding", "NodeLink2", "reference")));
}
// Autogenerated static field setter
// Set static field: static protected System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,Pathfinding.NodeLink2> reference
void Pathfinding::NodeLink2::_set_reference(::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink2*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_set_reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink2", "reference", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color GizmosColor
::UnityEngine::Color Pathfinding::NodeLink2::_get_GizmosColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_get_GizmosColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NodeLink2", "GizmosColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color GizmosColor
void Pathfinding::NodeLink2::_set_GizmosColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_set_GizmosColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink2", "GizmosColor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color GizmosColorSelected
::UnityEngine::Color Pathfinding::NodeLink2::_get_GizmosColorSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_get_GizmosColorSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NodeLink2", "GizmosColorSelected"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color GizmosColorSelected
void Pathfinding::NodeLink2::_set_GizmosColorSelected(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::_set_GizmosColorSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink2", "GizmosColorSelected", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform end
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::NodeLink2::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single costFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::NodeLink2::dyn_costFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_costFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "costFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oneWay
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink2::dyn_oneWay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_oneWay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneWay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PointNode <startNode>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::PointNode*& Pathfinding::NodeLink2::dyn_$startNode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_$startNode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startNode>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::PointNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PointNode <endNode>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::PointNode*& Pathfinding::NodeLink2::dyn_$endNode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_$endNode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endNode>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::PointNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode connectedNode1
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NodeLink2::dyn_connectedNode1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_connectedNode1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedNode1"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode connectedNode2
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NodeLink2::dyn_connectedNode2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_connectedNode2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedNode2"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clamped1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink2::dyn_clamped1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_clamped1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clamped1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clamped2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink2::dyn_clamped2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_clamped2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clamped2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean postScanCalled
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink2::dyn_postScanCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::dyn_postScanCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postScanCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NodeLink2.GetNodeLink
::Pathfinding::NodeLink2* Pathfinding::NodeLink2::GetNodeLink(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::GetNodeLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink2", "GetNodeLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NodeLink2*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Pathfinding.NodeLink2.get_StartTransform
::UnityEngine::Transform* Pathfinding::NodeLink2::get_StartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_StartTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.get_EndTransform
::UnityEngine::Transform* Pathfinding::NodeLink2::get_EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_EndTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.get_startNode
::Pathfinding::PointNode* Pathfinding::NodeLink2::get_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_startNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PointNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.set_startNode
void Pathfinding::NodeLink2::set_startNode(::Pathfinding::PointNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::set_startNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.NodeLink2.get_endNode
::Pathfinding::PointNode* Pathfinding::NodeLink2::get_endNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_endNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PointNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.set_endNode
void Pathfinding::NodeLink2::set_endNode(::Pathfinding::PointNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::set_endNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.NodeLink2.get_StartNode
::Pathfinding::GraphNode* Pathfinding::NodeLink2::get_StartNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_StartNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.get_EndNode
::Pathfinding::GraphNode* Pathfinding::NodeLink2::get_EndNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::get_EndNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.InternalOnPostScan
void Pathfinding::NodeLink2::InternalOnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::InternalOnPostScan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnPostScan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.RemoveConnections
void Pathfinding::NodeLink2::RemoveConnections(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::RemoveConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.NodeLink2.ContextApplyForce
void Pathfinding::NodeLink2::ContextApplyForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::ContextApplyForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContextApplyForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.Apply
void Pathfinding::NodeLink2::Apply(bool forceNewCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceNewCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forceNewCheck);
}
// Autogenerated method: Pathfinding.NodeLink2.OnDrawGizmosSelected
void Pathfinding::NodeLink2::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NodeLink2*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.OnDrawGizmos
void Pathfinding::NodeLink2::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.OnDrawGizmos
void Pathfinding::NodeLink2::OnDrawGizmos(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Pathfinding.NodeLink2.SerializeReferences
void Pathfinding::NodeLink2::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::SerializeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink2", "SerializeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NodeLink2.DeserializeReferences
void Pathfinding::NodeLink2::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::DeserializeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink2", "DeserializeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NodeLink2.OnPostScan
void Pathfinding::NodeLink2::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.OnGraphsPostUpdate
void Pathfinding::NodeLink2::OnGraphsPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnGraphsPostUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.OnEnable
void Pathfinding::NodeLink2::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2.OnDisable
void Pathfinding::NodeLink2::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink2..cctor
void Pathfinding::NodeLink2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NodeLink3Node
#include "Pathfinding/NodeLink3Node.hpp"
// Including type: Pathfinding.NodeLink3
#include "Pathfinding/NodeLink3.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NodeLink3 link
[[deprecated("Use field access instead!")]] ::Pathfinding::NodeLink3*& Pathfinding::NodeLink3Node::dyn_link() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::dyn_link");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "link"))->offset;
  return *reinterpret_cast<::Pathfinding::NodeLink3**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 portalA
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink3Node::dyn_portalA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::dyn_portalA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalA"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 portalB
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink3Node::dyn_portalB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::dyn_portalB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalB"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NodeLink3Node.GetOther
::Pathfinding::GraphNode* Pathfinding::NodeLink3Node::GetOther(::Pathfinding::GraphNode* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::GetOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, a);
}
// Autogenerated method: Pathfinding.NodeLink3Node.GetOtherInternal
::Pathfinding::GraphNode* Pathfinding::NodeLink3Node::GetOtherInternal(::Pathfinding::GraphNode* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::GetOtherInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, a);
}
// Autogenerated method: Pathfinding.NodeLink3Node.GetPortal
bool Pathfinding::NodeLink3Node::GetPortal(::Pathfinding::GraphNode* other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3Node::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, left, right, backwards);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NodeLink3
#include "Pathfinding/NodeLink3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.NodeLink3Node
#include "Pathfinding/NodeLink3Node.hpp"
// Including type: Pathfinding.MeshNode
#include "Pathfinding/MeshNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,Pathfinding.NodeLink3> reference
::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink3*>* Pathfinding::NodeLink3::_get_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_get_reference");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink3*>*>("Pathfinding", "NodeLink3", "reference")));
}
// Autogenerated static field setter
// Set static field: static protected System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,Pathfinding.NodeLink3> reference
void Pathfinding::NodeLink3::_set_reference(::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::NodeLink3*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_set_reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink3", "reference", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color GizmosColor
::UnityEngine::Color Pathfinding::NodeLink3::_get_GizmosColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_get_GizmosColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NodeLink3", "GizmosColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color GizmosColor
void Pathfinding::NodeLink3::_set_GizmosColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_set_GizmosColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink3", "GizmosColor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color GizmosColorSelected
::UnityEngine::Color Pathfinding::NodeLink3::_get_GizmosColorSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_get_GizmosColorSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NodeLink3", "GizmosColorSelected"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color GizmosColorSelected
void Pathfinding::NodeLink3::_set_GizmosColorSelected(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::_set_GizmosColorSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NodeLink3", "GizmosColorSelected", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform end
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::NodeLink3::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single costFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::NodeLink3::dyn_costFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_costFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "costFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oneWay
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink3::dyn_oneWay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_oneWay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneWay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NodeLink3Node startNode
[[deprecated("Use field access instead!")]] ::Pathfinding::NodeLink3Node*& Pathfinding::NodeLink3::dyn_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_startNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNode"))->offset;
  return *reinterpret_cast<::Pathfinding::NodeLink3Node**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NodeLink3Node endNode
[[deprecated("Use field access instead!")]] ::Pathfinding::NodeLink3Node*& Pathfinding::NodeLink3::dyn_endNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_endNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endNode"))->offset;
  return *reinterpret_cast<::Pathfinding::NodeLink3Node**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.MeshNode connectedNode1
[[deprecated("Use field access instead!")]] ::Pathfinding::MeshNode*& Pathfinding::NodeLink3::dyn_connectedNode1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_connectedNode1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedNode1"))->offset;
  return *reinterpret_cast<::Pathfinding::MeshNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.MeshNode connectedNode2
[[deprecated("Use field access instead!")]] ::Pathfinding::MeshNode*& Pathfinding::NodeLink3::dyn_connectedNode2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_connectedNode2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedNode2"))->offset;
  return *reinterpret_cast<::Pathfinding::MeshNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clamped1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink3::dyn_clamped1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_clamped1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clamped1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clamped2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NodeLink3::dyn_clamped2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_clamped2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clamped2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean postScanCalled
[[deprecated("Use field access instead!")]] bool& Pathfinding::NodeLink3::dyn_postScanCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::dyn_postScanCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postScanCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NodeLink3.GetNodeLink
::Pathfinding::NodeLink3* Pathfinding::NodeLink3::GetNodeLink(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::GetNodeLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink3", "GetNodeLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NodeLink3*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Pathfinding.NodeLink3.get_StartTransform
::UnityEngine::Transform* Pathfinding::NodeLink3::get_StartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::get_StartTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.get_EndTransform
::UnityEngine::Transform* Pathfinding::NodeLink3::get_EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::get_EndTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.get_StartNode
::Pathfinding::GraphNode* Pathfinding::NodeLink3::get_StartNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::get_StartNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.get_EndNode
::Pathfinding::GraphNode* Pathfinding::NodeLink3::get_EndNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::get_EndNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.InternalOnPostScan
void Pathfinding::NodeLink3::InternalOnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::InternalOnPostScan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnPostScan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.RemoveConnections
void Pathfinding::NodeLink3::RemoveConnections(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::RemoveConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.NodeLink3.ContextApplyForce
void Pathfinding::NodeLink3::ContextApplyForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::ContextApplyForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContextApplyForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.Apply
void Pathfinding::NodeLink3::Apply(bool forceNewCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceNewCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forceNewCheck);
}
// Autogenerated method: Pathfinding.NodeLink3.OnDrawGizmosSelected
void Pathfinding::NodeLink3::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NodeLink3*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.OnDrawGizmos
void Pathfinding::NodeLink3::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.OnDrawGizmos
void Pathfinding::NodeLink3::OnDrawGizmos(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Pathfinding.NodeLink3.<OnPostScan>b__20_0
bool Pathfinding::NodeLink3::$OnPostScan$b__20_0(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::<OnPostScan>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnPostScan>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.NodeLink3.OnPostScan
void Pathfinding::NodeLink3::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.OnGraphsPostUpdate
void Pathfinding::NodeLink3::OnGraphsPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnGraphsPostUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.OnEnable
void Pathfinding::NodeLink3::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3.OnDisable
void Pathfinding::NodeLink3::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NodeLink3..cctor
void Pathfinding::NodeLink3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NodeLink3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NodeLink3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathPool
#include "Pathfinding/PathPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.Stack`1<Pathfinding.Path>> pool
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::Stack_1<::Pathfinding::Path*>*>* Pathfinding::PathPool::_get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::_get_pool");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::Stack_1<::Pathfinding::Path*>*>*>("Pathfinding", "PathPool", "pool")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.Stack`1<Pathfinding.Path>> pool
void Pathfinding::PathPool::_set_pool(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::Stack_1<::Pathfinding::Path*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::_set_pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathPool", "pool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Int32> totalCreated
::System::Collections::Generic::Dictionary_2<::System::Type*, int>* Pathfinding::PathPool::_get_totalCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::_get_totalCreated");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, int>*>("Pathfinding", "PathPool", "totalCreated")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Int32> totalCreated
void Pathfinding::PathPool::_set_totalCreated(::System::Collections::Generic::Dictionary_2<::System::Type*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::_set_totalCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathPool", "totalCreated", value));
}
// Autogenerated method: Pathfinding.PathPool.Pool
void Pathfinding::PathPool::Pool(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::Pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathPool", "Pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Pathfinding.PathPool.GetTotalCreated
int Pathfinding::PathPool::GetTotalCreated(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::GetTotalCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathPool", "GetTotalCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Pathfinding.PathPool.GetSize
int Pathfinding::PathPool::GetSize(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathPool", "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Pathfinding.PathPool..cctor
void Pathfinding::PathPool::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathPool", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathProcessor
#include "Pathfinding/PathProcessor.hpp"
// Including type: Pathfinding.PathProcessor/GraphUpdateLock
#include "Pathfinding/PathProcessor_GraphUpdateLock.hpp"
// Including type: Pathfinding.PathProcessor/<>c__DisplayClass24_0
#include "Pathfinding/PathProcessor_--c__DisplayClass24_0.hpp"
// Including type: Pathfinding.PathProcessor/<CalculatePaths>d__36
#include "Pathfinding/PathProcessor_-CalculatePaths-d__36.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Pathfinding.ThreadControlQueue
#include "Pathfinding/ThreadControlQueue.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.PathReturnQueue
#include "Pathfinding/PathReturnQueue.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Profiling.CustomSampler
#include "UnityEngine/Profiling/CustomSampler.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Pathfinding.Path> OnPathPreSearch
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::Path*>*& Pathfinding::PathProcessor::dyn_OnPathPreSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_OnPathPreSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPathPreSearch"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::Path*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Pathfinding.Path> OnPathPostSearch
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::Path*>*& Pathfinding::PathProcessor::dyn_OnPathPostSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_OnPathPostSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPathPostSearch"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::Path*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnQueueUnblocked
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::PathProcessor::dyn_OnQueueUnblocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_OnQueueUnblocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnQueueUnblocked"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Pathfinding.ThreadControlQueue queue
[[deprecated("Use field access instead!")]] ::Pathfinding::ThreadControlQueue*& Pathfinding::PathProcessor::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::Pathfinding::ThreadControlQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AstarPath astar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& Pathfinding::PathProcessor::dyn_astar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_astar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "astar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.PathReturnQueue returnQueue
[[deprecated("Use field access instead!")]] ::Pathfinding::PathReturnQueue*& Pathfinding::PathProcessor::dyn_returnQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_returnQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnQueue"))->offset;
  return *reinterpret_cast<::Pathfinding::PathReturnQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.PathHandler[] pathHandlers
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::PathHandler*>& Pathfinding::PathProcessor::dyn_pathHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_pathHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathHandlers"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::PathHandler*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Thread[] threads
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Threading::Thread*>& Pathfinding::PathProcessor::dyn_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_threads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threads"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::Thread*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator threadCoroutine
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Pathfinding::PathProcessor::dyn_threadCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_threadCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadCoroutine"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextNodeIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::PathProcessor::dyn_nextNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_nextNodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextNodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Stack`1<System.Int32> nodeIndexPool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<int>*& Pathfinding::PathProcessor::dyn_nodeIndexPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_nodeIndexPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndexPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> locks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Pathfinding::PathProcessor::dyn_locks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_locks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextLockID
[[deprecated("Use field access instead!")]] int& Pathfinding::PathProcessor::dyn_nextLockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_nextLockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextLockID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Profiling.CustomSampler profilingSampler
[[deprecated("Use field access instead!")]] ::UnityEngine::Profiling::CustomSampler*& Pathfinding::PathProcessor::dyn_profilingSampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::dyn_profilingSampler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilingSampler"))->offset;
  return *reinterpret_cast<::UnityEngine::Profiling::CustomSampler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathProcessor.add_OnPathPreSearch
void Pathfinding::PathProcessor::add_OnPathPreSearch(::System::Action_1<::Pathfinding::Path*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::add_OnPathPreSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPathPreSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.remove_OnPathPreSearch
void Pathfinding::PathProcessor::remove_OnPathPreSearch(::System::Action_1<::Pathfinding::Path*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::remove_OnPathPreSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPathPreSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.add_OnPathPostSearch
void Pathfinding::PathProcessor::add_OnPathPostSearch(::System::Action_1<::Pathfinding::Path*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::add_OnPathPostSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPathPostSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.remove_OnPathPostSearch
void Pathfinding::PathProcessor::remove_OnPathPostSearch(::System::Action_1<::Pathfinding::Path*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::remove_OnPathPostSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPathPostSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.add_OnQueueUnblocked
void Pathfinding::PathProcessor::add_OnQueueUnblocked(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::add_OnQueueUnblocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnQueueUnblocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.remove_OnQueueUnblocked
void Pathfinding::PathProcessor::remove_OnQueueUnblocked(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::remove_OnQueueUnblocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnQueueUnblocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathProcessor.get_NumThreads
int Pathfinding::PathProcessor::get_NumThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::get_NumThreads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumThreads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.get_IsUsingMultithreading
bool Pathfinding::PathProcessor::get_IsUsingMultithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::get_IsUsingMultithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUsingMultithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.Lock
int Pathfinding::PathProcessor::Lock(bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::Lock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, block);
}
// Autogenerated method: Pathfinding.PathProcessor.Unlock
void Pathfinding::PathProcessor::Unlock(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Pathfinding.PathProcessor.PausePathfinding
::Pathfinding::PathProcessor::GraphUpdateLock Pathfinding::PathProcessor::PausePathfinding(bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::PausePathfinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PausePathfinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathProcessor::GraphUpdateLock, false>(this, ___internal__method, block);
}
// Autogenerated method: Pathfinding.PathProcessor.TickNonMultithreaded
void Pathfinding::PathProcessor::TickNonMultithreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::TickNonMultithreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TickNonMultithreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.JoinThreads
void Pathfinding::PathProcessor::JoinThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::JoinThreads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinThreads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.AbortThreads
void Pathfinding::PathProcessor::AbortThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::AbortThreads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbortThreads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.GetNewNodeIndex
int Pathfinding::PathProcessor::GetNewNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GetNewNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor.InitializeNode
void Pathfinding::PathProcessor::InitializeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::InitializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathProcessor.DestroyNode
void Pathfinding::PathProcessor::DestroyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::DestroyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathProcessor.CalculatePathsThreaded
void Pathfinding::PathProcessor::CalculatePathsThreaded(::Pathfinding::PathHandler* pathHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::CalculatePathsThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePathsThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathHandler);
}
// Autogenerated method: Pathfinding.PathProcessor.CalculatePaths
::System::Collections::IEnumerator* Pathfinding::PathProcessor::CalculatePaths(::Pathfinding::PathHandler* pathHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::CalculatePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, pathHandler);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathProcessor/GraphUpdateLock
#include "Pathfinding/PathProcessor_GraphUpdateLock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathProcessor pathProcessor
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor*& Pathfinding::PathProcessor::GraphUpdateLock::dyn_pathProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GraphUpdateLock::dyn_pathProcessor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathProcessor"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 id
[[deprecated("Use field access instead!")]] int& Pathfinding::PathProcessor::GraphUpdateLock::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GraphUpdateLock::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathProcessor/GraphUpdateLock..ctor
Pathfinding::PathProcessor::GraphUpdateLock::GraphUpdateLock(::Pathfinding::PathProcessor* pathProcessor, bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GraphUpdateLock::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathProcessor), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathProcessor, block);
}
// Autogenerated method: Pathfinding.PathProcessor/GraphUpdateLock.get_Held
bool Pathfinding::PathProcessor::GraphUpdateLock::get_Held() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GraphUpdateLock::get_Held");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Held", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor/GraphUpdateLock.Release
void Pathfinding::PathProcessor::GraphUpdateLock::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::GraphUpdateLock::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathProcessor/<>c__DisplayClass24_0
#include "Pathfinding/PathProcessor_--c__DisplayClass24_0.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler pathHandler
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::PathProcessor::$$c__DisplayClass24_0::dyn_pathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$$c__DisplayClass24_0::dyn_pathHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathHandler"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathProcessor <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor*& Pathfinding::PathProcessor::$$c__DisplayClass24_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$$c__DisplayClass24_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathProcessor/<>c__DisplayClass24_0.<.ctor>b__0
void Pathfinding::PathProcessor::$$c__DisplayClass24_0::$_ctor$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$$c__DisplayClass24_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.PathProcessor/<CalculatePaths>d__36
#include "Pathfinding/PathProcessor_-CalculatePaths-d__36.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.IPathInternals
#include "Pathfinding/IPathInternals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathProcessor <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor*& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler pathHandler
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_pathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_pathHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathHandler"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <maxTicks>5__2
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$maxTicks$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$maxTicks$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxTicks>5__2"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <targetTick>5__3
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$targetTick$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$targetTick$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetTick>5__3"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path <p>5__4
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$p$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$p$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p>5__4"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <blockedBefore>5__5
[[deprecated("Use field access instead!")]] bool& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$blockedBefore$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$blockedBefore$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<blockedBefore>5__5"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IPathInternals <ip>5__6
[[deprecated("Use field access instead!")]] ::Pathfinding::IPathInternals*& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$ip$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$ip$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ip>5__6"))->offset;
  return *reinterpret_cast<::Pathfinding::IPathInternals**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <totalTicks>5__7
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$totalTicks$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::dyn_$totalTicks$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalTicks>5__7"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathProcessor/<CalculatePaths>d__36.System.IDisposable.Dispose
void Pathfinding::PathProcessor::$CalculatePaths$d__36::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathProcessor::$CalculatePaths$d__36*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor/<CalculatePaths>d__36.MoveNext
bool Pathfinding::PathProcessor::$CalculatePaths$d__36::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathProcessor::$CalculatePaths$d__36*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor/<CalculatePaths>d__36.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::PathProcessor::$CalculatePaths$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathProcessor::$CalculatePaths$d__36*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor/<CalculatePaths>d__36.System.Collections.IEnumerator.Reset
void Pathfinding::PathProcessor::$CalculatePaths$d__36::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathProcessor::$CalculatePaths$d__36*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathProcessor/<CalculatePaths>d__36.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::PathProcessor::$CalculatePaths$d__36::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathProcessor::$CalculatePaths$d__36::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathProcessor::$CalculatePaths$d__36*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.PathReturnQueue
#include "Pathfinding/PathReturnQueue.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Pathfinding.Path> pathReturnQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::Path*>*& Pathfinding::PathReturnQueue::dyn_pathReturnQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathReturnQueue::dyn_pathReturnQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathReturnQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::Path*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object pathsClaimedSilentlyBy
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::PathReturnQueue::dyn_pathsClaimedSilentlyBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathReturnQueue::dyn_pathsClaimedSilentlyBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathsClaimedSilentlyBy"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathReturnQueue.Enqueue
void Pathfinding::PathReturnQueue::Enqueue(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathReturnQueue::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.PathReturnQueue.ReturnPaths
void Pathfinding::PathReturnQueue::ReturnPaths(bool timeSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathReturnQueue::ReturnPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSlice);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.ThreadControlQueue
#include "Pathfinding/ThreadControlQueue.hpp"
// Including type: Pathfinding.ThreadControlQueue/QueueTerminationException
#include "Pathfinding/ThreadControlQueue_QueueTerminationException.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path head
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::ThreadControlQueue::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path tail
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::ThreadControlQueue::dyn_tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_tail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tail"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object lockObj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::ThreadControlQueue::dyn_lockObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_lockObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockObj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 numReceivers
[[deprecated("Use field access instead!")]] int& Pathfinding::ThreadControlQueue::dyn_numReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_numReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numReceivers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean blocked
[[deprecated("Use field access instead!")]] bool& Pathfinding::ThreadControlQueue::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 blockedReceivers
[[deprecated("Use field access instead!")]] int& Pathfinding::ThreadControlQueue::dyn_blockedReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_blockedReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockedReceivers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean starving
[[deprecated("Use field access instead!")]] bool& Pathfinding::ThreadControlQueue::dyn_starving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_starving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "starving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean terminate
[[deprecated("Use field access instead!")]] bool& Pathfinding::ThreadControlQueue::dyn_terminate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_terminate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "terminate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent block
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Pathfinding::ThreadControlQueue::dyn_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::dyn_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "block"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.get_IsEmpty
bool Pathfinding::ThreadControlQueue::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.get_IsTerminating
bool Pathfinding::ThreadControlQueue::get_IsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::get_IsTerminating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTerminating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Block
void Pathfinding::ThreadControlQueue::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Unblock
void Pathfinding::ThreadControlQueue::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Unblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Lock
void Pathfinding::ThreadControlQueue::Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Lock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Unlock
void Pathfinding::ThreadControlQueue::Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.get_AllReceiversBlocked
bool Pathfinding::ThreadControlQueue::get_AllReceiversBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::get_AllReceiversBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllReceiversBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.PushFront
void Pathfinding::ThreadControlQueue::PushFront(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::PushFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Push
void Pathfinding::ThreadControlQueue::Push(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Starving
void Pathfinding::ThreadControlQueue::Starving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Starving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Starving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.TerminateReceivers
void Pathfinding::ThreadControlQueue::TerminateReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::TerminateReceivers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TerminateReceivers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.Pop
::Pathfinding::Path* Pathfinding::ThreadControlQueue::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.ReceiverTerminated
void Pathfinding::ThreadControlQueue::ReceiverTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::ReceiverTerminated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiverTerminated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ThreadControlQueue.PopNoBlock
::Pathfinding::Path* Pathfinding::ThreadControlQueue::PopNoBlock(bool blockedBefore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ThreadControlQueue::PopNoBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNoBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockedBefore)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, blockedBefore);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ThreadControlQueue/QueueTerminationException
#include "Pathfinding/ThreadControlQueue_QueueTerminationException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarWorkItem
#include "Pathfinding/AstarWorkItem.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action init
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::AstarWorkItem::dyn_init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::dyn_init");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "init"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.IWorkItemContext> initWithContext
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::IWorkItemContext*>*& Pathfinding::AstarWorkItem::dyn_initWithContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::dyn_initWithContext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initWithContext"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::IWorkItemContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Boolean,System.Boolean> update
[[deprecated("Use field access instead!")]] ::System::Func_2<bool, bool>*& Pathfinding::AstarWorkItem::dyn_update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::dyn_update");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "update"))->offset;
  return *reinterpret_cast<::System::Func_2<bool, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`3<Pathfinding.IWorkItemContext,System.Boolean,System.Boolean> updateWithContext
[[deprecated("Use field access instead!")]] ::System::Func_3<::Pathfinding::IWorkItemContext*, bool, bool>*& Pathfinding::AstarWorkItem::dyn_updateWithContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::dyn_updateWithContext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateWithContext"))->offset;
  return *reinterpret_cast<::System::Func_3<::Pathfinding::IWorkItemContext*, bool, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AstarWorkItem..ctor
Pathfinding::AstarWorkItem::AstarWorkItem(::System::Func_2<bool, bool>* update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: Pathfinding.AstarWorkItem..ctor
Pathfinding::AstarWorkItem::AstarWorkItem(::System::Func_3<::Pathfinding::IWorkItemContext*, bool, bool>* update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: Pathfinding.AstarWorkItem..ctor
Pathfinding::AstarWorkItem::AstarWorkItem(::System::Action* init, ::System::Func_2<bool, bool>* update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init), ::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, init, update);
}
// Autogenerated method: Pathfinding.AstarWorkItem..ctor
Pathfinding::AstarWorkItem::AstarWorkItem(::System::Action_1<::Pathfinding::IWorkItemContext*>* init, ::System::Func_3<::Pathfinding::IWorkItemContext*, bool, bool>* update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarWorkItem::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init), ::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, init, update);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IWorkItemContext.QueueFloodFill
void Pathfinding::IWorkItemContext::QueueFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IWorkItemContext::QueueFloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IWorkItemContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IWorkItemContext.EnsureValidFloodFill
void Pathfinding::IWorkItemContext::EnsureValidFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IWorkItemContext::EnsureValidFloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IWorkItemContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IWorkItemContext.SetGraphDirty
void Pathfinding::IWorkItemContext::SetGraphDirty(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IWorkItemContext::SetGraphDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IWorkItemContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.WorkItemProcessor
#include "Pathfinding/WorkItemProcessor.hpp"
// Including type: Pathfinding.WorkItemProcessor/IndexedQueue`1
#include "Pathfinding/WorkItemProcessor_IndexedQueue_1.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <workItemsInProgressRightNow>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::WorkItemProcessor::dyn_$workItemsInProgressRightNow$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_$workItemsInProgressRightNow$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<workItemsInProgressRightNow>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AstarPath astar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& Pathfinding::WorkItemProcessor::dyn_astar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_astar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "astar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.WorkItemProcessor/IndexedQueue`1<Pathfinding.AstarWorkItem> workItems
[[deprecated("Use field access instead!")]] ::Pathfinding::WorkItemProcessor::IndexedQueue_1<::Pathfinding::AstarWorkItem>*& Pathfinding::WorkItemProcessor::dyn_workItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_workItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItems"))->offset;
  return *reinterpret_cast<::Pathfinding::WorkItemProcessor::IndexedQueue_1<::Pathfinding::AstarWorkItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean queuedWorkItemFloodFill
[[deprecated("Use field access instead!")]] bool& Pathfinding::WorkItemProcessor::dyn_queuedWorkItemFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_queuedWorkItemFloodFill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queuedWorkItemFloodFill"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anyGraphsDirty
[[deprecated("Use field access instead!")]] bool& Pathfinding::WorkItemProcessor::dyn_anyGraphsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_anyGraphsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyGraphsDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <workItemsInProgress>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::WorkItemProcessor::dyn_$workItemsInProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::dyn_$workItemsInProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<workItemsInProgress>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.get_workItemsInProgressRightNow
bool Pathfinding::WorkItemProcessor::get_workItemsInProgressRightNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::get_workItemsInProgressRightNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_workItemsInProgressRightNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.set_workItemsInProgressRightNow
void Pathfinding::WorkItemProcessor::set_workItemsInProgressRightNow(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::set_workItemsInProgressRightNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_workItemsInProgressRightNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.get_anyQueued
bool Pathfinding::WorkItemProcessor::get_anyQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::get_anyQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anyQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.get_workItemsInProgress
bool Pathfinding::WorkItemProcessor::get_workItemsInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::get_workItemsInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_workItemsInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.set_workItemsInProgress
void Pathfinding::WorkItemProcessor::set_workItemsInProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::set_workItemsInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_workItemsInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.Pathfinding.IWorkItemContext.QueueFloodFill
void Pathfinding::WorkItemProcessor::Pathfinding_IWorkItemContext_QueueFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::Pathfinding.IWorkItemContext.QueueFloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::WorkItemProcessor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.Pathfinding.IWorkItemContext.SetGraphDirty
void Pathfinding::WorkItemProcessor::Pathfinding_IWorkItemContext_SetGraphDirty(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::Pathfinding.IWorkItemContext.SetGraphDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::WorkItemProcessor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.EnsureValidFloodFill
void Pathfinding::WorkItemProcessor::EnsureValidFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::EnsureValidFloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::WorkItemProcessor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.OnFloodFill
void Pathfinding::WorkItemProcessor::OnFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::OnFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.AddWorkItem
void Pathfinding::WorkItemProcessor::AddWorkItem(::Pathfinding::AstarWorkItem item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::AddWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: Pathfinding.WorkItemProcessor.ProcessWorkItems
bool Pathfinding::WorkItemProcessor::ProcessWorkItems(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WorkItemProcessor::ProcessWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Connection
#include "Pathfinding/Connection.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte NoSharedEdge
uint8_t Pathfinding::Connection::_get_NoSharedEdge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::_get_NoSharedEdge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Pathfinding", "Connection", "NoSharedEdge"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte NoSharedEdge
void Pathfinding::Connection::_set_NoSharedEdge(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::_set_NoSharedEdge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Connection", "NoSharedEdge", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Connection::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::dyn_node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 cost
[[deprecated("Use field access instead!")]] uint& Pathfinding::Connection::dyn_cost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::dyn_cost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cost"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte shapeEdge
[[deprecated("Use field access instead!")]] uint8_t& Pathfinding::Connection::dyn_shapeEdge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::dyn_shapeEdge");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shapeEdge"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Connection..ctor
// ABORTED elsewhere.  Pathfinding::Connection::Connection(::Pathfinding::GraphNode* node, uint cost, uint8_t shapeEdge)
// Autogenerated method: Pathfinding.Connection.GetHashCode
int Pathfinding::Connection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Connection.Equals
bool Pathfinding::Connection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Connection::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphNode/<>c__DisplayClass60_0
#include "Pathfinding/GraphNode_--c__DisplayClass60_0.hpp"
// Including type: Pathfinding.GraphNode/<>c__DisplayClass65_0
#include "Pathfinding/GraphNode_--c__DisplayClass65_0.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NodeIndexMask
int Pathfinding::GraphNode::_get_NodeIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_NodeIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "NodeIndexMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NodeIndexMask
void Pathfinding::GraphNode::_set_NodeIndexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_NodeIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "NodeIndexMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DestroyedNodeIndex
int Pathfinding::GraphNode::_get_DestroyedNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_DestroyedNodeIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "DestroyedNodeIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DestroyedNodeIndex
void Pathfinding::GraphNode::_set_DestroyedNodeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_DestroyedNodeIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "DestroyedNodeIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TemporaryFlag1Mask
int Pathfinding::GraphNode::_get_TemporaryFlag1Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_TemporaryFlag1Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "TemporaryFlag1Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TemporaryFlag1Mask
void Pathfinding::GraphNode::_set_TemporaryFlag1Mask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_TemporaryFlag1Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "TemporaryFlag1Mask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TemporaryFlag2Mask
int Pathfinding::GraphNode::_get_TemporaryFlag2Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_TemporaryFlag2Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "TemporaryFlag2Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TemporaryFlag2Mask
void Pathfinding::GraphNode::_set_TemporaryFlag2Mask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_TemporaryFlag2Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "TemporaryFlag2Mask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FlagsWalkableOffset
int Pathfinding::GraphNode::_get_FlagsWalkableOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsWalkableOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "FlagsWalkableOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FlagsWalkableOffset
void Pathfinding::GraphNode::_set_FlagsWalkableOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsWalkableOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsWalkableOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 FlagsWalkableMask
uint Pathfinding::GraphNode::_get_FlagsWalkableMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsWalkableMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "FlagsWalkableMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 FlagsWalkableMask
void Pathfinding::GraphNode::_set_FlagsWalkableMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsWalkableMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsWalkableMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FlagsHierarchicalIndexOffset
int Pathfinding::GraphNode::_get_FlagsHierarchicalIndexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsHierarchicalIndexOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "FlagsHierarchicalIndexOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FlagsHierarchicalIndexOffset
void Pathfinding::GraphNode::_set_FlagsHierarchicalIndexOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsHierarchicalIndexOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsHierarchicalIndexOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HierarchicalIndexMask
uint Pathfinding::GraphNode::_get_HierarchicalIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_HierarchicalIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "HierarchicalIndexMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HierarchicalIndexMask
void Pathfinding::GraphNode::_set_HierarchicalIndexMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_HierarchicalIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "HierarchicalIndexMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 HierarchicalDirtyOffset
int Pathfinding::GraphNode::_get_HierarchicalDirtyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_HierarchicalDirtyOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "HierarchicalDirtyOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HierarchicalDirtyOffset
void Pathfinding::GraphNode::_set_HierarchicalDirtyOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_HierarchicalDirtyOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "HierarchicalDirtyOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HierarchicalDirtyMask
uint Pathfinding::GraphNode::_get_HierarchicalDirtyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_HierarchicalDirtyMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "HierarchicalDirtyMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HierarchicalDirtyMask
void Pathfinding::GraphNode::_set_HierarchicalDirtyMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_HierarchicalDirtyMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "HierarchicalDirtyMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FlagsGraphOffset
int Pathfinding::GraphNode::_get_FlagsGraphOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsGraphOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "FlagsGraphOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FlagsGraphOffset
void Pathfinding::GraphNode::_set_FlagsGraphOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsGraphOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsGraphOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 FlagsGraphMask
uint Pathfinding::GraphNode::_get_FlagsGraphMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsGraphMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "FlagsGraphMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 FlagsGraphMask
void Pathfinding::GraphNode::_set_FlagsGraphMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsGraphMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsGraphMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 MaxHierarchicalNodeIndex
uint Pathfinding::GraphNode::_get_MaxHierarchicalNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_MaxHierarchicalNodeIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "MaxHierarchicalNodeIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MaxHierarchicalNodeIndex
void Pathfinding::GraphNode::_set_MaxHierarchicalNodeIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_MaxHierarchicalNodeIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "MaxHierarchicalNodeIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 MaxGraphIndex
uint Pathfinding::GraphNode::_get_MaxGraphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_MaxGraphIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "MaxGraphIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MaxGraphIndex
void Pathfinding::GraphNode::_set_MaxGraphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_MaxGraphIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "MaxGraphIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FlagsTagOffset
int Pathfinding::GraphNode::_get_FlagsTagOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsTagOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GraphNode", "FlagsTagOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FlagsTagOffset
void Pathfinding::GraphNode::_set_FlagsTagOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsTagOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsTagOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 FlagsTagMask
uint Pathfinding::GraphNode::_get_FlagsTagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_get_FlagsTagMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "GraphNode", "FlagsTagMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 FlagsTagMask
void Pathfinding::GraphNode::_set_FlagsTagMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::_set_FlagsTagMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphNode", "FlagsTagMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::GraphNode::dyn_nodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::dyn_nodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt32 flags
[[deprecated("Use field access instead!")]] uint& Pathfinding::GraphNode::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 penalty
[[deprecated("Use field access instead!")]] uint& Pathfinding::GraphNode::dyn_penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::dyn_penalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penalty"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 position
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::GraphNode::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode.get_Graph
::Pathfinding::NavGraph* Pathfinding::GraphNode::get_Graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.Destroy
void Pathfinding::GraphNode::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.get_Destroyed
bool Pathfinding::GraphNode::get_Destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.get_NodeIndex
int Pathfinding::GraphNode::get_NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_NodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_NodeIndex
void Pathfinding::GraphNode::set_NodeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_NodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_TemporaryFlag1
bool Pathfinding::GraphNode::get_TemporaryFlag1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_TemporaryFlag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TemporaryFlag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_TemporaryFlag1
void Pathfinding::GraphNode::set_TemporaryFlag1(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_TemporaryFlag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TemporaryFlag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_TemporaryFlag2
bool Pathfinding::GraphNode::get_TemporaryFlag2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_TemporaryFlag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TemporaryFlag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_TemporaryFlag2
void Pathfinding::GraphNode::set_TemporaryFlag2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_TemporaryFlag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TemporaryFlag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_Flags
uint Pathfinding::GraphNode::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_Flags
void Pathfinding::GraphNode::set_Flags(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_Penalty
uint Pathfinding::GraphNode::get_Penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Penalty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Penalty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_Penalty
void Pathfinding::GraphNode::set_Penalty(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_Penalty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Penalty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_Walkable
bool Pathfinding::GraphNode::get_Walkable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Walkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Walkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_Walkable
void Pathfinding::GraphNode::set_Walkable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_Walkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Walkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_HierarchicalNodeIndex
int Pathfinding::GraphNode::get_HierarchicalNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_HierarchicalNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HierarchicalNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_HierarchicalNodeIndex
void Pathfinding::GraphNode::set_HierarchicalNodeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_HierarchicalNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HierarchicalNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_IsHierarchicalNodeDirty
bool Pathfinding::GraphNode::get_IsHierarchicalNodeDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_IsHierarchicalNodeDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsHierarchicalNodeDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_IsHierarchicalNodeDirty
void Pathfinding::GraphNode::set_IsHierarchicalNodeDirty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_IsHierarchicalNodeDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsHierarchicalNodeDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_Area
uint Pathfinding::GraphNode::get_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.get_GraphIndex
uint Pathfinding::GraphNode::get_GraphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_GraphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_GraphIndex
void Pathfinding::GraphNode::set_GraphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_GraphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GraphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.get_Tag
uint Pathfinding::GraphNode::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.set_Tag
void Pathfinding::GraphNode::set_Tag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GraphNode.SetConnectivityDirty
void Pathfinding::GraphNode::SetConnectivityDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::SetConnectivityDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectivityDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.RecalculateConnectionCosts
void Pathfinding::GraphNode::RecalculateConnectionCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::RecalculateConnectionCosts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateConnectionCosts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.UpdateRecursiveG
void Pathfinding::GraphNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GraphNode.GetConnections
void Pathfinding::GraphNode::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.GraphNode.AddConnection
void Pathfinding::GraphNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.GraphNode.RemoveConnection
void Pathfinding::GraphNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GraphNode.ClearConnections
void Pathfinding::GraphNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GraphNode.ContainsConnection
bool Pathfinding::GraphNode::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GraphNode.GetPortal
bool Pathfinding::GraphNode::GetPortal(::Pathfinding::GraphNode* other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, left, right, backwards);
}
// Autogenerated method: Pathfinding.GraphNode.Open
void Pathfinding::GraphNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GraphNode.SurfaceArea
float Pathfinding::GraphNode::SurfaceArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::SurfaceArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.RandomPointOnSurface
::UnityEngine::Vector3 Pathfinding::GraphNode::RandomPointOnSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::RandomPointOnSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::GraphNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.GraphNode.GetGizmoHashCode
int Pathfinding::GraphNode::GetGizmoHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::GetGizmoHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GraphNode.SerializeNode
void Pathfinding::GraphNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GraphNode.DeserializeNode
void Pathfinding::GraphNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GraphNode.SerializeReferences
void Pathfinding::GraphNode::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GraphNode.DeserializeReferences
void Pathfinding::GraphNode::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode/<>c__DisplayClass60_0
#include "Pathfinding/GraphNode_--c__DisplayClass60_0.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler handler
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode pathNode
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_pathNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_pathNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathNode"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass60_0::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode/<>c__DisplayClass60_0.<UpdateRecursiveG>b__0
void Pathfinding::GraphNode::$$c__DisplayClass60_0::$UpdateRecursiveG$b__0(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass60_0::<UpdateRecursiveG>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateRecursiveG>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode/<>c__DisplayClass65_0
#include "Pathfinding/GraphNode_--c__DisplayClass65_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean contains
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphNode::$$c__DisplayClass65_0::dyn_contains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass65_0::dyn_contains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contains"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::GraphNode::$$c__DisplayClass65_0::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass65_0::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode/<>c__DisplayClass65_0.<ContainsConnection>b__0
void Pathfinding::GraphNode::$$c__DisplayClass65_0::$ContainsConnection$b__0(::Pathfinding::GraphNode* neighbour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass65_0::<ContainsConnection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContainsConnection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(neighbour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, neighbour);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.MeshNode
#include "Pathfinding/MeshNode.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Connection[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Connection>& Pathfinding::MeshNode::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Connection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MeshNode.GetVertex
::Pathfinding::Int3 Pathfinding::MeshNode::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.MeshNode.GetVertexCount
int Pathfinding::MeshNode::GetVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetVertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MeshNode.ClosestPointOnNodeXZ
::UnityEngine::Vector3 Pathfinding::MeshNode::ClosestPointOnNodeXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ClosestPointOnNodeXZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.MeshNode.AddConnection
void Pathfinding::MeshNode::AddConnection(::Pathfinding::GraphNode* node, uint cost, uint8_t shapeEdge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::AddConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(cost), ::il2cpp_utils::ExtractType(shapeEdge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost, shapeEdge);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsPoint
bool Pathfinding::MeshNode::ContainsPoint(::Pathfinding::Int3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsPoint
bool Pathfinding::MeshNode::ContainsPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsPointInGraphSpace
bool Pathfinding::MeshNode::ContainsPointInGraphSpace(::Pathfinding::Int3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsPointInGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.MeshNode.ClearConnections
void Pathfinding::MeshNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.MeshNode.GetConnections
void Pathfinding::MeshNode::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsConnection
bool Pathfinding::MeshNode::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.MeshNode.UpdateRecursiveG
void Pathfinding::MeshNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.MeshNode.AddConnection
void Pathfinding::MeshNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.MeshNode.RemoveConnection
void Pathfinding::MeshNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.MeshNode.GetGizmoHashCode
int Pathfinding::MeshNode::GetGizmoHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetGizmoHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MeshNode.SerializeReferences
void Pathfinding::MeshNode::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.MeshNode.DeserializeReferences
void Pathfinding::MeshNode::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ITraversalProvider
#include "Pathfinding/ITraversalProvider.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.ITraversalProvider.CanTraverse
bool Pathfinding::ITraversalProvider::CanTraverse(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ITraversalProvider::CanTraverse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ITraversalProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path, node);
}
// Autogenerated method: Pathfinding.ITraversalProvider.GetTraversalCost
uint Pathfinding::ITraversalProvider::GetTraversalCost(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ITraversalProvider::GetTraversalCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ITraversalProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, path, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.DefaultITraversalProvider
#include "Pathfinding/DefaultITraversalProvider.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.DefaultITraversalProvider.CanTraverse
bool Pathfinding::DefaultITraversalProvider::CanTraverse(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DefaultITraversalProvider::CanTraverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "DefaultITraversalProvider", "CanTraverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, node);
}
// Autogenerated method: Pathfinding.DefaultITraversalProvider.GetTraversalCost
uint Pathfinding::DefaultITraversalProvider::GetTraversalCost(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DefaultITraversalProvider::GetTraversalCost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "DefaultITraversalProvider", "GetTraversalCost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.Path/<WaitForPath>d__54
#include "Pathfinding/Path_-WaitForPath-d__54.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.ITraversalProvider
#include "Pathfinding/ITraversalProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] ZeroTagPenalties
::ArrayW<int> Pathfinding::Path::_get_ZeroTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::_get_ZeroTagPenalties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "Path", "ZeroTagPenalties"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] ZeroTagPenalties
void Pathfinding::Path::_set_ZeroTagPenalties(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::_set_ZeroTagPenalties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Path", "ZeroTagPenalties", value));
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathHandler pathHandler
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::Path::dyn_pathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_pathHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathHandler"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate callback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Path::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate immediateCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Path::dyn_immediateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_immediateCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediateCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathState <PipelineState>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::PathState& Pathfinding::Path::dyn_$PipelineState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$PipelineState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PipelineState>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::PathState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object stateLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Path::dyn_stateLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_stateLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ITraversalProvider traversalProvider
[[deprecated("Use field access instead!")]] ::Pathfinding::ITraversalProvider*& Pathfinding::Path::dyn_traversalProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_traversalProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traversalProvider"))->offset;
  return *reinterpret_cast<::Pathfinding::ITraversalProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathCompleteState completeState
[[deprecated("Use field access instead!")]] ::Pathfinding::PathCompleteState& Pathfinding::Path::dyn_completeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_completeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completeState"))->offset;
  return *reinterpret_cast<::Pathfinding::PathCompleteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <errorLog>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Path::dyn_$errorLog$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$errorLog$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<errorLog>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> path
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::Path::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> vectorPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Path::dyn_vectorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_vectorPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathNode currentR
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::Path::dyn_currentR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_currentR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentR"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& Pathfinding::Path::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <searchedNodes>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::dyn_$searchedNodes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$searchedNodes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<searchedNodes>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Pathfinding.IPathInternals.Pooled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_$Pathfinding_IPathInternals_Pooled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$Pathfinding_IPathInternals_Pooled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pathfinding.IPathInternals.Pooled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hasBeenReset
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_hasBeenReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hasBeenReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint nnConstraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::Path::dyn_nnConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_nnConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nnConstraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Path next
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Path::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Heuristic heuristic
[[deprecated("Use field access instead!")]] ::Pathfinding::Heuristic& Pathfinding::Path::dyn_heuristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_heuristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristic"))->offset;
  return *reinterpret_cast<::Pathfinding::Heuristic*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heuristicScale
[[deprecated("Use field access instead!")]] float& Pathfinding::Path::dyn_heuristicScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_heuristicScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristicScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 <pathID>k__BackingField
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::Path::dyn_$pathID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$pathID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pathID>k__BackingField"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.GraphNode hTargetNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Path::dyn_hTargetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hTargetNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hTargetNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Int3 hTarget
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::Path::dyn_hTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hTarget"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 enabledTags
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::dyn_enabledTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_enabledTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledTags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] internalTagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Path::dyn_internalTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_internalTagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalTagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] manualTagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Path::dyn_manualTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_manualTagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manualTagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> claimed
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Pathfinding::Path::dyn_claimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_claimed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "claimed"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean releasedNotSilent
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_releasedNotSilent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_releasedNotSilent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releasedNotSilent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Path.get_PipelineState
::Pathfinding::PathState Pathfinding::Path::get_PipelineState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_PipelineState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PipelineState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathState, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_PipelineState
void Pathfinding::Path::set_PipelineState(::Pathfinding::PathState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_PipelineState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PipelineState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_CompleteState
::Pathfinding::PathCompleteState Pathfinding::Path::get_CompleteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_CompleteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompleteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathCompleteState, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_CompleteState
void Pathfinding::Path::set_CompleteState(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_CompleteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompleteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_error
bool Pathfinding::Path::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.get_errorLog
::StringW Pathfinding::Path::get_errorLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_errorLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_errorLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_errorLog
void Pathfinding::Path::set_errorLog(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_errorLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_errorLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_searchedNodes
int Pathfinding::Path::get_searchedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_searchedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_searchedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_searchedNodes
void Pathfinding::Path::set_searchedNodes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_searchedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_searchedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.get_Pooled
bool Pathfinding::Path::Pathfinding_IPathInternals_get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.get_Pooled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.set_Pooled
void Pathfinding::Path::Pathfinding_IPathInternals_set_Pooled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.set_Pooled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_recycled
bool Pathfinding::Path::get_recycled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_recycled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recycled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.get_pathID
uint16_t Pathfinding::Path::get_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_pathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_pathID
void Pathfinding::Path::set_pathID(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_pathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_tagPenalties
::ArrayW<int> Pathfinding::Path::get_tagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_tagPenalties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tagPenalties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_tagPenalties
void Pathfinding::Path::set_tagPenalties(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_tagPenalties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tagPenalties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_FloodingPath
bool Pathfinding::Path::get_FloodingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_FloodingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.GetTotalLength
float Pathfinding::Path::GetTotalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTotalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.WaitForPath
::System::Collections::IEnumerator* Pathfinding::Path::WaitForPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::WaitForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.BlockUntilCalculated
void Pathfinding::Path::BlockUntilCalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::BlockUntilCalculated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilCalculated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CalculateHScore
uint Pathfinding::Path::CalculateHScore(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CalculateHScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateHScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetTagPenalty
uint Pathfinding::Path::GetTagPenalty(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTagPenalty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagPenalty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, tag);
}
// Autogenerated method: Pathfinding.Path.GetHTarget
::Pathfinding::Int3 Pathfinding::Path::GetHTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetHTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CanTraverse
bool Pathfinding::Path::CanTraverse(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CanTraverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanTraverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetTraversalCost
uint Pathfinding::Path::GetTraversalCost(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTraversalCost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTraversalCost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetConnectionSpecialCost
uint Pathfinding::Path::GetConnectionSpecialCost(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, uint currentCost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetConnectionSpecialCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 18));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a, b, currentCost);
}
// Autogenerated method: Pathfinding.Path.IsDone
bool Pathfinding::Path::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.AdvanceState
void Pathfinding::Path::Pathfinding_IPathInternals_AdvanceState(::Pathfinding::PathState s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.AdvanceState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Path.GetState
::Pathfinding::PathState Pathfinding::Path::GetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathState, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.FailWithError
void Pathfinding::Path::FailWithError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::FailWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FailWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.LogError
void Pathfinding::Path::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.Log
void Pathfinding::Path::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.Error
void Pathfinding::Path::Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.ErrorCheck
void Pathfinding::Path::ErrorCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ErrorCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErrorCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.OnEnterPool
void Pathfinding::Path::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Reset
void Pathfinding::Path::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Claim
void Pathfinding::Path::Claim(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Claim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Claim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.Path.ReleaseSilent
void Pathfinding::Path::ReleaseSilent(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ReleaseSilent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSilent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.Path.Release
void Pathfinding::Path::Release(::Il2CppObject* o, bool silent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(silent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, silent);
}
// Autogenerated method: Pathfinding.Path.Trace
void Pathfinding::Path::Trace(::Pathfinding::PathNode* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Trace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from);
}
// Autogenerated method: Pathfinding.Path.DebugStringPrefix
void Pathfinding::Path::DebugStringPrefix(::Pathfinding::PathLog logMode, ::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugStringPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugStringPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMode), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logMode, text);
}
// Autogenerated method: Pathfinding.Path.DebugStringSuffix
void Pathfinding::Path::DebugStringSuffix(::Pathfinding::PathLog logMode, ::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugStringSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugStringSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMode), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logMode, text);
}
// Autogenerated method: Pathfinding.Path.DebugString
::StringW Pathfinding::Path::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated method: Pathfinding.Path.ReturnPath
void Pathfinding::Path::ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.PrepareBase
void Pathfinding::Path::PrepareBase(::Pathfinding::PathHandler* pathHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::PrepareBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathHandler);
}
// Autogenerated method: Pathfinding.Path.Prepare
void Pathfinding::Path::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Cleanup
void Pathfinding::Path::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Initialize
void Pathfinding::Path::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CalculateStep
void Pathfinding::Path::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.get_PathHandler
::Pathfinding::PathHandler* Pathfinding::Path::Pathfinding_IPathInternals_get_PathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.get_PathHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.OnEnterPool
void Pathfinding::Path::Pathfinding_IPathInternals_OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.Reset
void Pathfinding::Path::Pathfinding_IPathInternals_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.ReturnPath
void Pathfinding::Path::Pathfinding_IPathInternals_ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.PrepareBase
void Pathfinding::Path::Pathfinding_IPathInternals_PrepareBase(::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.PrepareBase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.Prepare
void Pathfinding::Path::Pathfinding_IPathInternals_Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.Cleanup
void Pathfinding::Path::Pathfinding_IPathInternals_Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.Initialize
void Pathfinding::Path::Pathfinding_IPathInternals_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.CalculateStep
void Pathfinding::Path::Pathfinding_IPathInternals_CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.Path.Pathfinding.IPathInternals.DebugString
::StringW Pathfinding::Path::Pathfinding_IPathInternals_DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Pathfinding.IPathInternals.DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated method: Pathfinding.Path..cctor
void Pathfinding::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Path/<WaitForPath>d__54
#include "Pathfinding/Path_-WaitForPath-d__54.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::$WaitForPath$d__54::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Path::$WaitForPath$d__54::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Path::$WaitForPath$d__54::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__54.System.IDisposable.Dispose
void Pathfinding::Path::$WaitForPath$d__54::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__54*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__54.MoveNext
bool Pathfinding::Path::$WaitForPath$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__54*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__54.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Path::$WaitForPath$d__54::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__54*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__54.System.Collections.IEnumerator.Reset
void Pathfinding::Path::$WaitForPath$d__54::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__54*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__54.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Path::$WaitForPath$d__54::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__54::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__54*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IPathInternals
#include "Pathfinding/IPathInternals.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.PathState
#include "Pathfinding/PathState.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IPathInternals.get_PathHandler
::Pathfinding::PathHandler* Pathfinding::IPathInternals::get_PathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::get_PathHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.get_Pooled
bool Pathfinding::IPathInternals::get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::get_Pooled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.set_Pooled
void Pathfinding::IPathInternals::set_Pooled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::set_Pooled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IPathInternals.AdvanceState
void Pathfinding::IPathInternals::AdvanceState(::Pathfinding::PathState s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::AdvanceState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.IPathInternals.OnEnterPool
void Pathfinding::IPathInternals::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.Reset
void Pathfinding::IPathInternals::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.ReturnPath
void Pathfinding::IPathInternals::ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.PrepareBase
void Pathfinding::IPathInternals::PrepareBase(::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::PrepareBase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
}
// Autogenerated method: Pathfinding.IPathInternals.Prepare
void Pathfinding::IPathInternals::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.Initialize
void Pathfinding::IPathInternals::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.Cleanup
void Pathfinding::IPathInternals::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathInternals.CalculateStep
void Pathfinding::IPathInternals::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.IPathInternals.DebugString
::StringW Pathfinding::IPathInternals::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathInternals::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathInternals*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 CostMask
uint Pathfinding::PathNode::_get_CostMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_CostMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "CostMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CostMask
void Pathfinding::PathNode::_set_CostMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_CostMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "CostMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Flag1Offset
int Pathfinding::PathNode::_get_Flag1Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag1Offset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathNode", "Flag1Offset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Flag1Offset
void Pathfinding::PathNode::_set_Flag1Offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag1Offset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag1Offset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 Flag1Mask
uint Pathfinding::PathNode::_get_Flag1Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag1Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "Flag1Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 Flag1Mask
void Pathfinding::PathNode::_set_Flag1Mask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag1Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag1Mask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Flag2Offset
int Pathfinding::PathNode::_get_Flag2Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag2Offset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathNode", "Flag2Offset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Flag2Offset
void Pathfinding::PathNode::_set_Flag2Offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag2Offset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag2Offset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 Flag2Mask
uint Pathfinding::PathNode::_get_Flag2Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag2Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "Flag2Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 Flag2Mask
void Pathfinding::PathNode::_set_Flag2Mask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag2Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag2Mask", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::PathNode::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode parent
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::PathNode::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 pathID
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::PathNode::dyn_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_pathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 heapIndex
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::PathNode::dyn_heapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_heapIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heapIndex"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 flags
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 g
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 h
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathNode.get_cost
uint Pathfinding::PathNode::get_cost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_cost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_cost
void Pathfinding::PathNode::set_cost(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_cost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_flag1
bool Pathfinding::PathNode::get_flag1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_flag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_flag1
void Pathfinding::PathNode::set_flag1(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_flag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_flag2
bool Pathfinding::PathNode::get_flag2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_flag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_flag2
void Pathfinding::PathNode::set_flag2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_flag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_G
uint Pathfinding::PathNode::get_G() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_G
void Pathfinding::PathNode::set_G(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_H
uint Pathfinding::PathNode::get_H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_H
void Pathfinding::PathNode::set_H(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_F
uint Pathfinding::PathNode::get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.UpdateG
void Pathfinding::PathNode::UpdateG(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::UpdateG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.BinaryHeap
#include "Pathfinding/BinaryHeap.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 pathID
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::PathHandler::dyn_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_pathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 threadID
[[deprecated("Use field access instead!")]] int& Pathfinding::PathHandler::dyn_threadID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_threadID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 totalThreadCount
[[deprecated("Use field access instead!")]] int& Pathfinding::PathHandler::dyn_totalThreadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_totalThreadCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalThreadCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.BinaryHeap heap
[[deprecated("Use field access instead!")]] ::Pathfinding::BinaryHeap*& Pathfinding::PathHandler::dyn_heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_heap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap"))->offset;
  return *reinterpret_cast<::Pathfinding::BinaryHeap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::PathNode*>& Pathfinding::PathHandler::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::PathNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.StringBuilder DebugStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::PathHandler::dyn_DebugStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_DebugStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathHandler.get_PathID
uint16_t Pathfinding::PathHandler::get_PathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::get_PathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.InitializeForPath
void Pathfinding::PathHandler::InitializeForPath(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::InitializeForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.PathHandler.DestroyNode
void Pathfinding::PathHandler::DestroyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::DestroyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.InitializeNode
void Pathfinding::PathHandler::InitializeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::InitializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.GetPathNode
::Pathfinding::PathNode* Pathfinding::PathHandler::GetPathNode(int nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::GetPathNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPathNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method, nodeIndex);
}
// Autogenerated method: Pathfinding.PathHandler.GetPathNode
::Pathfinding::PathNode* Pathfinding::PathHandler::GetPathNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::GetPathNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPathNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.ClearPathIDs
void Pathfinding::PathHandler::ClearPathIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::ClearPathIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPathIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.LocalSpaceGraph
#include "Pathfinding/LocalSpaceGraph.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 originalMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::LocalSpaceGraph::dyn_originalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::dyn_originalMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.GraphTransform <transformation>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::LocalSpaceGraph::dyn_$transformation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::dyn_$transformation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transformation>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.LocalSpaceGraph.get_transformation
::Pathfinding::Util::GraphTransform* Pathfinding::LocalSpaceGraph::get_transformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::get_transformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LocalSpaceGraph.set_transformation
void Pathfinding::LocalSpaceGraph::set_transformation(::Pathfinding::Util::GraphTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::set_transformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.LocalSpaceGraph.Start
void Pathfinding::LocalSpaceGraph::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LocalSpaceGraph.Refresh
void Pathfinding::LocalSpaceGraph::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LocalSpaceGraph::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshClamp
#include "Pathfinding/NavmeshClamp.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode prevNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavmeshClamp::dyn_prevNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClamp::dyn_prevNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshClamp::dyn_prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClamp::dyn_prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshClamp.LateUpdate
void Pathfinding::NavmeshClamp::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClamp::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastTileUpdate
#include "Pathfinding/RecastTileUpdate.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Bounds> OnNeedUpdates
::System::Action_1<::UnityEngine::Bounds>* Pathfinding::RecastTileUpdate::_get_OnNeedUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::_get_OnNeedUpdates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Bounds>*>("Pathfinding", "RecastTileUpdate", "OnNeedUpdates"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Bounds> OnNeedUpdates
void Pathfinding::RecastTileUpdate::_set_OnNeedUpdates(::System::Action_1<::UnityEngine::Bounds>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::_set_OnNeedUpdates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastTileUpdate", "OnNeedUpdates", value));
}
// Autogenerated method: Pathfinding.RecastTileUpdate.add_OnNeedUpdates
void Pathfinding::RecastTileUpdate::add_OnNeedUpdates(::System::Action_1<::UnityEngine::Bounds>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::add_OnNeedUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastTileUpdate", "add_OnNeedUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.RecastTileUpdate.remove_OnNeedUpdates
void Pathfinding::RecastTileUpdate::remove_OnNeedUpdates(::System::Action_1<::UnityEngine::Bounds>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::remove_OnNeedUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastTileUpdate", "remove_OnNeedUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.RecastTileUpdate.Start
void Pathfinding::RecastTileUpdate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastTileUpdate.OnDestroy
void Pathfinding::RecastTileUpdate::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastTileUpdate.ScheduleUpdate
void Pathfinding::RecastTileUpdate::ScheduleUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdate::ScheduleUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
